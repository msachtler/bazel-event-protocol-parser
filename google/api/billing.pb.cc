// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/api/billing.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "google/api/billing.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace google {
namespace api {
class BillingDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Billing> {
} _Billing_default_instance_;
class BillingStatusRuleDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<BillingStatusRule> {
} _BillingStatusRule_default_instance_;

namespace protobuf_google_2fapi_2fbilling_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[2];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] = {
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Billing, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Billing, metrics_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Billing, rules_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BillingStatusRule, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BillingStatusRule, selector_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BillingStatusRule, allowed_statuses_),
};

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, -1, sizeof(Billing)},
  { 7, -1, sizeof(BillingStatusRule)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_Billing_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_BillingStatusRule_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "google/api/billing.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 2);
}

}  // namespace

void TableStruct::Shutdown() {
  _Billing_default_instance_.Shutdown();
  delete file_level_metadata[0].reflection;
  _BillingStatusRule_default_instance_.Shutdown();
  delete file_level_metadata[1].reflection;
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  ::google::api::protobuf_google_2fapi_2fannotations_2eproto::InitDefaults();
  ::google::api::protobuf_google_2fapi_2fmetric_2eproto::InitDefaults();
  _Billing_default_instance_.DefaultConstruct();
  _BillingStatusRule_default_instance_.DefaultConstruct();
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n\030google/api/billing.proto\022\ngoogle.api\032\034"
      "google/api/annotations.proto\032\027google/api"
      "/metric.proto\"H\n\007Billing\022\017\n\007metrics\030\001 \003("
      "\t\022,\n\005rules\030\005 \003(\0132\035.google.api.BillingSta"
      "tusRule\"\?\n\021BillingStatusRule\022\020\n\010selector"
      "\030\001 \001(\t\022\030\n\020allowed_statuses\030\002 \003(\tBg\n\016com."
      "google.apiB\014BillingProtoP\001ZEgoogle.golan"
      "g.org/genproto/googleapis/api/servicecon"
      "fig;serviceconfigb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 345);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "google/api/billing.proto", &protobuf_RegisterTypes);
  ::google::api::protobuf_google_2fapi_2fannotations_2eproto::AddDescriptors();
  ::google::api::protobuf_google_2fapi_2fmetric_2eproto::AddDescriptors();
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_google_2fapi_2fbilling_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Billing::kMetricsFieldNumber;
const int Billing::kRulesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Billing::Billing()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_google_2fapi_2fbilling_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.api.Billing)
}
Billing::Billing(const Billing& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      metrics_(from.metrics_),
      rules_(from.rules_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:google.api.Billing)
}

void Billing::SharedCtor() {
  _cached_size_ = 0;
}

Billing::~Billing() {
  // @@protoc_insertion_point(destructor:google.api.Billing)
  SharedDtor();
}

void Billing::SharedDtor() {
}

void Billing::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Billing::descriptor() {
  protobuf_google_2fapi_2fbilling_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fapi_2fbilling_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Billing& Billing::default_instance() {
  protobuf_google_2fapi_2fbilling_2eproto::InitDefaults();
  return *internal_default_instance();
}

Billing* Billing::New(::google::protobuf::Arena* arena) const {
  Billing* n = new Billing;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Billing::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.Billing)
  metrics_.Clear();
  rules_.Clear();
}

bool Billing::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.api.Billing)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated string metrics = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_metrics()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->metrics(this->metrics_size() - 1).data(),
            this->metrics(this->metrics_size() - 1).length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.api.Billing.metrics"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.api.BillingStatusRule rules = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_rules()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.api.Billing)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.api.Billing)
  return false;
#undef DO_
}

void Billing::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.api.Billing)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string metrics = 1;
  for (int i = 0, n = this->metrics_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->metrics(i).data(), this->metrics(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.api.Billing.metrics");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->metrics(i), output);
  }

  // repeated .google.api.BillingStatusRule rules = 5;
  for (unsigned int i = 0, n = this->rules_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->rules(i), output);
  }

  // @@protoc_insertion_point(serialize_end:google.api.Billing)
}

::google::protobuf::uint8* Billing::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.api.Billing)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string metrics = 1;
  for (int i = 0, n = this->metrics_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->metrics(i).data(), this->metrics(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.api.Billing.metrics");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(1, this->metrics(i), target);
  }

  // repeated .google.api.BillingStatusRule rules = 5;
  for (unsigned int i = 0, n = this->rules_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, this->rules(i), deterministic, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.api.Billing)
  return target;
}

size_t Billing::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.Billing)
  size_t total_size = 0;

  // repeated string metrics = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->metrics_size());
  for (int i = 0, n = this->metrics_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->metrics(i));
  }

  // repeated .google.api.BillingStatusRule rules = 5;
  {
    unsigned int count = this->rules_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->rules(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Billing::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.api.Billing)
  GOOGLE_DCHECK_NE(&from, this);
  const Billing* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Billing>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.api.Billing)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.api.Billing)
    MergeFrom(*source);
  }
}

void Billing::MergeFrom(const Billing& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.api.Billing)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  metrics_.MergeFrom(from.metrics_);
  rules_.MergeFrom(from.rules_);
}

void Billing::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.api.Billing)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Billing::CopyFrom(const Billing& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.Billing)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Billing::IsInitialized() const {
  return true;
}

void Billing::Swap(Billing* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Billing::InternalSwap(Billing* other) {
  metrics_.InternalSwap(&other->metrics_);
  rules_.InternalSwap(&other->rules_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Billing::GetMetadata() const {
  protobuf_google_2fapi_2fbilling_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fapi_2fbilling_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Billing

// repeated string metrics = 1;
int Billing::metrics_size() const {
  return metrics_.size();
}
void Billing::clear_metrics() {
  metrics_.Clear();
}
const ::std::string& Billing::metrics(int index) const {
  // @@protoc_insertion_point(field_get:google.api.Billing.metrics)
  return metrics_.Get(index);
}
::std::string* Billing::mutable_metrics(int index) {
  // @@protoc_insertion_point(field_mutable:google.api.Billing.metrics)
  return metrics_.Mutable(index);
}
void Billing::set_metrics(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:google.api.Billing.metrics)
  metrics_.Mutable(index)->assign(value);
}
#if LANG_CXX11
void Billing::set_metrics(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:google.api.Billing.metrics)
  metrics_.Mutable(index)->assign(std::move(value));
}
#endif
void Billing::set_metrics(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  metrics_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:google.api.Billing.metrics)
}
void Billing::set_metrics(int index, const char* value, size_t size) {
  metrics_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:google.api.Billing.metrics)
}
::std::string* Billing::add_metrics() {
  // @@protoc_insertion_point(field_add_mutable:google.api.Billing.metrics)
  return metrics_.Add();
}
void Billing::add_metrics(const ::std::string& value) {
  metrics_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:google.api.Billing.metrics)
}
#if LANG_CXX11
void Billing::add_metrics(::std::string&& value) {
  metrics_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:google.api.Billing.metrics)
}
#endif
void Billing::add_metrics(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  metrics_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:google.api.Billing.metrics)
}
void Billing::add_metrics(const char* value, size_t size) {
  metrics_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:google.api.Billing.metrics)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
Billing::metrics() const {
  // @@protoc_insertion_point(field_list:google.api.Billing.metrics)
  return metrics_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
Billing::mutable_metrics() {
  // @@protoc_insertion_point(field_mutable_list:google.api.Billing.metrics)
  return &metrics_;
}

// repeated .google.api.BillingStatusRule rules = 5;
int Billing::rules_size() const {
  return rules_.size();
}
void Billing::clear_rules() {
  rules_.Clear();
}
const ::google::api::BillingStatusRule& Billing::rules(int index) const {
  // @@protoc_insertion_point(field_get:google.api.Billing.rules)
  return rules_.Get(index);
}
::google::api::BillingStatusRule* Billing::mutable_rules(int index) {
  // @@protoc_insertion_point(field_mutable:google.api.Billing.rules)
  return rules_.Mutable(index);
}
::google::api::BillingStatusRule* Billing::add_rules() {
  // @@protoc_insertion_point(field_add:google.api.Billing.rules)
  return rules_.Add();
}
::google::protobuf::RepeatedPtrField< ::google::api::BillingStatusRule >*
Billing::mutable_rules() {
  // @@protoc_insertion_point(field_mutable_list:google.api.Billing.rules)
  return &rules_;
}
const ::google::protobuf::RepeatedPtrField< ::google::api::BillingStatusRule >&
Billing::rules() const {
  // @@protoc_insertion_point(field_list:google.api.Billing.rules)
  return rules_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BillingStatusRule::kSelectorFieldNumber;
const int BillingStatusRule::kAllowedStatusesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BillingStatusRule::BillingStatusRule()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_google_2fapi_2fbilling_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.api.BillingStatusRule)
}
BillingStatusRule::BillingStatusRule(const BillingStatusRule& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      allowed_statuses_(from.allowed_statuses_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  selector_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.selector().size() > 0) {
    selector_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.selector_);
  }
  // @@protoc_insertion_point(copy_constructor:google.api.BillingStatusRule)
}

void BillingStatusRule::SharedCtor() {
  selector_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

BillingStatusRule::~BillingStatusRule() {
  // @@protoc_insertion_point(destructor:google.api.BillingStatusRule)
  SharedDtor();
}

void BillingStatusRule::SharedDtor() {
  selector_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void BillingStatusRule::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BillingStatusRule::descriptor() {
  protobuf_google_2fapi_2fbilling_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fapi_2fbilling_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BillingStatusRule& BillingStatusRule::default_instance() {
  protobuf_google_2fapi_2fbilling_2eproto::InitDefaults();
  return *internal_default_instance();
}

BillingStatusRule* BillingStatusRule::New(::google::protobuf::Arena* arena) const {
  BillingStatusRule* n = new BillingStatusRule;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BillingStatusRule::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.BillingStatusRule)
  allowed_statuses_.Clear();
  selector_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool BillingStatusRule::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.api.BillingStatusRule)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string selector = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_selector()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->selector().data(), this->selector().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.api.BillingStatusRule.selector"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string allowed_statuses = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_allowed_statuses()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->allowed_statuses(this->allowed_statuses_size() - 1).data(),
            this->allowed_statuses(this->allowed_statuses_size() - 1).length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.api.BillingStatusRule.allowed_statuses"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.api.BillingStatusRule)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.api.BillingStatusRule)
  return false;
#undef DO_
}

void BillingStatusRule::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.api.BillingStatusRule)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string selector = 1;
  if (this->selector().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->selector().data(), this->selector().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.api.BillingStatusRule.selector");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->selector(), output);
  }

  // repeated string allowed_statuses = 2;
  for (int i = 0, n = this->allowed_statuses_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->allowed_statuses(i).data(), this->allowed_statuses(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.api.BillingStatusRule.allowed_statuses");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->allowed_statuses(i), output);
  }

  // @@protoc_insertion_point(serialize_end:google.api.BillingStatusRule)
}

::google::protobuf::uint8* BillingStatusRule::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.api.BillingStatusRule)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string selector = 1;
  if (this->selector().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->selector().data(), this->selector().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.api.BillingStatusRule.selector");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->selector(), target);
  }

  // repeated string allowed_statuses = 2;
  for (int i = 0, n = this->allowed_statuses_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->allowed_statuses(i).data(), this->allowed_statuses(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.api.BillingStatusRule.allowed_statuses");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->allowed_statuses(i), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.api.BillingStatusRule)
  return target;
}

size_t BillingStatusRule::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.BillingStatusRule)
  size_t total_size = 0;

  // repeated string allowed_statuses = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->allowed_statuses_size());
  for (int i = 0, n = this->allowed_statuses_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->allowed_statuses(i));
  }

  // string selector = 1;
  if (this->selector().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->selector());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BillingStatusRule::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.api.BillingStatusRule)
  GOOGLE_DCHECK_NE(&from, this);
  const BillingStatusRule* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BillingStatusRule>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.api.BillingStatusRule)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.api.BillingStatusRule)
    MergeFrom(*source);
  }
}

void BillingStatusRule::MergeFrom(const BillingStatusRule& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.api.BillingStatusRule)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  allowed_statuses_.MergeFrom(from.allowed_statuses_);
  if (from.selector().size() > 0) {

    selector_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.selector_);
  }
}

void BillingStatusRule::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.api.BillingStatusRule)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BillingStatusRule::CopyFrom(const BillingStatusRule& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.BillingStatusRule)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BillingStatusRule::IsInitialized() const {
  return true;
}

void BillingStatusRule::Swap(BillingStatusRule* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BillingStatusRule::InternalSwap(BillingStatusRule* other) {
  allowed_statuses_.InternalSwap(&other->allowed_statuses_);
  selector_.Swap(&other->selector_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BillingStatusRule::GetMetadata() const {
  protobuf_google_2fapi_2fbilling_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fapi_2fbilling_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BillingStatusRule

// string selector = 1;
void BillingStatusRule::clear_selector() {
  selector_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& BillingStatusRule::selector() const {
  // @@protoc_insertion_point(field_get:google.api.BillingStatusRule.selector)
  return selector_.GetNoArena();
}
void BillingStatusRule::set_selector(const ::std::string& value) {
  
  selector_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.api.BillingStatusRule.selector)
}
#if LANG_CXX11
void BillingStatusRule::set_selector(::std::string&& value) {
  
  selector_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.api.BillingStatusRule.selector)
}
#endif
void BillingStatusRule::set_selector(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  selector_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.api.BillingStatusRule.selector)
}
void BillingStatusRule::set_selector(const char* value, size_t size) {
  
  selector_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.api.BillingStatusRule.selector)
}
::std::string* BillingStatusRule::mutable_selector() {
  
  // @@protoc_insertion_point(field_mutable:google.api.BillingStatusRule.selector)
  return selector_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* BillingStatusRule::release_selector() {
  // @@protoc_insertion_point(field_release:google.api.BillingStatusRule.selector)
  
  return selector_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void BillingStatusRule::set_allocated_selector(::std::string* selector) {
  if (selector != NULL) {
    
  } else {
    
  }
  selector_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), selector);
  // @@protoc_insertion_point(field_set_allocated:google.api.BillingStatusRule.selector)
}

// repeated string allowed_statuses = 2;
int BillingStatusRule::allowed_statuses_size() const {
  return allowed_statuses_.size();
}
void BillingStatusRule::clear_allowed_statuses() {
  allowed_statuses_.Clear();
}
const ::std::string& BillingStatusRule::allowed_statuses(int index) const {
  // @@protoc_insertion_point(field_get:google.api.BillingStatusRule.allowed_statuses)
  return allowed_statuses_.Get(index);
}
::std::string* BillingStatusRule::mutable_allowed_statuses(int index) {
  // @@protoc_insertion_point(field_mutable:google.api.BillingStatusRule.allowed_statuses)
  return allowed_statuses_.Mutable(index);
}
void BillingStatusRule::set_allowed_statuses(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:google.api.BillingStatusRule.allowed_statuses)
  allowed_statuses_.Mutable(index)->assign(value);
}
#if LANG_CXX11
void BillingStatusRule::set_allowed_statuses(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:google.api.BillingStatusRule.allowed_statuses)
  allowed_statuses_.Mutable(index)->assign(std::move(value));
}
#endif
void BillingStatusRule::set_allowed_statuses(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  allowed_statuses_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:google.api.BillingStatusRule.allowed_statuses)
}
void BillingStatusRule::set_allowed_statuses(int index, const char* value, size_t size) {
  allowed_statuses_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:google.api.BillingStatusRule.allowed_statuses)
}
::std::string* BillingStatusRule::add_allowed_statuses() {
  // @@protoc_insertion_point(field_add_mutable:google.api.BillingStatusRule.allowed_statuses)
  return allowed_statuses_.Add();
}
void BillingStatusRule::add_allowed_statuses(const ::std::string& value) {
  allowed_statuses_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:google.api.BillingStatusRule.allowed_statuses)
}
#if LANG_CXX11
void BillingStatusRule::add_allowed_statuses(::std::string&& value) {
  allowed_statuses_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:google.api.BillingStatusRule.allowed_statuses)
}
#endif
void BillingStatusRule::add_allowed_statuses(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  allowed_statuses_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:google.api.BillingStatusRule.allowed_statuses)
}
void BillingStatusRule::add_allowed_statuses(const char* value, size_t size) {
  allowed_statuses_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:google.api.BillingStatusRule.allowed_statuses)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
BillingStatusRule::allowed_statuses() const {
  // @@protoc_insertion_point(field_list:google.api.BillingStatusRule.allowed_statuses)
  return allowed_statuses_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
BillingStatusRule::mutable_allowed_statuses() {
  // @@protoc_insertion_point(field_mutable_list:google.api.BillingStatusRule.allowed_statuses)
  return &allowed_statuses_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace api
}  // namespace google

// @@protoc_insertion_point(global_scope)
