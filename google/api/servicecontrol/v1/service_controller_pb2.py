# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/api/servicecontrol/v1/service_controller.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from google.api import annotations_pb2 as google_dot_api_dot_annotations__pb2
from google.api.servicecontrol.v1 import check_error_pb2 as google_dot_api_dot_servicecontrol_dot_v1_dot_check__error__pb2
from google.api.servicecontrol.v1 import operation_pb2 as google_dot_api_dot_servicecontrol_dot_v1_dot_operation__pb2
from google.rpc import status_pb2 as google_dot_rpc_dot_status__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='google/api/servicecontrol/v1/service_controller.proto',
  package='google.api.servicecontrol.v1',
  syntax='proto3',
  serialized_pb=_b('\n5google/api/servicecontrol/v1/service_controller.proto\x12\x1cgoogle.api.servicecontrol.v1\x1a\x1cgoogle/api/annotations.proto\x1a.google/api/servicecontrol/v1/check_error.proto\x1a,google/api/servicecontrol/v1/operation.proto\x1a\x17google/rpc/status.proto\"{\n\x0c\x43heckRequest\x12\x14\n\x0cservice_name\x18\x01 \x01(\t\x12:\n\toperation\x18\x02 \x01(\x0b\x32\'.google.api.servicecontrol.v1.Operation\x12\x19\n\x11service_config_id\x18\x04 \x01(\t\"\xd1\x02\n\rCheckResponse\x12\x14\n\x0coperation_id\x18\x01 \x01(\t\x12>\n\x0c\x63heck_errors\x18\x02 \x03(\x0b\x32(.google.api.servicecontrol.v1.CheckError\x12\x19\n\x11service_config_id\x18\x05 \x01(\t\x12I\n\ncheck_info\x18\x06 \x01(\x0b\x32\x35.google.api.servicecontrol.v1.CheckResponse.CheckInfo\x1a\\\n\tCheckInfo\x12O\n\rconsumer_info\x18\x02 \x01(\x0b\x32\x38.google.api.servicecontrol.v1.CheckResponse.ConsumerInfo\x1a&\n\x0c\x43onsumerInfo\x12\x16\n\x0eproject_number\x18\x01 \x01(\x03\"}\n\rReportRequest\x12\x14\n\x0cservice_name\x18\x01 \x01(\t\x12;\n\noperations\x18\x02 \x03(\x0b\x32\'.google.api.servicecontrol.v1.Operation\x12\x19\n\x11service_config_id\x18\x03 \x01(\t\"\xc5\x01\n\x0eReportResponse\x12O\n\rreport_errors\x18\x01 \x03(\x0b\x32\x38.google.api.servicecontrol.v1.ReportResponse.ReportError\x12\x19\n\x11service_config_id\x18\x02 \x01(\t\x1aG\n\x0bReportError\x12\x14\n\x0coperation_id\x18\x01 \x01(\t\x12\"\n\x06status\x18\x02 \x01(\x0b\x32\x12.google.rpc.Status2\xb9\x02\n\x11ServiceController\x12\x8e\x01\n\x05\x43heck\x12*.google.api.servicecontrol.v1.CheckRequest\x1a+.google.api.servicecontrol.v1.CheckResponse\",\x82\xd3\xe4\x93\x02&\"!/v1/services/{service_name}:check:\x01*\x12\x92\x01\n\x06Report\x12+.google.api.servicecontrol.v1.ReportRequest\x1a,.google.api.servicecontrol.v1.ReportResponse\"-\x82\xd3\xe4\x93\x02\'\"\"/v1/services/{service_name}:report:\x01*B\x92\x01\n com.google.api.servicecontrol.v1B\x16ServiceControllerProtoP\x01ZJgoogle.golang.org/genproto/googleapis/api/servicecontrol/v1;servicecontrol\xf8\x01\x01\xa2\x02\x04GASCb\x06proto3')
  ,
  dependencies=[google_dot_api_dot_annotations__pb2.DESCRIPTOR,google_dot_api_dot_servicecontrol_dot_v1_dot_check__error__pb2.DESCRIPTOR,google_dot_api_dot_servicecontrol_dot_v1_dot_operation__pb2.DESCRIPTOR,google_dot_rpc_dot_status__pb2.DESCRIPTOR,])




_CHECKREQUEST = _descriptor.Descriptor(
  name='CheckRequest',
  full_name='google.api.servicecontrol.v1.CheckRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='service_name', full_name='google.api.servicecontrol.v1.CheckRequest.service_name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='operation', full_name='google.api.servicecontrol.v1.CheckRequest.operation', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='service_config_id', full_name='google.api.servicecontrol.v1.CheckRequest.service_config_id', index=2,
      number=4, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=236,
  serialized_end=359,
)


_CHECKRESPONSE_CHECKINFO = _descriptor.Descriptor(
  name='CheckInfo',
  full_name='google.api.servicecontrol.v1.CheckResponse.CheckInfo',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='consumer_info', full_name='google.api.servicecontrol.v1.CheckResponse.CheckInfo.consumer_info', index=0,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=567,
  serialized_end=659,
)

_CHECKRESPONSE_CONSUMERINFO = _descriptor.Descriptor(
  name='ConsumerInfo',
  full_name='google.api.servicecontrol.v1.CheckResponse.ConsumerInfo',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='project_number', full_name='google.api.servicecontrol.v1.CheckResponse.ConsumerInfo.project_number', index=0,
      number=1, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=661,
  serialized_end=699,
)

_CHECKRESPONSE = _descriptor.Descriptor(
  name='CheckResponse',
  full_name='google.api.servicecontrol.v1.CheckResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='operation_id', full_name='google.api.servicecontrol.v1.CheckResponse.operation_id', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='check_errors', full_name='google.api.servicecontrol.v1.CheckResponse.check_errors', index=1,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='service_config_id', full_name='google.api.servicecontrol.v1.CheckResponse.service_config_id', index=2,
      number=5, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='check_info', full_name='google.api.servicecontrol.v1.CheckResponse.check_info', index=3,
      number=6, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[_CHECKRESPONSE_CHECKINFO, _CHECKRESPONSE_CONSUMERINFO, ],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=362,
  serialized_end=699,
)


_REPORTREQUEST = _descriptor.Descriptor(
  name='ReportRequest',
  full_name='google.api.servicecontrol.v1.ReportRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='service_name', full_name='google.api.servicecontrol.v1.ReportRequest.service_name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='operations', full_name='google.api.servicecontrol.v1.ReportRequest.operations', index=1,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='service_config_id', full_name='google.api.servicecontrol.v1.ReportRequest.service_config_id', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=701,
  serialized_end=826,
)


_REPORTRESPONSE_REPORTERROR = _descriptor.Descriptor(
  name='ReportError',
  full_name='google.api.servicecontrol.v1.ReportResponse.ReportError',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='operation_id', full_name='google.api.servicecontrol.v1.ReportResponse.ReportError.operation_id', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='status', full_name='google.api.servicecontrol.v1.ReportResponse.ReportError.status', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=955,
  serialized_end=1026,
)

_REPORTRESPONSE = _descriptor.Descriptor(
  name='ReportResponse',
  full_name='google.api.servicecontrol.v1.ReportResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='report_errors', full_name='google.api.servicecontrol.v1.ReportResponse.report_errors', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='service_config_id', full_name='google.api.servicecontrol.v1.ReportResponse.service_config_id', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[_REPORTRESPONSE_REPORTERROR, ],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=829,
  serialized_end=1026,
)

_CHECKREQUEST.fields_by_name['operation'].message_type = google_dot_api_dot_servicecontrol_dot_v1_dot_operation__pb2._OPERATION
_CHECKRESPONSE_CHECKINFO.fields_by_name['consumer_info'].message_type = _CHECKRESPONSE_CONSUMERINFO
_CHECKRESPONSE_CHECKINFO.containing_type = _CHECKRESPONSE
_CHECKRESPONSE_CONSUMERINFO.containing_type = _CHECKRESPONSE
_CHECKRESPONSE.fields_by_name['check_errors'].message_type = google_dot_api_dot_servicecontrol_dot_v1_dot_check__error__pb2._CHECKERROR
_CHECKRESPONSE.fields_by_name['check_info'].message_type = _CHECKRESPONSE_CHECKINFO
_REPORTREQUEST.fields_by_name['operations'].message_type = google_dot_api_dot_servicecontrol_dot_v1_dot_operation__pb2._OPERATION
_REPORTRESPONSE_REPORTERROR.fields_by_name['status'].message_type = google_dot_rpc_dot_status__pb2._STATUS
_REPORTRESPONSE_REPORTERROR.containing_type = _REPORTRESPONSE
_REPORTRESPONSE.fields_by_name['report_errors'].message_type = _REPORTRESPONSE_REPORTERROR
DESCRIPTOR.message_types_by_name['CheckRequest'] = _CHECKREQUEST
DESCRIPTOR.message_types_by_name['CheckResponse'] = _CHECKRESPONSE
DESCRIPTOR.message_types_by_name['ReportRequest'] = _REPORTREQUEST
DESCRIPTOR.message_types_by_name['ReportResponse'] = _REPORTRESPONSE
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

CheckRequest = _reflection.GeneratedProtocolMessageType('CheckRequest', (_message.Message,), dict(
  DESCRIPTOR = _CHECKREQUEST,
  __module__ = 'google.api.servicecontrol.v1.service_controller_pb2'
  # @@protoc_insertion_point(class_scope:google.api.servicecontrol.v1.CheckRequest)
  ))
_sym_db.RegisterMessage(CheckRequest)

CheckResponse = _reflection.GeneratedProtocolMessageType('CheckResponse', (_message.Message,), dict(

  CheckInfo = _reflection.GeneratedProtocolMessageType('CheckInfo', (_message.Message,), dict(
    DESCRIPTOR = _CHECKRESPONSE_CHECKINFO,
    __module__ = 'google.api.servicecontrol.v1.service_controller_pb2'
    # @@protoc_insertion_point(class_scope:google.api.servicecontrol.v1.CheckResponse.CheckInfo)
    ))
  ,

  ConsumerInfo = _reflection.GeneratedProtocolMessageType('ConsumerInfo', (_message.Message,), dict(
    DESCRIPTOR = _CHECKRESPONSE_CONSUMERINFO,
    __module__ = 'google.api.servicecontrol.v1.service_controller_pb2'
    # @@protoc_insertion_point(class_scope:google.api.servicecontrol.v1.CheckResponse.ConsumerInfo)
    ))
  ,
  DESCRIPTOR = _CHECKRESPONSE,
  __module__ = 'google.api.servicecontrol.v1.service_controller_pb2'
  # @@protoc_insertion_point(class_scope:google.api.servicecontrol.v1.CheckResponse)
  ))
_sym_db.RegisterMessage(CheckResponse)
_sym_db.RegisterMessage(CheckResponse.CheckInfo)
_sym_db.RegisterMessage(CheckResponse.ConsumerInfo)

ReportRequest = _reflection.GeneratedProtocolMessageType('ReportRequest', (_message.Message,), dict(
  DESCRIPTOR = _REPORTREQUEST,
  __module__ = 'google.api.servicecontrol.v1.service_controller_pb2'
  # @@protoc_insertion_point(class_scope:google.api.servicecontrol.v1.ReportRequest)
  ))
_sym_db.RegisterMessage(ReportRequest)

ReportResponse = _reflection.GeneratedProtocolMessageType('ReportResponse', (_message.Message,), dict(

  ReportError = _reflection.GeneratedProtocolMessageType('ReportError', (_message.Message,), dict(
    DESCRIPTOR = _REPORTRESPONSE_REPORTERROR,
    __module__ = 'google.api.servicecontrol.v1.service_controller_pb2'
    # @@protoc_insertion_point(class_scope:google.api.servicecontrol.v1.ReportResponse.ReportError)
    ))
  ,
  DESCRIPTOR = _REPORTRESPONSE,
  __module__ = 'google.api.servicecontrol.v1.service_controller_pb2'
  # @@protoc_insertion_point(class_scope:google.api.servicecontrol.v1.ReportResponse)
  ))
_sym_db.RegisterMessage(ReportResponse)
_sym_db.RegisterMessage(ReportResponse.ReportError)


DESCRIPTOR.has_options = True
DESCRIPTOR._options = _descriptor._ParseOptions(descriptor_pb2.FileOptions(), _b('\n com.google.api.servicecontrol.v1B\026ServiceControllerProtoP\001ZJgoogle.golang.org/genproto/googleapis/api/servicecontrol/v1;servicecontrol\370\001\001\242\002\004GASC'))
try:
  # THESE ELEMENTS WILL BE DEPRECATED.
  # Please use the generated *_pb2_grpc.py files instead.
  import grpc
  from grpc.beta import implementations as beta_implementations
  from grpc.beta import interfaces as beta_interfaces
  from grpc.framework.common import cardinality
  from grpc.framework.interfaces.face import utilities as face_utilities


  class ServiceControllerStub(object):
    """[Google Service Control API](/service-control/overview)

    Lets clients check and report operations against
    a [managed service][google.api.servicemanagement.v1.ManagedService].
    """

    def __init__(self, channel):
      """Constructor.

      Args:
        channel: A grpc.Channel.
      """
      self.Check = channel.unary_unary(
          '/google.api.servicecontrol.v1.ServiceController/Check',
          request_serializer=CheckRequest.SerializeToString,
          response_deserializer=CheckResponse.FromString,
          )
      self.Report = channel.unary_unary(
          '/google.api.servicecontrol.v1.ServiceController/Report',
          request_serializer=ReportRequest.SerializeToString,
          response_deserializer=ReportResponse.FromString,
          )


  class ServiceControllerServicer(object):
    """[Google Service Control API](/service-control/overview)

    Lets clients check and report operations against
    a [managed service][google.api.servicemanagement.v1.ManagedService].
    """

    def Check(self, request, context):
      """Checks an operation with Google Service Control to decide whether
      the given operation should proceed. It should be called before the
      operation is executed.

      If feasible, the client should cache the check results and reuse them for
      60 seconds. In case of server errors, the client can rely on the cached
      results for longer time.

      NOTE: the `CheckRequest` has the size limit of 64KB.

      This method requires the `servicemanagement.services.check` permission
      on the specified service. For more information, see
      [Google Cloud IAM](https://cloud.google.com/iam).
      """
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def Report(self, request, context):
      """Reports operation results to Google Service Control, such as logs and
      metrics. It should be called after an operation is completed.

      If feasible, the client should aggregate reporting data for up to 5
      seconds to reduce API traffic. Limiting aggregation to 5 seconds is to
      reduce data loss during client crashes. Clients should carefully choose
      the aggregation time window to avoid data loss risk more than 0.01%
      for business and compliance reasons.

      NOTE: the `ReportRequest` has the size limit of 1MB.

      This method requires the `servicemanagement.services.report` permission
      on the specified service. For more information, see
      [Google Cloud IAM](https://cloud.google.com/iam).
      """
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')


  def add_ServiceControllerServicer_to_server(servicer, server):
    rpc_method_handlers = {
        'Check': grpc.unary_unary_rpc_method_handler(
            servicer.Check,
            request_deserializer=CheckRequest.FromString,
            response_serializer=CheckResponse.SerializeToString,
        ),
        'Report': grpc.unary_unary_rpc_method_handler(
            servicer.Report,
            request_deserializer=ReportRequest.FromString,
            response_serializer=ReportResponse.SerializeToString,
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
        'google.api.servicecontrol.v1.ServiceController', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


  class BetaServiceControllerServicer(object):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This class was generated
    only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0."""
    """[Google Service Control API](/service-control/overview)

    Lets clients check and report operations against
    a [managed service][google.api.servicemanagement.v1.ManagedService].
    """
    def Check(self, request, context):
      """Checks an operation with Google Service Control to decide whether
      the given operation should proceed. It should be called before the
      operation is executed.

      If feasible, the client should cache the check results and reuse them for
      60 seconds. In case of server errors, the client can rely on the cached
      results for longer time.

      NOTE: the `CheckRequest` has the size limit of 64KB.

      This method requires the `servicemanagement.services.check` permission
      on the specified service. For more information, see
      [Google Cloud IAM](https://cloud.google.com/iam).
      """
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def Report(self, request, context):
      """Reports operation results to Google Service Control, such as logs and
      metrics. It should be called after an operation is completed.

      If feasible, the client should aggregate reporting data for up to 5
      seconds to reduce API traffic. Limiting aggregation to 5 seconds is to
      reduce data loss during client crashes. Clients should carefully choose
      the aggregation time window to avoid data loss risk more than 0.01%
      for business and compliance reasons.

      NOTE: the `ReportRequest` has the size limit of 1MB.

      This method requires the `servicemanagement.services.report` permission
      on the specified service. For more information, see
      [Google Cloud IAM](https://cloud.google.com/iam).
      """
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)


  class BetaServiceControllerStub(object):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This class was generated
    only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0."""
    """[Google Service Control API](/service-control/overview)

    Lets clients check and report operations against
    a [managed service][google.api.servicemanagement.v1.ManagedService].
    """
    def Check(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      """Checks an operation with Google Service Control to decide whether
      the given operation should proceed. It should be called before the
      operation is executed.

      If feasible, the client should cache the check results and reuse them for
      60 seconds. In case of server errors, the client can rely on the cached
      results for longer time.

      NOTE: the `CheckRequest` has the size limit of 64KB.

      This method requires the `servicemanagement.services.check` permission
      on the specified service. For more information, see
      [Google Cloud IAM](https://cloud.google.com/iam).
      """
      raise NotImplementedError()
    Check.future = None
    def Report(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      """Reports operation results to Google Service Control, such as logs and
      metrics. It should be called after an operation is completed.

      If feasible, the client should aggregate reporting data for up to 5
      seconds to reduce API traffic. Limiting aggregation to 5 seconds is to
      reduce data loss during client crashes. Clients should carefully choose
      the aggregation time window to avoid data loss risk more than 0.01%
      for business and compliance reasons.

      NOTE: the `ReportRequest` has the size limit of 1MB.

      This method requires the `servicemanagement.services.report` permission
      on the specified service. For more information, see
      [Google Cloud IAM](https://cloud.google.com/iam).
      """
      raise NotImplementedError()
    Report.future = None


  def beta_create_ServiceController_server(servicer, pool=None, pool_size=None, default_timeout=None, maximum_timeout=None):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This function was
    generated only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0"""
    request_deserializers = {
      ('google.api.servicecontrol.v1.ServiceController', 'Check'): CheckRequest.FromString,
      ('google.api.servicecontrol.v1.ServiceController', 'Report'): ReportRequest.FromString,
    }
    response_serializers = {
      ('google.api.servicecontrol.v1.ServiceController', 'Check'): CheckResponse.SerializeToString,
      ('google.api.servicecontrol.v1.ServiceController', 'Report'): ReportResponse.SerializeToString,
    }
    method_implementations = {
      ('google.api.servicecontrol.v1.ServiceController', 'Check'): face_utilities.unary_unary_inline(servicer.Check),
      ('google.api.servicecontrol.v1.ServiceController', 'Report'): face_utilities.unary_unary_inline(servicer.Report),
    }
    server_options = beta_implementations.server_options(request_deserializers=request_deserializers, response_serializers=response_serializers, thread_pool=pool, thread_pool_size=pool_size, default_timeout=default_timeout, maximum_timeout=maximum_timeout)
    return beta_implementations.server(method_implementations, options=server_options)


  def beta_create_ServiceController_stub(channel, host=None, metadata_transformer=None, pool=None, pool_size=None):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This function was
    generated only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0"""
    request_serializers = {
      ('google.api.servicecontrol.v1.ServiceController', 'Check'): CheckRequest.SerializeToString,
      ('google.api.servicecontrol.v1.ServiceController', 'Report'): ReportRequest.SerializeToString,
    }
    response_deserializers = {
      ('google.api.servicecontrol.v1.ServiceController', 'Check'): CheckResponse.FromString,
      ('google.api.servicecontrol.v1.ServiceController', 'Report'): ReportResponse.FromString,
    }
    cardinalities = {
      'Check': cardinality.Cardinality.UNARY_UNARY,
      'Report': cardinality.Cardinality.UNARY_UNARY,
    }
    stub_options = beta_implementations.stub_options(host=host, metadata_transformer=metadata_transformer, request_serializers=request_serializers, response_deserializers=response_deserializers, thread_pool=pool, thread_pool_size=pool_size)
    return beta_implementations.dynamic_stub(channel, 'google.api.servicecontrol.v1.ServiceController', cardinalities, options=stub_options)
except ImportError:
  pass
# @@protoc_insertion_point(module_scope)
