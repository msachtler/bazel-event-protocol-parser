// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/appengine/legacy/audit_data.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "google/appengine/legacy/audit_data.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace google {
namespace appengine {
namespace legacy {
class AuditData_EventDataEntryDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<AuditData::AuditData_EventDataEntry> {
} _AuditData_EventDataEntry_default_instance_;
class AuditDataDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<AuditData> {
} _AuditData_default_instance_;

namespace protobuf_google_2fappengine_2flegacy_2faudit_5fdata_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[2];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] = {
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AuditData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AuditData, event_message_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AuditData, event_data_),
};

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, -1, sizeof(AuditData)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_AuditData_EventDataEntry_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_AuditData_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "google/appengine/legacy/audit_data.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
file_level_metadata[0].reflection = AuditData::AuditData_EventDataEntry::CreateReflection(file_level_metadata[0].descriptor, _AuditData_EventDataEntry_default_instance_.get_mutable());
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 2);
}

}  // namespace

void TableStruct::Shutdown() {
  _AuditData_default_instance_.Shutdown();
  delete file_level_metadata[1].reflection;
  delete file_level_metadata[0].reflection;
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _AuditData_EventDataEntry_default_instance_.DefaultConstruct();
  _AuditData_default_instance_.DefaultConstruct();
  _AuditData_EventDataEntry_default_instance_.get_mutable()->set_default_instance(_AuditData_EventDataEntry_default_instance_.get_mutable());
  _AuditData_EventDataEntry_default_instance_.get_mutable()->InitAsDefaultInstance();
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n(google/appengine/legacy/audit_data.pro"
      "to\022\027google.appengine.legacy\"\233\001\n\tAuditDat"
      "a\022\025\n\revent_message\030\001 \001(\t\022E\n\nevent_data\030\002"
      " \003(\01321.google.appengine.legacy.AuditData"
      ".EventDataEntry\0320\n\016EventDataEntry\022\013\n\003key"
      "\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001Bn\n\033com.google."
      "appengine.legacyB\016AuditDataProtoP\001Z=goog"
      "le.golang.org/genproto/googleapis/appeng"
      "ine/legacy;legacyb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 345);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "google/appengine/legacy/audit_data.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_google_2fappengine_2flegacy_2faudit_5fdata_2eproto


// ===================================================================

AuditData::AuditData_EventDataEntry::AuditData_EventDataEntry() {}
AuditData::AuditData_EventDataEntry::AuditData_EventDataEntry(::google::protobuf::Arena* arena) : SuperType(arena) {}
::google::protobuf::Metadata AuditData::AuditData_EventDataEntry::GetMetadata() const {
  protobuf_google_2fappengine_2flegacy_2faudit_5fdata_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fappengine_2flegacy_2faudit_5fdata_2eproto::file_level_metadata[0];
}
void AuditData::AuditData_EventDataEntry::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}
void AuditData::AuditData_EventDataEntry::MergeFrom(const AuditData_EventDataEntry& other) {
  MergeFromInternal(other);
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AuditData::kEventMessageFieldNumber;
const int AuditData::kEventDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AuditData::AuditData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_google_2fappengine_2flegacy_2faudit_5fdata_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.appengine.legacy.AuditData)
}
AuditData::AuditData(const AuditData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  event_data_.MergeFrom(from.event_data_);
  event_message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.event_message().size() > 0) {
    event_message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.event_message_);
  }
  // @@protoc_insertion_point(copy_constructor:google.appengine.legacy.AuditData)
}

void AuditData::SharedCtor() {
  event_message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

AuditData::~AuditData() {
  // @@protoc_insertion_point(destructor:google.appengine.legacy.AuditData)
  SharedDtor();
}

void AuditData::SharedDtor() {
  event_message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void AuditData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AuditData::descriptor() {
  protobuf_google_2fappengine_2flegacy_2faudit_5fdata_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fappengine_2flegacy_2faudit_5fdata_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AuditData& AuditData::default_instance() {
  protobuf_google_2fappengine_2flegacy_2faudit_5fdata_2eproto::InitDefaults();
  return *internal_default_instance();
}

AuditData* AuditData::New(::google::protobuf::Arena* arena) const {
  AuditData* n = new AuditData;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AuditData::Clear() {
// @@protoc_insertion_point(message_clear_start:google.appengine.legacy.AuditData)
  event_data_.Clear();
  event_message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool AuditData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.appengine.legacy.AuditData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string event_message = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_event_message()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->event_message().data(), this->event_message().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.appengine.legacy.AuditData.event_message"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, string> event_data = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          AuditData_EventDataEntry::Parser< ::google::protobuf::internal::MapField<
              AuditData_EventDataEntry,
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&event_data_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), parser.key().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.appengine.legacy.AuditData.EventDataEntry.key"));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.value().data(), parser.value().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.appengine.legacy.AuditData.EventDataEntry.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.appengine.legacy.AuditData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.appengine.legacy.AuditData)
  return false;
#undef DO_
}

void AuditData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.appengine.legacy.AuditData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string event_message = 1;
  if (this->event_message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->event_message().data(), this->event_message().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.appengine.legacy.AuditData.event_message");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->event_message(), output);
  }

  // map<string, string> event_data = 2;
  if (!this->event_data().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), p->first.length(),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.appengine.legacy.AuditData.EventDataEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), p->second.length(),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.appengine.legacy.AuditData.EventDataEntry.value");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->event_data().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->event_data().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->event_data().begin();
          it != this->event_data().end(); ++it, ++n) {
        items[n] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[n], Less());
      ::google::protobuf::scoped_ptr<AuditData_EventDataEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(event_data_.NewEntryWrapper(
            items[i]->first, items[i]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            2, *entry, output);
        Utf8Check::Check(items[i]);
      }
    } else {
      ::google::protobuf::scoped_ptr<AuditData_EventDataEntry> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->event_data().begin();
          it != this->event_data().end(); ++it) {
        entry.reset(event_data_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            2, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  // @@protoc_insertion_point(serialize_end:google.appengine.legacy.AuditData)
}

::google::protobuf::uint8* AuditData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.appengine.legacy.AuditData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string event_message = 1;
  if (this->event_message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->event_message().data(), this->event_message().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.appengine.legacy.AuditData.event_message");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->event_message(), target);
  }

  // map<string, string> event_data = 2;
  if (!this->event_data().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), p->first.length(),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.appengine.legacy.AuditData.EventDataEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), p->second.length(),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.appengine.legacy.AuditData.EventDataEntry.value");
      }
    };

    if (deterministic &&
        this->event_data().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->event_data().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->event_data().begin();
          it != this->event_data().end(); ++it, ++n) {
        items[n] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[n], Less());
      ::google::protobuf::scoped_ptr<AuditData_EventDataEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(event_data_.NewEntryWrapper(
            items[i]->first, items[i]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       2, *entry, deterministic, target);
;
        Utf8Check::Check(items[i]);
      }
    } else {
      ::google::protobuf::scoped_ptr<AuditData_EventDataEntry> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->event_data().begin();
          it != this->event_data().end(); ++it) {
        entry.reset(event_data_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       2, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.appengine.legacy.AuditData)
  return target;
}

size_t AuditData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.appengine.legacy.AuditData)
  size_t total_size = 0;

  // map<string, string> event_data = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->event_data_size());
  {
    ::google::protobuf::scoped_ptr<AuditData_EventDataEntry> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->event_data().begin();
        it != this->event_data().end(); ++it) {
      entry.reset(event_data_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // string event_message = 1;
  if (this->event_message().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->event_message());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AuditData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.appengine.legacy.AuditData)
  GOOGLE_DCHECK_NE(&from, this);
  const AuditData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AuditData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.appengine.legacy.AuditData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.appengine.legacy.AuditData)
    MergeFrom(*source);
  }
}

void AuditData::MergeFrom(const AuditData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.appengine.legacy.AuditData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  event_data_.MergeFrom(from.event_data_);
  if (from.event_message().size() > 0) {

    event_message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.event_message_);
  }
}

void AuditData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.appengine.legacy.AuditData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AuditData::CopyFrom(const AuditData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.appengine.legacy.AuditData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AuditData::IsInitialized() const {
  return true;
}

void AuditData::Swap(AuditData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AuditData::InternalSwap(AuditData* other) {
  event_data_.Swap(&other->event_data_);
  event_message_.Swap(&other->event_message_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AuditData::GetMetadata() const {
  protobuf_google_2fappengine_2flegacy_2faudit_5fdata_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fappengine_2flegacy_2faudit_5fdata_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AuditData

// string event_message = 1;
void AuditData::clear_event_message() {
  event_message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& AuditData::event_message() const {
  // @@protoc_insertion_point(field_get:google.appengine.legacy.AuditData.event_message)
  return event_message_.GetNoArena();
}
void AuditData::set_event_message(const ::std::string& value) {
  
  event_message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.appengine.legacy.AuditData.event_message)
}
#if LANG_CXX11
void AuditData::set_event_message(::std::string&& value) {
  
  event_message_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.appengine.legacy.AuditData.event_message)
}
#endif
void AuditData::set_event_message(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  event_message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.appengine.legacy.AuditData.event_message)
}
void AuditData::set_event_message(const char* value, size_t size) {
  
  event_message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.appengine.legacy.AuditData.event_message)
}
::std::string* AuditData::mutable_event_message() {
  
  // @@protoc_insertion_point(field_mutable:google.appengine.legacy.AuditData.event_message)
  return event_message_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AuditData::release_event_message() {
  // @@protoc_insertion_point(field_release:google.appengine.legacy.AuditData.event_message)
  
  return event_message_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AuditData::set_allocated_event_message(::std::string* event_message) {
  if (event_message != NULL) {
    
  } else {
    
  }
  event_message_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), event_message);
  // @@protoc_insertion_point(field_set_allocated:google.appengine.legacy.AuditData.event_message)
}

// map<string, string> event_data = 2;
int AuditData::event_data_size() const {
  return event_data_.size();
}
void AuditData::clear_event_data() {
  event_data_.Clear();
}
 const ::google::protobuf::Map< ::std::string, ::std::string >&
AuditData::event_data() const {
  // @@protoc_insertion_point(field_map:google.appengine.legacy.AuditData.event_data)
  return event_data_.GetMap();
}
 ::google::protobuf::Map< ::std::string, ::std::string >*
AuditData::mutable_event_data() {
  // @@protoc_insertion_point(field_mutable_map:google.appengine.legacy.AuditData.event_data)
  return event_data_.MutableMap();
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace legacy
}  // namespace appengine
}  // namespace google

// @@protoc_insertion_point(global_scope)
