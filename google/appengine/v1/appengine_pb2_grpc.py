# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from google.appengine.v1 import appengine_pb2 as google_dot_appengine_dot_v1_dot_appengine__pb2
from google.appengine.v1 import application_pb2 as google_dot_appengine_dot_v1_dot_application__pb2
from google.appengine.v1 import instance_pb2 as google_dot_appengine_dot_v1_dot_instance__pb2
from google.appengine.v1 import service_pb2 as google_dot_appengine_dot_v1_dot_service__pb2
from google.appengine.v1 import version_pb2 as google_dot_appengine_dot_v1_dot_version__pb2
from google.longrunning import operations_pb2 as google_dot_longrunning_dot_operations__pb2


class InstancesStub(object):
  """Manages instances of a version.
  """

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.ListInstances = channel.unary_unary(
        '/google.appengine.v1.Instances/ListInstances',
        request_serializer=google_dot_appengine_dot_v1_dot_appengine__pb2.ListInstancesRequest.SerializeToString,
        response_deserializer=google_dot_appengine_dot_v1_dot_appengine__pb2.ListInstancesResponse.FromString,
        )
    self.GetInstance = channel.unary_unary(
        '/google.appengine.v1.Instances/GetInstance',
        request_serializer=google_dot_appengine_dot_v1_dot_appengine__pb2.GetInstanceRequest.SerializeToString,
        response_deserializer=google_dot_appengine_dot_v1_dot_instance__pb2.Instance.FromString,
        )
    self.DeleteInstance = channel.unary_unary(
        '/google.appengine.v1.Instances/DeleteInstance',
        request_serializer=google_dot_appengine_dot_v1_dot_appengine__pb2.DeleteInstanceRequest.SerializeToString,
        response_deserializer=google_dot_longrunning_dot_operations__pb2.Operation.FromString,
        )
    self.DebugInstance = channel.unary_unary(
        '/google.appengine.v1.Instances/DebugInstance',
        request_serializer=google_dot_appengine_dot_v1_dot_appengine__pb2.DebugInstanceRequest.SerializeToString,
        response_deserializer=google_dot_longrunning_dot_operations__pb2.Operation.FromString,
        )


class InstancesServicer(object):
  """Manages instances of a version.
  """

  def ListInstances(self, request, context):
    """Lists the instances of a version.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetInstance(self, request, context):
    """Gets instance information.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def DeleteInstance(self, request, context):
    """Stops a running instance.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def DebugInstance(self, request, context):
    """Enables debugging on a VM instance. This allows you to use the SSH
    command to connect to the virtual machine where the instance lives.
    While in "debug mode", the instance continues to serve live traffic.
    You should delete the instance when you are done debugging and then
    allow the system to take over and determine if another instance
    should be started.

    Only applicable for instances in App Engine flexible environment.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_InstancesServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'ListInstances': grpc.unary_unary_rpc_method_handler(
          servicer.ListInstances,
          request_deserializer=google_dot_appengine_dot_v1_dot_appengine__pb2.ListInstancesRequest.FromString,
          response_serializer=google_dot_appengine_dot_v1_dot_appengine__pb2.ListInstancesResponse.SerializeToString,
      ),
      'GetInstance': grpc.unary_unary_rpc_method_handler(
          servicer.GetInstance,
          request_deserializer=google_dot_appengine_dot_v1_dot_appengine__pb2.GetInstanceRequest.FromString,
          response_serializer=google_dot_appengine_dot_v1_dot_instance__pb2.Instance.SerializeToString,
      ),
      'DeleteInstance': grpc.unary_unary_rpc_method_handler(
          servicer.DeleteInstance,
          request_deserializer=google_dot_appengine_dot_v1_dot_appengine__pb2.DeleteInstanceRequest.FromString,
          response_serializer=google_dot_longrunning_dot_operations__pb2.Operation.SerializeToString,
      ),
      'DebugInstance': grpc.unary_unary_rpc_method_handler(
          servicer.DebugInstance,
          request_deserializer=google_dot_appengine_dot_v1_dot_appengine__pb2.DebugInstanceRequest.FromString,
          response_serializer=google_dot_longrunning_dot_operations__pb2.Operation.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'google.appengine.v1.Instances', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))


class VersionsStub(object):
  """Manages versions of a service.
  """

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.ListVersions = channel.unary_unary(
        '/google.appengine.v1.Versions/ListVersions',
        request_serializer=google_dot_appengine_dot_v1_dot_appengine__pb2.ListVersionsRequest.SerializeToString,
        response_deserializer=google_dot_appengine_dot_v1_dot_appengine__pb2.ListVersionsResponse.FromString,
        )
    self.GetVersion = channel.unary_unary(
        '/google.appengine.v1.Versions/GetVersion',
        request_serializer=google_dot_appengine_dot_v1_dot_appengine__pb2.GetVersionRequest.SerializeToString,
        response_deserializer=google_dot_appengine_dot_v1_dot_version__pb2.Version.FromString,
        )
    self.CreateVersion = channel.unary_unary(
        '/google.appengine.v1.Versions/CreateVersion',
        request_serializer=google_dot_appengine_dot_v1_dot_appengine__pb2.CreateVersionRequest.SerializeToString,
        response_deserializer=google_dot_longrunning_dot_operations__pb2.Operation.FromString,
        )
    self.UpdateVersion = channel.unary_unary(
        '/google.appengine.v1.Versions/UpdateVersion',
        request_serializer=google_dot_appengine_dot_v1_dot_appengine__pb2.UpdateVersionRequest.SerializeToString,
        response_deserializer=google_dot_longrunning_dot_operations__pb2.Operation.FromString,
        )
    self.DeleteVersion = channel.unary_unary(
        '/google.appengine.v1.Versions/DeleteVersion',
        request_serializer=google_dot_appengine_dot_v1_dot_appengine__pb2.DeleteVersionRequest.SerializeToString,
        response_deserializer=google_dot_longrunning_dot_operations__pb2.Operation.FromString,
        )


class VersionsServicer(object):
  """Manages versions of a service.
  """

  def ListVersions(self, request, context):
    """Lists the versions of a service.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetVersion(self, request, context):
    """Gets the specified Version resource.
    By default, only a `BASIC_VIEW` will be returned.
    Specify the `FULL_VIEW` parameter to get the full resource.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def CreateVersion(self, request, context):
    """Deploys code and resource files to a new version.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def UpdateVersion(self, request, context):
    """Updates the specified Version resource.
    You can specify the following fields depending on the App Engine
    environment and type of scaling that the version resource uses:

    * [`serving_status`](https://cloud.google.com/appengine/docs/admin-api/reference/rest/v1/apps.services.versions#Version.FIELDS.serving_status):
    For Version resources that use basic scaling, manual scaling, or run in
    the App Engine flexible environment.
    * [`instance_class`](https://cloud.google.com/appengine/docs/admin-api/reference/rest/v1/apps.services.versions#Version.FIELDS.instance_class):
    For Version resources that run in the App Engine standard environment.
    * [`automatic_scaling.min_idle_instances`](https://cloud.google.com/appengine/docs/admin-api/reference/rest/v1/apps.services.versions#Version.FIELDS.automatic_scaling):
    For Version resources that use automatic scaling and run in the App
    Engine standard environment.
    * [`automatic_scaling.max_idle_instances`](https://cloud.google.com/appengine/docs/admin-api/reference/rest/v1/apps.services.versions#Version.FIELDS.automatic_scaling):
    For Version resources that use automatic scaling and run in the App
    Engine standard environment.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def DeleteVersion(self, request, context):
    """Deletes an existing Version resource.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_VersionsServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'ListVersions': grpc.unary_unary_rpc_method_handler(
          servicer.ListVersions,
          request_deserializer=google_dot_appengine_dot_v1_dot_appengine__pb2.ListVersionsRequest.FromString,
          response_serializer=google_dot_appengine_dot_v1_dot_appengine__pb2.ListVersionsResponse.SerializeToString,
      ),
      'GetVersion': grpc.unary_unary_rpc_method_handler(
          servicer.GetVersion,
          request_deserializer=google_dot_appengine_dot_v1_dot_appengine__pb2.GetVersionRequest.FromString,
          response_serializer=google_dot_appengine_dot_v1_dot_version__pb2.Version.SerializeToString,
      ),
      'CreateVersion': grpc.unary_unary_rpc_method_handler(
          servicer.CreateVersion,
          request_deserializer=google_dot_appengine_dot_v1_dot_appengine__pb2.CreateVersionRequest.FromString,
          response_serializer=google_dot_longrunning_dot_operations__pb2.Operation.SerializeToString,
      ),
      'UpdateVersion': grpc.unary_unary_rpc_method_handler(
          servicer.UpdateVersion,
          request_deserializer=google_dot_appengine_dot_v1_dot_appengine__pb2.UpdateVersionRequest.FromString,
          response_serializer=google_dot_longrunning_dot_operations__pb2.Operation.SerializeToString,
      ),
      'DeleteVersion': grpc.unary_unary_rpc_method_handler(
          servicer.DeleteVersion,
          request_deserializer=google_dot_appengine_dot_v1_dot_appengine__pb2.DeleteVersionRequest.FromString,
          response_serializer=google_dot_longrunning_dot_operations__pb2.Operation.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'google.appengine.v1.Versions', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))


class ServicesStub(object):
  """Manages services of an application.
  """

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.ListServices = channel.unary_unary(
        '/google.appengine.v1.Services/ListServices',
        request_serializer=google_dot_appengine_dot_v1_dot_appengine__pb2.ListServicesRequest.SerializeToString,
        response_deserializer=google_dot_appengine_dot_v1_dot_appengine__pb2.ListServicesResponse.FromString,
        )
    self.GetService = channel.unary_unary(
        '/google.appengine.v1.Services/GetService',
        request_serializer=google_dot_appengine_dot_v1_dot_appengine__pb2.GetServiceRequest.SerializeToString,
        response_deserializer=google_dot_appengine_dot_v1_dot_service__pb2.Service.FromString,
        )
    self.UpdateService = channel.unary_unary(
        '/google.appengine.v1.Services/UpdateService',
        request_serializer=google_dot_appengine_dot_v1_dot_appengine__pb2.UpdateServiceRequest.SerializeToString,
        response_deserializer=google_dot_longrunning_dot_operations__pb2.Operation.FromString,
        )
    self.DeleteService = channel.unary_unary(
        '/google.appengine.v1.Services/DeleteService',
        request_serializer=google_dot_appengine_dot_v1_dot_appengine__pb2.DeleteServiceRequest.SerializeToString,
        response_deserializer=google_dot_longrunning_dot_operations__pb2.Operation.FromString,
        )


class ServicesServicer(object):
  """Manages services of an application.
  """

  def ListServices(self, request, context):
    """Lists all the services in the application.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetService(self, request, context):
    """Gets the current configuration of the specified service.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def UpdateService(self, request, context):
    """Updates the configuration of the specified service.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def DeleteService(self, request, context):
    """Deletes the specified service and all enclosed versions.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_ServicesServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'ListServices': grpc.unary_unary_rpc_method_handler(
          servicer.ListServices,
          request_deserializer=google_dot_appengine_dot_v1_dot_appengine__pb2.ListServicesRequest.FromString,
          response_serializer=google_dot_appengine_dot_v1_dot_appengine__pb2.ListServicesResponse.SerializeToString,
      ),
      'GetService': grpc.unary_unary_rpc_method_handler(
          servicer.GetService,
          request_deserializer=google_dot_appengine_dot_v1_dot_appengine__pb2.GetServiceRequest.FromString,
          response_serializer=google_dot_appengine_dot_v1_dot_service__pb2.Service.SerializeToString,
      ),
      'UpdateService': grpc.unary_unary_rpc_method_handler(
          servicer.UpdateService,
          request_deserializer=google_dot_appengine_dot_v1_dot_appengine__pb2.UpdateServiceRequest.FromString,
          response_serializer=google_dot_longrunning_dot_operations__pb2.Operation.SerializeToString,
      ),
      'DeleteService': grpc.unary_unary_rpc_method_handler(
          servicer.DeleteService,
          request_deserializer=google_dot_appengine_dot_v1_dot_appengine__pb2.DeleteServiceRequest.FromString,
          response_serializer=google_dot_longrunning_dot_operations__pb2.Operation.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'google.appengine.v1.Services', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))


class ApplicationsStub(object):
  """Manages App Engine applications.
  """

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.GetApplication = channel.unary_unary(
        '/google.appengine.v1.Applications/GetApplication',
        request_serializer=google_dot_appengine_dot_v1_dot_appengine__pb2.GetApplicationRequest.SerializeToString,
        response_deserializer=google_dot_appengine_dot_v1_dot_application__pb2.Application.FromString,
        )
    self.RepairApplication = channel.unary_unary(
        '/google.appengine.v1.Applications/RepairApplication',
        request_serializer=google_dot_appengine_dot_v1_dot_appengine__pb2.RepairApplicationRequest.SerializeToString,
        response_deserializer=google_dot_longrunning_dot_operations__pb2.Operation.FromString,
        )


class ApplicationsServicer(object):
  """Manages App Engine applications.
  """

  def GetApplication(self, request, context):
    """Gets information about an application.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def RepairApplication(self, request, context):
    """Recreates the required App Engine features for the application in your
    project, for example a Cloud Storage bucket or App Engine service account.
    Use this method if you receive an error message about a missing feature,
    for example "*Error retrieving the App Engine service account*".
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_ApplicationsServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'GetApplication': grpc.unary_unary_rpc_method_handler(
          servicer.GetApplication,
          request_deserializer=google_dot_appengine_dot_v1_dot_appengine__pb2.GetApplicationRequest.FromString,
          response_serializer=google_dot_appengine_dot_v1_dot_application__pb2.Application.SerializeToString,
      ),
      'RepairApplication': grpc.unary_unary_rpc_method_handler(
          servicer.RepairApplication,
          request_deserializer=google_dot_appengine_dot_v1_dot_appengine__pb2.RepairApplicationRequest.FromString,
          response_serializer=google_dot_longrunning_dot_operations__pb2.Operation.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'google.appengine.v1.Applications', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
