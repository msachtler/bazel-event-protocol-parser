// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/bigtable/admin/cluster/v1/bigtable_cluster_service_messages.proto

#ifndef PROTOBUF_google_2fbigtable_2fadmin_2fcluster_2fv1_2fbigtable_5fcluster_5fservice_5fmessages_2eproto__INCLUDED
#define PROTOBUF_google_2fbigtable_2fadmin_2fcluster_2fv1_2fbigtable_5fcluster_5fservice_5fmessages_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3003000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3003002 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "google/bigtable/admin/cluster/v1/bigtable_cluster_data.pb.h"
#include <google/protobuf/timestamp.pb.h>
// @@protoc_insertion_point(includes)
namespace google {
namespace bigtable {
namespace admin {
namespace cluster {
namespace v1 {
class Cluster;
class ClusterDefaultTypeInternal;
extern ClusterDefaultTypeInternal _Cluster_default_instance_;
class CreateClusterMetadata;
class CreateClusterMetadataDefaultTypeInternal;
extern CreateClusterMetadataDefaultTypeInternal _CreateClusterMetadata_default_instance_;
class CreateClusterRequest;
class CreateClusterRequestDefaultTypeInternal;
extern CreateClusterRequestDefaultTypeInternal _CreateClusterRequest_default_instance_;
class DeleteClusterRequest;
class DeleteClusterRequestDefaultTypeInternal;
extern DeleteClusterRequestDefaultTypeInternal _DeleteClusterRequest_default_instance_;
class GetClusterRequest;
class GetClusterRequestDefaultTypeInternal;
extern GetClusterRequestDefaultTypeInternal _GetClusterRequest_default_instance_;
class ListClustersRequest;
class ListClustersRequestDefaultTypeInternal;
extern ListClustersRequestDefaultTypeInternal _ListClustersRequest_default_instance_;
class ListClustersResponse;
class ListClustersResponseDefaultTypeInternal;
extern ListClustersResponseDefaultTypeInternal _ListClustersResponse_default_instance_;
class ListZonesRequest;
class ListZonesRequestDefaultTypeInternal;
extern ListZonesRequestDefaultTypeInternal _ListZonesRequest_default_instance_;
class ListZonesResponse;
class ListZonesResponseDefaultTypeInternal;
extern ListZonesResponseDefaultTypeInternal _ListZonesResponse_default_instance_;
class UndeleteClusterMetadata;
class UndeleteClusterMetadataDefaultTypeInternal;
extern UndeleteClusterMetadataDefaultTypeInternal _UndeleteClusterMetadata_default_instance_;
class UndeleteClusterRequest;
class UndeleteClusterRequestDefaultTypeInternal;
extern UndeleteClusterRequestDefaultTypeInternal _UndeleteClusterRequest_default_instance_;
class UpdateClusterMetadata;
class UpdateClusterMetadataDefaultTypeInternal;
extern UpdateClusterMetadataDefaultTypeInternal _UpdateClusterMetadata_default_instance_;
class V2OperationMetadata;
class V2OperationMetadataDefaultTypeInternal;
extern V2OperationMetadataDefaultTypeInternal _V2OperationMetadata_default_instance_;
class Zone;
class ZoneDefaultTypeInternal;
extern ZoneDefaultTypeInternal _Zone_default_instance_;
}  // namespace v1
}  // namespace cluster
}  // namespace admin
}  // namespace bigtable
namespace protobuf {
class Timestamp;
class TimestampDefaultTypeInternal;
extern TimestampDefaultTypeInternal _Timestamp_default_instance_;
}  // namespace protobuf
}  // namespace google

namespace google {
namespace bigtable {
namespace admin {
namespace cluster {
namespace v1 {

namespace protobuf_google_2fbigtable_2fadmin_2fcluster_2fv1_2fbigtable_5fcluster_5fservice_5fmessages_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_google_2fbigtable_2fadmin_2fcluster_2fv1_2fbigtable_5fcluster_5fservice_5fmessages_2eproto

// ===================================================================

class ListZonesRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.bigtable.admin.cluster.v1.ListZonesRequest) */ {
 public:
  ListZonesRequest();
  virtual ~ListZonesRequest();

  ListZonesRequest(const ListZonesRequest& from);

  inline ListZonesRequest& operator=(const ListZonesRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ListZonesRequest& default_instance();

  static inline const ListZonesRequest* internal_default_instance() {
    return reinterpret_cast<const ListZonesRequest*>(
               &_ListZonesRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(ListZonesRequest* other);

  // implements Message ----------------------------------------------

  inline ListZonesRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  ListZonesRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ListZonesRequest& from);
  void MergeFrom(const ListZonesRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ListZonesRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:google.bigtable.admin.cluster.v1.ListZonesRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  mutable int _cached_size_;
  friend struct protobuf_google_2fbigtable_2fadmin_2fcluster_2fv1_2fbigtable_5fcluster_5fservice_5fmessages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListZonesResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.bigtable.admin.cluster.v1.ListZonesResponse) */ {
 public:
  ListZonesResponse();
  virtual ~ListZonesResponse();

  ListZonesResponse(const ListZonesResponse& from);

  inline ListZonesResponse& operator=(const ListZonesResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ListZonesResponse& default_instance();

  static inline const ListZonesResponse* internal_default_instance() {
    return reinterpret_cast<const ListZonesResponse*>(
               &_ListZonesResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(ListZonesResponse* other);

  // implements Message ----------------------------------------------

  inline ListZonesResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  ListZonesResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ListZonesResponse& from);
  void MergeFrom(const ListZonesResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ListZonesResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .google.bigtable.admin.cluster.v1.Zone zones = 1;
  int zones_size() const;
  void clear_zones();
  static const int kZonesFieldNumber = 1;
  const ::google::bigtable::admin::cluster::v1::Zone& zones(int index) const;
  ::google::bigtable::admin::cluster::v1::Zone* mutable_zones(int index);
  ::google::bigtable::admin::cluster::v1::Zone* add_zones();
  ::google::protobuf::RepeatedPtrField< ::google::bigtable::admin::cluster::v1::Zone >*
      mutable_zones();
  const ::google::protobuf::RepeatedPtrField< ::google::bigtable::admin::cluster::v1::Zone >&
      zones() const;

  // @@protoc_insertion_point(class_scope:google.bigtable.admin.cluster.v1.ListZonesResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::bigtable::admin::cluster::v1::Zone > zones_;
  mutable int _cached_size_;
  friend struct protobuf_google_2fbigtable_2fadmin_2fcluster_2fv1_2fbigtable_5fcluster_5fservice_5fmessages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetClusterRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.bigtable.admin.cluster.v1.GetClusterRequest) */ {
 public:
  GetClusterRequest();
  virtual ~GetClusterRequest();

  GetClusterRequest(const GetClusterRequest& from);

  inline GetClusterRequest& operator=(const GetClusterRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetClusterRequest& default_instance();

  static inline const GetClusterRequest* internal_default_instance() {
    return reinterpret_cast<const GetClusterRequest*>(
               &_GetClusterRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(GetClusterRequest* other);

  // implements Message ----------------------------------------------

  inline GetClusterRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  GetClusterRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetClusterRequest& from);
  void MergeFrom(const GetClusterRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetClusterRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:google.bigtable.admin.cluster.v1.GetClusterRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  mutable int _cached_size_;
  friend struct protobuf_google_2fbigtable_2fadmin_2fcluster_2fv1_2fbigtable_5fcluster_5fservice_5fmessages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListClustersRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.bigtable.admin.cluster.v1.ListClustersRequest) */ {
 public:
  ListClustersRequest();
  virtual ~ListClustersRequest();

  ListClustersRequest(const ListClustersRequest& from);

  inline ListClustersRequest& operator=(const ListClustersRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ListClustersRequest& default_instance();

  static inline const ListClustersRequest* internal_default_instance() {
    return reinterpret_cast<const ListClustersRequest*>(
               &_ListClustersRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(ListClustersRequest* other);

  // implements Message ----------------------------------------------

  inline ListClustersRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  ListClustersRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ListClustersRequest& from);
  void MergeFrom(const ListClustersRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ListClustersRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:google.bigtable.admin.cluster.v1.ListClustersRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  mutable int _cached_size_;
  friend struct protobuf_google_2fbigtable_2fadmin_2fcluster_2fv1_2fbigtable_5fcluster_5fservice_5fmessages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListClustersResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.bigtable.admin.cluster.v1.ListClustersResponse) */ {
 public:
  ListClustersResponse();
  virtual ~ListClustersResponse();

  ListClustersResponse(const ListClustersResponse& from);

  inline ListClustersResponse& operator=(const ListClustersResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ListClustersResponse& default_instance();

  static inline const ListClustersResponse* internal_default_instance() {
    return reinterpret_cast<const ListClustersResponse*>(
               &_ListClustersResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(ListClustersResponse* other);

  // implements Message ----------------------------------------------

  inline ListClustersResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  ListClustersResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ListClustersResponse& from);
  void MergeFrom(const ListClustersResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ListClustersResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .google.bigtable.admin.cluster.v1.Cluster clusters = 1;
  int clusters_size() const;
  void clear_clusters();
  static const int kClustersFieldNumber = 1;
  const ::google::bigtable::admin::cluster::v1::Cluster& clusters(int index) const;
  ::google::bigtable::admin::cluster::v1::Cluster* mutable_clusters(int index);
  ::google::bigtable::admin::cluster::v1::Cluster* add_clusters();
  ::google::protobuf::RepeatedPtrField< ::google::bigtable::admin::cluster::v1::Cluster >*
      mutable_clusters();
  const ::google::protobuf::RepeatedPtrField< ::google::bigtable::admin::cluster::v1::Cluster >&
      clusters() const;

  // repeated .google.bigtable.admin.cluster.v1.Zone failed_zones = 2;
  int failed_zones_size() const;
  void clear_failed_zones();
  static const int kFailedZonesFieldNumber = 2;
  const ::google::bigtable::admin::cluster::v1::Zone& failed_zones(int index) const;
  ::google::bigtable::admin::cluster::v1::Zone* mutable_failed_zones(int index);
  ::google::bigtable::admin::cluster::v1::Zone* add_failed_zones();
  ::google::protobuf::RepeatedPtrField< ::google::bigtable::admin::cluster::v1::Zone >*
      mutable_failed_zones();
  const ::google::protobuf::RepeatedPtrField< ::google::bigtable::admin::cluster::v1::Zone >&
      failed_zones() const;

  // @@protoc_insertion_point(class_scope:google.bigtable.admin.cluster.v1.ListClustersResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::bigtable::admin::cluster::v1::Cluster > clusters_;
  ::google::protobuf::RepeatedPtrField< ::google::bigtable::admin::cluster::v1::Zone > failed_zones_;
  mutable int _cached_size_;
  friend struct protobuf_google_2fbigtable_2fadmin_2fcluster_2fv1_2fbigtable_5fcluster_5fservice_5fmessages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CreateClusterRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.bigtable.admin.cluster.v1.CreateClusterRequest) */ {
 public:
  CreateClusterRequest();
  virtual ~CreateClusterRequest();

  CreateClusterRequest(const CreateClusterRequest& from);

  inline CreateClusterRequest& operator=(const CreateClusterRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CreateClusterRequest& default_instance();

  static inline const CreateClusterRequest* internal_default_instance() {
    return reinterpret_cast<const CreateClusterRequest*>(
               &_CreateClusterRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void Swap(CreateClusterRequest* other);

  // implements Message ----------------------------------------------

  inline CreateClusterRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  CreateClusterRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CreateClusterRequest& from);
  void MergeFrom(const CreateClusterRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CreateClusterRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // string cluster_id = 2;
  void clear_cluster_id();
  static const int kClusterIdFieldNumber = 2;
  const ::std::string& cluster_id() const;
  void set_cluster_id(const ::std::string& value);
  #if LANG_CXX11
  void set_cluster_id(::std::string&& value);
  #endif
  void set_cluster_id(const char* value);
  void set_cluster_id(const char* value, size_t size);
  ::std::string* mutable_cluster_id();
  ::std::string* release_cluster_id();
  void set_allocated_cluster_id(::std::string* cluster_id);

  // .google.bigtable.admin.cluster.v1.Cluster cluster = 3;
  bool has_cluster() const;
  void clear_cluster();
  static const int kClusterFieldNumber = 3;
  const ::google::bigtable::admin::cluster::v1::Cluster& cluster() const;
  ::google::bigtable::admin::cluster::v1::Cluster* mutable_cluster();
  ::google::bigtable::admin::cluster::v1::Cluster* release_cluster();
  void set_allocated_cluster(::google::bigtable::admin::cluster::v1::Cluster* cluster);

  // @@protoc_insertion_point(class_scope:google.bigtable.admin.cluster.v1.CreateClusterRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr cluster_id_;
  ::google::bigtable::admin::cluster::v1::Cluster* cluster_;
  mutable int _cached_size_;
  friend struct protobuf_google_2fbigtable_2fadmin_2fcluster_2fv1_2fbigtable_5fcluster_5fservice_5fmessages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CreateClusterMetadata : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.bigtable.admin.cluster.v1.CreateClusterMetadata) */ {
 public:
  CreateClusterMetadata();
  virtual ~CreateClusterMetadata();

  CreateClusterMetadata(const CreateClusterMetadata& from);

  inline CreateClusterMetadata& operator=(const CreateClusterMetadata& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CreateClusterMetadata& default_instance();

  static inline const CreateClusterMetadata* internal_default_instance() {
    return reinterpret_cast<const CreateClusterMetadata*>(
               &_CreateClusterMetadata_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    6;

  void Swap(CreateClusterMetadata* other);

  // implements Message ----------------------------------------------

  inline CreateClusterMetadata* New() const PROTOBUF_FINAL { return New(NULL); }

  CreateClusterMetadata* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CreateClusterMetadata& from);
  void MergeFrom(const CreateClusterMetadata& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CreateClusterMetadata* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .google.bigtable.admin.cluster.v1.CreateClusterRequest original_request = 1;
  bool has_original_request() const;
  void clear_original_request();
  static const int kOriginalRequestFieldNumber = 1;
  const ::google::bigtable::admin::cluster::v1::CreateClusterRequest& original_request() const;
  ::google::bigtable::admin::cluster::v1::CreateClusterRequest* mutable_original_request();
  ::google::bigtable::admin::cluster::v1::CreateClusterRequest* release_original_request();
  void set_allocated_original_request(::google::bigtable::admin::cluster::v1::CreateClusterRequest* original_request);

  // .google.protobuf.Timestamp request_time = 2;
  bool has_request_time() const;
  void clear_request_time();
  static const int kRequestTimeFieldNumber = 2;
  const ::google::protobuf::Timestamp& request_time() const;
  ::google::protobuf::Timestamp* mutable_request_time();
  ::google::protobuf::Timestamp* release_request_time();
  void set_allocated_request_time(::google::protobuf::Timestamp* request_time);

  // .google.protobuf.Timestamp finish_time = 3;
  bool has_finish_time() const;
  void clear_finish_time();
  static const int kFinishTimeFieldNumber = 3;
  const ::google::protobuf::Timestamp& finish_time() const;
  ::google::protobuf::Timestamp* mutable_finish_time();
  ::google::protobuf::Timestamp* release_finish_time();
  void set_allocated_finish_time(::google::protobuf::Timestamp* finish_time);

  // @@protoc_insertion_point(class_scope:google.bigtable.admin.cluster.v1.CreateClusterMetadata)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::bigtable::admin::cluster::v1::CreateClusterRequest* original_request_;
  ::google::protobuf::Timestamp* request_time_;
  ::google::protobuf::Timestamp* finish_time_;
  mutable int _cached_size_;
  friend struct protobuf_google_2fbigtable_2fadmin_2fcluster_2fv1_2fbigtable_5fcluster_5fservice_5fmessages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UpdateClusterMetadata : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.bigtable.admin.cluster.v1.UpdateClusterMetadata) */ {
 public:
  UpdateClusterMetadata();
  virtual ~UpdateClusterMetadata();

  UpdateClusterMetadata(const UpdateClusterMetadata& from);

  inline UpdateClusterMetadata& operator=(const UpdateClusterMetadata& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UpdateClusterMetadata& default_instance();

  static inline const UpdateClusterMetadata* internal_default_instance() {
    return reinterpret_cast<const UpdateClusterMetadata*>(
               &_UpdateClusterMetadata_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    7;

  void Swap(UpdateClusterMetadata* other);

  // implements Message ----------------------------------------------

  inline UpdateClusterMetadata* New() const PROTOBUF_FINAL { return New(NULL); }

  UpdateClusterMetadata* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const UpdateClusterMetadata& from);
  void MergeFrom(const UpdateClusterMetadata& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(UpdateClusterMetadata* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .google.bigtable.admin.cluster.v1.Cluster original_request = 1;
  bool has_original_request() const;
  void clear_original_request();
  static const int kOriginalRequestFieldNumber = 1;
  const ::google::bigtable::admin::cluster::v1::Cluster& original_request() const;
  ::google::bigtable::admin::cluster::v1::Cluster* mutable_original_request();
  ::google::bigtable::admin::cluster::v1::Cluster* release_original_request();
  void set_allocated_original_request(::google::bigtable::admin::cluster::v1::Cluster* original_request);

  // .google.protobuf.Timestamp request_time = 2;
  bool has_request_time() const;
  void clear_request_time();
  static const int kRequestTimeFieldNumber = 2;
  const ::google::protobuf::Timestamp& request_time() const;
  ::google::protobuf::Timestamp* mutable_request_time();
  ::google::protobuf::Timestamp* release_request_time();
  void set_allocated_request_time(::google::protobuf::Timestamp* request_time);

  // .google.protobuf.Timestamp cancel_time = 3;
  bool has_cancel_time() const;
  void clear_cancel_time();
  static const int kCancelTimeFieldNumber = 3;
  const ::google::protobuf::Timestamp& cancel_time() const;
  ::google::protobuf::Timestamp* mutable_cancel_time();
  ::google::protobuf::Timestamp* release_cancel_time();
  void set_allocated_cancel_time(::google::protobuf::Timestamp* cancel_time);

  // .google.protobuf.Timestamp finish_time = 4;
  bool has_finish_time() const;
  void clear_finish_time();
  static const int kFinishTimeFieldNumber = 4;
  const ::google::protobuf::Timestamp& finish_time() const;
  ::google::protobuf::Timestamp* mutable_finish_time();
  ::google::protobuf::Timestamp* release_finish_time();
  void set_allocated_finish_time(::google::protobuf::Timestamp* finish_time);

  // @@protoc_insertion_point(class_scope:google.bigtable.admin.cluster.v1.UpdateClusterMetadata)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::bigtable::admin::cluster::v1::Cluster* original_request_;
  ::google::protobuf::Timestamp* request_time_;
  ::google::protobuf::Timestamp* cancel_time_;
  ::google::protobuf::Timestamp* finish_time_;
  mutable int _cached_size_;
  friend struct protobuf_google_2fbigtable_2fadmin_2fcluster_2fv1_2fbigtable_5fcluster_5fservice_5fmessages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DeleteClusterRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.bigtable.admin.cluster.v1.DeleteClusterRequest) */ {
 public:
  DeleteClusterRequest();
  virtual ~DeleteClusterRequest();

  DeleteClusterRequest(const DeleteClusterRequest& from);

  inline DeleteClusterRequest& operator=(const DeleteClusterRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DeleteClusterRequest& default_instance();

  static inline const DeleteClusterRequest* internal_default_instance() {
    return reinterpret_cast<const DeleteClusterRequest*>(
               &_DeleteClusterRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    8;

  void Swap(DeleteClusterRequest* other);

  // implements Message ----------------------------------------------

  inline DeleteClusterRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  DeleteClusterRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DeleteClusterRequest& from);
  void MergeFrom(const DeleteClusterRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DeleteClusterRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:google.bigtable.admin.cluster.v1.DeleteClusterRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  mutable int _cached_size_;
  friend struct protobuf_google_2fbigtable_2fadmin_2fcluster_2fv1_2fbigtable_5fcluster_5fservice_5fmessages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UndeleteClusterRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.bigtable.admin.cluster.v1.UndeleteClusterRequest) */ {
 public:
  UndeleteClusterRequest();
  virtual ~UndeleteClusterRequest();

  UndeleteClusterRequest(const UndeleteClusterRequest& from);

  inline UndeleteClusterRequest& operator=(const UndeleteClusterRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UndeleteClusterRequest& default_instance();

  static inline const UndeleteClusterRequest* internal_default_instance() {
    return reinterpret_cast<const UndeleteClusterRequest*>(
               &_UndeleteClusterRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    9;

  void Swap(UndeleteClusterRequest* other);

  // implements Message ----------------------------------------------

  inline UndeleteClusterRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  UndeleteClusterRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const UndeleteClusterRequest& from);
  void MergeFrom(const UndeleteClusterRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(UndeleteClusterRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:google.bigtable.admin.cluster.v1.UndeleteClusterRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  mutable int _cached_size_;
  friend struct protobuf_google_2fbigtable_2fadmin_2fcluster_2fv1_2fbigtable_5fcluster_5fservice_5fmessages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UndeleteClusterMetadata : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.bigtable.admin.cluster.v1.UndeleteClusterMetadata) */ {
 public:
  UndeleteClusterMetadata();
  virtual ~UndeleteClusterMetadata();

  UndeleteClusterMetadata(const UndeleteClusterMetadata& from);

  inline UndeleteClusterMetadata& operator=(const UndeleteClusterMetadata& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UndeleteClusterMetadata& default_instance();

  static inline const UndeleteClusterMetadata* internal_default_instance() {
    return reinterpret_cast<const UndeleteClusterMetadata*>(
               &_UndeleteClusterMetadata_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    10;

  void Swap(UndeleteClusterMetadata* other);

  // implements Message ----------------------------------------------

  inline UndeleteClusterMetadata* New() const PROTOBUF_FINAL { return New(NULL); }

  UndeleteClusterMetadata* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const UndeleteClusterMetadata& from);
  void MergeFrom(const UndeleteClusterMetadata& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(UndeleteClusterMetadata* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .google.protobuf.Timestamp request_time = 1;
  bool has_request_time() const;
  void clear_request_time();
  static const int kRequestTimeFieldNumber = 1;
  const ::google::protobuf::Timestamp& request_time() const;
  ::google::protobuf::Timestamp* mutable_request_time();
  ::google::protobuf::Timestamp* release_request_time();
  void set_allocated_request_time(::google::protobuf::Timestamp* request_time);

  // .google.protobuf.Timestamp finish_time = 2;
  bool has_finish_time() const;
  void clear_finish_time();
  static const int kFinishTimeFieldNumber = 2;
  const ::google::protobuf::Timestamp& finish_time() const;
  ::google::protobuf::Timestamp* mutable_finish_time();
  ::google::protobuf::Timestamp* release_finish_time();
  void set_allocated_finish_time(::google::protobuf::Timestamp* finish_time);

  // @@protoc_insertion_point(class_scope:google.bigtable.admin.cluster.v1.UndeleteClusterMetadata)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::Timestamp* request_time_;
  ::google::protobuf::Timestamp* finish_time_;
  mutable int _cached_size_;
  friend struct protobuf_google_2fbigtable_2fadmin_2fcluster_2fv1_2fbigtable_5fcluster_5fservice_5fmessages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class V2OperationMetadata : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.bigtable.admin.cluster.v1.V2OperationMetadata) */ {
 public:
  V2OperationMetadata();
  virtual ~V2OperationMetadata();

  V2OperationMetadata(const V2OperationMetadata& from);

  inline V2OperationMetadata& operator=(const V2OperationMetadata& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const V2OperationMetadata& default_instance();

  static inline const V2OperationMetadata* internal_default_instance() {
    return reinterpret_cast<const V2OperationMetadata*>(
               &_V2OperationMetadata_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    11;

  void Swap(V2OperationMetadata* other);

  // implements Message ----------------------------------------------

  inline V2OperationMetadata* New() const PROTOBUF_FINAL { return New(NULL); }

  V2OperationMetadata* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const V2OperationMetadata& from);
  void MergeFrom(const V2OperationMetadata& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(V2OperationMetadata* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:google.bigtable.admin.cluster.v1.V2OperationMetadata)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable int _cached_size_;
  friend struct protobuf_google_2fbigtable_2fadmin_2fcluster_2fv1_2fbigtable_5fcluster_5fservice_5fmessages_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// ListZonesRequest

// string name = 1;
inline void ListZonesRequest::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ListZonesRequest::name() const {
  // @@protoc_insertion_point(field_get:google.bigtable.admin.cluster.v1.ListZonesRequest.name)
  return name_.GetNoArena();
}
inline void ListZonesRequest::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.bigtable.admin.cluster.v1.ListZonesRequest.name)
}
#if LANG_CXX11
inline void ListZonesRequest::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.bigtable.admin.cluster.v1.ListZonesRequest.name)
}
#endif
inline void ListZonesRequest::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.bigtable.admin.cluster.v1.ListZonesRequest.name)
}
inline void ListZonesRequest::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.bigtable.admin.cluster.v1.ListZonesRequest.name)
}
inline ::std::string* ListZonesRequest::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:google.bigtable.admin.cluster.v1.ListZonesRequest.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ListZonesRequest::release_name() {
  // @@protoc_insertion_point(field_release:google.bigtable.admin.cluster.v1.ListZonesRequest.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ListZonesRequest::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:google.bigtable.admin.cluster.v1.ListZonesRequest.name)
}

// -------------------------------------------------------------------

// ListZonesResponse

// repeated .google.bigtable.admin.cluster.v1.Zone zones = 1;
inline int ListZonesResponse::zones_size() const {
  return zones_.size();
}
inline void ListZonesResponse::clear_zones() {
  zones_.Clear();
}
inline const ::google::bigtable::admin::cluster::v1::Zone& ListZonesResponse::zones(int index) const {
  // @@protoc_insertion_point(field_get:google.bigtable.admin.cluster.v1.ListZonesResponse.zones)
  return zones_.Get(index);
}
inline ::google::bigtable::admin::cluster::v1::Zone* ListZonesResponse::mutable_zones(int index) {
  // @@protoc_insertion_point(field_mutable:google.bigtable.admin.cluster.v1.ListZonesResponse.zones)
  return zones_.Mutable(index);
}
inline ::google::bigtable::admin::cluster::v1::Zone* ListZonesResponse::add_zones() {
  // @@protoc_insertion_point(field_add:google.bigtable.admin.cluster.v1.ListZonesResponse.zones)
  return zones_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::google::bigtable::admin::cluster::v1::Zone >*
ListZonesResponse::mutable_zones() {
  // @@protoc_insertion_point(field_mutable_list:google.bigtable.admin.cluster.v1.ListZonesResponse.zones)
  return &zones_;
}
inline const ::google::protobuf::RepeatedPtrField< ::google::bigtable::admin::cluster::v1::Zone >&
ListZonesResponse::zones() const {
  // @@protoc_insertion_point(field_list:google.bigtable.admin.cluster.v1.ListZonesResponse.zones)
  return zones_;
}

// -------------------------------------------------------------------

// GetClusterRequest

// string name = 1;
inline void GetClusterRequest::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetClusterRequest::name() const {
  // @@protoc_insertion_point(field_get:google.bigtable.admin.cluster.v1.GetClusterRequest.name)
  return name_.GetNoArena();
}
inline void GetClusterRequest::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.bigtable.admin.cluster.v1.GetClusterRequest.name)
}
#if LANG_CXX11
inline void GetClusterRequest::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.bigtable.admin.cluster.v1.GetClusterRequest.name)
}
#endif
inline void GetClusterRequest::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.bigtable.admin.cluster.v1.GetClusterRequest.name)
}
inline void GetClusterRequest::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.bigtable.admin.cluster.v1.GetClusterRequest.name)
}
inline ::std::string* GetClusterRequest::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:google.bigtable.admin.cluster.v1.GetClusterRequest.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetClusterRequest::release_name() {
  // @@protoc_insertion_point(field_release:google.bigtable.admin.cluster.v1.GetClusterRequest.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetClusterRequest::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:google.bigtable.admin.cluster.v1.GetClusterRequest.name)
}

// -------------------------------------------------------------------

// ListClustersRequest

// string name = 1;
inline void ListClustersRequest::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ListClustersRequest::name() const {
  // @@protoc_insertion_point(field_get:google.bigtable.admin.cluster.v1.ListClustersRequest.name)
  return name_.GetNoArena();
}
inline void ListClustersRequest::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.bigtable.admin.cluster.v1.ListClustersRequest.name)
}
#if LANG_CXX11
inline void ListClustersRequest::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.bigtable.admin.cluster.v1.ListClustersRequest.name)
}
#endif
inline void ListClustersRequest::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.bigtable.admin.cluster.v1.ListClustersRequest.name)
}
inline void ListClustersRequest::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.bigtable.admin.cluster.v1.ListClustersRequest.name)
}
inline ::std::string* ListClustersRequest::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:google.bigtable.admin.cluster.v1.ListClustersRequest.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ListClustersRequest::release_name() {
  // @@protoc_insertion_point(field_release:google.bigtable.admin.cluster.v1.ListClustersRequest.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ListClustersRequest::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:google.bigtable.admin.cluster.v1.ListClustersRequest.name)
}

// -------------------------------------------------------------------

// ListClustersResponse

// repeated .google.bigtable.admin.cluster.v1.Cluster clusters = 1;
inline int ListClustersResponse::clusters_size() const {
  return clusters_.size();
}
inline void ListClustersResponse::clear_clusters() {
  clusters_.Clear();
}
inline const ::google::bigtable::admin::cluster::v1::Cluster& ListClustersResponse::clusters(int index) const {
  // @@protoc_insertion_point(field_get:google.bigtable.admin.cluster.v1.ListClustersResponse.clusters)
  return clusters_.Get(index);
}
inline ::google::bigtable::admin::cluster::v1::Cluster* ListClustersResponse::mutable_clusters(int index) {
  // @@protoc_insertion_point(field_mutable:google.bigtable.admin.cluster.v1.ListClustersResponse.clusters)
  return clusters_.Mutable(index);
}
inline ::google::bigtable::admin::cluster::v1::Cluster* ListClustersResponse::add_clusters() {
  // @@protoc_insertion_point(field_add:google.bigtable.admin.cluster.v1.ListClustersResponse.clusters)
  return clusters_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::google::bigtable::admin::cluster::v1::Cluster >*
ListClustersResponse::mutable_clusters() {
  // @@protoc_insertion_point(field_mutable_list:google.bigtable.admin.cluster.v1.ListClustersResponse.clusters)
  return &clusters_;
}
inline const ::google::protobuf::RepeatedPtrField< ::google::bigtable::admin::cluster::v1::Cluster >&
ListClustersResponse::clusters() const {
  // @@protoc_insertion_point(field_list:google.bigtable.admin.cluster.v1.ListClustersResponse.clusters)
  return clusters_;
}

// repeated .google.bigtable.admin.cluster.v1.Zone failed_zones = 2;
inline int ListClustersResponse::failed_zones_size() const {
  return failed_zones_.size();
}
inline void ListClustersResponse::clear_failed_zones() {
  failed_zones_.Clear();
}
inline const ::google::bigtable::admin::cluster::v1::Zone& ListClustersResponse::failed_zones(int index) const {
  // @@protoc_insertion_point(field_get:google.bigtable.admin.cluster.v1.ListClustersResponse.failed_zones)
  return failed_zones_.Get(index);
}
inline ::google::bigtable::admin::cluster::v1::Zone* ListClustersResponse::mutable_failed_zones(int index) {
  // @@protoc_insertion_point(field_mutable:google.bigtable.admin.cluster.v1.ListClustersResponse.failed_zones)
  return failed_zones_.Mutable(index);
}
inline ::google::bigtable::admin::cluster::v1::Zone* ListClustersResponse::add_failed_zones() {
  // @@protoc_insertion_point(field_add:google.bigtable.admin.cluster.v1.ListClustersResponse.failed_zones)
  return failed_zones_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::google::bigtable::admin::cluster::v1::Zone >*
ListClustersResponse::mutable_failed_zones() {
  // @@protoc_insertion_point(field_mutable_list:google.bigtable.admin.cluster.v1.ListClustersResponse.failed_zones)
  return &failed_zones_;
}
inline const ::google::protobuf::RepeatedPtrField< ::google::bigtable::admin::cluster::v1::Zone >&
ListClustersResponse::failed_zones() const {
  // @@protoc_insertion_point(field_list:google.bigtable.admin.cluster.v1.ListClustersResponse.failed_zones)
  return failed_zones_;
}

// -------------------------------------------------------------------

// CreateClusterRequest

// string name = 1;
inline void CreateClusterRequest::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CreateClusterRequest::name() const {
  // @@protoc_insertion_point(field_get:google.bigtable.admin.cluster.v1.CreateClusterRequest.name)
  return name_.GetNoArena();
}
inline void CreateClusterRequest::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.bigtable.admin.cluster.v1.CreateClusterRequest.name)
}
#if LANG_CXX11
inline void CreateClusterRequest::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.bigtable.admin.cluster.v1.CreateClusterRequest.name)
}
#endif
inline void CreateClusterRequest::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.bigtable.admin.cluster.v1.CreateClusterRequest.name)
}
inline void CreateClusterRequest::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.bigtable.admin.cluster.v1.CreateClusterRequest.name)
}
inline ::std::string* CreateClusterRequest::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:google.bigtable.admin.cluster.v1.CreateClusterRequest.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CreateClusterRequest::release_name() {
  // @@protoc_insertion_point(field_release:google.bigtable.admin.cluster.v1.CreateClusterRequest.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CreateClusterRequest::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:google.bigtable.admin.cluster.v1.CreateClusterRequest.name)
}

// string cluster_id = 2;
inline void CreateClusterRequest::clear_cluster_id() {
  cluster_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CreateClusterRequest::cluster_id() const {
  // @@protoc_insertion_point(field_get:google.bigtable.admin.cluster.v1.CreateClusterRequest.cluster_id)
  return cluster_id_.GetNoArena();
}
inline void CreateClusterRequest::set_cluster_id(const ::std::string& value) {
  
  cluster_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.bigtable.admin.cluster.v1.CreateClusterRequest.cluster_id)
}
#if LANG_CXX11
inline void CreateClusterRequest::set_cluster_id(::std::string&& value) {
  
  cluster_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.bigtable.admin.cluster.v1.CreateClusterRequest.cluster_id)
}
#endif
inline void CreateClusterRequest::set_cluster_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  cluster_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.bigtable.admin.cluster.v1.CreateClusterRequest.cluster_id)
}
inline void CreateClusterRequest::set_cluster_id(const char* value, size_t size) {
  
  cluster_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.bigtable.admin.cluster.v1.CreateClusterRequest.cluster_id)
}
inline ::std::string* CreateClusterRequest::mutable_cluster_id() {
  
  // @@protoc_insertion_point(field_mutable:google.bigtable.admin.cluster.v1.CreateClusterRequest.cluster_id)
  return cluster_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CreateClusterRequest::release_cluster_id() {
  // @@protoc_insertion_point(field_release:google.bigtable.admin.cluster.v1.CreateClusterRequest.cluster_id)
  
  return cluster_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CreateClusterRequest::set_allocated_cluster_id(::std::string* cluster_id) {
  if (cluster_id != NULL) {
    
  } else {
    
  }
  cluster_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cluster_id);
  // @@protoc_insertion_point(field_set_allocated:google.bigtable.admin.cluster.v1.CreateClusterRequest.cluster_id)
}

// .google.bigtable.admin.cluster.v1.Cluster cluster = 3;
inline bool CreateClusterRequest::has_cluster() const {
  return this != internal_default_instance() && cluster_ != NULL;
}
inline void CreateClusterRequest::clear_cluster() {
  if (GetArenaNoVirtual() == NULL && cluster_ != NULL) delete cluster_;
  cluster_ = NULL;
}
inline const ::google::bigtable::admin::cluster::v1::Cluster& CreateClusterRequest::cluster() const {
  // @@protoc_insertion_point(field_get:google.bigtable.admin.cluster.v1.CreateClusterRequest.cluster)
  return cluster_ != NULL ? *cluster_
                         : *::google::bigtable::admin::cluster::v1::Cluster::internal_default_instance();
}
inline ::google::bigtable::admin::cluster::v1::Cluster* CreateClusterRequest::mutable_cluster() {
  
  if (cluster_ == NULL) {
    cluster_ = new ::google::bigtable::admin::cluster::v1::Cluster;
  }
  // @@protoc_insertion_point(field_mutable:google.bigtable.admin.cluster.v1.CreateClusterRequest.cluster)
  return cluster_;
}
inline ::google::bigtable::admin::cluster::v1::Cluster* CreateClusterRequest::release_cluster() {
  // @@protoc_insertion_point(field_release:google.bigtable.admin.cluster.v1.CreateClusterRequest.cluster)
  
  ::google::bigtable::admin::cluster::v1::Cluster* temp = cluster_;
  cluster_ = NULL;
  return temp;
}
inline void CreateClusterRequest::set_allocated_cluster(::google::bigtable::admin::cluster::v1::Cluster* cluster) {
  delete cluster_;
  cluster_ = cluster;
  if (cluster) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.bigtable.admin.cluster.v1.CreateClusterRequest.cluster)
}

// -------------------------------------------------------------------

// CreateClusterMetadata

// .google.bigtable.admin.cluster.v1.CreateClusterRequest original_request = 1;
inline bool CreateClusterMetadata::has_original_request() const {
  return this != internal_default_instance() && original_request_ != NULL;
}
inline void CreateClusterMetadata::clear_original_request() {
  if (GetArenaNoVirtual() == NULL && original_request_ != NULL) delete original_request_;
  original_request_ = NULL;
}
inline const ::google::bigtable::admin::cluster::v1::CreateClusterRequest& CreateClusterMetadata::original_request() const {
  // @@protoc_insertion_point(field_get:google.bigtable.admin.cluster.v1.CreateClusterMetadata.original_request)
  return original_request_ != NULL ? *original_request_
                         : *::google::bigtable::admin::cluster::v1::CreateClusterRequest::internal_default_instance();
}
inline ::google::bigtable::admin::cluster::v1::CreateClusterRequest* CreateClusterMetadata::mutable_original_request() {
  
  if (original_request_ == NULL) {
    original_request_ = new ::google::bigtable::admin::cluster::v1::CreateClusterRequest;
  }
  // @@protoc_insertion_point(field_mutable:google.bigtable.admin.cluster.v1.CreateClusterMetadata.original_request)
  return original_request_;
}
inline ::google::bigtable::admin::cluster::v1::CreateClusterRequest* CreateClusterMetadata::release_original_request() {
  // @@protoc_insertion_point(field_release:google.bigtable.admin.cluster.v1.CreateClusterMetadata.original_request)
  
  ::google::bigtable::admin::cluster::v1::CreateClusterRequest* temp = original_request_;
  original_request_ = NULL;
  return temp;
}
inline void CreateClusterMetadata::set_allocated_original_request(::google::bigtable::admin::cluster::v1::CreateClusterRequest* original_request) {
  delete original_request_;
  original_request_ = original_request;
  if (original_request) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.bigtable.admin.cluster.v1.CreateClusterMetadata.original_request)
}

// .google.protobuf.Timestamp request_time = 2;
inline bool CreateClusterMetadata::has_request_time() const {
  return this != internal_default_instance() && request_time_ != NULL;
}
inline void CreateClusterMetadata::clear_request_time() {
  if (GetArenaNoVirtual() == NULL && request_time_ != NULL) delete request_time_;
  request_time_ = NULL;
}
inline const ::google::protobuf::Timestamp& CreateClusterMetadata::request_time() const {
  // @@protoc_insertion_point(field_get:google.bigtable.admin.cluster.v1.CreateClusterMetadata.request_time)
  return request_time_ != NULL ? *request_time_
                         : *::google::protobuf::Timestamp::internal_default_instance();
}
inline ::google::protobuf::Timestamp* CreateClusterMetadata::mutable_request_time() {
  
  if (request_time_ == NULL) {
    request_time_ = new ::google::protobuf::Timestamp;
  }
  // @@protoc_insertion_point(field_mutable:google.bigtable.admin.cluster.v1.CreateClusterMetadata.request_time)
  return request_time_;
}
inline ::google::protobuf::Timestamp* CreateClusterMetadata::release_request_time() {
  // @@protoc_insertion_point(field_release:google.bigtable.admin.cluster.v1.CreateClusterMetadata.request_time)
  
  ::google::protobuf::Timestamp* temp = request_time_;
  request_time_ = NULL;
  return temp;
}
inline void CreateClusterMetadata::set_allocated_request_time(::google::protobuf::Timestamp* request_time) {
  delete request_time_;
  if (request_time != NULL && request_time->GetArena() != NULL) {
    ::google::protobuf::Timestamp* new_request_time = new ::google::protobuf::Timestamp;
    new_request_time->CopyFrom(*request_time);
    request_time = new_request_time;
  }
  request_time_ = request_time;
  if (request_time) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.bigtable.admin.cluster.v1.CreateClusterMetadata.request_time)
}

// .google.protobuf.Timestamp finish_time = 3;
inline bool CreateClusterMetadata::has_finish_time() const {
  return this != internal_default_instance() && finish_time_ != NULL;
}
inline void CreateClusterMetadata::clear_finish_time() {
  if (GetArenaNoVirtual() == NULL && finish_time_ != NULL) delete finish_time_;
  finish_time_ = NULL;
}
inline const ::google::protobuf::Timestamp& CreateClusterMetadata::finish_time() const {
  // @@protoc_insertion_point(field_get:google.bigtable.admin.cluster.v1.CreateClusterMetadata.finish_time)
  return finish_time_ != NULL ? *finish_time_
                         : *::google::protobuf::Timestamp::internal_default_instance();
}
inline ::google::protobuf::Timestamp* CreateClusterMetadata::mutable_finish_time() {
  
  if (finish_time_ == NULL) {
    finish_time_ = new ::google::protobuf::Timestamp;
  }
  // @@protoc_insertion_point(field_mutable:google.bigtable.admin.cluster.v1.CreateClusterMetadata.finish_time)
  return finish_time_;
}
inline ::google::protobuf::Timestamp* CreateClusterMetadata::release_finish_time() {
  // @@protoc_insertion_point(field_release:google.bigtable.admin.cluster.v1.CreateClusterMetadata.finish_time)
  
  ::google::protobuf::Timestamp* temp = finish_time_;
  finish_time_ = NULL;
  return temp;
}
inline void CreateClusterMetadata::set_allocated_finish_time(::google::protobuf::Timestamp* finish_time) {
  delete finish_time_;
  if (finish_time != NULL && finish_time->GetArena() != NULL) {
    ::google::protobuf::Timestamp* new_finish_time = new ::google::protobuf::Timestamp;
    new_finish_time->CopyFrom(*finish_time);
    finish_time = new_finish_time;
  }
  finish_time_ = finish_time;
  if (finish_time) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.bigtable.admin.cluster.v1.CreateClusterMetadata.finish_time)
}

// -------------------------------------------------------------------

// UpdateClusterMetadata

// .google.bigtable.admin.cluster.v1.Cluster original_request = 1;
inline bool UpdateClusterMetadata::has_original_request() const {
  return this != internal_default_instance() && original_request_ != NULL;
}
inline void UpdateClusterMetadata::clear_original_request() {
  if (GetArenaNoVirtual() == NULL && original_request_ != NULL) delete original_request_;
  original_request_ = NULL;
}
inline const ::google::bigtable::admin::cluster::v1::Cluster& UpdateClusterMetadata::original_request() const {
  // @@protoc_insertion_point(field_get:google.bigtable.admin.cluster.v1.UpdateClusterMetadata.original_request)
  return original_request_ != NULL ? *original_request_
                         : *::google::bigtable::admin::cluster::v1::Cluster::internal_default_instance();
}
inline ::google::bigtable::admin::cluster::v1::Cluster* UpdateClusterMetadata::mutable_original_request() {
  
  if (original_request_ == NULL) {
    original_request_ = new ::google::bigtable::admin::cluster::v1::Cluster;
  }
  // @@protoc_insertion_point(field_mutable:google.bigtable.admin.cluster.v1.UpdateClusterMetadata.original_request)
  return original_request_;
}
inline ::google::bigtable::admin::cluster::v1::Cluster* UpdateClusterMetadata::release_original_request() {
  // @@protoc_insertion_point(field_release:google.bigtable.admin.cluster.v1.UpdateClusterMetadata.original_request)
  
  ::google::bigtable::admin::cluster::v1::Cluster* temp = original_request_;
  original_request_ = NULL;
  return temp;
}
inline void UpdateClusterMetadata::set_allocated_original_request(::google::bigtable::admin::cluster::v1::Cluster* original_request) {
  delete original_request_;
  original_request_ = original_request;
  if (original_request) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.bigtable.admin.cluster.v1.UpdateClusterMetadata.original_request)
}

// .google.protobuf.Timestamp request_time = 2;
inline bool UpdateClusterMetadata::has_request_time() const {
  return this != internal_default_instance() && request_time_ != NULL;
}
inline void UpdateClusterMetadata::clear_request_time() {
  if (GetArenaNoVirtual() == NULL && request_time_ != NULL) delete request_time_;
  request_time_ = NULL;
}
inline const ::google::protobuf::Timestamp& UpdateClusterMetadata::request_time() const {
  // @@protoc_insertion_point(field_get:google.bigtable.admin.cluster.v1.UpdateClusterMetadata.request_time)
  return request_time_ != NULL ? *request_time_
                         : *::google::protobuf::Timestamp::internal_default_instance();
}
inline ::google::protobuf::Timestamp* UpdateClusterMetadata::mutable_request_time() {
  
  if (request_time_ == NULL) {
    request_time_ = new ::google::protobuf::Timestamp;
  }
  // @@protoc_insertion_point(field_mutable:google.bigtable.admin.cluster.v1.UpdateClusterMetadata.request_time)
  return request_time_;
}
inline ::google::protobuf::Timestamp* UpdateClusterMetadata::release_request_time() {
  // @@protoc_insertion_point(field_release:google.bigtable.admin.cluster.v1.UpdateClusterMetadata.request_time)
  
  ::google::protobuf::Timestamp* temp = request_time_;
  request_time_ = NULL;
  return temp;
}
inline void UpdateClusterMetadata::set_allocated_request_time(::google::protobuf::Timestamp* request_time) {
  delete request_time_;
  if (request_time != NULL && request_time->GetArena() != NULL) {
    ::google::protobuf::Timestamp* new_request_time = new ::google::protobuf::Timestamp;
    new_request_time->CopyFrom(*request_time);
    request_time = new_request_time;
  }
  request_time_ = request_time;
  if (request_time) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.bigtable.admin.cluster.v1.UpdateClusterMetadata.request_time)
}

// .google.protobuf.Timestamp cancel_time = 3;
inline bool UpdateClusterMetadata::has_cancel_time() const {
  return this != internal_default_instance() && cancel_time_ != NULL;
}
inline void UpdateClusterMetadata::clear_cancel_time() {
  if (GetArenaNoVirtual() == NULL && cancel_time_ != NULL) delete cancel_time_;
  cancel_time_ = NULL;
}
inline const ::google::protobuf::Timestamp& UpdateClusterMetadata::cancel_time() const {
  // @@protoc_insertion_point(field_get:google.bigtable.admin.cluster.v1.UpdateClusterMetadata.cancel_time)
  return cancel_time_ != NULL ? *cancel_time_
                         : *::google::protobuf::Timestamp::internal_default_instance();
}
inline ::google::protobuf::Timestamp* UpdateClusterMetadata::mutable_cancel_time() {
  
  if (cancel_time_ == NULL) {
    cancel_time_ = new ::google::protobuf::Timestamp;
  }
  // @@protoc_insertion_point(field_mutable:google.bigtable.admin.cluster.v1.UpdateClusterMetadata.cancel_time)
  return cancel_time_;
}
inline ::google::protobuf::Timestamp* UpdateClusterMetadata::release_cancel_time() {
  // @@protoc_insertion_point(field_release:google.bigtable.admin.cluster.v1.UpdateClusterMetadata.cancel_time)
  
  ::google::protobuf::Timestamp* temp = cancel_time_;
  cancel_time_ = NULL;
  return temp;
}
inline void UpdateClusterMetadata::set_allocated_cancel_time(::google::protobuf::Timestamp* cancel_time) {
  delete cancel_time_;
  if (cancel_time != NULL && cancel_time->GetArena() != NULL) {
    ::google::protobuf::Timestamp* new_cancel_time = new ::google::protobuf::Timestamp;
    new_cancel_time->CopyFrom(*cancel_time);
    cancel_time = new_cancel_time;
  }
  cancel_time_ = cancel_time;
  if (cancel_time) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.bigtable.admin.cluster.v1.UpdateClusterMetadata.cancel_time)
}

// .google.protobuf.Timestamp finish_time = 4;
inline bool UpdateClusterMetadata::has_finish_time() const {
  return this != internal_default_instance() && finish_time_ != NULL;
}
inline void UpdateClusterMetadata::clear_finish_time() {
  if (GetArenaNoVirtual() == NULL && finish_time_ != NULL) delete finish_time_;
  finish_time_ = NULL;
}
inline const ::google::protobuf::Timestamp& UpdateClusterMetadata::finish_time() const {
  // @@protoc_insertion_point(field_get:google.bigtable.admin.cluster.v1.UpdateClusterMetadata.finish_time)
  return finish_time_ != NULL ? *finish_time_
                         : *::google::protobuf::Timestamp::internal_default_instance();
}
inline ::google::protobuf::Timestamp* UpdateClusterMetadata::mutable_finish_time() {
  
  if (finish_time_ == NULL) {
    finish_time_ = new ::google::protobuf::Timestamp;
  }
  // @@protoc_insertion_point(field_mutable:google.bigtable.admin.cluster.v1.UpdateClusterMetadata.finish_time)
  return finish_time_;
}
inline ::google::protobuf::Timestamp* UpdateClusterMetadata::release_finish_time() {
  // @@protoc_insertion_point(field_release:google.bigtable.admin.cluster.v1.UpdateClusterMetadata.finish_time)
  
  ::google::protobuf::Timestamp* temp = finish_time_;
  finish_time_ = NULL;
  return temp;
}
inline void UpdateClusterMetadata::set_allocated_finish_time(::google::protobuf::Timestamp* finish_time) {
  delete finish_time_;
  if (finish_time != NULL && finish_time->GetArena() != NULL) {
    ::google::protobuf::Timestamp* new_finish_time = new ::google::protobuf::Timestamp;
    new_finish_time->CopyFrom(*finish_time);
    finish_time = new_finish_time;
  }
  finish_time_ = finish_time;
  if (finish_time) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.bigtable.admin.cluster.v1.UpdateClusterMetadata.finish_time)
}

// -------------------------------------------------------------------

// DeleteClusterRequest

// string name = 1;
inline void DeleteClusterRequest::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DeleteClusterRequest::name() const {
  // @@protoc_insertion_point(field_get:google.bigtable.admin.cluster.v1.DeleteClusterRequest.name)
  return name_.GetNoArena();
}
inline void DeleteClusterRequest::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.bigtable.admin.cluster.v1.DeleteClusterRequest.name)
}
#if LANG_CXX11
inline void DeleteClusterRequest::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.bigtable.admin.cluster.v1.DeleteClusterRequest.name)
}
#endif
inline void DeleteClusterRequest::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.bigtable.admin.cluster.v1.DeleteClusterRequest.name)
}
inline void DeleteClusterRequest::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.bigtable.admin.cluster.v1.DeleteClusterRequest.name)
}
inline ::std::string* DeleteClusterRequest::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:google.bigtable.admin.cluster.v1.DeleteClusterRequest.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DeleteClusterRequest::release_name() {
  // @@protoc_insertion_point(field_release:google.bigtable.admin.cluster.v1.DeleteClusterRequest.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DeleteClusterRequest::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:google.bigtable.admin.cluster.v1.DeleteClusterRequest.name)
}

// -------------------------------------------------------------------

// UndeleteClusterRequest

// string name = 1;
inline void UndeleteClusterRequest::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& UndeleteClusterRequest::name() const {
  // @@protoc_insertion_point(field_get:google.bigtable.admin.cluster.v1.UndeleteClusterRequest.name)
  return name_.GetNoArena();
}
inline void UndeleteClusterRequest::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.bigtable.admin.cluster.v1.UndeleteClusterRequest.name)
}
#if LANG_CXX11
inline void UndeleteClusterRequest::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.bigtable.admin.cluster.v1.UndeleteClusterRequest.name)
}
#endif
inline void UndeleteClusterRequest::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.bigtable.admin.cluster.v1.UndeleteClusterRequest.name)
}
inline void UndeleteClusterRequest::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.bigtable.admin.cluster.v1.UndeleteClusterRequest.name)
}
inline ::std::string* UndeleteClusterRequest::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:google.bigtable.admin.cluster.v1.UndeleteClusterRequest.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UndeleteClusterRequest::release_name() {
  // @@protoc_insertion_point(field_release:google.bigtable.admin.cluster.v1.UndeleteClusterRequest.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UndeleteClusterRequest::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:google.bigtable.admin.cluster.v1.UndeleteClusterRequest.name)
}

// -------------------------------------------------------------------

// UndeleteClusterMetadata

// .google.protobuf.Timestamp request_time = 1;
inline bool UndeleteClusterMetadata::has_request_time() const {
  return this != internal_default_instance() && request_time_ != NULL;
}
inline void UndeleteClusterMetadata::clear_request_time() {
  if (GetArenaNoVirtual() == NULL && request_time_ != NULL) delete request_time_;
  request_time_ = NULL;
}
inline const ::google::protobuf::Timestamp& UndeleteClusterMetadata::request_time() const {
  // @@protoc_insertion_point(field_get:google.bigtable.admin.cluster.v1.UndeleteClusterMetadata.request_time)
  return request_time_ != NULL ? *request_time_
                         : *::google::protobuf::Timestamp::internal_default_instance();
}
inline ::google::protobuf::Timestamp* UndeleteClusterMetadata::mutable_request_time() {
  
  if (request_time_ == NULL) {
    request_time_ = new ::google::protobuf::Timestamp;
  }
  // @@protoc_insertion_point(field_mutable:google.bigtable.admin.cluster.v1.UndeleteClusterMetadata.request_time)
  return request_time_;
}
inline ::google::protobuf::Timestamp* UndeleteClusterMetadata::release_request_time() {
  // @@protoc_insertion_point(field_release:google.bigtable.admin.cluster.v1.UndeleteClusterMetadata.request_time)
  
  ::google::protobuf::Timestamp* temp = request_time_;
  request_time_ = NULL;
  return temp;
}
inline void UndeleteClusterMetadata::set_allocated_request_time(::google::protobuf::Timestamp* request_time) {
  delete request_time_;
  if (request_time != NULL && request_time->GetArena() != NULL) {
    ::google::protobuf::Timestamp* new_request_time = new ::google::protobuf::Timestamp;
    new_request_time->CopyFrom(*request_time);
    request_time = new_request_time;
  }
  request_time_ = request_time;
  if (request_time) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.bigtable.admin.cluster.v1.UndeleteClusterMetadata.request_time)
}

// .google.protobuf.Timestamp finish_time = 2;
inline bool UndeleteClusterMetadata::has_finish_time() const {
  return this != internal_default_instance() && finish_time_ != NULL;
}
inline void UndeleteClusterMetadata::clear_finish_time() {
  if (GetArenaNoVirtual() == NULL && finish_time_ != NULL) delete finish_time_;
  finish_time_ = NULL;
}
inline const ::google::protobuf::Timestamp& UndeleteClusterMetadata::finish_time() const {
  // @@protoc_insertion_point(field_get:google.bigtable.admin.cluster.v1.UndeleteClusterMetadata.finish_time)
  return finish_time_ != NULL ? *finish_time_
                         : *::google::protobuf::Timestamp::internal_default_instance();
}
inline ::google::protobuf::Timestamp* UndeleteClusterMetadata::mutable_finish_time() {
  
  if (finish_time_ == NULL) {
    finish_time_ = new ::google::protobuf::Timestamp;
  }
  // @@protoc_insertion_point(field_mutable:google.bigtable.admin.cluster.v1.UndeleteClusterMetadata.finish_time)
  return finish_time_;
}
inline ::google::protobuf::Timestamp* UndeleteClusterMetadata::release_finish_time() {
  // @@protoc_insertion_point(field_release:google.bigtable.admin.cluster.v1.UndeleteClusterMetadata.finish_time)
  
  ::google::protobuf::Timestamp* temp = finish_time_;
  finish_time_ = NULL;
  return temp;
}
inline void UndeleteClusterMetadata::set_allocated_finish_time(::google::protobuf::Timestamp* finish_time) {
  delete finish_time_;
  if (finish_time != NULL && finish_time->GetArena() != NULL) {
    ::google::protobuf::Timestamp* new_finish_time = new ::google::protobuf::Timestamp;
    new_finish_time->CopyFrom(*finish_time);
    finish_time = new_finish_time;
  }
  finish_time_ = finish_time;
  if (finish_time) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.bigtable.admin.cluster.v1.UndeleteClusterMetadata.finish_time)
}

// -------------------------------------------------------------------

// V2OperationMetadata

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace v1
}  // namespace cluster
}  // namespace admin
}  // namespace bigtable
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_google_2fbigtable_2fadmin_2fcluster_2fv1_2fbigtable_5fcluster_5fservice_5fmessages_2eproto__INCLUDED
