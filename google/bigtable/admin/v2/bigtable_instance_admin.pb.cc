// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/bigtable/admin/v2/bigtable_instance_admin.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "google/bigtable/admin/v2/bigtable_instance_admin.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace google {
namespace bigtable {
namespace admin {
namespace v2 {
class CreateInstanceRequest_ClustersEntryDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CreateInstanceRequest::CreateInstanceRequest_ClustersEntry> {
} _CreateInstanceRequest_ClustersEntry_default_instance_;
class CreateInstanceRequestDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CreateInstanceRequest> {
} _CreateInstanceRequest_default_instance_;
class GetInstanceRequestDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<GetInstanceRequest> {
} _GetInstanceRequest_default_instance_;
class ListInstancesRequestDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ListInstancesRequest> {
} _ListInstancesRequest_default_instance_;
class ListInstancesResponseDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ListInstancesResponse> {
} _ListInstancesResponse_default_instance_;
class DeleteInstanceRequestDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<DeleteInstanceRequest> {
} _DeleteInstanceRequest_default_instance_;
class CreateClusterRequestDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CreateClusterRequest> {
} _CreateClusterRequest_default_instance_;
class GetClusterRequestDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<GetClusterRequest> {
} _GetClusterRequest_default_instance_;
class ListClustersRequestDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ListClustersRequest> {
} _ListClustersRequest_default_instance_;
class ListClustersResponseDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ListClustersResponse> {
} _ListClustersResponse_default_instance_;
class DeleteClusterRequestDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<DeleteClusterRequest> {
} _DeleteClusterRequest_default_instance_;
class CreateInstanceMetadataDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CreateInstanceMetadata> {
} _CreateInstanceMetadata_default_instance_;
class CreateClusterMetadataDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CreateClusterMetadata> {
} _CreateClusterMetadata_default_instance_;
class UpdateClusterMetadataDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<UpdateClusterMetadata> {
} _UpdateClusterMetadata_default_instance_;

namespace protobuf_google_2fbigtable_2fadmin_2fv2_2fbigtable_5finstance_5fadmin_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[14];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] = {
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateInstanceRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateInstanceRequest, parent_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateInstanceRequest, instance_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateInstanceRequest, instance_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateInstanceRequest, clusters_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetInstanceRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetInstanceRequest, name_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListInstancesRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListInstancesRequest, parent_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListInstancesRequest, page_token_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListInstancesResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListInstancesResponse, instances_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListInstancesResponse, failed_locations_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListInstancesResponse, next_page_token_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteInstanceRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteInstanceRequest, name_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateClusterRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateClusterRequest, parent_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateClusterRequest, cluster_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateClusterRequest, cluster_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetClusterRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetClusterRequest, name_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListClustersRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListClustersRequest, parent_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListClustersRequest, page_token_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListClustersResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListClustersResponse, clusters_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListClustersResponse, failed_locations_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListClustersResponse, next_page_token_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteClusterRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteClusterRequest, name_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateInstanceMetadata, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateInstanceMetadata, original_request_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateInstanceMetadata, request_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateInstanceMetadata, finish_time_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateClusterMetadata, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateClusterMetadata, original_request_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateClusterMetadata, request_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateClusterMetadata, finish_time_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateClusterMetadata, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateClusterMetadata, original_request_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateClusterMetadata, request_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateClusterMetadata, finish_time_),
};

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, -1, sizeof(CreateInstanceRequest)},
  { 9, -1, sizeof(GetInstanceRequest)},
  { 15, -1, sizeof(ListInstancesRequest)},
  { 22, -1, sizeof(ListInstancesResponse)},
  { 30, -1, sizeof(DeleteInstanceRequest)},
  { 36, -1, sizeof(CreateClusterRequest)},
  { 44, -1, sizeof(GetClusterRequest)},
  { 50, -1, sizeof(ListClustersRequest)},
  { 57, -1, sizeof(ListClustersResponse)},
  { 65, -1, sizeof(DeleteClusterRequest)},
  { 71, -1, sizeof(CreateInstanceMetadata)},
  { 79, -1, sizeof(CreateClusterMetadata)},
  { 87, -1, sizeof(UpdateClusterMetadata)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_CreateInstanceRequest_ClustersEntry_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CreateInstanceRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GetInstanceRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ListInstancesRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ListInstancesResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_DeleteInstanceRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CreateClusterRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GetClusterRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ListClustersRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ListClustersResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_DeleteClusterRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CreateInstanceMetadata_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CreateClusterMetadata_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_UpdateClusterMetadata_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "google/bigtable/admin/v2/bigtable_instance_admin.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
file_level_metadata[0].reflection = CreateInstanceRequest::CreateInstanceRequest_ClustersEntry::CreateReflection(file_level_metadata[0].descriptor, _CreateInstanceRequest_ClustersEntry_default_instance_.get_mutable());
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 14);
}

}  // namespace

void TableStruct::Shutdown() {
  _CreateInstanceRequest_default_instance_.Shutdown();
  delete file_level_metadata[1].reflection;
  _GetInstanceRequest_default_instance_.Shutdown();
  delete file_level_metadata[2].reflection;
  _ListInstancesRequest_default_instance_.Shutdown();
  delete file_level_metadata[3].reflection;
  _ListInstancesResponse_default_instance_.Shutdown();
  delete file_level_metadata[4].reflection;
  _DeleteInstanceRequest_default_instance_.Shutdown();
  delete file_level_metadata[5].reflection;
  _CreateClusterRequest_default_instance_.Shutdown();
  delete file_level_metadata[6].reflection;
  _GetClusterRequest_default_instance_.Shutdown();
  delete file_level_metadata[7].reflection;
  _ListClustersRequest_default_instance_.Shutdown();
  delete file_level_metadata[8].reflection;
  _ListClustersResponse_default_instance_.Shutdown();
  delete file_level_metadata[9].reflection;
  _DeleteClusterRequest_default_instance_.Shutdown();
  delete file_level_metadata[10].reflection;
  _CreateInstanceMetadata_default_instance_.Shutdown();
  delete file_level_metadata[11].reflection;
  _CreateClusterMetadata_default_instance_.Shutdown();
  delete file_level_metadata[12].reflection;
  _UpdateClusterMetadata_default_instance_.Shutdown();
  delete file_level_metadata[13].reflection;
  delete file_level_metadata[0].reflection;
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  ::google::api::protobuf_google_2fapi_2fannotations_2eproto::InitDefaults();
  ::google::bigtable::admin::v2::protobuf_google_2fbigtable_2fadmin_2fv2_2finstance_2eproto::InitDefaults();
  ::google::longrunning::protobuf_google_2flongrunning_2foperations_2eproto::InitDefaults();
  ::google::protobuf::protobuf_google_2fprotobuf_2fempty_2eproto::InitDefaults();
  ::google::protobuf::protobuf_google_2fprotobuf_2ftimestamp_2eproto::InitDefaults();
  _CreateInstanceRequest_ClustersEntry_default_instance_.DefaultConstruct();
  _CreateInstanceRequest_default_instance_.DefaultConstruct();
  _GetInstanceRequest_default_instance_.DefaultConstruct();
  _ListInstancesRequest_default_instance_.DefaultConstruct();
  _ListInstancesResponse_default_instance_.DefaultConstruct();
  _DeleteInstanceRequest_default_instance_.DefaultConstruct();
  _CreateClusterRequest_default_instance_.DefaultConstruct();
  _GetClusterRequest_default_instance_.DefaultConstruct();
  _ListClustersRequest_default_instance_.DefaultConstruct();
  _ListClustersResponse_default_instance_.DefaultConstruct();
  _DeleteClusterRequest_default_instance_.DefaultConstruct();
  _CreateInstanceMetadata_default_instance_.DefaultConstruct();
  _CreateClusterMetadata_default_instance_.DefaultConstruct();
  _UpdateClusterMetadata_default_instance_.DefaultConstruct();
  _CreateInstanceRequest_ClustersEntry_default_instance_.get_mutable()->set_default_instance(_CreateInstanceRequest_ClustersEntry_default_instance_.get_mutable());
  _CreateInstanceRequest_ClustersEntry_default_instance_.get_mutable()->InitAsDefaultInstance();
  _CreateInstanceRequest_default_instance_.get_mutable()->instance_ = const_cast< ::google::bigtable::admin::v2::Instance*>(
      ::google::bigtable::admin::v2::Instance::internal_default_instance());
  _CreateClusterRequest_default_instance_.get_mutable()->cluster_ = const_cast< ::google::bigtable::admin::v2::Cluster*>(
      ::google::bigtable::admin::v2::Cluster::internal_default_instance());
  _CreateInstanceMetadata_default_instance_.get_mutable()->original_request_ = const_cast< ::google::bigtable::admin::v2::CreateInstanceRequest*>(
      ::google::bigtable::admin::v2::CreateInstanceRequest::internal_default_instance());
  _CreateInstanceMetadata_default_instance_.get_mutable()->request_time_ = const_cast< ::google::protobuf::Timestamp*>(
      ::google::protobuf::Timestamp::internal_default_instance());
  _CreateInstanceMetadata_default_instance_.get_mutable()->finish_time_ = const_cast< ::google::protobuf::Timestamp*>(
      ::google::protobuf::Timestamp::internal_default_instance());
  _CreateClusterMetadata_default_instance_.get_mutable()->original_request_ = const_cast< ::google::bigtable::admin::v2::CreateClusterRequest*>(
      ::google::bigtable::admin::v2::CreateClusterRequest::internal_default_instance());
  _CreateClusterMetadata_default_instance_.get_mutable()->request_time_ = const_cast< ::google::protobuf::Timestamp*>(
      ::google::protobuf::Timestamp::internal_default_instance());
  _CreateClusterMetadata_default_instance_.get_mutable()->finish_time_ = const_cast< ::google::protobuf::Timestamp*>(
      ::google::protobuf::Timestamp::internal_default_instance());
  _UpdateClusterMetadata_default_instance_.get_mutable()->original_request_ = const_cast< ::google::bigtable::admin::v2::Cluster*>(
      ::google::bigtable::admin::v2::Cluster::internal_default_instance());
  _UpdateClusterMetadata_default_instance_.get_mutable()->request_time_ = const_cast< ::google::protobuf::Timestamp*>(
      ::google::protobuf::Timestamp::internal_default_instance());
  _UpdateClusterMetadata_default_instance_.get_mutable()->finish_time_ = const_cast< ::google::protobuf::Timestamp*>(
      ::google::protobuf::Timestamp::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n6google/bigtable/admin/v2/bigtable_inst"
      "ance_admin.proto\022\030google.bigtable.admin."
      "v2\032\034google/api/annotations.proto\032\'google"
      "/bigtable/admin/v2/instance.proto\032#googl"
      "e/longrunning/operations.proto\032\033google/p"
      "rotobuf/empty.proto\032\037google/protobuf/tim"
      "estamp.proto\"\227\002\n\025CreateInstanceRequest\022\016"
      "\n\006parent\030\001 \001(\t\022\023\n\013instance_id\030\002 \001(\t\0224\n\010i"
      "nstance\030\003 \001(\0132\".google.bigtable.admin.v2"
      ".Instance\022O\n\010clusters\030\004 \003(\0132=.google.big"
      "table.admin.v2.CreateInstanceRequest.Clu"
      "stersEntry\032R\n\rClustersEntry\022\013\n\003key\030\001 \001(\t"
      "\0220\n\005value\030\002 \001(\0132!.google.bigtable.admin."
      "v2.Cluster:\0028\001\"\"\n\022GetInstanceRequest\022\014\n\004"
      "name\030\001 \001(\t\":\n\024ListInstancesRequest\022\016\n\006pa"
      "rent\030\001 \001(\t\022\022\n\npage_token\030\002 \001(\t\"\201\001\n\025ListI"
      "nstancesResponse\0225\n\tinstances\030\001 \003(\0132\".go"
      "ogle.bigtable.admin.v2.Instance\022\030\n\020faile"
      "d_locations\030\002 \003(\t\022\027\n\017next_page_token\030\003 \001"
      "(\t\"%\n\025DeleteInstanceRequest\022\014\n\004name\030\001 \001("
      "\t\"n\n\024CreateClusterRequest\022\016\n\006parent\030\001 \001("
      "\t\022\022\n\ncluster_id\030\002 \001(\t\0222\n\007cluster\030\003 \001(\0132!"
      ".google.bigtable.admin.v2.Cluster\"!\n\021Get"
      "ClusterRequest\022\014\n\004name\030\001 \001(\t\"9\n\023ListClus"
      "tersRequest\022\016\n\006parent\030\001 \001(\t\022\022\n\npage_toke"
      "n\030\002 \001(\t\"~\n\024ListClustersResponse\0223\n\010clust"
      "ers\030\001 \003(\0132!.google.bigtable.admin.v2.Clu"
      "ster\022\030\n\020failed_locations\030\002 \003(\t\022\027\n\017next_p"
      "age_token\030\003 \001(\t\"$\n\024DeleteClusterRequest\022"
      "\014\n\004name\030\001 \001(\t\"\306\001\n\026CreateInstanceMetadata"
      "\022I\n\020original_request\030\001 \001(\0132/.google.bigt"
      "able.admin.v2.CreateInstanceRequest\0220\n\014r"
      "equest_time\030\002 \001(\0132\032.google.protobuf.Time"
      "stamp\022/\n\013finish_time\030\003 \001(\0132\032.google.prot"
      "obuf.Timestamp\"\304\001\n\025CreateClusterMetadata"
      "\022H\n\020original_request\030\001 \001(\0132..google.bigt"
      "able.admin.v2.CreateClusterRequest\0220\n\014re"
      "quest_time\030\002 \001(\0132\032.google.protobuf.Times"
      "tamp\022/\n\013finish_time\030\003 \001(\0132\032.google.proto"
      "buf.Timestamp\"\267\001\n\025UpdateClusterMetadata\022"
      ";\n\020original_request\030\001 \001(\0132!.google.bigta"
      "ble.admin.v2.Cluster\0220\n\014request_time\030\002 \001"
      "(\0132\032.google.protobuf.Timestamp\022/\n\013finish"
      "_time\030\003 \001(\0132\032.google.protobuf.Timestamp2"
      "\333\013\n\025BigtableInstanceAdmin\022\216\001\n\016CreateInst"
      "ance\022/.google.bigtable.admin.v2.CreateIn"
      "stanceRequest\032\035.google.longrunning.Opera"
      "tion\",\202\323\344\223\002&\"!/v2/{parent=projects/*}/in"
      "stances:\001*\022\212\001\n\013GetInstance\022,.google.bigt"
      "able.admin.v2.GetInstanceRequest\032\".googl"
      "e.bigtable.admin.v2.Instance\")\202\323\344\223\002#\022!/v"
      "2/{name=projects/*/instances/*}\022\233\001\n\rList"
      "Instances\022..google.bigtable.admin.v2.Lis"
      "tInstancesRequest\032/.google.bigtable.admi"
      "n.v2.ListInstancesResponse\")\202\323\344\223\002#\022!/v2/"
      "{parent=projects/*}/instances\022\206\001\n\016Update"
      "Instance\022\".google.bigtable.admin.v2.Inst"
      "ance\032\".google.bigtable.admin.v2.Instance"
      "\",\202\323\344\223\002&\032!/v2/{name=projects/*/instances"
      "/*}:\001*\022\204\001\n\016DeleteInstance\022/.google.bigta"
      "ble.admin.v2.DeleteInstanceRequest\032\026.goo"
      "gle.protobuf.Empty\")\202\323\344\223\002#*!/v2/{name=pr"
      "ojects/*/instances/*}\022\235\001\n\rCreateCluster\022"
      "..google.bigtable.admin.v2.CreateCluster"
      "Request\032\035.google.longrunning.Operation\"="
      "\202\323\344\223\0027\",/v2/{parent=projects/*/instances"
      "/*}/clusters:\007cluster\022\222\001\n\nGetCluster\022+.g"
      "oogle.bigtable.admin.v2.GetClusterReques"
      "t\032!.google.bigtable.admin.v2.Cluster\"4\202\323"
      "\344\223\002.\022,/v2/{name=projects/*/instances/*/c"
      "lusters/*}\022\243\001\n\014ListClusters\022-.google.big"
      "table.admin.v2.ListClustersRequest\032..goo"
      "gle.bigtable.admin.v2.ListClustersRespon"
      "se\"4\202\323\344\223\002.\022,/v2/{parent=projects/*/insta"
      "nces/*}/clusters\022\212\001\n\rUpdateCluster\022!.goo"
      "gle.bigtable.admin.v2.Cluster\032\035.google.l"
      "ongrunning.Operation\"7\202\323\344\223\0021\032,/v2/{name="
      "projects/*/instances/*/clusters/*}:\001*\022\215\001"
      "\n\rDeleteCluster\022..google.bigtable.admin."
      "v2.DeleteClusterRequest\032\026.google.protobu"
      "f.Empty\"4\202\323\344\223\002.*,/v2/{name=projects/*/in"
      "stances/*/clusters/*}B\234\001\n\034com.google.big"
      "table.admin.v2B\032BigtableInstanceAdminPro"
      "toP\001Z=google.golang.org/genproto/googlea"
      "pis/bigtable/admin/v2;admin\252\002\036Google.Clo"
      "ud.Bigtable.Admin.V2b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 3428);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "google/bigtable/admin/v2/bigtable_instance_admin.proto", &protobuf_RegisterTypes);
  ::google::api::protobuf_google_2fapi_2fannotations_2eproto::AddDescriptors();
  ::google::bigtable::admin::v2::protobuf_google_2fbigtable_2fadmin_2fv2_2finstance_2eproto::AddDescriptors();
  ::google::longrunning::protobuf_google_2flongrunning_2foperations_2eproto::AddDescriptors();
  ::google::protobuf::protobuf_google_2fprotobuf_2fempty_2eproto::AddDescriptors();
  ::google::protobuf::protobuf_google_2fprotobuf_2ftimestamp_2eproto::AddDescriptors();
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_google_2fbigtable_2fadmin_2fv2_2fbigtable_5finstance_5fadmin_2eproto


// ===================================================================

CreateInstanceRequest::CreateInstanceRequest_ClustersEntry::CreateInstanceRequest_ClustersEntry() {}
CreateInstanceRequest::CreateInstanceRequest_ClustersEntry::CreateInstanceRequest_ClustersEntry(::google::protobuf::Arena* arena) : SuperType(arena) {}
::google::protobuf::Metadata CreateInstanceRequest::CreateInstanceRequest_ClustersEntry::GetMetadata() const {
  protobuf_google_2fbigtable_2fadmin_2fv2_2fbigtable_5finstance_5fadmin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fbigtable_2fadmin_2fv2_2fbigtable_5finstance_5fadmin_2eproto::file_level_metadata[0];
}
void CreateInstanceRequest::CreateInstanceRequest_ClustersEntry::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}
void CreateInstanceRequest::CreateInstanceRequest_ClustersEntry::MergeFrom(const CreateInstanceRequest_ClustersEntry& other) {
  MergeFromInternal(other);
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CreateInstanceRequest::kParentFieldNumber;
const int CreateInstanceRequest::kInstanceIdFieldNumber;
const int CreateInstanceRequest::kInstanceFieldNumber;
const int CreateInstanceRequest::kClustersFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CreateInstanceRequest::CreateInstanceRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_google_2fbigtable_2fadmin_2fv2_2fbigtable_5finstance_5fadmin_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.bigtable.admin.v2.CreateInstanceRequest)
}
CreateInstanceRequest::CreateInstanceRequest(const CreateInstanceRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clusters_.MergeFrom(from.clusters_);
  parent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.parent().size() > 0) {
    parent_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.parent_);
  }
  instance_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.instance_id().size() > 0) {
    instance_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.instance_id_);
  }
  if (from.has_instance()) {
    instance_ = new ::google::bigtable::admin::v2::Instance(*from.instance_);
  } else {
    instance_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.bigtable.admin.v2.CreateInstanceRequest)
}

void CreateInstanceRequest::SharedCtor() {
  parent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  instance_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  instance_ = NULL;
  _cached_size_ = 0;
}

CreateInstanceRequest::~CreateInstanceRequest() {
  // @@protoc_insertion_point(destructor:google.bigtable.admin.v2.CreateInstanceRequest)
  SharedDtor();
}

void CreateInstanceRequest::SharedDtor() {
  parent_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  instance_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete instance_;
  }
}

void CreateInstanceRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CreateInstanceRequest::descriptor() {
  protobuf_google_2fbigtable_2fadmin_2fv2_2fbigtable_5finstance_5fadmin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fbigtable_2fadmin_2fv2_2fbigtable_5finstance_5fadmin_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CreateInstanceRequest& CreateInstanceRequest::default_instance() {
  protobuf_google_2fbigtable_2fadmin_2fv2_2fbigtable_5finstance_5fadmin_2eproto::InitDefaults();
  return *internal_default_instance();
}

CreateInstanceRequest* CreateInstanceRequest::New(::google::protobuf::Arena* arena) const {
  CreateInstanceRequest* n = new CreateInstanceRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CreateInstanceRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.bigtable.admin.v2.CreateInstanceRequest)
  clusters_.Clear();
  parent_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  instance_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && instance_ != NULL) {
    delete instance_;
  }
  instance_ = NULL;
}

bool CreateInstanceRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.bigtable.admin.v2.CreateInstanceRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string parent = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_parent()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->parent().data(), this->parent().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.bigtable.admin.v2.CreateInstanceRequest.parent"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string instance_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_instance_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->instance_id().data(), this->instance_id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.bigtable.admin.v2.CreateInstanceRequest.instance_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.bigtable.admin.v2.Instance instance = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_instance()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, .google.bigtable.admin.v2.Cluster> clusters = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          CreateInstanceRequest_ClustersEntry::Parser< ::google::protobuf::internal::MapField<
              CreateInstanceRequest_ClustersEntry,
              ::std::string, ::google::bigtable::admin::v2::Cluster,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
              0 >,
            ::google::protobuf::Map< ::std::string, ::google::bigtable::admin::v2::Cluster > > parser(&clusters_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), parser.key().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.bigtable.admin.v2.CreateInstanceRequest.ClustersEntry.key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.bigtable.admin.v2.CreateInstanceRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.bigtable.admin.v2.CreateInstanceRequest)
  return false;
#undef DO_
}

void CreateInstanceRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.bigtable.admin.v2.CreateInstanceRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string parent = 1;
  if (this->parent().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->parent().data(), this->parent().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.bigtable.admin.v2.CreateInstanceRequest.parent");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->parent(), output);
  }

  // string instance_id = 2;
  if (this->instance_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->instance_id().data(), this->instance_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.bigtable.admin.v2.CreateInstanceRequest.instance_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->instance_id(), output);
  }

  // .google.bigtable.admin.v2.Instance instance = 3;
  if (this->has_instance()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->instance_, output);
  }

  // map<string, .google.bigtable.admin.v2.Cluster> clusters = 4;
  if (!this->clusters().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::google::bigtable::admin::v2::Cluster >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), p->first.length(),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.bigtable.admin.v2.CreateInstanceRequest.ClustersEntry.key");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->clusters().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->clusters().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::google::bigtable::admin::v2::Cluster >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::google::bigtable::admin::v2::Cluster >::const_iterator
          it = this->clusters().begin();
          it != this->clusters().end(); ++it, ++n) {
        items[n] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[n], Less());
      ::google::protobuf::scoped_ptr<CreateInstanceRequest_ClustersEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(clusters_.NewEntryWrapper(
            items[i]->first, items[i]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            4, *entry, output);
        Utf8Check::Check(items[i]);
      }
    } else {
      ::google::protobuf::scoped_ptr<CreateInstanceRequest_ClustersEntry> entry;
      for (::google::protobuf::Map< ::std::string, ::google::bigtable::admin::v2::Cluster >::const_iterator
          it = this->clusters().begin();
          it != this->clusters().end(); ++it) {
        entry.reset(clusters_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            4, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  // @@protoc_insertion_point(serialize_end:google.bigtable.admin.v2.CreateInstanceRequest)
}

::google::protobuf::uint8* CreateInstanceRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.bigtable.admin.v2.CreateInstanceRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string parent = 1;
  if (this->parent().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->parent().data(), this->parent().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.bigtable.admin.v2.CreateInstanceRequest.parent");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->parent(), target);
  }

  // string instance_id = 2;
  if (this->instance_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->instance_id().data(), this->instance_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.bigtable.admin.v2.CreateInstanceRequest.instance_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->instance_id(), target);
  }

  // .google.bigtable.admin.v2.Instance instance = 3;
  if (this->has_instance()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->instance_, deterministic, target);
  }

  // map<string, .google.bigtable.admin.v2.Cluster> clusters = 4;
  if (!this->clusters().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::google::bigtable::admin::v2::Cluster >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), p->first.length(),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.bigtable.admin.v2.CreateInstanceRequest.ClustersEntry.key");
      }
    };

    if (deterministic &&
        this->clusters().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->clusters().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::google::bigtable::admin::v2::Cluster >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::google::bigtable::admin::v2::Cluster >::const_iterator
          it = this->clusters().begin();
          it != this->clusters().end(); ++it, ++n) {
        items[n] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[n], Less());
      ::google::protobuf::scoped_ptr<CreateInstanceRequest_ClustersEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(clusters_.NewEntryWrapper(
            items[i]->first, items[i]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       4, *entry, deterministic, target);
;
        Utf8Check::Check(items[i]);
      }
    } else {
      ::google::protobuf::scoped_ptr<CreateInstanceRequest_ClustersEntry> entry;
      for (::google::protobuf::Map< ::std::string, ::google::bigtable::admin::v2::Cluster >::const_iterator
          it = this->clusters().begin();
          it != this->clusters().end(); ++it) {
        entry.reset(clusters_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       4, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.bigtable.admin.v2.CreateInstanceRequest)
  return target;
}

size_t CreateInstanceRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.bigtable.admin.v2.CreateInstanceRequest)
  size_t total_size = 0;

  // map<string, .google.bigtable.admin.v2.Cluster> clusters = 4;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->clusters_size());
  {
    ::google::protobuf::scoped_ptr<CreateInstanceRequest_ClustersEntry> entry;
    for (::google::protobuf::Map< ::std::string, ::google::bigtable::admin::v2::Cluster >::const_iterator
        it = this->clusters().begin();
        it != this->clusters().end(); ++it) {
      entry.reset(clusters_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // string parent = 1;
  if (this->parent().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->parent());
  }

  // string instance_id = 2;
  if (this->instance_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->instance_id());
  }

  // .google.bigtable.admin.v2.Instance instance = 3;
  if (this->has_instance()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->instance_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CreateInstanceRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.bigtable.admin.v2.CreateInstanceRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateInstanceRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CreateInstanceRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.bigtable.admin.v2.CreateInstanceRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.bigtable.admin.v2.CreateInstanceRequest)
    MergeFrom(*source);
  }
}

void CreateInstanceRequest::MergeFrom(const CreateInstanceRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.bigtable.admin.v2.CreateInstanceRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  clusters_.MergeFrom(from.clusters_);
  if (from.parent().size() > 0) {

    parent_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.parent_);
  }
  if (from.instance_id().size() > 0) {

    instance_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.instance_id_);
  }
  if (from.has_instance()) {
    mutable_instance()->::google::bigtable::admin::v2::Instance::MergeFrom(from.instance());
  }
}

void CreateInstanceRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.bigtable.admin.v2.CreateInstanceRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateInstanceRequest::CopyFrom(const CreateInstanceRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.bigtable.admin.v2.CreateInstanceRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateInstanceRequest::IsInitialized() const {
  return true;
}

void CreateInstanceRequest::Swap(CreateInstanceRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CreateInstanceRequest::InternalSwap(CreateInstanceRequest* other) {
  clusters_.Swap(&other->clusters_);
  parent_.Swap(&other->parent_);
  instance_id_.Swap(&other->instance_id_);
  std::swap(instance_, other->instance_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CreateInstanceRequest::GetMetadata() const {
  protobuf_google_2fbigtable_2fadmin_2fv2_2fbigtable_5finstance_5fadmin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fbigtable_2fadmin_2fv2_2fbigtable_5finstance_5fadmin_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CreateInstanceRequest

// string parent = 1;
void CreateInstanceRequest::clear_parent() {
  parent_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& CreateInstanceRequest::parent() const {
  // @@protoc_insertion_point(field_get:google.bigtable.admin.v2.CreateInstanceRequest.parent)
  return parent_.GetNoArena();
}
void CreateInstanceRequest::set_parent(const ::std::string& value) {
  
  parent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.bigtable.admin.v2.CreateInstanceRequest.parent)
}
#if LANG_CXX11
void CreateInstanceRequest::set_parent(::std::string&& value) {
  
  parent_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.bigtable.admin.v2.CreateInstanceRequest.parent)
}
#endif
void CreateInstanceRequest::set_parent(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  parent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.bigtable.admin.v2.CreateInstanceRequest.parent)
}
void CreateInstanceRequest::set_parent(const char* value, size_t size) {
  
  parent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.bigtable.admin.v2.CreateInstanceRequest.parent)
}
::std::string* CreateInstanceRequest::mutable_parent() {
  
  // @@protoc_insertion_point(field_mutable:google.bigtable.admin.v2.CreateInstanceRequest.parent)
  return parent_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CreateInstanceRequest::release_parent() {
  // @@protoc_insertion_point(field_release:google.bigtable.admin.v2.CreateInstanceRequest.parent)
  
  return parent_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CreateInstanceRequest::set_allocated_parent(::std::string* parent) {
  if (parent != NULL) {
    
  } else {
    
  }
  parent_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), parent);
  // @@protoc_insertion_point(field_set_allocated:google.bigtable.admin.v2.CreateInstanceRequest.parent)
}

// string instance_id = 2;
void CreateInstanceRequest::clear_instance_id() {
  instance_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& CreateInstanceRequest::instance_id() const {
  // @@protoc_insertion_point(field_get:google.bigtable.admin.v2.CreateInstanceRequest.instance_id)
  return instance_id_.GetNoArena();
}
void CreateInstanceRequest::set_instance_id(const ::std::string& value) {
  
  instance_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.bigtable.admin.v2.CreateInstanceRequest.instance_id)
}
#if LANG_CXX11
void CreateInstanceRequest::set_instance_id(::std::string&& value) {
  
  instance_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.bigtable.admin.v2.CreateInstanceRequest.instance_id)
}
#endif
void CreateInstanceRequest::set_instance_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  instance_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.bigtable.admin.v2.CreateInstanceRequest.instance_id)
}
void CreateInstanceRequest::set_instance_id(const char* value, size_t size) {
  
  instance_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.bigtable.admin.v2.CreateInstanceRequest.instance_id)
}
::std::string* CreateInstanceRequest::mutable_instance_id() {
  
  // @@protoc_insertion_point(field_mutable:google.bigtable.admin.v2.CreateInstanceRequest.instance_id)
  return instance_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CreateInstanceRequest::release_instance_id() {
  // @@protoc_insertion_point(field_release:google.bigtable.admin.v2.CreateInstanceRequest.instance_id)
  
  return instance_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CreateInstanceRequest::set_allocated_instance_id(::std::string* instance_id) {
  if (instance_id != NULL) {
    
  } else {
    
  }
  instance_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), instance_id);
  // @@protoc_insertion_point(field_set_allocated:google.bigtable.admin.v2.CreateInstanceRequest.instance_id)
}

// .google.bigtable.admin.v2.Instance instance = 3;
bool CreateInstanceRequest::has_instance() const {
  return this != internal_default_instance() && instance_ != NULL;
}
void CreateInstanceRequest::clear_instance() {
  if (GetArenaNoVirtual() == NULL && instance_ != NULL) delete instance_;
  instance_ = NULL;
}
const ::google::bigtable::admin::v2::Instance& CreateInstanceRequest::instance() const {
  // @@protoc_insertion_point(field_get:google.bigtable.admin.v2.CreateInstanceRequest.instance)
  return instance_ != NULL ? *instance_
                         : *::google::bigtable::admin::v2::Instance::internal_default_instance();
}
::google::bigtable::admin::v2::Instance* CreateInstanceRequest::mutable_instance() {
  
  if (instance_ == NULL) {
    instance_ = new ::google::bigtable::admin::v2::Instance;
  }
  // @@protoc_insertion_point(field_mutable:google.bigtable.admin.v2.CreateInstanceRequest.instance)
  return instance_;
}
::google::bigtable::admin::v2::Instance* CreateInstanceRequest::release_instance() {
  // @@protoc_insertion_point(field_release:google.bigtable.admin.v2.CreateInstanceRequest.instance)
  
  ::google::bigtable::admin::v2::Instance* temp = instance_;
  instance_ = NULL;
  return temp;
}
void CreateInstanceRequest::set_allocated_instance(::google::bigtable::admin::v2::Instance* instance) {
  delete instance_;
  instance_ = instance;
  if (instance) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.bigtable.admin.v2.CreateInstanceRequest.instance)
}

// map<string, .google.bigtable.admin.v2.Cluster> clusters = 4;
int CreateInstanceRequest::clusters_size() const {
  return clusters_.size();
}
void CreateInstanceRequest::clear_clusters() {
  clusters_.Clear();
}
 const ::google::protobuf::Map< ::std::string, ::google::bigtable::admin::v2::Cluster >&
CreateInstanceRequest::clusters() const {
  // @@protoc_insertion_point(field_map:google.bigtable.admin.v2.CreateInstanceRequest.clusters)
  return clusters_.GetMap();
}
 ::google::protobuf::Map< ::std::string, ::google::bigtable::admin::v2::Cluster >*
CreateInstanceRequest::mutable_clusters() {
  // @@protoc_insertion_point(field_mutable_map:google.bigtable.admin.v2.CreateInstanceRequest.clusters)
  return clusters_.MutableMap();
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetInstanceRequest::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetInstanceRequest::GetInstanceRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_google_2fbigtable_2fadmin_2fv2_2fbigtable_5finstance_5fadmin_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.bigtable.admin.v2.GetInstanceRequest)
}
GetInstanceRequest::GetInstanceRequest(const GetInstanceRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  // @@protoc_insertion_point(copy_constructor:google.bigtable.admin.v2.GetInstanceRequest)
}

void GetInstanceRequest::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

GetInstanceRequest::~GetInstanceRequest() {
  // @@protoc_insertion_point(destructor:google.bigtable.admin.v2.GetInstanceRequest)
  SharedDtor();
}

void GetInstanceRequest::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GetInstanceRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetInstanceRequest::descriptor() {
  protobuf_google_2fbigtable_2fadmin_2fv2_2fbigtable_5finstance_5fadmin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fbigtable_2fadmin_2fv2_2fbigtable_5finstance_5fadmin_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetInstanceRequest& GetInstanceRequest::default_instance() {
  protobuf_google_2fbigtable_2fadmin_2fv2_2fbigtable_5finstance_5fadmin_2eproto::InitDefaults();
  return *internal_default_instance();
}

GetInstanceRequest* GetInstanceRequest::New(::google::protobuf::Arena* arena) const {
  GetInstanceRequest* n = new GetInstanceRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetInstanceRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.bigtable.admin.v2.GetInstanceRequest)
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool GetInstanceRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.bigtable.admin.v2.GetInstanceRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.bigtable.admin.v2.GetInstanceRequest.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.bigtable.admin.v2.GetInstanceRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.bigtable.admin.v2.GetInstanceRequest)
  return false;
#undef DO_
}

void GetInstanceRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.bigtable.admin.v2.GetInstanceRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.bigtable.admin.v2.GetInstanceRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // @@protoc_insertion_point(serialize_end:google.bigtable.admin.v2.GetInstanceRequest)
}

::google::protobuf::uint8* GetInstanceRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.bigtable.admin.v2.GetInstanceRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.bigtable.admin.v2.GetInstanceRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.bigtable.admin.v2.GetInstanceRequest)
  return target;
}

size_t GetInstanceRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.bigtable.admin.v2.GetInstanceRequest)
  size_t total_size = 0;

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetInstanceRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.bigtable.admin.v2.GetInstanceRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetInstanceRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetInstanceRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.bigtable.admin.v2.GetInstanceRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.bigtable.admin.v2.GetInstanceRequest)
    MergeFrom(*source);
  }
}

void GetInstanceRequest::MergeFrom(const GetInstanceRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.bigtable.admin.v2.GetInstanceRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
}

void GetInstanceRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.bigtable.admin.v2.GetInstanceRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetInstanceRequest::CopyFrom(const GetInstanceRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.bigtable.admin.v2.GetInstanceRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetInstanceRequest::IsInitialized() const {
  return true;
}

void GetInstanceRequest::Swap(GetInstanceRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetInstanceRequest::InternalSwap(GetInstanceRequest* other) {
  name_.Swap(&other->name_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetInstanceRequest::GetMetadata() const {
  protobuf_google_2fbigtable_2fadmin_2fv2_2fbigtable_5finstance_5fadmin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fbigtable_2fadmin_2fv2_2fbigtable_5finstance_5fadmin_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetInstanceRequest

// string name = 1;
void GetInstanceRequest::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& GetInstanceRequest::name() const {
  // @@protoc_insertion_point(field_get:google.bigtable.admin.v2.GetInstanceRequest.name)
  return name_.GetNoArena();
}
void GetInstanceRequest::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.bigtable.admin.v2.GetInstanceRequest.name)
}
#if LANG_CXX11
void GetInstanceRequest::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.bigtable.admin.v2.GetInstanceRequest.name)
}
#endif
void GetInstanceRequest::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.bigtable.admin.v2.GetInstanceRequest.name)
}
void GetInstanceRequest::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.bigtable.admin.v2.GetInstanceRequest.name)
}
::std::string* GetInstanceRequest::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:google.bigtable.admin.v2.GetInstanceRequest.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GetInstanceRequest::release_name() {
  // @@protoc_insertion_point(field_release:google.bigtable.admin.v2.GetInstanceRequest.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GetInstanceRequest::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:google.bigtable.admin.v2.GetInstanceRequest.name)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListInstancesRequest::kParentFieldNumber;
const int ListInstancesRequest::kPageTokenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListInstancesRequest::ListInstancesRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_google_2fbigtable_2fadmin_2fv2_2fbigtable_5finstance_5fadmin_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.bigtable.admin.v2.ListInstancesRequest)
}
ListInstancesRequest::ListInstancesRequest(const ListInstancesRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  parent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.parent().size() > 0) {
    parent_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.parent_);
  }
  page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.page_token().size() > 0) {
    page_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.page_token_);
  }
  // @@protoc_insertion_point(copy_constructor:google.bigtable.admin.v2.ListInstancesRequest)
}

void ListInstancesRequest::SharedCtor() {
  parent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

ListInstancesRequest::~ListInstancesRequest() {
  // @@protoc_insertion_point(destructor:google.bigtable.admin.v2.ListInstancesRequest)
  SharedDtor();
}

void ListInstancesRequest::SharedDtor() {
  parent_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ListInstancesRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ListInstancesRequest::descriptor() {
  protobuf_google_2fbigtable_2fadmin_2fv2_2fbigtable_5finstance_5fadmin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fbigtable_2fadmin_2fv2_2fbigtable_5finstance_5fadmin_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListInstancesRequest& ListInstancesRequest::default_instance() {
  protobuf_google_2fbigtable_2fadmin_2fv2_2fbigtable_5finstance_5fadmin_2eproto::InitDefaults();
  return *internal_default_instance();
}

ListInstancesRequest* ListInstancesRequest::New(::google::protobuf::Arena* arena) const {
  ListInstancesRequest* n = new ListInstancesRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ListInstancesRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.bigtable.admin.v2.ListInstancesRequest)
  parent_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool ListInstancesRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.bigtable.admin.v2.ListInstancesRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string parent = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_parent()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->parent().data(), this->parent().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.bigtable.admin.v2.ListInstancesRequest.parent"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string page_token = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_page_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->page_token().data(), this->page_token().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.bigtable.admin.v2.ListInstancesRequest.page_token"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.bigtable.admin.v2.ListInstancesRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.bigtable.admin.v2.ListInstancesRequest)
  return false;
#undef DO_
}

void ListInstancesRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.bigtable.admin.v2.ListInstancesRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string parent = 1;
  if (this->parent().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->parent().data(), this->parent().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.bigtable.admin.v2.ListInstancesRequest.parent");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->parent(), output);
  }

  // string page_token = 2;
  if (this->page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->page_token().data(), this->page_token().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.bigtable.admin.v2.ListInstancesRequest.page_token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->page_token(), output);
  }

  // @@protoc_insertion_point(serialize_end:google.bigtable.admin.v2.ListInstancesRequest)
}

::google::protobuf::uint8* ListInstancesRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.bigtable.admin.v2.ListInstancesRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string parent = 1;
  if (this->parent().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->parent().data(), this->parent().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.bigtable.admin.v2.ListInstancesRequest.parent");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->parent(), target);
  }

  // string page_token = 2;
  if (this->page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->page_token().data(), this->page_token().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.bigtable.admin.v2.ListInstancesRequest.page_token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->page_token(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.bigtable.admin.v2.ListInstancesRequest)
  return target;
}

size_t ListInstancesRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.bigtable.admin.v2.ListInstancesRequest)
  size_t total_size = 0;

  // string parent = 1;
  if (this->parent().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->parent());
  }

  // string page_token = 2;
  if (this->page_token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->page_token());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ListInstancesRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.bigtable.admin.v2.ListInstancesRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ListInstancesRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListInstancesRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.bigtable.admin.v2.ListInstancesRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.bigtable.admin.v2.ListInstancesRequest)
    MergeFrom(*source);
  }
}

void ListInstancesRequest::MergeFrom(const ListInstancesRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.bigtable.admin.v2.ListInstancesRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.parent().size() > 0) {

    parent_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.parent_);
  }
  if (from.page_token().size() > 0) {

    page_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.page_token_);
  }
}

void ListInstancesRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.bigtable.admin.v2.ListInstancesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListInstancesRequest::CopyFrom(const ListInstancesRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.bigtable.admin.v2.ListInstancesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListInstancesRequest::IsInitialized() const {
  return true;
}

void ListInstancesRequest::Swap(ListInstancesRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListInstancesRequest::InternalSwap(ListInstancesRequest* other) {
  parent_.Swap(&other->parent_);
  page_token_.Swap(&other->page_token_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ListInstancesRequest::GetMetadata() const {
  protobuf_google_2fbigtable_2fadmin_2fv2_2fbigtable_5finstance_5fadmin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fbigtable_2fadmin_2fv2_2fbigtable_5finstance_5fadmin_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ListInstancesRequest

// string parent = 1;
void ListInstancesRequest::clear_parent() {
  parent_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ListInstancesRequest::parent() const {
  // @@protoc_insertion_point(field_get:google.bigtable.admin.v2.ListInstancesRequest.parent)
  return parent_.GetNoArena();
}
void ListInstancesRequest::set_parent(const ::std::string& value) {
  
  parent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.bigtable.admin.v2.ListInstancesRequest.parent)
}
#if LANG_CXX11
void ListInstancesRequest::set_parent(::std::string&& value) {
  
  parent_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.bigtable.admin.v2.ListInstancesRequest.parent)
}
#endif
void ListInstancesRequest::set_parent(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  parent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.bigtable.admin.v2.ListInstancesRequest.parent)
}
void ListInstancesRequest::set_parent(const char* value, size_t size) {
  
  parent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.bigtable.admin.v2.ListInstancesRequest.parent)
}
::std::string* ListInstancesRequest::mutable_parent() {
  
  // @@protoc_insertion_point(field_mutable:google.bigtable.admin.v2.ListInstancesRequest.parent)
  return parent_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ListInstancesRequest::release_parent() {
  // @@protoc_insertion_point(field_release:google.bigtable.admin.v2.ListInstancesRequest.parent)
  
  return parent_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ListInstancesRequest::set_allocated_parent(::std::string* parent) {
  if (parent != NULL) {
    
  } else {
    
  }
  parent_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), parent);
  // @@protoc_insertion_point(field_set_allocated:google.bigtable.admin.v2.ListInstancesRequest.parent)
}

// string page_token = 2;
void ListInstancesRequest::clear_page_token() {
  page_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ListInstancesRequest::page_token() const {
  // @@protoc_insertion_point(field_get:google.bigtable.admin.v2.ListInstancesRequest.page_token)
  return page_token_.GetNoArena();
}
void ListInstancesRequest::set_page_token(const ::std::string& value) {
  
  page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.bigtable.admin.v2.ListInstancesRequest.page_token)
}
#if LANG_CXX11
void ListInstancesRequest::set_page_token(::std::string&& value) {
  
  page_token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.bigtable.admin.v2.ListInstancesRequest.page_token)
}
#endif
void ListInstancesRequest::set_page_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.bigtable.admin.v2.ListInstancesRequest.page_token)
}
void ListInstancesRequest::set_page_token(const char* value, size_t size) {
  
  page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.bigtable.admin.v2.ListInstancesRequest.page_token)
}
::std::string* ListInstancesRequest::mutable_page_token() {
  
  // @@protoc_insertion_point(field_mutable:google.bigtable.admin.v2.ListInstancesRequest.page_token)
  return page_token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ListInstancesRequest::release_page_token() {
  // @@protoc_insertion_point(field_release:google.bigtable.admin.v2.ListInstancesRequest.page_token)
  
  return page_token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ListInstancesRequest::set_allocated_page_token(::std::string* page_token) {
  if (page_token != NULL) {
    
  } else {
    
  }
  page_token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), page_token);
  // @@protoc_insertion_point(field_set_allocated:google.bigtable.admin.v2.ListInstancesRequest.page_token)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListInstancesResponse::kInstancesFieldNumber;
const int ListInstancesResponse::kFailedLocationsFieldNumber;
const int ListInstancesResponse::kNextPageTokenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListInstancesResponse::ListInstancesResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_google_2fbigtable_2fadmin_2fv2_2fbigtable_5finstance_5fadmin_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.bigtable.admin.v2.ListInstancesResponse)
}
ListInstancesResponse::ListInstancesResponse(const ListInstancesResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      instances_(from.instances_),
      failed_locations_(from.failed_locations_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  next_page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.next_page_token().size() > 0) {
    next_page_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.next_page_token_);
  }
  // @@protoc_insertion_point(copy_constructor:google.bigtable.admin.v2.ListInstancesResponse)
}

void ListInstancesResponse::SharedCtor() {
  next_page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

ListInstancesResponse::~ListInstancesResponse() {
  // @@protoc_insertion_point(destructor:google.bigtable.admin.v2.ListInstancesResponse)
  SharedDtor();
}

void ListInstancesResponse::SharedDtor() {
  next_page_token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ListInstancesResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ListInstancesResponse::descriptor() {
  protobuf_google_2fbigtable_2fadmin_2fv2_2fbigtable_5finstance_5fadmin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fbigtable_2fadmin_2fv2_2fbigtable_5finstance_5fadmin_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListInstancesResponse& ListInstancesResponse::default_instance() {
  protobuf_google_2fbigtable_2fadmin_2fv2_2fbigtable_5finstance_5fadmin_2eproto::InitDefaults();
  return *internal_default_instance();
}

ListInstancesResponse* ListInstancesResponse::New(::google::protobuf::Arena* arena) const {
  ListInstancesResponse* n = new ListInstancesResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ListInstancesResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:google.bigtable.admin.v2.ListInstancesResponse)
  instances_.Clear();
  failed_locations_.Clear();
  next_page_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool ListInstancesResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.bigtable.admin.v2.ListInstancesResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .google.bigtable.admin.v2.Instance instances = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_instances()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string failed_locations = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_failed_locations()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->failed_locations(this->failed_locations_size() - 1).data(),
            this->failed_locations(this->failed_locations_size() - 1).length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.bigtable.admin.v2.ListInstancesResponse.failed_locations"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string next_page_token = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_next_page_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->next_page_token().data(), this->next_page_token().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.bigtable.admin.v2.ListInstancesResponse.next_page_token"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.bigtable.admin.v2.ListInstancesResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.bigtable.admin.v2.ListInstancesResponse)
  return false;
#undef DO_
}

void ListInstancesResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.bigtable.admin.v2.ListInstancesResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.bigtable.admin.v2.Instance instances = 1;
  for (unsigned int i = 0, n = this->instances_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->instances(i), output);
  }

  // repeated string failed_locations = 2;
  for (int i = 0, n = this->failed_locations_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->failed_locations(i).data(), this->failed_locations(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.bigtable.admin.v2.ListInstancesResponse.failed_locations");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->failed_locations(i), output);
  }

  // string next_page_token = 3;
  if (this->next_page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->next_page_token().data(), this->next_page_token().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.bigtable.admin.v2.ListInstancesResponse.next_page_token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->next_page_token(), output);
  }

  // @@protoc_insertion_point(serialize_end:google.bigtable.admin.v2.ListInstancesResponse)
}

::google::protobuf::uint8* ListInstancesResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.bigtable.admin.v2.ListInstancesResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.bigtable.admin.v2.Instance instances = 1;
  for (unsigned int i = 0, n = this->instances_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->instances(i), deterministic, target);
  }

  // repeated string failed_locations = 2;
  for (int i = 0, n = this->failed_locations_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->failed_locations(i).data(), this->failed_locations(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.bigtable.admin.v2.ListInstancesResponse.failed_locations");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->failed_locations(i), target);
  }

  // string next_page_token = 3;
  if (this->next_page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->next_page_token().data(), this->next_page_token().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.bigtable.admin.v2.ListInstancesResponse.next_page_token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->next_page_token(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.bigtable.admin.v2.ListInstancesResponse)
  return target;
}

size_t ListInstancesResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.bigtable.admin.v2.ListInstancesResponse)
  size_t total_size = 0;

  // repeated .google.bigtable.admin.v2.Instance instances = 1;
  {
    unsigned int count = this->instances_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->instances(i));
    }
  }

  // repeated string failed_locations = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->failed_locations_size());
  for (int i = 0, n = this->failed_locations_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->failed_locations(i));
  }

  // string next_page_token = 3;
  if (this->next_page_token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->next_page_token());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ListInstancesResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.bigtable.admin.v2.ListInstancesResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ListInstancesResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListInstancesResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.bigtable.admin.v2.ListInstancesResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.bigtable.admin.v2.ListInstancesResponse)
    MergeFrom(*source);
  }
}

void ListInstancesResponse::MergeFrom(const ListInstancesResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.bigtable.admin.v2.ListInstancesResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  instances_.MergeFrom(from.instances_);
  failed_locations_.MergeFrom(from.failed_locations_);
  if (from.next_page_token().size() > 0) {

    next_page_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.next_page_token_);
  }
}

void ListInstancesResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.bigtable.admin.v2.ListInstancesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListInstancesResponse::CopyFrom(const ListInstancesResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.bigtable.admin.v2.ListInstancesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListInstancesResponse::IsInitialized() const {
  return true;
}

void ListInstancesResponse::Swap(ListInstancesResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListInstancesResponse::InternalSwap(ListInstancesResponse* other) {
  instances_.InternalSwap(&other->instances_);
  failed_locations_.InternalSwap(&other->failed_locations_);
  next_page_token_.Swap(&other->next_page_token_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ListInstancesResponse::GetMetadata() const {
  protobuf_google_2fbigtable_2fadmin_2fv2_2fbigtable_5finstance_5fadmin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fbigtable_2fadmin_2fv2_2fbigtable_5finstance_5fadmin_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ListInstancesResponse

// repeated .google.bigtable.admin.v2.Instance instances = 1;
int ListInstancesResponse::instances_size() const {
  return instances_.size();
}
void ListInstancesResponse::clear_instances() {
  instances_.Clear();
}
const ::google::bigtable::admin::v2::Instance& ListInstancesResponse::instances(int index) const {
  // @@protoc_insertion_point(field_get:google.bigtable.admin.v2.ListInstancesResponse.instances)
  return instances_.Get(index);
}
::google::bigtable::admin::v2::Instance* ListInstancesResponse::mutable_instances(int index) {
  // @@protoc_insertion_point(field_mutable:google.bigtable.admin.v2.ListInstancesResponse.instances)
  return instances_.Mutable(index);
}
::google::bigtable::admin::v2::Instance* ListInstancesResponse::add_instances() {
  // @@protoc_insertion_point(field_add:google.bigtable.admin.v2.ListInstancesResponse.instances)
  return instances_.Add();
}
::google::protobuf::RepeatedPtrField< ::google::bigtable::admin::v2::Instance >*
ListInstancesResponse::mutable_instances() {
  // @@protoc_insertion_point(field_mutable_list:google.bigtable.admin.v2.ListInstancesResponse.instances)
  return &instances_;
}
const ::google::protobuf::RepeatedPtrField< ::google::bigtable::admin::v2::Instance >&
ListInstancesResponse::instances() const {
  // @@protoc_insertion_point(field_list:google.bigtable.admin.v2.ListInstancesResponse.instances)
  return instances_;
}

// repeated string failed_locations = 2;
int ListInstancesResponse::failed_locations_size() const {
  return failed_locations_.size();
}
void ListInstancesResponse::clear_failed_locations() {
  failed_locations_.Clear();
}
const ::std::string& ListInstancesResponse::failed_locations(int index) const {
  // @@protoc_insertion_point(field_get:google.bigtable.admin.v2.ListInstancesResponse.failed_locations)
  return failed_locations_.Get(index);
}
::std::string* ListInstancesResponse::mutable_failed_locations(int index) {
  // @@protoc_insertion_point(field_mutable:google.bigtable.admin.v2.ListInstancesResponse.failed_locations)
  return failed_locations_.Mutable(index);
}
void ListInstancesResponse::set_failed_locations(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:google.bigtable.admin.v2.ListInstancesResponse.failed_locations)
  failed_locations_.Mutable(index)->assign(value);
}
#if LANG_CXX11
void ListInstancesResponse::set_failed_locations(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:google.bigtable.admin.v2.ListInstancesResponse.failed_locations)
  failed_locations_.Mutable(index)->assign(std::move(value));
}
#endif
void ListInstancesResponse::set_failed_locations(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  failed_locations_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:google.bigtable.admin.v2.ListInstancesResponse.failed_locations)
}
void ListInstancesResponse::set_failed_locations(int index, const char* value, size_t size) {
  failed_locations_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:google.bigtable.admin.v2.ListInstancesResponse.failed_locations)
}
::std::string* ListInstancesResponse::add_failed_locations() {
  // @@protoc_insertion_point(field_add_mutable:google.bigtable.admin.v2.ListInstancesResponse.failed_locations)
  return failed_locations_.Add();
}
void ListInstancesResponse::add_failed_locations(const ::std::string& value) {
  failed_locations_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:google.bigtable.admin.v2.ListInstancesResponse.failed_locations)
}
#if LANG_CXX11
void ListInstancesResponse::add_failed_locations(::std::string&& value) {
  failed_locations_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:google.bigtable.admin.v2.ListInstancesResponse.failed_locations)
}
#endif
void ListInstancesResponse::add_failed_locations(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  failed_locations_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:google.bigtable.admin.v2.ListInstancesResponse.failed_locations)
}
void ListInstancesResponse::add_failed_locations(const char* value, size_t size) {
  failed_locations_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:google.bigtable.admin.v2.ListInstancesResponse.failed_locations)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
ListInstancesResponse::failed_locations() const {
  // @@protoc_insertion_point(field_list:google.bigtable.admin.v2.ListInstancesResponse.failed_locations)
  return failed_locations_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
ListInstancesResponse::mutable_failed_locations() {
  // @@protoc_insertion_point(field_mutable_list:google.bigtable.admin.v2.ListInstancesResponse.failed_locations)
  return &failed_locations_;
}

// string next_page_token = 3;
void ListInstancesResponse::clear_next_page_token() {
  next_page_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ListInstancesResponse::next_page_token() const {
  // @@protoc_insertion_point(field_get:google.bigtable.admin.v2.ListInstancesResponse.next_page_token)
  return next_page_token_.GetNoArena();
}
void ListInstancesResponse::set_next_page_token(const ::std::string& value) {
  
  next_page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.bigtable.admin.v2.ListInstancesResponse.next_page_token)
}
#if LANG_CXX11
void ListInstancesResponse::set_next_page_token(::std::string&& value) {
  
  next_page_token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.bigtable.admin.v2.ListInstancesResponse.next_page_token)
}
#endif
void ListInstancesResponse::set_next_page_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  next_page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.bigtable.admin.v2.ListInstancesResponse.next_page_token)
}
void ListInstancesResponse::set_next_page_token(const char* value, size_t size) {
  
  next_page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.bigtable.admin.v2.ListInstancesResponse.next_page_token)
}
::std::string* ListInstancesResponse::mutable_next_page_token() {
  
  // @@protoc_insertion_point(field_mutable:google.bigtable.admin.v2.ListInstancesResponse.next_page_token)
  return next_page_token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ListInstancesResponse::release_next_page_token() {
  // @@protoc_insertion_point(field_release:google.bigtable.admin.v2.ListInstancesResponse.next_page_token)
  
  return next_page_token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ListInstancesResponse::set_allocated_next_page_token(::std::string* next_page_token) {
  if (next_page_token != NULL) {
    
  } else {
    
  }
  next_page_token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), next_page_token);
  // @@protoc_insertion_point(field_set_allocated:google.bigtable.admin.v2.ListInstancesResponse.next_page_token)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DeleteInstanceRequest::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DeleteInstanceRequest::DeleteInstanceRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_google_2fbigtable_2fadmin_2fv2_2fbigtable_5finstance_5fadmin_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.bigtable.admin.v2.DeleteInstanceRequest)
}
DeleteInstanceRequest::DeleteInstanceRequest(const DeleteInstanceRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  // @@protoc_insertion_point(copy_constructor:google.bigtable.admin.v2.DeleteInstanceRequest)
}

void DeleteInstanceRequest::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

DeleteInstanceRequest::~DeleteInstanceRequest() {
  // @@protoc_insertion_point(destructor:google.bigtable.admin.v2.DeleteInstanceRequest)
  SharedDtor();
}

void DeleteInstanceRequest::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DeleteInstanceRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DeleteInstanceRequest::descriptor() {
  protobuf_google_2fbigtable_2fadmin_2fv2_2fbigtable_5finstance_5fadmin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fbigtable_2fadmin_2fv2_2fbigtable_5finstance_5fadmin_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DeleteInstanceRequest& DeleteInstanceRequest::default_instance() {
  protobuf_google_2fbigtable_2fadmin_2fv2_2fbigtable_5finstance_5fadmin_2eproto::InitDefaults();
  return *internal_default_instance();
}

DeleteInstanceRequest* DeleteInstanceRequest::New(::google::protobuf::Arena* arena) const {
  DeleteInstanceRequest* n = new DeleteInstanceRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DeleteInstanceRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.bigtable.admin.v2.DeleteInstanceRequest)
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool DeleteInstanceRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.bigtable.admin.v2.DeleteInstanceRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.bigtable.admin.v2.DeleteInstanceRequest.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.bigtable.admin.v2.DeleteInstanceRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.bigtable.admin.v2.DeleteInstanceRequest)
  return false;
#undef DO_
}

void DeleteInstanceRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.bigtable.admin.v2.DeleteInstanceRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.bigtable.admin.v2.DeleteInstanceRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // @@protoc_insertion_point(serialize_end:google.bigtable.admin.v2.DeleteInstanceRequest)
}

::google::protobuf::uint8* DeleteInstanceRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.bigtable.admin.v2.DeleteInstanceRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.bigtable.admin.v2.DeleteInstanceRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.bigtable.admin.v2.DeleteInstanceRequest)
  return target;
}

size_t DeleteInstanceRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.bigtable.admin.v2.DeleteInstanceRequest)
  size_t total_size = 0;

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DeleteInstanceRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.bigtable.admin.v2.DeleteInstanceRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteInstanceRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DeleteInstanceRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.bigtable.admin.v2.DeleteInstanceRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.bigtable.admin.v2.DeleteInstanceRequest)
    MergeFrom(*source);
  }
}

void DeleteInstanceRequest::MergeFrom(const DeleteInstanceRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.bigtable.admin.v2.DeleteInstanceRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
}

void DeleteInstanceRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.bigtable.admin.v2.DeleteInstanceRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteInstanceRequest::CopyFrom(const DeleteInstanceRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.bigtable.admin.v2.DeleteInstanceRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteInstanceRequest::IsInitialized() const {
  return true;
}

void DeleteInstanceRequest::Swap(DeleteInstanceRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DeleteInstanceRequest::InternalSwap(DeleteInstanceRequest* other) {
  name_.Swap(&other->name_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DeleteInstanceRequest::GetMetadata() const {
  protobuf_google_2fbigtable_2fadmin_2fv2_2fbigtable_5finstance_5fadmin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fbigtable_2fadmin_2fv2_2fbigtable_5finstance_5fadmin_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DeleteInstanceRequest

// string name = 1;
void DeleteInstanceRequest::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& DeleteInstanceRequest::name() const {
  // @@protoc_insertion_point(field_get:google.bigtable.admin.v2.DeleteInstanceRequest.name)
  return name_.GetNoArena();
}
void DeleteInstanceRequest::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.bigtable.admin.v2.DeleteInstanceRequest.name)
}
#if LANG_CXX11
void DeleteInstanceRequest::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.bigtable.admin.v2.DeleteInstanceRequest.name)
}
#endif
void DeleteInstanceRequest::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.bigtable.admin.v2.DeleteInstanceRequest.name)
}
void DeleteInstanceRequest::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.bigtable.admin.v2.DeleteInstanceRequest.name)
}
::std::string* DeleteInstanceRequest::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:google.bigtable.admin.v2.DeleteInstanceRequest.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* DeleteInstanceRequest::release_name() {
  // @@protoc_insertion_point(field_release:google.bigtable.admin.v2.DeleteInstanceRequest.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void DeleteInstanceRequest::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:google.bigtable.admin.v2.DeleteInstanceRequest.name)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CreateClusterRequest::kParentFieldNumber;
const int CreateClusterRequest::kClusterIdFieldNumber;
const int CreateClusterRequest::kClusterFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CreateClusterRequest::CreateClusterRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_google_2fbigtable_2fadmin_2fv2_2fbigtable_5finstance_5fadmin_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.bigtable.admin.v2.CreateClusterRequest)
}
CreateClusterRequest::CreateClusterRequest(const CreateClusterRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  parent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.parent().size() > 0) {
    parent_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.parent_);
  }
  cluster_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.cluster_id().size() > 0) {
    cluster_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cluster_id_);
  }
  if (from.has_cluster()) {
    cluster_ = new ::google::bigtable::admin::v2::Cluster(*from.cluster_);
  } else {
    cluster_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.bigtable.admin.v2.CreateClusterRequest)
}

void CreateClusterRequest::SharedCtor() {
  parent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_ = NULL;
  _cached_size_ = 0;
}

CreateClusterRequest::~CreateClusterRequest() {
  // @@protoc_insertion_point(destructor:google.bigtable.admin.v2.CreateClusterRequest)
  SharedDtor();
}

void CreateClusterRequest::SharedDtor() {
  parent_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete cluster_;
  }
}

void CreateClusterRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CreateClusterRequest::descriptor() {
  protobuf_google_2fbigtable_2fadmin_2fv2_2fbigtable_5finstance_5fadmin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fbigtable_2fadmin_2fv2_2fbigtable_5finstance_5fadmin_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CreateClusterRequest& CreateClusterRequest::default_instance() {
  protobuf_google_2fbigtable_2fadmin_2fv2_2fbigtable_5finstance_5fadmin_2eproto::InitDefaults();
  return *internal_default_instance();
}

CreateClusterRequest* CreateClusterRequest::New(::google::protobuf::Arena* arena) const {
  CreateClusterRequest* n = new CreateClusterRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CreateClusterRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.bigtable.admin.v2.CreateClusterRequest)
  parent_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && cluster_ != NULL) {
    delete cluster_;
  }
  cluster_ = NULL;
}

bool CreateClusterRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.bigtable.admin.v2.CreateClusterRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string parent = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_parent()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->parent().data(), this->parent().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.bigtable.admin.v2.CreateClusterRequest.parent"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string cluster_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cluster_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->cluster_id().data(), this->cluster_id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.bigtable.admin.v2.CreateClusterRequest.cluster_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.bigtable.admin.v2.Cluster cluster = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_cluster()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.bigtable.admin.v2.CreateClusterRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.bigtable.admin.v2.CreateClusterRequest)
  return false;
#undef DO_
}

void CreateClusterRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.bigtable.admin.v2.CreateClusterRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string parent = 1;
  if (this->parent().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->parent().data(), this->parent().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.bigtable.admin.v2.CreateClusterRequest.parent");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->parent(), output);
  }

  // string cluster_id = 2;
  if (this->cluster_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cluster_id().data(), this->cluster_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.bigtable.admin.v2.CreateClusterRequest.cluster_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->cluster_id(), output);
  }

  // .google.bigtable.admin.v2.Cluster cluster = 3;
  if (this->has_cluster()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->cluster_, output);
  }

  // @@protoc_insertion_point(serialize_end:google.bigtable.admin.v2.CreateClusterRequest)
}

::google::protobuf::uint8* CreateClusterRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.bigtable.admin.v2.CreateClusterRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string parent = 1;
  if (this->parent().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->parent().data(), this->parent().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.bigtable.admin.v2.CreateClusterRequest.parent");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->parent(), target);
  }

  // string cluster_id = 2;
  if (this->cluster_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cluster_id().data(), this->cluster_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.bigtable.admin.v2.CreateClusterRequest.cluster_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->cluster_id(), target);
  }

  // .google.bigtable.admin.v2.Cluster cluster = 3;
  if (this->has_cluster()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->cluster_, deterministic, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.bigtable.admin.v2.CreateClusterRequest)
  return target;
}

size_t CreateClusterRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.bigtable.admin.v2.CreateClusterRequest)
  size_t total_size = 0;

  // string parent = 1;
  if (this->parent().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->parent());
  }

  // string cluster_id = 2;
  if (this->cluster_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->cluster_id());
  }

  // .google.bigtable.admin.v2.Cluster cluster = 3;
  if (this->has_cluster()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->cluster_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CreateClusterRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.bigtable.admin.v2.CreateClusterRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateClusterRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CreateClusterRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.bigtable.admin.v2.CreateClusterRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.bigtable.admin.v2.CreateClusterRequest)
    MergeFrom(*source);
  }
}

void CreateClusterRequest::MergeFrom(const CreateClusterRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.bigtable.admin.v2.CreateClusterRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.parent().size() > 0) {

    parent_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.parent_);
  }
  if (from.cluster_id().size() > 0) {

    cluster_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cluster_id_);
  }
  if (from.has_cluster()) {
    mutable_cluster()->::google::bigtable::admin::v2::Cluster::MergeFrom(from.cluster());
  }
}

void CreateClusterRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.bigtable.admin.v2.CreateClusterRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateClusterRequest::CopyFrom(const CreateClusterRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.bigtable.admin.v2.CreateClusterRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateClusterRequest::IsInitialized() const {
  return true;
}

void CreateClusterRequest::Swap(CreateClusterRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CreateClusterRequest::InternalSwap(CreateClusterRequest* other) {
  parent_.Swap(&other->parent_);
  cluster_id_.Swap(&other->cluster_id_);
  std::swap(cluster_, other->cluster_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CreateClusterRequest::GetMetadata() const {
  protobuf_google_2fbigtable_2fadmin_2fv2_2fbigtable_5finstance_5fadmin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fbigtable_2fadmin_2fv2_2fbigtable_5finstance_5fadmin_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CreateClusterRequest

// string parent = 1;
void CreateClusterRequest::clear_parent() {
  parent_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& CreateClusterRequest::parent() const {
  // @@protoc_insertion_point(field_get:google.bigtable.admin.v2.CreateClusterRequest.parent)
  return parent_.GetNoArena();
}
void CreateClusterRequest::set_parent(const ::std::string& value) {
  
  parent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.bigtable.admin.v2.CreateClusterRequest.parent)
}
#if LANG_CXX11
void CreateClusterRequest::set_parent(::std::string&& value) {
  
  parent_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.bigtable.admin.v2.CreateClusterRequest.parent)
}
#endif
void CreateClusterRequest::set_parent(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  parent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.bigtable.admin.v2.CreateClusterRequest.parent)
}
void CreateClusterRequest::set_parent(const char* value, size_t size) {
  
  parent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.bigtable.admin.v2.CreateClusterRequest.parent)
}
::std::string* CreateClusterRequest::mutable_parent() {
  
  // @@protoc_insertion_point(field_mutable:google.bigtable.admin.v2.CreateClusterRequest.parent)
  return parent_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CreateClusterRequest::release_parent() {
  // @@protoc_insertion_point(field_release:google.bigtable.admin.v2.CreateClusterRequest.parent)
  
  return parent_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CreateClusterRequest::set_allocated_parent(::std::string* parent) {
  if (parent != NULL) {
    
  } else {
    
  }
  parent_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), parent);
  // @@protoc_insertion_point(field_set_allocated:google.bigtable.admin.v2.CreateClusterRequest.parent)
}

// string cluster_id = 2;
void CreateClusterRequest::clear_cluster_id() {
  cluster_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& CreateClusterRequest::cluster_id() const {
  // @@protoc_insertion_point(field_get:google.bigtable.admin.v2.CreateClusterRequest.cluster_id)
  return cluster_id_.GetNoArena();
}
void CreateClusterRequest::set_cluster_id(const ::std::string& value) {
  
  cluster_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.bigtable.admin.v2.CreateClusterRequest.cluster_id)
}
#if LANG_CXX11
void CreateClusterRequest::set_cluster_id(::std::string&& value) {
  
  cluster_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.bigtable.admin.v2.CreateClusterRequest.cluster_id)
}
#endif
void CreateClusterRequest::set_cluster_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  cluster_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.bigtable.admin.v2.CreateClusterRequest.cluster_id)
}
void CreateClusterRequest::set_cluster_id(const char* value, size_t size) {
  
  cluster_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.bigtable.admin.v2.CreateClusterRequest.cluster_id)
}
::std::string* CreateClusterRequest::mutable_cluster_id() {
  
  // @@protoc_insertion_point(field_mutable:google.bigtable.admin.v2.CreateClusterRequest.cluster_id)
  return cluster_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CreateClusterRequest::release_cluster_id() {
  // @@protoc_insertion_point(field_release:google.bigtable.admin.v2.CreateClusterRequest.cluster_id)
  
  return cluster_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CreateClusterRequest::set_allocated_cluster_id(::std::string* cluster_id) {
  if (cluster_id != NULL) {
    
  } else {
    
  }
  cluster_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cluster_id);
  // @@protoc_insertion_point(field_set_allocated:google.bigtable.admin.v2.CreateClusterRequest.cluster_id)
}

// .google.bigtable.admin.v2.Cluster cluster = 3;
bool CreateClusterRequest::has_cluster() const {
  return this != internal_default_instance() && cluster_ != NULL;
}
void CreateClusterRequest::clear_cluster() {
  if (GetArenaNoVirtual() == NULL && cluster_ != NULL) delete cluster_;
  cluster_ = NULL;
}
const ::google::bigtable::admin::v2::Cluster& CreateClusterRequest::cluster() const {
  // @@protoc_insertion_point(field_get:google.bigtable.admin.v2.CreateClusterRequest.cluster)
  return cluster_ != NULL ? *cluster_
                         : *::google::bigtable::admin::v2::Cluster::internal_default_instance();
}
::google::bigtable::admin::v2::Cluster* CreateClusterRequest::mutable_cluster() {
  
  if (cluster_ == NULL) {
    cluster_ = new ::google::bigtable::admin::v2::Cluster;
  }
  // @@protoc_insertion_point(field_mutable:google.bigtable.admin.v2.CreateClusterRequest.cluster)
  return cluster_;
}
::google::bigtable::admin::v2::Cluster* CreateClusterRequest::release_cluster() {
  // @@protoc_insertion_point(field_release:google.bigtable.admin.v2.CreateClusterRequest.cluster)
  
  ::google::bigtable::admin::v2::Cluster* temp = cluster_;
  cluster_ = NULL;
  return temp;
}
void CreateClusterRequest::set_allocated_cluster(::google::bigtable::admin::v2::Cluster* cluster) {
  delete cluster_;
  cluster_ = cluster;
  if (cluster) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.bigtable.admin.v2.CreateClusterRequest.cluster)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetClusterRequest::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetClusterRequest::GetClusterRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_google_2fbigtable_2fadmin_2fv2_2fbigtable_5finstance_5fadmin_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.bigtable.admin.v2.GetClusterRequest)
}
GetClusterRequest::GetClusterRequest(const GetClusterRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  // @@protoc_insertion_point(copy_constructor:google.bigtable.admin.v2.GetClusterRequest)
}

void GetClusterRequest::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

GetClusterRequest::~GetClusterRequest() {
  // @@protoc_insertion_point(destructor:google.bigtable.admin.v2.GetClusterRequest)
  SharedDtor();
}

void GetClusterRequest::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GetClusterRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetClusterRequest::descriptor() {
  protobuf_google_2fbigtable_2fadmin_2fv2_2fbigtable_5finstance_5fadmin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fbigtable_2fadmin_2fv2_2fbigtable_5finstance_5fadmin_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetClusterRequest& GetClusterRequest::default_instance() {
  protobuf_google_2fbigtable_2fadmin_2fv2_2fbigtable_5finstance_5fadmin_2eproto::InitDefaults();
  return *internal_default_instance();
}

GetClusterRequest* GetClusterRequest::New(::google::protobuf::Arena* arena) const {
  GetClusterRequest* n = new GetClusterRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetClusterRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.bigtable.admin.v2.GetClusterRequest)
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool GetClusterRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.bigtable.admin.v2.GetClusterRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.bigtable.admin.v2.GetClusterRequest.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.bigtable.admin.v2.GetClusterRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.bigtable.admin.v2.GetClusterRequest)
  return false;
#undef DO_
}

void GetClusterRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.bigtable.admin.v2.GetClusterRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.bigtable.admin.v2.GetClusterRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // @@protoc_insertion_point(serialize_end:google.bigtable.admin.v2.GetClusterRequest)
}

::google::protobuf::uint8* GetClusterRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.bigtable.admin.v2.GetClusterRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.bigtable.admin.v2.GetClusterRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.bigtable.admin.v2.GetClusterRequest)
  return target;
}

size_t GetClusterRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.bigtable.admin.v2.GetClusterRequest)
  size_t total_size = 0;

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetClusterRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.bigtable.admin.v2.GetClusterRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetClusterRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetClusterRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.bigtable.admin.v2.GetClusterRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.bigtable.admin.v2.GetClusterRequest)
    MergeFrom(*source);
  }
}

void GetClusterRequest::MergeFrom(const GetClusterRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.bigtable.admin.v2.GetClusterRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
}

void GetClusterRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.bigtable.admin.v2.GetClusterRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetClusterRequest::CopyFrom(const GetClusterRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.bigtable.admin.v2.GetClusterRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetClusterRequest::IsInitialized() const {
  return true;
}

void GetClusterRequest::Swap(GetClusterRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetClusterRequest::InternalSwap(GetClusterRequest* other) {
  name_.Swap(&other->name_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetClusterRequest::GetMetadata() const {
  protobuf_google_2fbigtable_2fadmin_2fv2_2fbigtable_5finstance_5fadmin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fbigtable_2fadmin_2fv2_2fbigtable_5finstance_5fadmin_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetClusterRequest

// string name = 1;
void GetClusterRequest::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& GetClusterRequest::name() const {
  // @@protoc_insertion_point(field_get:google.bigtable.admin.v2.GetClusterRequest.name)
  return name_.GetNoArena();
}
void GetClusterRequest::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.bigtable.admin.v2.GetClusterRequest.name)
}
#if LANG_CXX11
void GetClusterRequest::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.bigtable.admin.v2.GetClusterRequest.name)
}
#endif
void GetClusterRequest::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.bigtable.admin.v2.GetClusterRequest.name)
}
void GetClusterRequest::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.bigtable.admin.v2.GetClusterRequest.name)
}
::std::string* GetClusterRequest::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:google.bigtable.admin.v2.GetClusterRequest.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GetClusterRequest::release_name() {
  // @@protoc_insertion_point(field_release:google.bigtable.admin.v2.GetClusterRequest.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GetClusterRequest::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:google.bigtable.admin.v2.GetClusterRequest.name)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListClustersRequest::kParentFieldNumber;
const int ListClustersRequest::kPageTokenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListClustersRequest::ListClustersRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_google_2fbigtable_2fadmin_2fv2_2fbigtable_5finstance_5fadmin_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.bigtable.admin.v2.ListClustersRequest)
}
ListClustersRequest::ListClustersRequest(const ListClustersRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  parent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.parent().size() > 0) {
    parent_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.parent_);
  }
  page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.page_token().size() > 0) {
    page_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.page_token_);
  }
  // @@protoc_insertion_point(copy_constructor:google.bigtable.admin.v2.ListClustersRequest)
}

void ListClustersRequest::SharedCtor() {
  parent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

ListClustersRequest::~ListClustersRequest() {
  // @@protoc_insertion_point(destructor:google.bigtable.admin.v2.ListClustersRequest)
  SharedDtor();
}

void ListClustersRequest::SharedDtor() {
  parent_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ListClustersRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ListClustersRequest::descriptor() {
  protobuf_google_2fbigtable_2fadmin_2fv2_2fbigtable_5finstance_5fadmin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fbigtable_2fadmin_2fv2_2fbigtable_5finstance_5fadmin_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListClustersRequest& ListClustersRequest::default_instance() {
  protobuf_google_2fbigtable_2fadmin_2fv2_2fbigtable_5finstance_5fadmin_2eproto::InitDefaults();
  return *internal_default_instance();
}

ListClustersRequest* ListClustersRequest::New(::google::protobuf::Arena* arena) const {
  ListClustersRequest* n = new ListClustersRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ListClustersRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.bigtable.admin.v2.ListClustersRequest)
  parent_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool ListClustersRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.bigtable.admin.v2.ListClustersRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string parent = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_parent()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->parent().data(), this->parent().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.bigtable.admin.v2.ListClustersRequest.parent"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string page_token = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_page_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->page_token().data(), this->page_token().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.bigtable.admin.v2.ListClustersRequest.page_token"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.bigtable.admin.v2.ListClustersRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.bigtable.admin.v2.ListClustersRequest)
  return false;
#undef DO_
}

void ListClustersRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.bigtable.admin.v2.ListClustersRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string parent = 1;
  if (this->parent().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->parent().data(), this->parent().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.bigtable.admin.v2.ListClustersRequest.parent");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->parent(), output);
  }

  // string page_token = 2;
  if (this->page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->page_token().data(), this->page_token().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.bigtable.admin.v2.ListClustersRequest.page_token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->page_token(), output);
  }

  // @@protoc_insertion_point(serialize_end:google.bigtable.admin.v2.ListClustersRequest)
}

::google::protobuf::uint8* ListClustersRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.bigtable.admin.v2.ListClustersRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string parent = 1;
  if (this->parent().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->parent().data(), this->parent().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.bigtable.admin.v2.ListClustersRequest.parent");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->parent(), target);
  }

  // string page_token = 2;
  if (this->page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->page_token().data(), this->page_token().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.bigtable.admin.v2.ListClustersRequest.page_token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->page_token(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.bigtable.admin.v2.ListClustersRequest)
  return target;
}

size_t ListClustersRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.bigtable.admin.v2.ListClustersRequest)
  size_t total_size = 0;

  // string parent = 1;
  if (this->parent().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->parent());
  }

  // string page_token = 2;
  if (this->page_token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->page_token());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ListClustersRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.bigtable.admin.v2.ListClustersRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ListClustersRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListClustersRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.bigtable.admin.v2.ListClustersRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.bigtable.admin.v2.ListClustersRequest)
    MergeFrom(*source);
  }
}

void ListClustersRequest::MergeFrom(const ListClustersRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.bigtable.admin.v2.ListClustersRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.parent().size() > 0) {

    parent_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.parent_);
  }
  if (from.page_token().size() > 0) {

    page_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.page_token_);
  }
}

void ListClustersRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.bigtable.admin.v2.ListClustersRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListClustersRequest::CopyFrom(const ListClustersRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.bigtable.admin.v2.ListClustersRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListClustersRequest::IsInitialized() const {
  return true;
}

void ListClustersRequest::Swap(ListClustersRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListClustersRequest::InternalSwap(ListClustersRequest* other) {
  parent_.Swap(&other->parent_);
  page_token_.Swap(&other->page_token_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ListClustersRequest::GetMetadata() const {
  protobuf_google_2fbigtable_2fadmin_2fv2_2fbigtable_5finstance_5fadmin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fbigtable_2fadmin_2fv2_2fbigtable_5finstance_5fadmin_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ListClustersRequest

// string parent = 1;
void ListClustersRequest::clear_parent() {
  parent_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ListClustersRequest::parent() const {
  // @@protoc_insertion_point(field_get:google.bigtable.admin.v2.ListClustersRequest.parent)
  return parent_.GetNoArena();
}
void ListClustersRequest::set_parent(const ::std::string& value) {
  
  parent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.bigtable.admin.v2.ListClustersRequest.parent)
}
#if LANG_CXX11
void ListClustersRequest::set_parent(::std::string&& value) {
  
  parent_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.bigtable.admin.v2.ListClustersRequest.parent)
}
#endif
void ListClustersRequest::set_parent(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  parent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.bigtable.admin.v2.ListClustersRequest.parent)
}
void ListClustersRequest::set_parent(const char* value, size_t size) {
  
  parent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.bigtable.admin.v2.ListClustersRequest.parent)
}
::std::string* ListClustersRequest::mutable_parent() {
  
  // @@protoc_insertion_point(field_mutable:google.bigtable.admin.v2.ListClustersRequest.parent)
  return parent_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ListClustersRequest::release_parent() {
  // @@protoc_insertion_point(field_release:google.bigtable.admin.v2.ListClustersRequest.parent)
  
  return parent_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ListClustersRequest::set_allocated_parent(::std::string* parent) {
  if (parent != NULL) {
    
  } else {
    
  }
  parent_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), parent);
  // @@protoc_insertion_point(field_set_allocated:google.bigtable.admin.v2.ListClustersRequest.parent)
}

// string page_token = 2;
void ListClustersRequest::clear_page_token() {
  page_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ListClustersRequest::page_token() const {
  // @@protoc_insertion_point(field_get:google.bigtable.admin.v2.ListClustersRequest.page_token)
  return page_token_.GetNoArena();
}
void ListClustersRequest::set_page_token(const ::std::string& value) {
  
  page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.bigtable.admin.v2.ListClustersRequest.page_token)
}
#if LANG_CXX11
void ListClustersRequest::set_page_token(::std::string&& value) {
  
  page_token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.bigtable.admin.v2.ListClustersRequest.page_token)
}
#endif
void ListClustersRequest::set_page_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.bigtable.admin.v2.ListClustersRequest.page_token)
}
void ListClustersRequest::set_page_token(const char* value, size_t size) {
  
  page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.bigtable.admin.v2.ListClustersRequest.page_token)
}
::std::string* ListClustersRequest::mutable_page_token() {
  
  // @@protoc_insertion_point(field_mutable:google.bigtable.admin.v2.ListClustersRequest.page_token)
  return page_token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ListClustersRequest::release_page_token() {
  // @@protoc_insertion_point(field_release:google.bigtable.admin.v2.ListClustersRequest.page_token)
  
  return page_token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ListClustersRequest::set_allocated_page_token(::std::string* page_token) {
  if (page_token != NULL) {
    
  } else {
    
  }
  page_token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), page_token);
  // @@protoc_insertion_point(field_set_allocated:google.bigtable.admin.v2.ListClustersRequest.page_token)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListClustersResponse::kClustersFieldNumber;
const int ListClustersResponse::kFailedLocationsFieldNumber;
const int ListClustersResponse::kNextPageTokenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListClustersResponse::ListClustersResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_google_2fbigtable_2fadmin_2fv2_2fbigtable_5finstance_5fadmin_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.bigtable.admin.v2.ListClustersResponse)
}
ListClustersResponse::ListClustersResponse(const ListClustersResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      clusters_(from.clusters_),
      failed_locations_(from.failed_locations_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  next_page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.next_page_token().size() > 0) {
    next_page_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.next_page_token_);
  }
  // @@protoc_insertion_point(copy_constructor:google.bigtable.admin.v2.ListClustersResponse)
}

void ListClustersResponse::SharedCtor() {
  next_page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

ListClustersResponse::~ListClustersResponse() {
  // @@protoc_insertion_point(destructor:google.bigtable.admin.v2.ListClustersResponse)
  SharedDtor();
}

void ListClustersResponse::SharedDtor() {
  next_page_token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ListClustersResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ListClustersResponse::descriptor() {
  protobuf_google_2fbigtable_2fadmin_2fv2_2fbigtable_5finstance_5fadmin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fbigtable_2fadmin_2fv2_2fbigtable_5finstance_5fadmin_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListClustersResponse& ListClustersResponse::default_instance() {
  protobuf_google_2fbigtable_2fadmin_2fv2_2fbigtable_5finstance_5fadmin_2eproto::InitDefaults();
  return *internal_default_instance();
}

ListClustersResponse* ListClustersResponse::New(::google::protobuf::Arena* arena) const {
  ListClustersResponse* n = new ListClustersResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ListClustersResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:google.bigtable.admin.v2.ListClustersResponse)
  clusters_.Clear();
  failed_locations_.Clear();
  next_page_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool ListClustersResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.bigtable.admin.v2.ListClustersResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .google.bigtable.admin.v2.Cluster clusters = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_clusters()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string failed_locations = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_failed_locations()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->failed_locations(this->failed_locations_size() - 1).data(),
            this->failed_locations(this->failed_locations_size() - 1).length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.bigtable.admin.v2.ListClustersResponse.failed_locations"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string next_page_token = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_next_page_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->next_page_token().data(), this->next_page_token().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.bigtable.admin.v2.ListClustersResponse.next_page_token"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.bigtable.admin.v2.ListClustersResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.bigtable.admin.v2.ListClustersResponse)
  return false;
#undef DO_
}

void ListClustersResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.bigtable.admin.v2.ListClustersResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.bigtable.admin.v2.Cluster clusters = 1;
  for (unsigned int i = 0, n = this->clusters_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->clusters(i), output);
  }

  // repeated string failed_locations = 2;
  for (int i = 0, n = this->failed_locations_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->failed_locations(i).data(), this->failed_locations(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.bigtable.admin.v2.ListClustersResponse.failed_locations");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->failed_locations(i), output);
  }

  // string next_page_token = 3;
  if (this->next_page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->next_page_token().data(), this->next_page_token().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.bigtable.admin.v2.ListClustersResponse.next_page_token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->next_page_token(), output);
  }

  // @@protoc_insertion_point(serialize_end:google.bigtable.admin.v2.ListClustersResponse)
}

::google::protobuf::uint8* ListClustersResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.bigtable.admin.v2.ListClustersResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.bigtable.admin.v2.Cluster clusters = 1;
  for (unsigned int i = 0, n = this->clusters_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->clusters(i), deterministic, target);
  }

  // repeated string failed_locations = 2;
  for (int i = 0, n = this->failed_locations_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->failed_locations(i).data(), this->failed_locations(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.bigtable.admin.v2.ListClustersResponse.failed_locations");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->failed_locations(i), target);
  }

  // string next_page_token = 3;
  if (this->next_page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->next_page_token().data(), this->next_page_token().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.bigtable.admin.v2.ListClustersResponse.next_page_token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->next_page_token(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.bigtable.admin.v2.ListClustersResponse)
  return target;
}

size_t ListClustersResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.bigtable.admin.v2.ListClustersResponse)
  size_t total_size = 0;

  // repeated .google.bigtable.admin.v2.Cluster clusters = 1;
  {
    unsigned int count = this->clusters_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->clusters(i));
    }
  }

  // repeated string failed_locations = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->failed_locations_size());
  for (int i = 0, n = this->failed_locations_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->failed_locations(i));
  }

  // string next_page_token = 3;
  if (this->next_page_token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->next_page_token());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ListClustersResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.bigtable.admin.v2.ListClustersResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ListClustersResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListClustersResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.bigtable.admin.v2.ListClustersResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.bigtable.admin.v2.ListClustersResponse)
    MergeFrom(*source);
  }
}

void ListClustersResponse::MergeFrom(const ListClustersResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.bigtable.admin.v2.ListClustersResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  clusters_.MergeFrom(from.clusters_);
  failed_locations_.MergeFrom(from.failed_locations_);
  if (from.next_page_token().size() > 0) {

    next_page_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.next_page_token_);
  }
}

void ListClustersResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.bigtable.admin.v2.ListClustersResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListClustersResponse::CopyFrom(const ListClustersResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.bigtable.admin.v2.ListClustersResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListClustersResponse::IsInitialized() const {
  return true;
}

void ListClustersResponse::Swap(ListClustersResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListClustersResponse::InternalSwap(ListClustersResponse* other) {
  clusters_.InternalSwap(&other->clusters_);
  failed_locations_.InternalSwap(&other->failed_locations_);
  next_page_token_.Swap(&other->next_page_token_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ListClustersResponse::GetMetadata() const {
  protobuf_google_2fbigtable_2fadmin_2fv2_2fbigtable_5finstance_5fadmin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fbigtable_2fadmin_2fv2_2fbigtable_5finstance_5fadmin_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ListClustersResponse

// repeated .google.bigtable.admin.v2.Cluster clusters = 1;
int ListClustersResponse::clusters_size() const {
  return clusters_.size();
}
void ListClustersResponse::clear_clusters() {
  clusters_.Clear();
}
const ::google::bigtable::admin::v2::Cluster& ListClustersResponse::clusters(int index) const {
  // @@protoc_insertion_point(field_get:google.bigtable.admin.v2.ListClustersResponse.clusters)
  return clusters_.Get(index);
}
::google::bigtable::admin::v2::Cluster* ListClustersResponse::mutable_clusters(int index) {
  // @@protoc_insertion_point(field_mutable:google.bigtable.admin.v2.ListClustersResponse.clusters)
  return clusters_.Mutable(index);
}
::google::bigtable::admin::v2::Cluster* ListClustersResponse::add_clusters() {
  // @@protoc_insertion_point(field_add:google.bigtable.admin.v2.ListClustersResponse.clusters)
  return clusters_.Add();
}
::google::protobuf::RepeatedPtrField< ::google::bigtable::admin::v2::Cluster >*
ListClustersResponse::mutable_clusters() {
  // @@protoc_insertion_point(field_mutable_list:google.bigtable.admin.v2.ListClustersResponse.clusters)
  return &clusters_;
}
const ::google::protobuf::RepeatedPtrField< ::google::bigtable::admin::v2::Cluster >&
ListClustersResponse::clusters() const {
  // @@protoc_insertion_point(field_list:google.bigtable.admin.v2.ListClustersResponse.clusters)
  return clusters_;
}

// repeated string failed_locations = 2;
int ListClustersResponse::failed_locations_size() const {
  return failed_locations_.size();
}
void ListClustersResponse::clear_failed_locations() {
  failed_locations_.Clear();
}
const ::std::string& ListClustersResponse::failed_locations(int index) const {
  // @@protoc_insertion_point(field_get:google.bigtable.admin.v2.ListClustersResponse.failed_locations)
  return failed_locations_.Get(index);
}
::std::string* ListClustersResponse::mutable_failed_locations(int index) {
  // @@protoc_insertion_point(field_mutable:google.bigtable.admin.v2.ListClustersResponse.failed_locations)
  return failed_locations_.Mutable(index);
}
void ListClustersResponse::set_failed_locations(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:google.bigtable.admin.v2.ListClustersResponse.failed_locations)
  failed_locations_.Mutable(index)->assign(value);
}
#if LANG_CXX11
void ListClustersResponse::set_failed_locations(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:google.bigtable.admin.v2.ListClustersResponse.failed_locations)
  failed_locations_.Mutable(index)->assign(std::move(value));
}
#endif
void ListClustersResponse::set_failed_locations(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  failed_locations_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:google.bigtable.admin.v2.ListClustersResponse.failed_locations)
}
void ListClustersResponse::set_failed_locations(int index, const char* value, size_t size) {
  failed_locations_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:google.bigtable.admin.v2.ListClustersResponse.failed_locations)
}
::std::string* ListClustersResponse::add_failed_locations() {
  // @@protoc_insertion_point(field_add_mutable:google.bigtable.admin.v2.ListClustersResponse.failed_locations)
  return failed_locations_.Add();
}
void ListClustersResponse::add_failed_locations(const ::std::string& value) {
  failed_locations_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:google.bigtable.admin.v2.ListClustersResponse.failed_locations)
}
#if LANG_CXX11
void ListClustersResponse::add_failed_locations(::std::string&& value) {
  failed_locations_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:google.bigtable.admin.v2.ListClustersResponse.failed_locations)
}
#endif
void ListClustersResponse::add_failed_locations(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  failed_locations_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:google.bigtable.admin.v2.ListClustersResponse.failed_locations)
}
void ListClustersResponse::add_failed_locations(const char* value, size_t size) {
  failed_locations_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:google.bigtable.admin.v2.ListClustersResponse.failed_locations)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
ListClustersResponse::failed_locations() const {
  // @@protoc_insertion_point(field_list:google.bigtable.admin.v2.ListClustersResponse.failed_locations)
  return failed_locations_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
ListClustersResponse::mutable_failed_locations() {
  // @@protoc_insertion_point(field_mutable_list:google.bigtable.admin.v2.ListClustersResponse.failed_locations)
  return &failed_locations_;
}

// string next_page_token = 3;
void ListClustersResponse::clear_next_page_token() {
  next_page_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ListClustersResponse::next_page_token() const {
  // @@protoc_insertion_point(field_get:google.bigtable.admin.v2.ListClustersResponse.next_page_token)
  return next_page_token_.GetNoArena();
}
void ListClustersResponse::set_next_page_token(const ::std::string& value) {
  
  next_page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.bigtable.admin.v2.ListClustersResponse.next_page_token)
}
#if LANG_CXX11
void ListClustersResponse::set_next_page_token(::std::string&& value) {
  
  next_page_token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.bigtable.admin.v2.ListClustersResponse.next_page_token)
}
#endif
void ListClustersResponse::set_next_page_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  next_page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.bigtable.admin.v2.ListClustersResponse.next_page_token)
}
void ListClustersResponse::set_next_page_token(const char* value, size_t size) {
  
  next_page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.bigtable.admin.v2.ListClustersResponse.next_page_token)
}
::std::string* ListClustersResponse::mutable_next_page_token() {
  
  // @@protoc_insertion_point(field_mutable:google.bigtable.admin.v2.ListClustersResponse.next_page_token)
  return next_page_token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ListClustersResponse::release_next_page_token() {
  // @@protoc_insertion_point(field_release:google.bigtable.admin.v2.ListClustersResponse.next_page_token)
  
  return next_page_token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ListClustersResponse::set_allocated_next_page_token(::std::string* next_page_token) {
  if (next_page_token != NULL) {
    
  } else {
    
  }
  next_page_token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), next_page_token);
  // @@protoc_insertion_point(field_set_allocated:google.bigtable.admin.v2.ListClustersResponse.next_page_token)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DeleteClusterRequest::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DeleteClusterRequest::DeleteClusterRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_google_2fbigtable_2fadmin_2fv2_2fbigtable_5finstance_5fadmin_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.bigtable.admin.v2.DeleteClusterRequest)
}
DeleteClusterRequest::DeleteClusterRequest(const DeleteClusterRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  // @@protoc_insertion_point(copy_constructor:google.bigtable.admin.v2.DeleteClusterRequest)
}

void DeleteClusterRequest::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

DeleteClusterRequest::~DeleteClusterRequest() {
  // @@protoc_insertion_point(destructor:google.bigtable.admin.v2.DeleteClusterRequest)
  SharedDtor();
}

void DeleteClusterRequest::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DeleteClusterRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DeleteClusterRequest::descriptor() {
  protobuf_google_2fbigtable_2fadmin_2fv2_2fbigtable_5finstance_5fadmin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fbigtable_2fadmin_2fv2_2fbigtable_5finstance_5fadmin_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DeleteClusterRequest& DeleteClusterRequest::default_instance() {
  protobuf_google_2fbigtable_2fadmin_2fv2_2fbigtable_5finstance_5fadmin_2eproto::InitDefaults();
  return *internal_default_instance();
}

DeleteClusterRequest* DeleteClusterRequest::New(::google::protobuf::Arena* arena) const {
  DeleteClusterRequest* n = new DeleteClusterRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DeleteClusterRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.bigtable.admin.v2.DeleteClusterRequest)
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool DeleteClusterRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.bigtable.admin.v2.DeleteClusterRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.bigtable.admin.v2.DeleteClusterRequest.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.bigtable.admin.v2.DeleteClusterRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.bigtable.admin.v2.DeleteClusterRequest)
  return false;
#undef DO_
}

void DeleteClusterRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.bigtable.admin.v2.DeleteClusterRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.bigtable.admin.v2.DeleteClusterRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // @@protoc_insertion_point(serialize_end:google.bigtable.admin.v2.DeleteClusterRequest)
}

::google::protobuf::uint8* DeleteClusterRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.bigtable.admin.v2.DeleteClusterRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.bigtable.admin.v2.DeleteClusterRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.bigtable.admin.v2.DeleteClusterRequest)
  return target;
}

size_t DeleteClusterRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.bigtable.admin.v2.DeleteClusterRequest)
  size_t total_size = 0;

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DeleteClusterRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.bigtable.admin.v2.DeleteClusterRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteClusterRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DeleteClusterRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.bigtable.admin.v2.DeleteClusterRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.bigtable.admin.v2.DeleteClusterRequest)
    MergeFrom(*source);
  }
}

void DeleteClusterRequest::MergeFrom(const DeleteClusterRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.bigtable.admin.v2.DeleteClusterRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
}

void DeleteClusterRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.bigtable.admin.v2.DeleteClusterRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteClusterRequest::CopyFrom(const DeleteClusterRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.bigtable.admin.v2.DeleteClusterRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteClusterRequest::IsInitialized() const {
  return true;
}

void DeleteClusterRequest::Swap(DeleteClusterRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DeleteClusterRequest::InternalSwap(DeleteClusterRequest* other) {
  name_.Swap(&other->name_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DeleteClusterRequest::GetMetadata() const {
  protobuf_google_2fbigtable_2fadmin_2fv2_2fbigtable_5finstance_5fadmin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fbigtable_2fadmin_2fv2_2fbigtable_5finstance_5fadmin_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DeleteClusterRequest

// string name = 1;
void DeleteClusterRequest::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& DeleteClusterRequest::name() const {
  // @@protoc_insertion_point(field_get:google.bigtable.admin.v2.DeleteClusterRequest.name)
  return name_.GetNoArena();
}
void DeleteClusterRequest::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.bigtable.admin.v2.DeleteClusterRequest.name)
}
#if LANG_CXX11
void DeleteClusterRequest::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.bigtable.admin.v2.DeleteClusterRequest.name)
}
#endif
void DeleteClusterRequest::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.bigtable.admin.v2.DeleteClusterRequest.name)
}
void DeleteClusterRequest::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.bigtable.admin.v2.DeleteClusterRequest.name)
}
::std::string* DeleteClusterRequest::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:google.bigtable.admin.v2.DeleteClusterRequest.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* DeleteClusterRequest::release_name() {
  // @@protoc_insertion_point(field_release:google.bigtable.admin.v2.DeleteClusterRequest.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void DeleteClusterRequest::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:google.bigtable.admin.v2.DeleteClusterRequest.name)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CreateInstanceMetadata::kOriginalRequestFieldNumber;
const int CreateInstanceMetadata::kRequestTimeFieldNumber;
const int CreateInstanceMetadata::kFinishTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CreateInstanceMetadata::CreateInstanceMetadata()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_google_2fbigtable_2fadmin_2fv2_2fbigtable_5finstance_5fadmin_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.bigtable.admin.v2.CreateInstanceMetadata)
}
CreateInstanceMetadata::CreateInstanceMetadata(const CreateInstanceMetadata& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_original_request()) {
    original_request_ = new ::google::bigtable::admin::v2::CreateInstanceRequest(*from.original_request_);
  } else {
    original_request_ = NULL;
  }
  if (from.has_request_time()) {
    request_time_ = new ::google::protobuf::Timestamp(*from.request_time_);
  } else {
    request_time_ = NULL;
  }
  if (from.has_finish_time()) {
    finish_time_ = new ::google::protobuf::Timestamp(*from.finish_time_);
  } else {
    finish_time_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.bigtable.admin.v2.CreateInstanceMetadata)
}

void CreateInstanceMetadata::SharedCtor() {
  ::memset(&original_request_, 0, reinterpret_cast<char*>(&finish_time_) -
    reinterpret_cast<char*>(&original_request_) + sizeof(finish_time_));
  _cached_size_ = 0;
}

CreateInstanceMetadata::~CreateInstanceMetadata() {
  // @@protoc_insertion_point(destructor:google.bigtable.admin.v2.CreateInstanceMetadata)
  SharedDtor();
}

void CreateInstanceMetadata::SharedDtor() {
  if (this != internal_default_instance()) {
    delete original_request_;
  }
  if (this != internal_default_instance()) {
    delete request_time_;
  }
  if (this != internal_default_instance()) {
    delete finish_time_;
  }
}

void CreateInstanceMetadata::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CreateInstanceMetadata::descriptor() {
  protobuf_google_2fbigtable_2fadmin_2fv2_2fbigtable_5finstance_5fadmin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fbigtable_2fadmin_2fv2_2fbigtable_5finstance_5fadmin_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CreateInstanceMetadata& CreateInstanceMetadata::default_instance() {
  protobuf_google_2fbigtable_2fadmin_2fv2_2fbigtable_5finstance_5fadmin_2eproto::InitDefaults();
  return *internal_default_instance();
}

CreateInstanceMetadata* CreateInstanceMetadata::New(::google::protobuf::Arena* arena) const {
  CreateInstanceMetadata* n = new CreateInstanceMetadata;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CreateInstanceMetadata::Clear() {
// @@protoc_insertion_point(message_clear_start:google.bigtable.admin.v2.CreateInstanceMetadata)
  if (GetArenaNoVirtual() == NULL && original_request_ != NULL) {
    delete original_request_;
  }
  original_request_ = NULL;
  if (GetArenaNoVirtual() == NULL && request_time_ != NULL) {
    delete request_time_;
  }
  request_time_ = NULL;
  if (GetArenaNoVirtual() == NULL && finish_time_ != NULL) {
    delete finish_time_;
  }
  finish_time_ = NULL;
}

bool CreateInstanceMetadata::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.bigtable.admin.v2.CreateInstanceMetadata)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.bigtable.admin.v2.CreateInstanceRequest original_request = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_original_request()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Timestamp request_time = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_request_time()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Timestamp finish_time = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_finish_time()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.bigtable.admin.v2.CreateInstanceMetadata)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.bigtable.admin.v2.CreateInstanceMetadata)
  return false;
#undef DO_
}

void CreateInstanceMetadata::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.bigtable.admin.v2.CreateInstanceMetadata)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.bigtable.admin.v2.CreateInstanceRequest original_request = 1;
  if (this->has_original_request()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->original_request_, output);
  }

  // .google.protobuf.Timestamp request_time = 2;
  if (this->has_request_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->request_time_, output);
  }

  // .google.protobuf.Timestamp finish_time = 3;
  if (this->has_finish_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->finish_time_, output);
  }

  // @@protoc_insertion_point(serialize_end:google.bigtable.admin.v2.CreateInstanceMetadata)
}

::google::protobuf::uint8* CreateInstanceMetadata::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.bigtable.admin.v2.CreateInstanceMetadata)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.bigtable.admin.v2.CreateInstanceRequest original_request = 1;
  if (this->has_original_request()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->original_request_, deterministic, target);
  }

  // .google.protobuf.Timestamp request_time = 2;
  if (this->has_request_time()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->request_time_, deterministic, target);
  }

  // .google.protobuf.Timestamp finish_time = 3;
  if (this->has_finish_time()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->finish_time_, deterministic, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.bigtable.admin.v2.CreateInstanceMetadata)
  return target;
}

size_t CreateInstanceMetadata::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.bigtable.admin.v2.CreateInstanceMetadata)
  size_t total_size = 0;

  // .google.bigtable.admin.v2.CreateInstanceRequest original_request = 1;
  if (this->has_original_request()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->original_request_);
  }

  // .google.protobuf.Timestamp request_time = 2;
  if (this->has_request_time()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->request_time_);
  }

  // .google.protobuf.Timestamp finish_time = 3;
  if (this->has_finish_time()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->finish_time_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CreateInstanceMetadata::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.bigtable.admin.v2.CreateInstanceMetadata)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateInstanceMetadata* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CreateInstanceMetadata>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.bigtable.admin.v2.CreateInstanceMetadata)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.bigtable.admin.v2.CreateInstanceMetadata)
    MergeFrom(*source);
  }
}

void CreateInstanceMetadata::MergeFrom(const CreateInstanceMetadata& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.bigtable.admin.v2.CreateInstanceMetadata)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_original_request()) {
    mutable_original_request()->::google::bigtable::admin::v2::CreateInstanceRequest::MergeFrom(from.original_request());
  }
  if (from.has_request_time()) {
    mutable_request_time()->::google::protobuf::Timestamp::MergeFrom(from.request_time());
  }
  if (from.has_finish_time()) {
    mutable_finish_time()->::google::protobuf::Timestamp::MergeFrom(from.finish_time());
  }
}

void CreateInstanceMetadata::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.bigtable.admin.v2.CreateInstanceMetadata)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateInstanceMetadata::CopyFrom(const CreateInstanceMetadata& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.bigtable.admin.v2.CreateInstanceMetadata)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateInstanceMetadata::IsInitialized() const {
  return true;
}

void CreateInstanceMetadata::Swap(CreateInstanceMetadata* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CreateInstanceMetadata::InternalSwap(CreateInstanceMetadata* other) {
  std::swap(original_request_, other->original_request_);
  std::swap(request_time_, other->request_time_);
  std::swap(finish_time_, other->finish_time_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CreateInstanceMetadata::GetMetadata() const {
  protobuf_google_2fbigtable_2fadmin_2fv2_2fbigtable_5finstance_5fadmin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fbigtable_2fadmin_2fv2_2fbigtable_5finstance_5fadmin_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CreateInstanceMetadata

// .google.bigtable.admin.v2.CreateInstanceRequest original_request = 1;
bool CreateInstanceMetadata::has_original_request() const {
  return this != internal_default_instance() && original_request_ != NULL;
}
void CreateInstanceMetadata::clear_original_request() {
  if (GetArenaNoVirtual() == NULL && original_request_ != NULL) delete original_request_;
  original_request_ = NULL;
}
const ::google::bigtable::admin::v2::CreateInstanceRequest& CreateInstanceMetadata::original_request() const {
  // @@protoc_insertion_point(field_get:google.bigtable.admin.v2.CreateInstanceMetadata.original_request)
  return original_request_ != NULL ? *original_request_
                         : *::google::bigtable::admin::v2::CreateInstanceRequest::internal_default_instance();
}
::google::bigtable::admin::v2::CreateInstanceRequest* CreateInstanceMetadata::mutable_original_request() {
  
  if (original_request_ == NULL) {
    original_request_ = new ::google::bigtable::admin::v2::CreateInstanceRequest;
  }
  // @@protoc_insertion_point(field_mutable:google.bigtable.admin.v2.CreateInstanceMetadata.original_request)
  return original_request_;
}
::google::bigtable::admin::v2::CreateInstanceRequest* CreateInstanceMetadata::release_original_request() {
  // @@protoc_insertion_point(field_release:google.bigtable.admin.v2.CreateInstanceMetadata.original_request)
  
  ::google::bigtable::admin::v2::CreateInstanceRequest* temp = original_request_;
  original_request_ = NULL;
  return temp;
}
void CreateInstanceMetadata::set_allocated_original_request(::google::bigtable::admin::v2::CreateInstanceRequest* original_request) {
  delete original_request_;
  original_request_ = original_request;
  if (original_request) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.bigtable.admin.v2.CreateInstanceMetadata.original_request)
}

// .google.protobuf.Timestamp request_time = 2;
bool CreateInstanceMetadata::has_request_time() const {
  return this != internal_default_instance() && request_time_ != NULL;
}
void CreateInstanceMetadata::clear_request_time() {
  if (GetArenaNoVirtual() == NULL && request_time_ != NULL) delete request_time_;
  request_time_ = NULL;
}
const ::google::protobuf::Timestamp& CreateInstanceMetadata::request_time() const {
  // @@protoc_insertion_point(field_get:google.bigtable.admin.v2.CreateInstanceMetadata.request_time)
  return request_time_ != NULL ? *request_time_
                         : *::google::protobuf::Timestamp::internal_default_instance();
}
::google::protobuf::Timestamp* CreateInstanceMetadata::mutable_request_time() {
  
  if (request_time_ == NULL) {
    request_time_ = new ::google::protobuf::Timestamp;
  }
  // @@protoc_insertion_point(field_mutable:google.bigtable.admin.v2.CreateInstanceMetadata.request_time)
  return request_time_;
}
::google::protobuf::Timestamp* CreateInstanceMetadata::release_request_time() {
  // @@protoc_insertion_point(field_release:google.bigtable.admin.v2.CreateInstanceMetadata.request_time)
  
  ::google::protobuf::Timestamp* temp = request_time_;
  request_time_ = NULL;
  return temp;
}
void CreateInstanceMetadata::set_allocated_request_time(::google::protobuf::Timestamp* request_time) {
  delete request_time_;
  if (request_time != NULL && request_time->GetArena() != NULL) {
    ::google::protobuf::Timestamp* new_request_time = new ::google::protobuf::Timestamp;
    new_request_time->CopyFrom(*request_time);
    request_time = new_request_time;
  }
  request_time_ = request_time;
  if (request_time) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.bigtable.admin.v2.CreateInstanceMetadata.request_time)
}

// .google.protobuf.Timestamp finish_time = 3;
bool CreateInstanceMetadata::has_finish_time() const {
  return this != internal_default_instance() && finish_time_ != NULL;
}
void CreateInstanceMetadata::clear_finish_time() {
  if (GetArenaNoVirtual() == NULL && finish_time_ != NULL) delete finish_time_;
  finish_time_ = NULL;
}
const ::google::protobuf::Timestamp& CreateInstanceMetadata::finish_time() const {
  // @@protoc_insertion_point(field_get:google.bigtable.admin.v2.CreateInstanceMetadata.finish_time)
  return finish_time_ != NULL ? *finish_time_
                         : *::google::protobuf::Timestamp::internal_default_instance();
}
::google::protobuf::Timestamp* CreateInstanceMetadata::mutable_finish_time() {
  
  if (finish_time_ == NULL) {
    finish_time_ = new ::google::protobuf::Timestamp;
  }
  // @@protoc_insertion_point(field_mutable:google.bigtable.admin.v2.CreateInstanceMetadata.finish_time)
  return finish_time_;
}
::google::protobuf::Timestamp* CreateInstanceMetadata::release_finish_time() {
  // @@protoc_insertion_point(field_release:google.bigtable.admin.v2.CreateInstanceMetadata.finish_time)
  
  ::google::protobuf::Timestamp* temp = finish_time_;
  finish_time_ = NULL;
  return temp;
}
void CreateInstanceMetadata::set_allocated_finish_time(::google::protobuf::Timestamp* finish_time) {
  delete finish_time_;
  if (finish_time != NULL && finish_time->GetArena() != NULL) {
    ::google::protobuf::Timestamp* new_finish_time = new ::google::protobuf::Timestamp;
    new_finish_time->CopyFrom(*finish_time);
    finish_time = new_finish_time;
  }
  finish_time_ = finish_time;
  if (finish_time) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.bigtable.admin.v2.CreateInstanceMetadata.finish_time)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CreateClusterMetadata::kOriginalRequestFieldNumber;
const int CreateClusterMetadata::kRequestTimeFieldNumber;
const int CreateClusterMetadata::kFinishTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CreateClusterMetadata::CreateClusterMetadata()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_google_2fbigtable_2fadmin_2fv2_2fbigtable_5finstance_5fadmin_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.bigtable.admin.v2.CreateClusterMetadata)
}
CreateClusterMetadata::CreateClusterMetadata(const CreateClusterMetadata& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_original_request()) {
    original_request_ = new ::google::bigtable::admin::v2::CreateClusterRequest(*from.original_request_);
  } else {
    original_request_ = NULL;
  }
  if (from.has_request_time()) {
    request_time_ = new ::google::protobuf::Timestamp(*from.request_time_);
  } else {
    request_time_ = NULL;
  }
  if (from.has_finish_time()) {
    finish_time_ = new ::google::protobuf::Timestamp(*from.finish_time_);
  } else {
    finish_time_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.bigtable.admin.v2.CreateClusterMetadata)
}

void CreateClusterMetadata::SharedCtor() {
  ::memset(&original_request_, 0, reinterpret_cast<char*>(&finish_time_) -
    reinterpret_cast<char*>(&original_request_) + sizeof(finish_time_));
  _cached_size_ = 0;
}

CreateClusterMetadata::~CreateClusterMetadata() {
  // @@protoc_insertion_point(destructor:google.bigtable.admin.v2.CreateClusterMetadata)
  SharedDtor();
}

void CreateClusterMetadata::SharedDtor() {
  if (this != internal_default_instance()) {
    delete original_request_;
  }
  if (this != internal_default_instance()) {
    delete request_time_;
  }
  if (this != internal_default_instance()) {
    delete finish_time_;
  }
}

void CreateClusterMetadata::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CreateClusterMetadata::descriptor() {
  protobuf_google_2fbigtable_2fadmin_2fv2_2fbigtable_5finstance_5fadmin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fbigtable_2fadmin_2fv2_2fbigtable_5finstance_5fadmin_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CreateClusterMetadata& CreateClusterMetadata::default_instance() {
  protobuf_google_2fbigtable_2fadmin_2fv2_2fbigtable_5finstance_5fadmin_2eproto::InitDefaults();
  return *internal_default_instance();
}

CreateClusterMetadata* CreateClusterMetadata::New(::google::protobuf::Arena* arena) const {
  CreateClusterMetadata* n = new CreateClusterMetadata;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CreateClusterMetadata::Clear() {
// @@protoc_insertion_point(message_clear_start:google.bigtable.admin.v2.CreateClusterMetadata)
  if (GetArenaNoVirtual() == NULL && original_request_ != NULL) {
    delete original_request_;
  }
  original_request_ = NULL;
  if (GetArenaNoVirtual() == NULL && request_time_ != NULL) {
    delete request_time_;
  }
  request_time_ = NULL;
  if (GetArenaNoVirtual() == NULL && finish_time_ != NULL) {
    delete finish_time_;
  }
  finish_time_ = NULL;
}

bool CreateClusterMetadata::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.bigtable.admin.v2.CreateClusterMetadata)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.bigtable.admin.v2.CreateClusterRequest original_request = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_original_request()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Timestamp request_time = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_request_time()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Timestamp finish_time = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_finish_time()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.bigtable.admin.v2.CreateClusterMetadata)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.bigtable.admin.v2.CreateClusterMetadata)
  return false;
#undef DO_
}

void CreateClusterMetadata::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.bigtable.admin.v2.CreateClusterMetadata)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.bigtable.admin.v2.CreateClusterRequest original_request = 1;
  if (this->has_original_request()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->original_request_, output);
  }

  // .google.protobuf.Timestamp request_time = 2;
  if (this->has_request_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->request_time_, output);
  }

  // .google.protobuf.Timestamp finish_time = 3;
  if (this->has_finish_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->finish_time_, output);
  }

  // @@protoc_insertion_point(serialize_end:google.bigtable.admin.v2.CreateClusterMetadata)
}

::google::protobuf::uint8* CreateClusterMetadata::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.bigtable.admin.v2.CreateClusterMetadata)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.bigtable.admin.v2.CreateClusterRequest original_request = 1;
  if (this->has_original_request()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->original_request_, deterministic, target);
  }

  // .google.protobuf.Timestamp request_time = 2;
  if (this->has_request_time()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->request_time_, deterministic, target);
  }

  // .google.protobuf.Timestamp finish_time = 3;
  if (this->has_finish_time()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->finish_time_, deterministic, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.bigtable.admin.v2.CreateClusterMetadata)
  return target;
}

size_t CreateClusterMetadata::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.bigtable.admin.v2.CreateClusterMetadata)
  size_t total_size = 0;

  // .google.bigtable.admin.v2.CreateClusterRequest original_request = 1;
  if (this->has_original_request()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->original_request_);
  }

  // .google.protobuf.Timestamp request_time = 2;
  if (this->has_request_time()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->request_time_);
  }

  // .google.protobuf.Timestamp finish_time = 3;
  if (this->has_finish_time()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->finish_time_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CreateClusterMetadata::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.bigtable.admin.v2.CreateClusterMetadata)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateClusterMetadata* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CreateClusterMetadata>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.bigtable.admin.v2.CreateClusterMetadata)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.bigtable.admin.v2.CreateClusterMetadata)
    MergeFrom(*source);
  }
}

void CreateClusterMetadata::MergeFrom(const CreateClusterMetadata& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.bigtable.admin.v2.CreateClusterMetadata)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_original_request()) {
    mutable_original_request()->::google::bigtable::admin::v2::CreateClusterRequest::MergeFrom(from.original_request());
  }
  if (from.has_request_time()) {
    mutable_request_time()->::google::protobuf::Timestamp::MergeFrom(from.request_time());
  }
  if (from.has_finish_time()) {
    mutable_finish_time()->::google::protobuf::Timestamp::MergeFrom(from.finish_time());
  }
}

void CreateClusterMetadata::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.bigtable.admin.v2.CreateClusterMetadata)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateClusterMetadata::CopyFrom(const CreateClusterMetadata& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.bigtable.admin.v2.CreateClusterMetadata)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateClusterMetadata::IsInitialized() const {
  return true;
}

void CreateClusterMetadata::Swap(CreateClusterMetadata* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CreateClusterMetadata::InternalSwap(CreateClusterMetadata* other) {
  std::swap(original_request_, other->original_request_);
  std::swap(request_time_, other->request_time_);
  std::swap(finish_time_, other->finish_time_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CreateClusterMetadata::GetMetadata() const {
  protobuf_google_2fbigtable_2fadmin_2fv2_2fbigtable_5finstance_5fadmin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fbigtable_2fadmin_2fv2_2fbigtable_5finstance_5fadmin_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CreateClusterMetadata

// .google.bigtable.admin.v2.CreateClusterRequest original_request = 1;
bool CreateClusterMetadata::has_original_request() const {
  return this != internal_default_instance() && original_request_ != NULL;
}
void CreateClusterMetadata::clear_original_request() {
  if (GetArenaNoVirtual() == NULL && original_request_ != NULL) delete original_request_;
  original_request_ = NULL;
}
const ::google::bigtable::admin::v2::CreateClusterRequest& CreateClusterMetadata::original_request() const {
  // @@protoc_insertion_point(field_get:google.bigtable.admin.v2.CreateClusterMetadata.original_request)
  return original_request_ != NULL ? *original_request_
                         : *::google::bigtable::admin::v2::CreateClusterRequest::internal_default_instance();
}
::google::bigtable::admin::v2::CreateClusterRequest* CreateClusterMetadata::mutable_original_request() {
  
  if (original_request_ == NULL) {
    original_request_ = new ::google::bigtable::admin::v2::CreateClusterRequest;
  }
  // @@protoc_insertion_point(field_mutable:google.bigtable.admin.v2.CreateClusterMetadata.original_request)
  return original_request_;
}
::google::bigtable::admin::v2::CreateClusterRequest* CreateClusterMetadata::release_original_request() {
  // @@protoc_insertion_point(field_release:google.bigtable.admin.v2.CreateClusterMetadata.original_request)
  
  ::google::bigtable::admin::v2::CreateClusterRequest* temp = original_request_;
  original_request_ = NULL;
  return temp;
}
void CreateClusterMetadata::set_allocated_original_request(::google::bigtable::admin::v2::CreateClusterRequest* original_request) {
  delete original_request_;
  original_request_ = original_request;
  if (original_request) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.bigtable.admin.v2.CreateClusterMetadata.original_request)
}

// .google.protobuf.Timestamp request_time = 2;
bool CreateClusterMetadata::has_request_time() const {
  return this != internal_default_instance() && request_time_ != NULL;
}
void CreateClusterMetadata::clear_request_time() {
  if (GetArenaNoVirtual() == NULL && request_time_ != NULL) delete request_time_;
  request_time_ = NULL;
}
const ::google::protobuf::Timestamp& CreateClusterMetadata::request_time() const {
  // @@protoc_insertion_point(field_get:google.bigtable.admin.v2.CreateClusterMetadata.request_time)
  return request_time_ != NULL ? *request_time_
                         : *::google::protobuf::Timestamp::internal_default_instance();
}
::google::protobuf::Timestamp* CreateClusterMetadata::mutable_request_time() {
  
  if (request_time_ == NULL) {
    request_time_ = new ::google::protobuf::Timestamp;
  }
  // @@protoc_insertion_point(field_mutable:google.bigtable.admin.v2.CreateClusterMetadata.request_time)
  return request_time_;
}
::google::protobuf::Timestamp* CreateClusterMetadata::release_request_time() {
  // @@protoc_insertion_point(field_release:google.bigtable.admin.v2.CreateClusterMetadata.request_time)
  
  ::google::protobuf::Timestamp* temp = request_time_;
  request_time_ = NULL;
  return temp;
}
void CreateClusterMetadata::set_allocated_request_time(::google::protobuf::Timestamp* request_time) {
  delete request_time_;
  if (request_time != NULL && request_time->GetArena() != NULL) {
    ::google::protobuf::Timestamp* new_request_time = new ::google::protobuf::Timestamp;
    new_request_time->CopyFrom(*request_time);
    request_time = new_request_time;
  }
  request_time_ = request_time;
  if (request_time) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.bigtable.admin.v2.CreateClusterMetadata.request_time)
}

// .google.protobuf.Timestamp finish_time = 3;
bool CreateClusterMetadata::has_finish_time() const {
  return this != internal_default_instance() && finish_time_ != NULL;
}
void CreateClusterMetadata::clear_finish_time() {
  if (GetArenaNoVirtual() == NULL && finish_time_ != NULL) delete finish_time_;
  finish_time_ = NULL;
}
const ::google::protobuf::Timestamp& CreateClusterMetadata::finish_time() const {
  // @@protoc_insertion_point(field_get:google.bigtable.admin.v2.CreateClusterMetadata.finish_time)
  return finish_time_ != NULL ? *finish_time_
                         : *::google::protobuf::Timestamp::internal_default_instance();
}
::google::protobuf::Timestamp* CreateClusterMetadata::mutable_finish_time() {
  
  if (finish_time_ == NULL) {
    finish_time_ = new ::google::protobuf::Timestamp;
  }
  // @@protoc_insertion_point(field_mutable:google.bigtable.admin.v2.CreateClusterMetadata.finish_time)
  return finish_time_;
}
::google::protobuf::Timestamp* CreateClusterMetadata::release_finish_time() {
  // @@protoc_insertion_point(field_release:google.bigtable.admin.v2.CreateClusterMetadata.finish_time)
  
  ::google::protobuf::Timestamp* temp = finish_time_;
  finish_time_ = NULL;
  return temp;
}
void CreateClusterMetadata::set_allocated_finish_time(::google::protobuf::Timestamp* finish_time) {
  delete finish_time_;
  if (finish_time != NULL && finish_time->GetArena() != NULL) {
    ::google::protobuf::Timestamp* new_finish_time = new ::google::protobuf::Timestamp;
    new_finish_time->CopyFrom(*finish_time);
    finish_time = new_finish_time;
  }
  finish_time_ = finish_time;
  if (finish_time) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.bigtable.admin.v2.CreateClusterMetadata.finish_time)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UpdateClusterMetadata::kOriginalRequestFieldNumber;
const int UpdateClusterMetadata::kRequestTimeFieldNumber;
const int UpdateClusterMetadata::kFinishTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UpdateClusterMetadata::UpdateClusterMetadata()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_google_2fbigtable_2fadmin_2fv2_2fbigtable_5finstance_5fadmin_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.bigtable.admin.v2.UpdateClusterMetadata)
}
UpdateClusterMetadata::UpdateClusterMetadata(const UpdateClusterMetadata& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_original_request()) {
    original_request_ = new ::google::bigtable::admin::v2::Cluster(*from.original_request_);
  } else {
    original_request_ = NULL;
  }
  if (from.has_request_time()) {
    request_time_ = new ::google::protobuf::Timestamp(*from.request_time_);
  } else {
    request_time_ = NULL;
  }
  if (from.has_finish_time()) {
    finish_time_ = new ::google::protobuf::Timestamp(*from.finish_time_);
  } else {
    finish_time_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.bigtable.admin.v2.UpdateClusterMetadata)
}

void UpdateClusterMetadata::SharedCtor() {
  ::memset(&original_request_, 0, reinterpret_cast<char*>(&finish_time_) -
    reinterpret_cast<char*>(&original_request_) + sizeof(finish_time_));
  _cached_size_ = 0;
}

UpdateClusterMetadata::~UpdateClusterMetadata() {
  // @@protoc_insertion_point(destructor:google.bigtable.admin.v2.UpdateClusterMetadata)
  SharedDtor();
}

void UpdateClusterMetadata::SharedDtor() {
  if (this != internal_default_instance()) {
    delete original_request_;
  }
  if (this != internal_default_instance()) {
    delete request_time_;
  }
  if (this != internal_default_instance()) {
    delete finish_time_;
  }
}

void UpdateClusterMetadata::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UpdateClusterMetadata::descriptor() {
  protobuf_google_2fbigtable_2fadmin_2fv2_2fbigtable_5finstance_5fadmin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fbigtable_2fadmin_2fv2_2fbigtable_5finstance_5fadmin_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UpdateClusterMetadata& UpdateClusterMetadata::default_instance() {
  protobuf_google_2fbigtable_2fadmin_2fv2_2fbigtable_5finstance_5fadmin_2eproto::InitDefaults();
  return *internal_default_instance();
}

UpdateClusterMetadata* UpdateClusterMetadata::New(::google::protobuf::Arena* arena) const {
  UpdateClusterMetadata* n = new UpdateClusterMetadata;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UpdateClusterMetadata::Clear() {
// @@protoc_insertion_point(message_clear_start:google.bigtable.admin.v2.UpdateClusterMetadata)
  if (GetArenaNoVirtual() == NULL && original_request_ != NULL) {
    delete original_request_;
  }
  original_request_ = NULL;
  if (GetArenaNoVirtual() == NULL && request_time_ != NULL) {
    delete request_time_;
  }
  request_time_ = NULL;
  if (GetArenaNoVirtual() == NULL && finish_time_ != NULL) {
    delete finish_time_;
  }
  finish_time_ = NULL;
}

bool UpdateClusterMetadata::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.bigtable.admin.v2.UpdateClusterMetadata)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.bigtable.admin.v2.Cluster original_request = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_original_request()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Timestamp request_time = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_request_time()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Timestamp finish_time = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_finish_time()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.bigtable.admin.v2.UpdateClusterMetadata)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.bigtable.admin.v2.UpdateClusterMetadata)
  return false;
#undef DO_
}

void UpdateClusterMetadata::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.bigtable.admin.v2.UpdateClusterMetadata)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.bigtable.admin.v2.Cluster original_request = 1;
  if (this->has_original_request()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->original_request_, output);
  }

  // .google.protobuf.Timestamp request_time = 2;
  if (this->has_request_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->request_time_, output);
  }

  // .google.protobuf.Timestamp finish_time = 3;
  if (this->has_finish_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->finish_time_, output);
  }

  // @@protoc_insertion_point(serialize_end:google.bigtable.admin.v2.UpdateClusterMetadata)
}

::google::protobuf::uint8* UpdateClusterMetadata::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.bigtable.admin.v2.UpdateClusterMetadata)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.bigtable.admin.v2.Cluster original_request = 1;
  if (this->has_original_request()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->original_request_, deterministic, target);
  }

  // .google.protobuf.Timestamp request_time = 2;
  if (this->has_request_time()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->request_time_, deterministic, target);
  }

  // .google.protobuf.Timestamp finish_time = 3;
  if (this->has_finish_time()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->finish_time_, deterministic, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.bigtable.admin.v2.UpdateClusterMetadata)
  return target;
}

size_t UpdateClusterMetadata::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.bigtable.admin.v2.UpdateClusterMetadata)
  size_t total_size = 0;

  // .google.bigtable.admin.v2.Cluster original_request = 1;
  if (this->has_original_request()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->original_request_);
  }

  // .google.protobuf.Timestamp request_time = 2;
  if (this->has_request_time()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->request_time_);
  }

  // .google.protobuf.Timestamp finish_time = 3;
  if (this->has_finish_time()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->finish_time_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UpdateClusterMetadata::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.bigtable.admin.v2.UpdateClusterMetadata)
  GOOGLE_DCHECK_NE(&from, this);
  const UpdateClusterMetadata* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UpdateClusterMetadata>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.bigtable.admin.v2.UpdateClusterMetadata)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.bigtable.admin.v2.UpdateClusterMetadata)
    MergeFrom(*source);
  }
}

void UpdateClusterMetadata::MergeFrom(const UpdateClusterMetadata& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.bigtable.admin.v2.UpdateClusterMetadata)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_original_request()) {
    mutable_original_request()->::google::bigtable::admin::v2::Cluster::MergeFrom(from.original_request());
  }
  if (from.has_request_time()) {
    mutable_request_time()->::google::protobuf::Timestamp::MergeFrom(from.request_time());
  }
  if (from.has_finish_time()) {
    mutable_finish_time()->::google::protobuf::Timestamp::MergeFrom(from.finish_time());
  }
}

void UpdateClusterMetadata::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.bigtable.admin.v2.UpdateClusterMetadata)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateClusterMetadata::CopyFrom(const UpdateClusterMetadata& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.bigtable.admin.v2.UpdateClusterMetadata)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateClusterMetadata::IsInitialized() const {
  return true;
}

void UpdateClusterMetadata::Swap(UpdateClusterMetadata* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UpdateClusterMetadata::InternalSwap(UpdateClusterMetadata* other) {
  std::swap(original_request_, other->original_request_);
  std::swap(request_time_, other->request_time_);
  std::swap(finish_time_, other->finish_time_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UpdateClusterMetadata::GetMetadata() const {
  protobuf_google_2fbigtable_2fadmin_2fv2_2fbigtable_5finstance_5fadmin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fbigtable_2fadmin_2fv2_2fbigtable_5finstance_5fadmin_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// UpdateClusterMetadata

// .google.bigtable.admin.v2.Cluster original_request = 1;
bool UpdateClusterMetadata::has_original_request() const {
  return this != internal_default_instance() && original_request_ != NULL;
}
void UpdateClusterMetadata::clear_original_request() {
  if (GetArenaNoVirtual() == NULL && original_request_ != NULL) delete original_request_;
  original_request_ = NULL;
}
const ::google::bigtable::admin::v2::Cluster& UpdateClusterMetadata::original_request() const {
  // @@protoc_insertion_point(field_get:google.bigtable.admin.v2.UpdateClusterMetadata.original_request)
  return original_request_ != NULL ? *original_request_
                         : *::google::bigtable::admin::v2::Cluster::internal_default_instance();
}
::google::bigtable::admin::v2::Cluster* UpdateClusterMetadata::mutable_original_request() {
  
  if (original_request_ == NULL) {
    original_request_ = new ::google::bigtable::admin::v2::Cluster;
  }
  // @@protoc_insertion_point(field_mutable:google.bigtable.admin.v2.UpdateClusterMetadata.original_request)
  return original_request_;
}
::google::bigtable::admin::v2::Cluster* UpdateClusterMetadata::release_original_request() {
  // @@protoc_insertion_point(field_release:google.bigtable.admin.v2.UpdateClusterMetadata.original_request)
  
  ::google::bigtable::admin::v2::Cluster* temp = original_request_;
  original_request_ = NULL;
  return temp;
}
void UpdateClusterMetadata::set_allocated_original_request(::google::bigtable::admin::v2::Cluster* original_request) {
  delete original_request_;
  original_request_ = original_request;
  if (original_request) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.bigtable.admin.v2.UpdateClusterMetadata.original_request)
}

// .google.protobuf.Timestamp request_time = 2;
bool UpdateClusterMetadata::has_request_time() const {
  return this != internal_default_instance() && request_time_ != NULL;
}
void UpdateClusterMetadata::clear_request_time() {
  if (GetArenaNoVirtual() == NULL && request_time_ != NULL) delete request_time_;
  request_time_ = NULL;
}
const ::google::protobuf::Timestamp& UpdateClusterMetadata::request_time() const {
  // @@protoc_insertion_point(field_get:google.bigtable.admin.v2.UpdateClusterMetadata.request_time)
  return request_time_ != NULL ? *request_time_
                         : *::google::protobuf::Timestamp::internal_default_instance();
}
::google::protobuf::Timestamp* UpdateClusterMetadata::mutable_request_time() {
  
  if (request_time_ == NULL) {
    request_time_ = new ::google::protobuf::Timestamp;
  }
  // @@protoc_insertion_point(field_mutable:google.bigtable.admin.v2.UpdateClusterMetadata.request_time)
  return request_time_;
}
::google::protobuf::Timestamp* UpdateClusterMetadata::release_request_time() {
  // @@protoc_insertion_point(field_release:google.bigtable.admin.v2.UpdateClusterMetadata.request_time)
  
  ::google::protobuf::Timestamp* temp = request_time_;
  request_time_ = NULL;
  return temp;
}
void UpdateClusterMetadata::set_allocated_request_time(::google::protobuf::Timestamp* request_time) {
  delete request_time_;
  if (request_time != NULL && request_time->GetArena() != NULL) {
    ::google::protobuf::Timestamp* new_request_time = new ::google::protobuf::Timestamp;
    new_request_time->CopyFrom(*request_time);
    request_time = new_request_time;
  }
  request_time_ = request_time;
  if (request_time) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.bigtable.admin.v2.UpdateClusterMetadata.request_time)
}

// .google.protobuf.Timestamp finish_time = 3;
bool UpdateClusterMetadata::has_finish_time() const {
  return this != internal_default_instance() && finish_time_ != NULL;
}
void UpdateClusterMetadata::clear_finish_time() {
  if (GetArenaNoVirtual() == NULL && finish_time_ != NULL) delete finish_time_;
  finish_time_ = NULL;
}
const ::google::protobuf::Timestamp& UpdateClusterMetadata::finish_time() const {
  // @@protoc_insertion_point(field_get:google.bigtable.admin.v2.UpdateClusterMetadata.finish_time)
  return finish_time_ != NULL ? *finish_time_
                         : *::google::protobuf::Timestamp::internal_default_instance();
}
::google::protobuf::Timestamp* UpdateClusterMetadata::mutable_finish_time() {
  
  if (finish_time_ == NULL) {
    finish_time_ = new ::google::protobuf::Timestamp;
  }
  // @@protoc_insertion_point(field_mutable:google.bigtable.admin.v2.UpdateClusterMetadata.finish_time)
  return finish_time_;
}
::google::protobuf::Timestamp* UpdateClusterMetadata::release_finish_time() {
  // @@protoc_insertion_point(field_release:google.bigtable.admin.v2.UpdateClusterMetadata.finish_time)
  
  ::google::protobuf::Timestamp* temp = finish_time_;
  finish_time_ = NULL;
  return temp;
}
void UpdateClusterMetadata::set_allocated_finish_time(::google::protobuf::Timestamp* finish_time) {
  delete finish_time_;
  if (finish_time != NULL && finish_time->GetArena() != NULL) {
    ::google::protobuf::Timestamp* new_finish_time = new ::google::protobuf::Timestamp;
    new_finish_time->CopyFrom(*finish_time);
    finish_time = new_finish_time;
  }
  finish_time_ = finish_time;
  if (finish_time) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.bigtable.admin.v2.UpdateClusterMetadata.finish_time)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace v2
}  // namespace admin
}  // namespace bigtable
}  // namespace google

// @@protoc_insertion_point(global_scope)
