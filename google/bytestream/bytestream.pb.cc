// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/bytestream/bytestream.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "google/bytestream/bytestream.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace google {
namespace bytestream {
class ReadRequestDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ReadRequest> {
} _ReadRequest_default_instance_;
class ReadResponseDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ReadResponse> {
} _ReadResponse_default_instance_;
class WriteRequestDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<WriteRequest> {
} _WriteRequest_default_instance_;
class WriteResponseDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<WriteResponse> {
} _WriteResponse_default_instance_;
class QueryWriteStatusRequestDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<QueryWriteStatusRequest> {
} _QueryWriteStatusRequest_default_instance_;
class QueryWriteStatusResponseDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<QueryWriteStatusResponse> {
} _QueryWriteStatusResponse_default_instance_;

namespace protobuf_google_2fbytestream_2fbytestream_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[6];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] = {
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReadRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReadRequest, resource_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReadRequest, read_offset_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReadRequest, read_limit_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReadResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReadResponse, data_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WriteRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WriteRequest, resource_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WriteRequest, write_offset_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WriteRequest, finish_write_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WriteRequest, data_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WriteResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WriteResponse, committed_size_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryWriteStatusRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryWriteStatusRequest, resource_name_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryWriteStatusResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryWriteStatusResponse, committed_size_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryWriteStatusResponse, complete_),
};

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, -1, sizeof(ReadRequest)},
  { 8, -1, sizeof(ReadResponse)},
  { 14, -1, sizeof(WriteRequest)},
  { 23, -1, sizeof(WriteResponse)},
  { 29, -1, sizeof(QueryWriteStatusRequest)},
  { 35, -1, sizeof(QueryWriteStatusResponse)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_ReadRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ReadResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_WriteRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_WriteResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_QueryWriteStatusRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_QueryWriteStatusResponse_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "google/bytestream/bytestream.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 6);
}

}  // namespace

void TableStruct::Shutdown() {
  _ReadRequest_default_instance_.Shutdown();
  delete file_level_metadata[0].reflection;
  _ReadResponse_default_instance_.Shutdown();
  delete file_level_metadata[1].reflection;
  _WriteRequest_default_instance_.Shutdown();
  delete file_level_metadata[2].reflection;
  _WriteResponse_default_instance_.Shutdown();
  delete file_level_metadata[3].reflection;
  _QueryWriteStatusRequest_default_instance_.Shutdown();
  delete file_level_metadata[4].reflection;
  _QueryWriteStatusResponse_default_instance_.Shutdown();
  delete file_level_metadata[5].reflection;
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  ::google::api::protobuf_google_2fapi_2fannotations_2eproto::InitDefaults();
  ::google::protobuf::protobuf_google_2fprotobuf_2fwrappers_2eproto::InitDefaults();
  _ReadRequest_default_instance_.DefaultConstruct();
  _ReadResponse_default_instance_.DefaultConstruct();
  _WriteRequest_default_instance_.DefaultConstruct();
  _WriteResponse_default_instance_.DefaultConstruct();
  _QueryWriteStatusRequest_default_instance_.DefaultConstruct();
  _QueryWriteStatusResponse_default_instance_.DefaultConstruct();
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n\"google/bytestream/bytestream.proto\022\021go"
      "ogle.bytestream\032\034google/api/annotations."
      "proto\032\036google/protobuf/wrappers.proto\"M\n"
      "\013ReadRequest\022\025\n\rresource_name\030\001 \001(\t\022\023\n\013r"
      "ead_offset\030\002 \001(\003\022\022\n\nread_limit\030\003 \001(\003\"\034\n\014"
      "ReadResponse\022\014\n\004data\030\n \001(\014\"_\n\014WriteReque"
      "st\022\025\n\rresource_name\030\001 \001(\t\022\024\n\014write_offse"
      "t\030\002 \001(\003\022\024\n\014finish_write\030\003 \001(\010\022\014\n\004data\030\n "
      "\001(\014\"\'\n\rWriteResponse\022\026\n\016committed_size\030\001"
      " \001(\003\"0\n\027QueryWriteStatusRequest\022\025\n\rresou"
      "rce_name\030\001 \001(\t\"D\n\030QueryWriteStatusRespon"
      "se\022\026\n\016committed_size\030\001 \001(\003\022\020\n\010complete\030\002"
      " \001(\0102\222\002\n\nByteStream\022I\n\004Read\022\036.google.byt"
      "estream.ReadRequest\032\037.google.bytestream."
      "ReadResponse0\001\022L\n\005Write\022\037.google.bytestr"
      "eam.WriteRequest\032 .google.bytestream.Wri"
      "teResponse(\001\022k\n\020QueryWriteStatus\022*.googl"
      "e.bytestream.QueryWriteStatusRequest\032+.g"
      "oogle.bytestream.QueryWriteStatusRespons"
      "eBe\n\025com.google.bytestreamB\017ByteStreamPr"
      "otoZ;google.golang.org/genproto/googleap"
      "is/bytestream;bytestreamb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 872);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "google/bytestream/bytestream.proto", &protobuf_RegisterTypes);
  ::google::api::protobuf_google_2fapi_2fannotations_2eproto::AddDescriptors();
  ::google::protobuf::protobuf_google_2fprotobuf_2fwrappers_2eproto::AddDescriptors();
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_google_2fbytestream_2fbytestream_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ReadRequest::kResourceNameFieldNumber;
const int ReadRequest::kReadOffsetFieldNumber;
const int ReadRequest::kReadLimitFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ReadRequest::ReadRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_google_2fbytestream_2fbytestream_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.bytestream.ReadRequest)
}
ReadRequest::ReadRequest(const ReadRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  resource_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.resource_name().size() > 0) {
    resource_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.resource_name_);
  }
  ::memcpy(&read_offset_, &from.read_offset_,
    reinterpret_cast<char*>(&read_limit_) -
    reinterpret_cast<char*>(&read_offset_) + sizeof(read_limit_));
  // @@protoc_insertion_point(copy_constructor:google.bytestream.ReadRequest)
}

void ReadRequest::SharedCtor() {
  resource_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&read_offset_, 0, reinterpret_cast<char*>(&read_limit_) -
    reinterpret_cast<char*>(&read_offset_) + sizeof(read_limit_));
  _cached_size_ = 0;
}

ReadRequest::~ReadRequest() {
  // @@protoc_insertion_point(destructor:google.bytestream.ReadRequest)
  SharedDtor();
}

void ReadRequest::SharedDtor() {
  resource_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ReadRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ReadRequest::descriptor() {
  protobuf_google_2fbytestream_2fbytestream_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fbytestream_2fbytestream_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ReadRequest& ReadRequest::default_instance() {
  protobuf_google_2fbytestream_2fbytestream_2eproto::InitDefaults();
  return *internal_default_instance();
}

ReadRequest* ReadRequest::New(::google::protobuf::Arena* arena) const {
  ReadRequest* n = new ReadRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ReadRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.bytestream.ReadRequest)
  resource_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&read_offset_, 0, reinterpret_cast<char*>(&read_limit_) -
    reinterpret_cast<char*>(&read_offset_) + sizeof(read_limit_));
}

bool ReadRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.bytestream.ReadRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string resource_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_resource_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->resource_name().data(), this->resource_name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.bytestream.ReadRequest.resource_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 read_offset = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &read_offset_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 read_limit = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &read_limit_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.bytestream.ReadRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.bytestream.ReadRequest)
  return false;
#undef DO_
}

void ReadRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.bytestream.ReadRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string resource_name = 1;
  if (this->resource_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->resource_name().data(), this->resource_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.bytestream.ReadRequest.resource_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->resource_name(), output);
  }

  // int64 read_offset = 2;
  if (this->read_offset() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->read_offset(), output);
  }

  // int64 read_limit = 3;
  if (this->read_limit() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->read_limit(), output);
  }

  // @@protoc_insertion_point(serialize_end:google.bytestream.ReadRequest)
}

::google::protobuf::uint8* ReadRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.bytestream.ReadRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string resource_name = 1;
  if (this->resource_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->resource_name().data(), this->resource_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.bytestream.ReadRequest.resource_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->resource_name(), target);
  }

  // int64 read_offset = 2;
  if (this->read_offset() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->read_offset(), target);
  }

  // int64 read_limit = 3;
  if (this->read_limit() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->read_limit(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.bytestream.ReadRequest)
  return target;
}

size_t ReadRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.bytestream.ReadRequest)
  size_t total_size = 0;

  // string resource_name = 1;
  if (this->resource_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->resource_name());
  }

  // int64 read_offset = 2;
  if (this->read_offset() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->read_offset());
  }

  // int64 read_limit = 3;
  if (this->read_limit() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->read_limit());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ReadRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.bytestream.ReadRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ReadRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ReadRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.bytestream.ReadRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.bytestream.ReadRequest)
    MergeFrom(*source);
  }
}

void ReadRequest::MergeFrom(const ReadRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.bytestream.ReadRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.resource_name().size() > 0) {

    resource_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.resource_name_);
  }
  if (from.read_offset() != 0) {
    set_read_offset(from.read_offset());
  }
  if (from.read_limit() != 0) {
    set_read_limit(from.read_limit());
  }
}

void ReadRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.bytestream.ReadRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReadRequest::CopyFrom(const ReadRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.bytestream.ReadRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReadRequest::IsInitialized() const {
  return true;
}

void ReadRequest::Swap(ReadRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ReadRequest::InternalSwap(ReadRequest* other) {
  resource_name_.Swap(&other->resource_name_);
  std::swap(read_offset_, other->read_offset_);
  std::swap(read_limit_, other->read_limit_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ReadRequest::GetMetadata() const {
  protobuf_google_2fbytestream_2fbytestream_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fbytestream_2fbytestream_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ReadRequest

// string resource_name = 1;
void ReadRequest::clear_resource_name() {
  resource_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ReadRequest::resource_name() const {
  // @@protoc_insertion_point(field_get:google.bytestream.ReadRequest.resource_name)
  return resource_name_.GetNoArena();
}
void ReadRequest::set_resource_name(const ::std::string& value) {
  
  resource_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.bytestream.ReadRequest.resource_name)
}
#if LANG_CXX11
void ReadRequest::set_resource_name(::std::string&& value) {
  
  resource_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.bytestream.ReadRequest.resource_name)
}
#endif
void ReadRequest::set_resource_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  resource_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.bytestream.ReadRequest.resource_name)
}
void ReadRequest::set_resource_name(const char* value, size_t size) {
  
  resource_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.bytestream.ReadRequest.resource_name)
}
::std::string* ReadRequest::mutable_resource_name() {
  
  // @@protoc_insertion_point(field_mutable:google.bytestream.ReadRequest.resource_name)
  return resource_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ReadRequest::release_resource_name() {
  // @@protoc_insertion_point(field_release:google.bytestream.ReadRequest.resource_name)
  
  return resource_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ReadRequest::set_allocated_resource_name(::std::string* resource_name) {
  if (resource_name != NULL) {
    
  } else {
    
  }
  resource_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), resource_name);
  // @@protoc_insertion_point(field_set_allocated:google.bytestream.ReadRequest.resource_name)
}

// int64 read_offset = 2;
void ReadRequest::clear_read_offset() {
  read_offset_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 ReadRequest::read_offset() const {
  // @@protoc_insertion_point(field_get:google.bytestream.ReadRequest.read_offset)
  return read_offset_;
}
void ReadRequest::set_read_offset(::google::protobuf::int64 value) {
  
  read_offset_ = value;
  // @@protoc_insertion_point(field_set:google.bytestream.ReadRequest.read_offset)
}

// int64 read_limit = 3;
void ReadRequest::clear_read_limit() {
  read_limit_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 ReadRequest::read_limit() const {
  // @@protoc_insertion_point(field_get:google.bytestream.ReadRequest.read_limit)
  return read_limit_;
}
void ReadRequest::set_read_limit(::google::protobuf::int64 value) {
  
  read_limit_ = value;
  // @@protoc_insertion_point(field_set:google.bytestream.ReadRequest.read_limit)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ReadResponse::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ReadResponse::ReadResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_google_2fbytestream_2fbytestream_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.bytestream.ReadResponse)
}
ReadResponse::ReadResponse(const ReadResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.data().size() > 0) {
    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
  // @@protoc_insertion_point(copy_constructor:google.bytestream.ReadResponse)
}

void ReadResponse::SharedCtor() {
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

ReadResponse::~ReadResponse() {
  // @@protoc_insertion_point(destructor:google.bytestream.ReadResponse)
  SharedDtor();
}

void ReadResponse::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ReadResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ReadResponse::descriptor() {
  protobuf_google_2fbytestream_2fbytestream_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fbytestream_2fbytestream_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ReadResponse& ReadResponse::default_instance() {
  protobuf_google_2fbytestream_2fbytestream_2eproto::InitDefaults();
  return *internal_default_instance();
}

ReadResponse* ReadResponse::New(::google::protobuf::Arena* arena) const {
  ReadResponse* n = new ReadResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ReadResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:google.bytestream.ReadResponse)
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool ReadResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.bytestream.ReadResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes data = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.bytestream.ReadResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.bytestream.ReadResponse)
  return false;
#undef DO_
}

void ReadResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.bytestream.ReadResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes data = 10;
  if (this->data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      10, this->data(), output);
  }

  // @@protoc_insertion_point(serialize_end:google.bytestream.ReadResponse)
}

::google::protobuf::uint8* ReadResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.bytestream.ReadResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes data = 10;
  if (this->data().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        10, this->data(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.bytestream.ReadResponse)
  return target;
}

size_t ReadResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.bytestream.ReadResponse)
  size_t total_size = 0;

  // bytes data = 10;
  if (this->data().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->data());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ReadResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.bytestream.ReadResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ReadResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ReadResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.bytestream.ReadResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.bytestream.ReadResponse)
    MergeFrom(*source);
  }
}

void ReadResponse::MergeFrom(const ReadResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.bytestream.ReadResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.data().size() > 0) {

    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
}

void ReadResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.bytestream.ReadResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReadResponse::CopyFrom(const ReadResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.bytestream.ReadResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReadResponse::IsInitialized() const {
  return true;
}

void ReadResponse::Swap(ReadResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ReadResponse::InternalSwap(ReadResponse* other) {
  data_.Swap(&other->data_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ReadResponse::GetMetadata() const {
  protobuf_google_2fbytestream_2fbytestream_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fbytestream_2fbytestream_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ReadResponse

// bytes data = 10;
void ReadResponse::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ReadResponse::data() const {
  // @@protoc_insertion_point(field_get:google.bytestream.ReadResponse.data)
  return data_.GetNoArena();
}
void ReadResponse::set_data(const ::std::string& value) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.bytestream.ReadResponse.data)
}
#if LANG_CXX11
void ReadResponse::set_data(::std::string&& value) {
  
  data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.bytestream.ReadResponse.data)
}
#endif
void ReadResponse::set_data(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.bytestream.ReadResponse.data)
}
void ReadResponse::set_data(const void* value, size_t size) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.bytestream.ReadResponse.data)
}
::std::string* ReadResponse::mutable_data() {
  
  // @@protoc_insertion_point(field_mutable:google.bytestream.ReadResponse.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ReadResponse::release_data() {
  // @@protoc_insertion_point(field_release:google.bytestream.ReadResponse.data)
  
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ReadResponse::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    
  } else {
    
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:google.bytestream.ReadResponse.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int WriteRequest::kResourceNameFieldNumber;
const int WriteRequest::kWriteOffsetFieldNumber;
const int WriteRequest::kFinishWriteFieldNumber;
const int WriteRequest::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

WriteRequest::WriteRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_google_2fbytestream_2fbytestream_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.bytestream.WriteRequest)
}
WriteRequest::WriteRequest(const WriteRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  resource_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.resource_name().size() > 0) {
    resource_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.resource_name_);
  }
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.data().size() > 0) {
    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
  ::memcpy(&write_offset_, &from.write_offset_,
    reinterpret_cast<char*>(&finish_write_) -
    reinterpret_cast<char*>(&write_offset_) + sizeof(finish_write_));
  // @@protoc_insertion_point(copy_constructor:google.bytestream.WriteRequest)
}

void WriteRequest::SharedCtor() {
  resource_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&write_offset_, 0, reinterpret_cast<char*>(&finish_write_) -
    reinterpret_cast<char*>(&write_offset_) + sizeof(finish_write_));
  _cached_size_ = 0;
}

WriteRequest::~WriteRequest() {
  // @@protoc_insertion_point(destructor:google.bytestream.WriteRequest)
  SharedDtor();
}

void WriteRequest::SharedDtor() {
  resource_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void WriteRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* WriteRequest::descriptor() {
  protobuf_google_2fbytestream_2fbytestream_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fbytestream_2fbytestream_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const WriteRequest& WriteRequest::default_instance() {
  protobuf_google_2fbytestream_2fbytestream_2eproto::InitDefaults();
  return *internal_default_instance();
}

WriteRequest* WriteRequest::New(::google::protobuf::Arena* arena) const {
  WriteRequest* n = new WriteRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void WriteRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.bytestream.WriteRequest)
  resource_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&write_offset_, 0, reinterpret_cast<char*>(&finish_write_) -
    reinterpret_cast<char*>(&write_offset_) + sizeof(finish_write_));
}

bool WriteRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.bytestream.WriteRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string resource_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_resource_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->resource_name().data(), this->resource_name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.bytestream.WriteRequest.resource_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 write_offset = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &write_offset_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool finish_write = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &finish_write_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes data = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.bytestream.WriteRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.bytestream.WriteRequest)
  return false;
#undef DO_
}

void WriteRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.bytestream.WriteRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string resource_name = 1;
  if (this->resource_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->resource_name().data(), this->resource_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.bytestream.WriteRequest.resource_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->resource_name(), output);
  }

  // int64 write_offset = 2;
  if (this->write_offset() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->write_offset(), output);
  }

  // bool finish_write = 3;
  if (this->finish_write() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->finish_write(), output);
  }

  // bytes data = 10;
  if (this->data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      10, this->data(), output);
  }

  // @@protoc_insertion_point(serialize_end:google.bytestream.WriteRequest)
}

::google::protobuf::uint8* WriteRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.bytestream.WriteRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string resource_name = 1;
  if (this->resource_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->resource_name().data(), this->resource_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.bytestream.WriteRequest.resource_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->resource_name(), target);
  }

  // int64 write_offset = 2;
  if (this->write_offset() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->write_offset(), target);
  }

  // bool finish_write = 3;
  if (this->finish_write() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->finish_write(), target);
  }

  // bytes data = 10;
  if (this->data().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        10, this->data(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.bytestream.WriteRequest)
  return target;
}

size_t WriteRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.bytestream.WriteRequest)
  size_t total_size = 0;

  // string resource_name = 1;
  if (this->resource_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->resource_name());
  }

  // bytes data = 10;
  if (this->data().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->data());
  }

  // int64 write_offset = 2;
  if (this->write_offset() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->write_offset());
  }

  // bool finish_write = 3;
  if (this->finish_write() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void WriteRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.bytestream.WriteRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const WriteRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const WriteRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.bytestream.WriteRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.bytestream.WriteRequest)
    MergeFrom(*source);
  }
}

void WriteRequest::MergeFrom(const WriteRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.bytestream.WriteRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.resource_name().size() > 0) {

    resource_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.resource_name_);
  }
  if (from.data().size() > 0) {

    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
  if (from.write_offset() != 0) {
    set_write_offset(from.write_offset());
  }
  if (from.finish_write() != 0) {
    set_finish_write(from.finish_write());
  }
}

void WriteRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.bytestream.WriteRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WriteRequest::CopyFrom(const WriteRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.bytestream.WriteRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WriteRequest::IsInitialized() const {
  return true;
}

void WriteRequest::Swap(WriteRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void WriteRequest::InternalSwap(WriteRequest* other) {
  resource_name_.Swap(&other->resource_name_);
  data_.Swap(&other->data_);
  std::swap(write_offset_, other->write_offset_);
  std::swap(finish_write_, other->finish_write_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata WriteRequest::GetMetadata() const {
  protobuf_google_2fbytestream_2fbytestream_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fbytestream_2fbytestream_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// WriteRequest

// string resource_name = 1;
void WriteRequest::clear_resource_name() {
  resource_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& WriteRequest::resource_name() const {
  // @@protoc_insertion_point(field_get:google.bytestream.WriteRequest.resource_name)
  return resource_name_.GetNoArena();
}
void WriteRequest::set_resource_name(const ::std::string& value) {
  
  resource_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.bytestream.WriteRequest.resource_name)
}
#if LANG_CXX11
void WriteRequest::set_resource_name(::std::string&& value) {
  
  resource_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.bytestream.WriteRequest.resource_name)
}
#endif
void WriteRequest::set_resource_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  resource_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.bytestream.WriteRequest.resource_name)
}
void WriteRequest::set_resource_name(const char* value, size_t size) {
  
  resource_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.bytestream.WriteRequest.resource_name)
}
::std::string* WriteRequest::mutable_resource_name() {
  
  // @@protoc_insertion_point(field_mutable:google.bytestream.WriteRequest.resource_name)
  return resource_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* WriteRequest::release_resource_name() {
  // @@protoc_insertion_point(field_release:google.bytestream.WriteRequest.resource_name)
  
  return resource_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void WriteRequest::set_allocated_resource_name(::std::string* resource_name) {
  if (resource_name != NULL) {
    
  } else {
    
  }
  resource_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), resource_name);
  // @@protoc_insertion_point(field_set_allocated:google.bytestream.WriteRequest.resource_name)
}

// int64 write_offset = 2;
void WriteRequest::clear_write_offset() {
  write_offset_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 WriteRequest::write_offset() const {
  // @@protoc_insertion_point(field_get:google.bytestream.WriteRequest.write_offset)
  return write_offset_;
}
void WriteRequest::set_write_offset(::google::protobuf::int64 value) {
  
  write_offset_ = value;
  // @@protoc_insertion_point(field_set:google.bytestream.WriteRequest.write_offset)
}

// bool finish_write = 3;
void WriteRequest::clear_finish_write() {
  finish_write_ = false;
}
bool WriteRequest::finish_write() const {
  // @@protoc_insertion_point(field_get:google.bytestream.WriteRequest.finish_write)
  return finish_write_;
}
void WriteRequest::set_finish_write(bool value) {
  
  finish_write_ = value;
  // @@protoc_insertion_point(field_set:google.bytestream.WriteRequest.finish_write)
}

// bytes data = 10;
void WriteRequest::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& WriteRequest::data() const {
  // @@protoc_insertion_point(field_get:google.bytestream.WriteRequest.data)
  return data_.GetNoArena();
}
void WriteRequest::set_data(const ::std::string& value) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.bytestream.WriteRequest.data)
}
#if LANG_CXX11
void WriteRequest::set_data(::std::string&& value) {
  
  data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.bytestream.WriteRequest.data)
}
#endif
void WriteRequest::set_data(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.bytestream.WriteRequest.data)
}
void WriteRequest::set_data(const void* value, size_t size) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.bytestream.WriteRequest.data)
}
::std::string* WriteRequest::mutable_data() {
  
  // @@protoc_insertion_point(field_mutable:google.bytestream.WriteRequest.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* WriteRequest::release_data() {
  // @@protoc_insertion_point(field_release:google.bytestream.WriteRequest.data)
  
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void WriteRequest::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    
  } else {
    
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:google.bytestream.WriteRequest.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int WriteResponse::kCommittedSizeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

WriteResponse::WriteResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_google_2fbytestream_2fbytestream_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.bytestream.WriteResponse)
}
WriteResponse::WriteResponse(const WriteResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  committed_size_ = from.committed_size_;
  // @@protoc_insertion_point(copy_constructor:google.bytestream.WriteResponse)
}

void WriteResponse::SharedCtor() {
  committed_size_ = GOOGLE_LONGLONG(0);
  _cached_size_ = 0;
}

WriteResponse::~WriteResponse() {
  // @@protoc_insertion_point(destructor:google.bytestream.WriteResponse)
  SharedDtor();
}

void WriteResponse::SharedDtor() {
}

void WriteResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* WriteResponse::descriptor() {
  protobuf_google_2fbytestream_2fbytestream_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fbytestream_2fbytestream_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const WriteResponse& WriteResponse::default_instance() {
  protobuf_google_2fbytestream_2fbytestream_2eproto::InitDefaults();
  return *internal_default_instance();
}

WriteResponse* WriteResponse::New(::google::protobuf::Arena* arena) const {
  WriteResponse* n = new WriteResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void WriteResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:google.bytestream.WriteResponse)
  committed_size_ = GOOGLE_LONGLONG(0);
}

bool WriteResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.bytestream.WriteResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 committed_size = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &committed_size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.bytestream.WriteResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.bytestream.WriteResponse)
  return false;
#undef DO_
}

void WriteResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.bytestream.WriteResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 committed_size = 1;
  if (this->committed_size() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->committed_size(), output);
  }

  // @@protoc_insertion_point(serialize_end:google.bytestream.WriteResponse)
}

::google::protobuf::uint8* WriteResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.bytestream.WriteResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 committed_size = 1;
  if (this->committed_size() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->committed_size(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.bytestream.WriteResponse)
  return target;
}

size_t WriteResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.bytestream.WriteResponse)
  size_t total_size = 0;

  // int64 committed_size = 1;
  if (this->committed_size() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->committed_size());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void WriteResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.bytestream.WriteResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const WriteResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const WriteResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.bytestream.WriteResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.bytestream.WriteResponse)
    MergeFrom(*source);
  }
}

void WriteResponse::MergeFrom(const WriteResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.bytestream.WriteResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.committed_size() != 0) {
    set_committed_size(from.committed_size());
  }
}

void WriteResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.bytestream.WriteResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WriteResponse::CopyFrom(const WriteResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.bytestream.WriteResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WriteResponse::IsInitialized() const {
  return true;
}

void WriteResponse::Swap(WriteResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void WriteResponse::InternalSwap(WriteResponse* other) {
  std::swap(committed_size_, other->committed_size_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata WriteResponse::GetMetadata() const {
  protobuf_google_2fbytestream_2fbytestream_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fbytestream_2fbytestream_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// WriteResponse

// int64 committed_size = 1;
void WriteResponse::clear_committed_size() {
  committed_size_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 WriteResponse::committed_size() const {
  // @@protoc_insertion_point(field_get:google.bytestream.WriteResponse.committed_size)
  return committed_size_;
}
void WriteResponse::set_committed_size(::google::protobuf::int64 value) {
  
  committed_size_ = value;
  // @@protoc_insertion_point(field_set:google.bytestream.WriteResponse.committed_size)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int QueryWriteStatusRequest::kResourceNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

QueryWriteStatusRequest::QueryWriteStatusRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_google_2fbytestream_2fbytestream_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.bytestream.QueryWriteStatusRequest)
}
QueryWriteStatusRequest::QueryWriteStatusRequest(const QueryWriteStatusRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  resource_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.resource_name().size() > 0) {
    resource_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.resource_name_);
  }
  // @@protoc_insertion_point(copy_constructor:google.bytestream.QueryWriteStatusRequest)
}

void QueryWriteStatusRequest::SharedCtor() {
  resource_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

QueryWriteStatusRequest::~QueryWriteStatusRequest() {
  // @@protoc_insertion_point(destructor:google.bytestream.QueryWriteStatusRequest)
  SharedDtor();
}

void QueryWriteStatusRequest::SharedDtor() {
  resource_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void QueryWriteStatusRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* QueryWriteStatusRequest::descriptor() {
  protobuf_google_2fbytestream_2fbytestream_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fbytestream_2fbytestream_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const QueryWriteStatusRequest& QueryWriteStatusRequest::default_instance() {
  protobuf_google_2fbytestream_2fbytestream_2eproto::InitDefaults();
  return *internal_default_instance();
}

QueryWriteStatusRequest* QueryWriteStatusRequest::New(::google::protobuf::Arena* arena) const {
  QueryWriteStatusRequest* n = new QueryWriteStatusRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void QueryWriteStatusRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.bytestream.QueryWriteStatusRequest)
  resource_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool QueryWriteStatusRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.bytestream.QueryWriteStatusRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string resource_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_resource_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->resource_name().data(), this->resource_name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.bytestream.QueryWriteStatusRequest.resource_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.bytestream.QueryWriteStatusRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.bytestream.QueryWriteStatusRequest)
  return false;
#undef DO_
}

void QueryWriteStatusRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.bytestream.QueryWriteStatusRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string resource_name = 1;
  if (this->resource_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->resource_name().data(), this->resource_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.bytestream.QueryWriteStatusRequest.resource_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->resource_name(), output);
  }

  // @@protoc_insertion_point(serialize_end:google.bytestream.QueryWriteStatusRequest)
}

::google::protobuf::uint8* QueryWriteStatusRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.bytestream.QueryWriteStatusRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string resource_name = 1;
  if (this->resource_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->resource_name().data(), this->resource_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.bytestream.QueryWriteStatusRequest.resource_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->resource_name(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.bytestream.QueryWriteStatusRequest)
  return target;
}

size_t QueryWriteStatusRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.bytestream.QueryWriteStatusRequest)
  size_t total_size = 0;

  // string resource_name = 1;
  if (this->resource_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->resource_name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void QueryWriteStatusRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.bytestream.QueryWriteStatusRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const QueryWriteStatusRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const QueryWriteStatusRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.bytestream.QueryWriteStatusRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.bytestream.QueryWriteStatusRequest)
    MergeFrom(*source);
  }
}

void QueryWriteStatusRequest::MergeFrom(const QueryWriteStatusRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.bytestream.QueryWriteStatusRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.resource_name().size() > 0) {

    resource_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.resource_name_);
  }
}

void QueryWriteStatusRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.bytestream.QueryWriteStatusRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QueryWriteStatusRequest::CopyFrom(const QueryWriteStatusRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.bytestream.QueryWriteStatusRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryWriteStatusRequest::IsInitialized() const {
  return true;
}

void QueryWriteStatusRequest::Swap(QueryWriteStatusRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void QueryWriteStatusRequest::InternalSwap(QueryWriteStatusRequest* other) {
  resource_name_.Swap(&other->resource_name_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata QueryWriteStatusRequest::GetMetadata() const {
  protobuf_google_2fbytestream_2fbytestream_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fbytestream_2fbytestream_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// QueryWriteStatusRequest

// string resource_name = 1;
void QueryWriteStatusRequest::clear_resource_name() {
  resource_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& QueryWriteStatusRequest::resource_name() const {
  // @@protoc_insertion_point(field_get:google.bytestream.QueryWriteStatusRequest.resource_name)
  return resource_name_.GetNoArena();
}
void QueryWriteStatusRequest::set_resource_name(const ::std::string& value) {
  
  resource_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.bytestream.QueryWriteStatusRequest.resource_name)
}
#if LANG_CXX11
void QueryWriteStatusRequest::set_resource_name(::std::string&& value) {
  
  resource_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.bytestream.QueryWriteStatusRequest.resource_name)
}
#endif
void QueryWriteStatusRequest::set_resource_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  resource_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.bytestream.QueryWriteStatusRequest.resource_name)
}
void QueryWriteStatusRequest::set_resource_name(const char* value, size_t size) {
  
  resource_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.bytestream.QueryWriteStatusRequest.resource_name)
}
::std::string* QueryWriteStatusRequest::mutable_resource_name() {
  
  // @@protoc_insertion_point(field_mutable:google.bytestream.QueryWriteStatusRequest.resource_name)
  return resource_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* QueryWriteStatusRequest::release_resource_name() {
  // @@protoc_insertion_point(field_release:google.bytestream.QueryWriteStatusRequest.resource_name)
  
  return resource_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void QueryWriteStatusRequest::set_allocated_resource_name(::std::string* resource_name) {
  if (resource_name != NULL) {
    
  } else {
    
  }
  resource_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), resource_name);
  // @@protoc_insertion_point(field_set_allocated:google.bytestream.QueryWriteStatusRequest.resource_name)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int QueryWriteStatusResponse::kCommittedSizeFieldNumber;
const int QueryWriteStatusResponse::kCompleteFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

QueryWriteStatusResponse::QueryWriteStatusResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_google_2fbytestream_2fbytestream_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.bytestream.QueryWriteStatusResponse)
}
QueryWriteStatusResponse::QueryWriteStatusResponse(const QueryWriteStatusResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&committed_size_, &from.committed_size_,
    reinterpret_cast<char*>(&complete_) -
    reinterpret_cast<char*>(&committed_size_) + sizeof(complete_));
  // @@protoc_insertion_point(copy_constructor:google.bytestream.QueryWriteStatusResponse)
}

void QueryWriteStatusResponse::SharedCtor() {
  ::memset(&committed_size_, 0, reinterpret_cast<char*>(&complete_) -
    reinterpret_cast<char*>(&committed_size_) + sizeof(complete_));
  _cached_size_ = 0;
}

QueryWriteStatusResponse::~QueryWriteStatusResponse() {
  // @@protoc_insertion_point(destructor:google.bytestream.QueryWriteStatusResponse)
  SharedDtor();
}

void QueryWriteStatusResponse::SharedDtor() {
}

void QueryWriteStatusResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* QueryWriteStatusResponse::descriptor() {
  protobuf_google_2fbytestream_2fbytestream_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fbytestream_2fbytestream_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const QueryWriteStatusResponse& QueryWriteStatusResponse::default_instance() {
  protobuf_google_2fbytestream_2fbytestream_2eproto::InitDefaults();
  return *internal_default_instance();
}

QueryWriteStatusResponse* QueryWriteStatusResponse::New(::google::protobuf::Arena* arena) const {
  QueryWriteStatusResponse* n = new QueryWriteStatusResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void QueryWriteStatusResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:google.bytestream.QueryWriteStatusResponse)
  ::memset(&committed_size_, 0, reinterpret_cast<char*>(&complete_) -
    reinterpret_cast<char*>(&committed_size_) + sizeof(complete_));
}

bool QueryWriteStatusResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.bytestream.QueryWriteStatusResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 committed_size = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &committed_size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool complete = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &complete_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.bytestream.QueryWriteStatusResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.bytestream.QueryWriteStatusResponse)
  return false;
#undef DO_
}

void QueryWriteStatusResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.bytestream.QueryWriteStatusResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 committed_size = 1;
  if (this->committed_size() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->committed_size(), output);
  }

  // bool complete = 2;
  if (this->complete() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->complete(), output);
  }

  // @@protoc_insertion_point(serialize_end:google.bytestream.QueryWriteStatusResponse)
}

::google::protobuf::uint8* QueryWriteStatusResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.bytestream.QueryWriteStatusResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 committed_size = 1;
  if (this->committed_size() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->committed_size(), target);
  }

  // bool complete = 2;
  if (this->complete() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->complete(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.bytestream.QueryWriteStatusResponse)
  return target;
}

size_t QueryWriteStatusResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.bytestream.QueryWriteStatusResponse)
  size_t total_size = 0;

  // int64 committed_size = 1;
  if (this->committed_size() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->committed_size());
  }

  // bool complete = 2;
  if (this->complete() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void QueryWriteStatusResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.bytestream.QueryWriteStatusResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const QueryWriteStatusResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const QueryWriteStatusResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.bytestream.QueryWriteStatusResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.bytestream.QueryWriteStatusResponse)
    MergeFrom(*source);
  }
}

void QueryWriteStatusResponse::MergeFrom(const QueryWriteStatusResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.bytestream.QueryWriteStatusResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.committed_size() != 0) {
    set_committed_size(from.committed_size());
  }
  if (from.complete() != 0) {
    set_complete(from.complete());
  }
}

void QueryWriteStatusResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.bytestream.QueryWriteStatusResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QueryWriteStatusResponse::CopyFrom(const QueryWriteStatusResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.bytestream.QueryWriteStatusResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryWriteStatusResponse::IsInitialized() const {
  return true;
}

void QueryWriteStatusResponse::Swap(QueryWriteStatusResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void QueryWriteStatusResponse::InternalSwap(QueryWriteStatusResponse* other) {
  std::swap(committed_size_, other->committed_size_);
  std::swap(complete_, other->complete_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata QueryWriteStatusResponse::GetMetadata() const {
  protobuf_google_2fbytestream_2fbytestream_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fbytestream_2fbytestream_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// QueryWriteStatusResponse

// int64 committed_size = 1;
void QueryWriteStatusResponse::clear_committed_size() {
  committed_size_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 QueryWriteStatusResponse::committed_size() const {
  // @@protoc_insertion_point(field_get:google.bytestream.QueryWriteStatusResponse.committed_size)
  return committed_size_;
}
void QueryWriteStatusResponse::set_committed_size(::google::protobuf::int64 value) {
  
  committed_size_ = value;
  // @@protoc_insertion_point(field_set:google.bytestream.QueryWriteStatusResponse.committed_size)
}

// bool complete = 2;
void QueryWriteStatusResponse::clear_complete() {
  complete_ = false;
}
bool QueryWriteStatusResponse::complete() const {
  // @@protoc_insertion_point(field_get:google.bytestream.QueryWriteStatusResponse.complete)
  return complete_;
}
void QueryWriteStatusResponse::set_complete(bool value) {
  
  complete_ = value;
  // @@protoc_insertion_point(field_set:google.bytestream.QueryWriteStatusResponse.complete)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace bytestream
}  // namespace google

// @@protoc_insertion_point(global_scope)
