# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from google.cloud.ml.v1beta1 import model_service_pb2 as google_dot_cloud_dot_ml_dot_v1beta1_dot_model__service__pb2
from google.longrunning import operations_pb2 as google_dot_longrunning_dot_operations__pb2


class ModelServiceStub(object):
  """Copyright 2016 Google Inc. All Rights Reserved.

  Proto file for the Google Cloud Machine Learning Engine.
  Describes the 'models service' to work with the 'model' and 'version'
  resources.

  Provides methods that create and manage machine learning models and their
  versions.

  A model in this context is a container for versions. The model can't provide
  predictions without first having a version created for it.

  Each version is a trained machine learning model, and each is assumed to be
  an iteration of the same machine learning problem as the other versions of
  the same model.

  Your project can define multiple models, each with multiple versions.

  The basic life cycle of a model is:

  *   Create and train the machine learning model and save it to a
  Google Cloud Storage location.
  *   Use
  [projects.models.create](/ml/reference/rest/v1beta1/projects.models/create)
  to make a new model in your project.
  *   Use
  [projects.models.versions.create](/ml/reference/rest/v1beta1/projects.models.versions/create)
  to deploy your saved model.
  *   Use [projects.predict](/ml/reference/rest/v1beta1/projects/predict to
  request predictions of a version of your model, or use
  [projects.jobs.create](/ml/reference/rest/v1beta1/projects.jobs/create)
  to start a batch prediction job.
  """

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.CreateModel = channel.unary_unary(
        '/google.cloud.ml.v1beta1.ModelService/CreateModel',
        request_serializer=google_dot_cloud_dot_ml_dot_v1beta1_dot_model__service__pb2.CreateModelRequest.SerializeToString,
        response_deserializer=google_dot_cloud_dot_ml_dot_v1beta1_dot_model__service__pb2.Model.FromString,
        )
    self.ListModels = channel.unary_unary(
        '/google.cloud.ml.v1beta1.ModelService/ListModels',
        request_serializer=google_dot_cloud_dot_ml_dot_v1beta1_dot_model__service__pb2.ListModelsRequest.SerializeToString,
        response_deserializer=google_dot_cloud_dot_ml_dot_v1beta1_dot_model__service__pb2.ListModelsResponse.FromString,
        )
    self.GetModel = channel.unary_unary(
        '/google.cloud.ml.v1beta1.ModelService/GetModel',
        request_serializer=google_dot_cloud_dot_ml_dot_v1beta1_dot_model__service__pb2.GetModelRequest.SerializeToString,
        response_deserializer=google_dot_cloud_dot_ml_dot_v1beta1_dot_model__service__pb2.Model.FromString,
        )
    self.DeleteModel = channel.unary_unary(
        '/google.cloud.ml.v1beta1.ModelService/DeleteModel',
        request_serializer=google_dot_cloud_dot_ml_dot_v1beta1_dot_model__service__pb2.DeleteModelRequest.SerializeToString,
        response_deserializer=google_dot_longrunning_dot_operations__pb2.Operation.FromString,
        )
    self.CreateVersion = channel.unary_unary(
        '/google.cloud.ml.v1beta1.ModelService/CreateVersion',
        request_serializer=google_dot_cloud_dot_ml_dot_v1beta1_dot_model__service__pb2.CreateVersionRequest.SerializeToString,
        response_deserializer=google_dot_longrunning_dot_operations__pb2.Operation.FromString,
        )
    self.ListVersions = channel.unary_unary(
        '/google.cloud.ml.v1beta1.ModelService/ListVersions',
        request_serializer=google_dot_cloud_dot_ml_dot_v1beta1_dot_model__service__pb2.ListVersionsRequest.SerializeToString,
        response_deserializer=google_dot_cloud_dot_ml_dot_v1beta1_dot_model__service__pb2.ListVersionsResponse.FromString,
        )
    self.GetVersion = channel.unary_unary(
        '/google.cloud.ml.v1beta1.ModelService/GetVersion',
        request_serializer=google_dot_cloud_dot_ml_dot_v1beta1_dot_model__service__pb2.GetVersionRequest.SerializeToString,
        response_deserializer=google_dot_cloud_dot_ml_dot_v1beta1_dot_model__service__pb2.Version.FromString,
        )
    self.DeleteVersion = channel.unary_unary(
        '/google.cloud.ml.v1beta1.ModelService/DeleteVersion',
        request_serializer=google_dot_cloud_dot_ml_dot_v1beta1_dot_model__service__pb2.DeleteVersionRequest.SerializeToString,
        response_deserializer=google_dot_longrunning_dot_operations__pb2.Operation.FromString,
        )
    self.SetDefaultVersion = channel.unary_unary(
        '/google.cloud.ml.v1beta1.ModelService/SetDefaultVersion',
        request_serializer=google_dot_cloud_dot_ml_dot_v1beta1_dot_model__service__pb2.SetDefaultVersionRequest.SerializeToString,
        response_deserializer=google_dot_cloud_dot_ml_dot_v1beta1_dot_model__service__pb2.Version.FromString,
        )


class ModelServiceServicer(object):
  """Copyright 2016 Google Inc. All Rights Reserved.

  Proto file for the Google Cloud Machine Learning Engine.
  Describes the 'models service' to work with the 'model' and 'version'
  resources.

  Provides methods that create and manage machine learning models and their
  versions.

  A model in this context is a container for versions. The model can't provide
  predictions without first having a version created for it.

  Each version is a trained machine learning model, and each is assumed to be
  an iteration of the same machine learning problem as the other versions of
  the same model.

  Your project can define multiple models, each with multiple versions.

  The basic life cycle of a model is:

  *   Create and train the machine learning model and save it to a
  Google Cloud Storage location.
  *   Use
  [projects.models.create](/ml/reference/rest/v1beta1/projects.models/create)
  to make a new model in your project.
  *   Use
  [projects.models.versions.create](/ml/reference/rest/v1beta1/projects.models.versions/create)
  to deploy your saved model.
  *   Use [projects.predict](/ml/reference/rest/v1beta1/projects/predict to
  request predictions of a version of your model, or use
  [projects.jobs.create](/ml/reference/rest/v1beta1/projects.jobs/create)
  to start a batch prediction job.
  """

  def CreateModel(self, request, context):
    """Creates a model which will later contain one or more versions.

    You must add at least one version before you can request predictions from
    the model. Add versions by calling
    [projects.models.versions.create](/ml/reference/rest/v1beta1/projects.models.versions/create).
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def ListModels(self, request, context):
    """Lists the models in a project.

    Each project can contain multiple models, and each model can have multiple
    versions.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetModel(self, request, context):
    """Gets information about a model, including its name, the description (if
    set), and the default version (if at least one version of the model has
    been deployed).
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def DeleteModel(self, request, context):
    """Deletes a model.

    You can only delete a model if there are no versions in it. You can delete
    versions by calling
    [projects.models.versions.delete](/ml/reference/rest/v1beta1/projects.models.versions/delete).
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def CreateVersion(self, request, context):
    """Creates a new version of a model from a trained TensorFlow model.

    If the version created in the cloud by this call is the first deployed
    version of the specified model, it will be made the default version of the
    model. When you add a version to a model that already has one or more
    versions, the default version does not automatically change. If you want a
    new version to be the default, you must call
    [projects.models.versions.setDefault](/ml/reference/rest/v1beta1/projects.models.versions/setDefault).
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def ListVersions(self, request, context):
    """Gets basic information about all the versions of a model.

    If you expect that a model has a lot of versions, or if you need to handle
    only a limited number of results at a time, you can request that the list
    be retrieved in batches (called pages):
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetVersion(self, request, context):
    """Gets information about a model version.

    Models can have multiple versions. You can call
    [projects.models.versions.list](/ml/reference/rest/v1beta1/projects.models.versions/list)
    to get the same information that this method returns for all of the
    versions of a model.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def DeleteVersion(self, request, context):
    """Deletes a model version.

    Each model can have multiple versions deployed and in use at any given
    time. Use this method to remove a single version.

    Note: You cannot delete the version that is set as the default version
    of the model unless it is the only remaining version.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def SetDefaultVersion(self, request, context):
    """Designates a version to be the default for the model.

    The default version is used for prediction requests made against the model
    that don't specify a version.

    The first version to be created for a model is automatically set as the
    default. You must make any subsequent changes to the default version
    setting manually using this method.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_ModelServiceServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'CreateModel': grpc.unary_unary_rpc_method_handler(
          servicer.CreateModel,
          request_deserializer=google_dot_cloud_dot_ml_dot_v1beta1_dot_model__service__pb2.CreateModelRequest.FromString,
          response_serializer=google_dot_cloud_dot_ml_dot_v1beta1_dot_model__service__pb2.Model.SerializeToString,
      ),
      'ListModels': grpc.unary_unary_rpc_method_handler(
          servicer.ListModels,
          request_deserializer=google_dot_cloud_dot_ml_dot_v1beta1_dot_model__service__pb2.ListModelsRequest.FromString,
          response_serializer=google_dot_cloud_dot_ml_dot_v1beta1_dot_model__service__pb2.ListModelsResponse.SerializeToString,
      ),
      'GetModel': grpc.unary_unary_rpc_method_handler(
          servicer.GetModel,
          request_deserializer=google_dot_cloud_dot_ml_dot_v1beta1_dot_model__service__pb2.GetModelRequest.FromString,
          response_serializer=google_dot_cloud_dot_ml_dot_v1beta1_dot_model__service__pb2.Model.SerializeToString,
      ),
      'DeleteModel': grpc.unary_unary_rpc_method_handler(
          servicer.DeleteModel,
          request_deserializer=google_dot_cloud_dot_ml_dot_v1beta1_dot_model__service__pb2.DeleteModelRequest.FromString,
          response_serializer=google_dot_longrunning_dot_operations__pb2.Operation.SerializeToString,
      ),
      'CreateVersion': grpc.unary_unary_rpc_method_handler(
          servicer.CreateVersion,
          request_deserializer=google_dot_cloud_dot_ml_dot_v1beta1_dot_model__service__pb2.CreateVersionRequest.FromString,
          response_serializer=google_dot_longrunning_dot_operations__pb2.Operation.SerializeToString,
      ),
      'ListVersions': grpc.unary_unary_rpc_method_handler(
          servicer.ListVersions,
          request_deserializer=google_dot_cloud_dot_ml_dot_v1beta1_dot_model__service__pb2.ListVersionsRequest.FromString,
          response_serializer=google_dot_cloud_dot_ml_dot_v1beta1_dot_model__service__pb2.ListVersionsResponse.SerializeToString,
      ),
      'GetVersion': grpc.unary_unary_rpc_method_handler(
          servicer.GetVersion,
          request_deserializer=google_dot_cloud_dot_ml_dot_v1beta1_dot_model__service__pb2.GetVersionRequest.FromString,
          response_serializer=google_dot_cloud_dot_ml_dot_v1beta1_dot_model__service__pb2.Version.SerializeToString,
      ),
      'DeleteVersion': grpc.unary_unary_rpc_method_handler(
          servicer.DeleteVersion,
          request_deserializer=google_dot_cloud_dot_ml_dot_v1beta1_dot_model__service__pb2.DeleteVersionRequest.FromString,
          response_serializer=google_dot_longrunning_dot_operations__pb2.Operation.SerializeToString,
      ),
      'SetDefaultVersion': grpc.unary_unary_rpc_method_handler(
          servicer.SetDefaultVersion,
          request_deserializer=google_dot_cloud_dot_ml_dot_v1beta1_dot_model__service__pb2.SetDefaultVersionRequest.FromString,
          response_serializer=google_dot_cloud_dot_ml_dot_v1beta1_dot_model__service__pb2.Version.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'google.cloud.ml.v1beta1.ModelService', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
