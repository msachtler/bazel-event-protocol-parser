// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/support/v1alpha1/cloud_support.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "google/cloud/support/v1alpha1/cloud_support.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace google {
namespace cloud {
namespace support {
namespace v1alpha1 {
class GetSupportAccountRequestDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<GetSupportAccountRequest> {
} _GetSupportAccountRequest_default_instance_;
class ListSupportAccountsRequestDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ListSupportAccountsRequest> {
} _ListSupportAccountsRequest_default_instance_;
class ListSupportAccountsResponseDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ListSupportAccountsResponse> {
} _ListSupportAccountsResponse_default_instance_;
class GetCaseRequestDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<GetCaseRequest> {
} _GetCaseRequest_default_instance_;
class ListCasesRequestDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ListCasesRequest> {
} _ListCasesRequest_default_instance_;
class ListCasesResponseDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ListCasesResponse> {
} _ListCasesResponse_default_instance_;
class ListCommentsRequestDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ListCommentsRequest> {
} _ListCommentsRequest_default_instance_;
class ListCommentsResponseDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ListCommentsResponse> {
} _ListCommentsResponse_default_instance_;
class CreateCaseRequestDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CreateCaseRequest> {
} _CreateCaseRequest_default_instance_;
class UpdateCaseRequestDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<UpdateCaseRequest> {
} _UpdateCaseRequest_default_instance_;
class CreateCommentRequestDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CreateCommentRequest> {
} _CreateCommentRequest_default_instance_;
class GetIssueTaxonomyRequestDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<GetIssueTaxonomyRequest> {
} _GetIssueTaxonomyRequest_default_instance_;

namespace protobuf_google_2fcloud_2fsupport_2fv1alpha1_2fcloud_5fsupport_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[12];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] = {
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetSupportAccountRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetSupportAccountRequest, name_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListSupportAccountsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListSupportAccountsRequest, filter_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListSupportAccountsRequest, page_size_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListSupportAccountsRequest, page_token_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListSupportAccountsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListSupportAccountsResponse, accounts_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListSupportAccountsResponse, next_page_token_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetCaseRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetCaseRequest, name_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListCasesRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListCasesRequest, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListCasesRequest, filter_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListCasesRequest, page_size_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListCasesRequest, page_token_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListCasesResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListCasesResponse, cases_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListCasesResponse, next_page_token_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListCommentsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListCommentsRequest, name_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListCommentsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListCommentsResponse, comments_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateCaseRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateCaseRequest, parent_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateCaseRequest, case__),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateCaseRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateCaseRequest, case__),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateCaseRequest, update_mask_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateCommentRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateCommentRequest, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateCommentRequest, comment_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetIssueTaxonomyRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
};

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, -1, sizeof(GetSupportAccountRequest)},
  { 6, -1, sizeof(ListSupportAccountsRequest)},
  { 14, -1, sizeof(ListSupportAccountsResponse)},
  { 21, -1, sizeof(GetCaseRequest)},
  { 27, -1, sizeof(ListCasesRequest)},
  { 36, -1, sizeof(ListCasesResponse)},
  { 43, -1, sizeof(ListCommentsRequest)},
  { 49, -1, sizeof(ListCommentsResponse)},
  { 55, -1, sizeof(CreateCaseRequest)},
  { 62, -1, sizeof(UpdateCaseRequest)},
  { 69, -1, sizeof(CreateCommentRequest)},
  { 76, -1, sizeof(GetIssueTaxonomyRequest)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_GetSupportAccountRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ListSupportAccountsRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ListSupportAccountsResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GetCaseRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ListCasesRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ListCasesResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ListCommentsRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ListCommentsResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CreateCaseRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_UpdateCaseRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CreateCommentRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GetIssueTaxonomyRequest_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "google/cloud/support/v1alpha1/cloud_support.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 12);
}

}  // namespace

void TableStruct::Shutdown() {
  _GetSupportAccountRequest_default_instance_.Shutdown();
  delete file_level_metadata[0].reflection;
  _ListSupportAccountsRequest_default_instance_.Shutdown();
  delete file_level_metadata[1].reflection;
  _ListSupportAccountsResponse_default_instance_.Shutdown();
  delete file_level_metadata[2].reflection;
  _GetCaseRequest_default_instance_.Shutdown();
  delete file_level_metadata[3].reflection;
  _ListCasesRequest_default_instance_.Shutdown();
  delete file_level_metadata[4].reflection;
  _ListCasesResponse_default_instance_.Shutdown();
  delete file_level_metadata[5].reflection;
  _ListCommentsRequest_default_instance_.Shutdown();
  delete file_level_metadata[6].reflection;
  _ListCommentsResponse_default_instance_.Shutdown();
  delete file_level_metadata[7].reflection;
  _CreateCaseRequest_default_instance_.Shutdown();
  delete file_level_metadata[8].reflection;
  _UpdateCaseRequest_default_instance_.Shutdown();
  delete file_level_metadata[9].reflection;
  _CreateCommentRequest_default_instance_.Shutdown();
  delete file_level_metadata[10].reflection;
  _GetIssueTaxonomyRequest_default_instance_.Shutdown();
  delete file_level_metadata[11].reflection;
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  ::google::api::protobuf_google_2fapi_2fannotations_2eproto::InitDefaults();
  ::google::cloud::support::common::protobuf_google_2fcloud_2fsupport_2fcommon_2eproto::InitDefaults();
  ::google::protobuf::protobuf_google_2fprotobuf_2fempty_2eproto::InitDefaults();
  ::google::protobuf::protobuf_google_2fprotobuf_2ffield_5fmask_2eproto::InitDefaults();
  _GetSupportAccountRequest_default_instance_.DefaultConstruct();
  _ListSupportAccountsRequest_default_instance_.DefaultConstruct();
  _ListSupportAccountsResponse_default_instance_.DefaultConstruct();
  _GetCaseRequest_default_instance_.DefaultConstruct();
  _ListCasesRequest_default_instance_.DefaultConstruct();
  _ListCasesResponse_default_instance_.DefaultConstruct();
  _ListCommentsRequest_default_instance_.DefaultConstruct();
  _ListCommentsResponse_default_instance_.DefaultConstruct();
  _CreateCaseRequest_default_instance_.DefaultConstruct();
  _UpdateCaseRequest_default_instance_.DefaultConstruct();
  _CreateCommentRequest_default_instance_.DefaultConstruct();
  _GetIssueTaxonomyRequest_default_instance_.DefaultConstruct();
  _CreateCaseRequest_default_instance_.get_mutable()->case__ = const_cast< ::google::cloud::support::common::Case*>(
      ::google::cloud::support::common::Case::internal_default_instance());
  _UpdateCaseRequest_default_instance_.get_mutable()->case__ = const_cast< ::google::cloud::support::common::Case*>(
      ::google::cloud::support::common::Case::internal_default_instance());
  _UpdateCaseRequest_default_instance_.get_mutable()->update_mask_ = const_cast< ::google::protobuf::FieldMask*>(
      ::google::protobuf::FieldMask::internal_default_instance());
  _CreateCommentRequest_default_instance_.get_mutable()->comment_ = const_cast< ::google::cloud::support::common::Comment*>(
      ::google::cloud::support::common::Comment::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n1google/cloud/support/v1alpha1/cloud_su"
      "pport.proto\022\035google.cloud.support.v1alph"
      "a1\032\034google/api/annotations.proto\032!google"
      "/cloud/support/common.proto\032\033google/prot"
      "obuf/empty.proto\032 google/protobuf/field_"
      "mask.proto\"(\n\030GetSupportAccountRequest\022\014"
      "\n\004name\030\001 \001(\t\"S\n\032ListSupportAccountsReque"
      "st\022\016\n\006filter\030\001 \001(\t\022\021\n\tpage_size\030\002 \001(\003\022\022\n"
      "\npage_token\030\003 \001(\t\"u\n\033ListSupportAccounts"
      "Response\022=\n\010accounts\030\001 \003(\0132+.google.clou"
      "d.support.common.SupportAccount\022\027\n\017next_"
      "page_token\030\002 \001(\t\"\036\n\016GetCaseRequest\022\014\n\004na"
      "me\030\001 \001(\t\"W\n\020ListCasesRequest\022\014\n\004name\030\001 \001"
      "(\t\022\016\n\006filter\030\002 \001(\t\022\021\n\tpage_size\030\003 \001(\003\022\022\n"
      "\npage_token\030\004 \001(\t\"^\n\021ListCasesResponse\0220"
      "\n\005cases\030\001 \003(\0132!.google.cloud.support.com"
      "mon.Case\022\027\n\017next_page_token\030\002 \001(\t\"#\n\023Lis"
      "tCommentsRequest\022\014\n\004name\030\001 \001(\t\"N\n\024ListCo"
      "mmentsResponse\0226\n\010comments\030\001 \003(\0132$.googl"
      "e.cloud.support.common.Comment\"T\n\021Create"
      "CaseRequest\022\016\n\006parent\030\001 \001(\t\022/\n\004case\030\002 \001("
      "\0132!.google.cloud.support.common.Case\"u\n\021"
      "UpdateCaseRequest\022/\n\004case\030\001 \001(\0132!.google"
      ".cloud.support.common.Case\022/\n\013update_mas"
      "k\030\002 \001(\0132\032.google.protobuf.FieldMask\"[\n\024C"
      "reateCommentRequest\022\014\n\004name\030\001 \001(\t\0225\n\007com"
      "ment\030\002 \001(\0132$.google.cloud.support.common"
      ".Comment\"\031\n\027GetIssueTaxonomyRequest2\345\013\n\014"
      "CloudSupport\022\245\001\n\021GetSupportAccount\0227.goo"
      "gle.cloud.support.v1alpha1.GetSupportAcc"
      "ountRequest\032+.google.cloud.support.commo"
      "n.SupportAccount\"*\202\323\344\223\002$\022\"/v1alpha1/{nam"
      "e=supportAccounts/*}\022\257\001\n\023ListSupportAcco"
      "unts\0229.google.cloud.support.v1alpha1.Lis"
      "tSupportAccountsRequest\032:.google.cloud.s"
      "upport.v1alpha1.ListSupportAccountsRespo"
      "nse\"!\202\323\344\223\002\033\022\031/v1alpha1/supportAccounts\022\217"
      "\001\n\007GetCase\022-.google.cloud.support.v1alph"
      "a1.GetCaseRequest\032!.google.cloud.support"
      ".common.Case\"2\202\323\344\223\002,\022*/v1alpha1/{name=su"
      "pportAccounts/*/cases/*}\022\240\001\n\tListCases\022/"
      ".google.cloud.support.v1alpha1.ListCases"
      "Request\0320.google.cloud.support.v1alpha1."
      "ListCasesResponse\"0\202\323\344\223\002*\022(/v1alpha1/{na"
      "me=supportAccounts/*}/cases\022\264\001\n\014ListComm"
      "ents\0222.google.cloud.support.v1alpha1.Lis"
      "tCommentsRequest\0323.google.cloud.support."
      "v1alpha1.ListCommentsResponse\";\202\323\344\223\0025\0223/"
      "v1alpha1/{name=supportAccounts/*/cases/*"
      "}/comments\022\233\001\n\nCreateCase\0220.google.cloud"
      ".support.v1alpha1.CreateCaseRequest\032!.go"
      "ogle.cloud.support.common.Case\"8\202\323\344\223\0022\"*"
      "/v1alpha1/{parent=supportAccounts/*}/cas"
      "es:\004case\022\240\001\n\nUpdateCase\0220.google.cloud.s"
      "upport.v1alpha1.UpdateCaseRequest\032!.goog"
      "le.cloud.support.common.Case\"=\202\323\344\223\00272//v"
      "1alpha1/{case.name=supportAccounts/*/cas"
      "es/*}:\004case\022\260\001\n\rCreateComment\0223.google.c"
      "loud.support.v1alpha1.CreateCommentReque"
      "st\032$.google.cloud.support.common.Comment"
      "\"D\202\323\344\223\002>\"3/v1alpha1/{name=supportAccount"
      "s/*/cases/*}/comments:\007comment\022\232\001\n\020GetIs"
      "sueTaxonomy\0226.google.cloud.support.v1alp"
      "ha1.GetIssueTaxonomyRequest\032*.google.clo"
      "ud.support.common.IssueTaxonomy\"\"\202\323\344\223\002\034\022"
      "\032/v1alpha1:getIssueTaxonomyB|\n!com.googl"
      "e.cloud.support.v1alpha1B\021CloudSupportPr"
      "otoZDgoogle.golang.org/genproto/googleap"
      "is/cloud/support/v1alpha1;supportb\006proto"
      "3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 2761);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "google/cloud/support/v1alpha1/cloud_support.proto", &protobuf_RegisterTypes);
  ::google::api::protobuf_google_2fapi_2fannotations_2eproto::AddDescriptors();
  ::google::cloud::support::common::protobuf_google_2fcloud_2fsupport_2fcommon_2eproto::AddDescriptors();
  ::google::protobuf::protobuf_google_2fprotobuf_2fempty_2eproto::AddDescriptors();
  ::google::protobuf::protobuf_google_2fprotobuf_2ffield_5fmask_2eproto::AddDescriptors();
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_google_2fcloud_2fsupport_2fv1alpha1_2fcloud_5fsupport_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetSupportAccountRequest::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetSupportAccountRequest::GetSupportAccountRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_google_2fcloud_2fsupport_2fv1alpha1_2fcloud_5fsupport_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.support.v1alpha1.GetSupportAccountRequest)
}
GetSupportAccountRequest::GetSupportAccountRequest(const GetSupportAccountRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  // @@protoc_insertion_point(copy_constructor:google.cloud.support.v1alpha1.GetSupportAccountRequest)
}

void GetSupportAccountRequest::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

GetSupportAccountRequest::~GetSupportAccountRequest() {
  // @@protoc_insertion_point(destructor:google.cloud.support.v1alpha1.GetSupportAccountRequest)
  SharedDtor();
}

void GetSupportAccountRequest::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GetSupportAccountRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetSupportAccountRequest::descriptor() {
  protobuf_google_2fcloud_2fsupport_2fv1alpha1_2fcloud_5fsupport_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fcloud_2fsupport_2fv1alpha1_2fcloud_5fsupport_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetSupportAccountRequest& GetSupportAccountRequest::default_instance() {
  protobuf_google_2fcloud_2fsupport_2fv1alpha1_2fcloud_5fsupport_2eproto::InitDefaults();
  return *internal_default_instance();
}

GetSupportAccountRequest* GetSupportAccountRequest::New(::google::protobuf::Arena* arena) const {
  GetSupportAccountRequest* n = new GetSupportAccountRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetSupportAccountRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.support.v1alpha1.GetSupportAccountRequest)
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool GetSupportAccountRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.support.v1alpha1.GetSupportAccountRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.support.v1alpha1.GetSupportAccountRequest.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.support.v1alpha1.GetSupportAccountRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.support.v1alpha1.GetSupportAccountRequest)
  return false;
#undef DO_
}

void GetSupportAccountRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.support.v1alpha1.GetSupportAccountRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.support.v1alpha1.GetSupportAccountRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // @@protoc_insertion_point(serialize_end:google.cloud.support.v1alpha1.GetSupportAccountRequest)
}

::google::protobuf::uint8* GetSupportAccountRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.support.v1alpha1.GetSupportAccountRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.support.v1alpha1.GetSupportAccountRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.support.v1alpha1.GetSupportAccountRequest)
  return target;
}

size_t GetSupportAccountRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.support.v1alpha1.GetSupportAccountRequest)
  size_t total_size = 0;

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetSupportAccountRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.support.v1alpha1.GetSupportAccountRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetSupportAccountRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetSupportAccountRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.support.v1alpha1.GetSupportAccountRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.support.v1alpha1.GetSupportAccountRequest)
    MergeFrom(*source);
  }
}

void GetSupportAccountRequest::MergeFrom(const GetSupportAccountRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.support.v1alpha1.GetSupportAccountRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
}

void GetSupportAccountRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.support.v1alpha1.GetSupportAccountRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetSupportAccountRequest::CopyFrom(const GetSupportAccountRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.support.v1alpha1.GetSupportAccountRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetSupportAccountRequest::IsInitialized() const {
  return true;
}

void GetSupportAccountRequest::Swap(GetSupportAccountRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetSupportAccountRequest::InternalSwap(GetSupportAccountRequest* other) {
  name_.Swap(&other->name_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetSupportAccountRequest::GetMetadata() const {
  protobuf_google_2fcloud_2fsupport_2fv1alpha1_2fcloud_5fsupport_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fcloud_2fsupport_2fv1alpha1_2fcloud_5fsupport_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetSupportAccountRequest

// string name = 1;
void GetSupportAccountRequest::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& GetSupportAccountRequest::name() const {
  // @@protoc_insertion_point(field_get:google.cloud.support.v1alpha1.GetSupportAccountRequest.name)
  return name_.GetNoArena();
}
void GetSupportAccountRequest::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.cloud.support.v1alpha1.GetSupportAccountRequest.name)
}
#if LANG_CXX11
void GetSupportAccountRequest::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.support.v1alpha1.GetSupportAccountRequest.name)
}
#endif
void GetSupportAccountRequest::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.cloud.support.v1alpha1.GetSupportAccountRequest.name)
}
void GetSupportAccountRequest::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.cloud.support.v1alpha1.GetSupportAccountRequest.name)
}
::std::string* GetSupportAccountRequest::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.support.v1alpha1.GetSupportAccountRequest.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GetSupportAccountRequest::release_name() {
  // @@protoc_insertion_point(field_release:google.cloud.support.v1alpha1.GetSupportAccountRequest.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GetSupportAccountRequest::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:google.cloud.support.v1alpha1.GetSupportAccountRequest.name)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListSupportAccountsRequest::kFilterFieldNumber;
const int ListSupportAccountsRequest::kPageSizeFieldNumber;
const int ListSupportAccountsRequest::kPageTokenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListSupportAccountsRequest::ListSupportAccountsRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_google_2fcloud_2fsupport_2fv1alpha1_2fcloud_5fsupport_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.support.v1alpha1.ListSupportAccountsRequest)
}
ListSupportAccountsRequest::ListSupportAccountsRequest(const ListSupportAccountsRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  filter_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.filter().size() > 0) {
    filter_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filter_);
  }
  page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.page_token().size() > 0) {
    page_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.page_token_);
  }
  page_size_ = from.page_size_;
  // @@protoc_insertion_point(copy_constructor:google.cloud.support.v1alpha1.ListSupportAccountsRequest)
}

void ListSupportAccountsRequest::SharedCtor() {
  filter_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_size_ = GOOGLE_LONGLONG(0);
  _cached_size_ = 0;
}

ListSupportAccountsRequest::~ListSupportAccountsRequest() {
  // @@protoc_insertion_point(destructor:google.cloud.support.v1alpha1.ListSupportAccountsRequest)
  SharedDtor();
}

void ListSupportAccountsRequest::SharedDtor() {
  filter_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ListSupportAccountsRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ListSupportAccountsRequest::descriptor() {
  protobuf_google_2fcloud_2fsupport_2fv1alpha1_2fcloud_5fsupport_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fcloud_2fsupport_2fv1alpha1_2fcloud_5fsupport_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListSupportAccountsRequest& ListSupportAccountsRequest::default_instance() {
  protobuf_google_2fcloud_2fsupport_2fv1alpha1_2fcloud_5fsupport_2eproto::InitDefaults();
  return *internal_default_instance();
}

ListSupportAccountsRequest* ListSupportAccountsRequest::New(::google::protobuf::Arena* arena) const {
  ListSupportAccountsRequest* n = new ListSupportAccountsRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ListSupportAccountsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.support.v1alpha1.ListSupportAccountsRequest)
  filter_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_size_ = GOOGLE_LONGLONG(0);
}

bool ListSupportAccountsRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.support.v1alpha1.ListSupportAccountsRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string filter = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_filter()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->filter().data(), this->filter().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.support.v1alpha1.ListSupportAccountsRequest.filter"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 page_size = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &page_size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string page_token = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_page_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->page_token().data(), this->page_token().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.support.v1alpha1.ListSupportAccountsRequest.page_token"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.support.v1alpha1.ListSupportAccountsRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.support.v1alpha1.ListSupportAccountsRequest)
  return false;
#undef DO_
}

void ListSupportAccountsRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.support.v1alpha1.ListSupportAccountsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string filter = 1;
  if (this->filter().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->filter().data(), this->filter().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.support.v1alpha1.ListSupportAccountsRequest.filter");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->filter(), output);
  }

  // int64 page_size = 2;
  if (this->page_size() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->page_size(), output);
  }

  // string page_token = 3;
  if (this->page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->page_token().data(), this->page_token().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.support.v1alpha1.ListSupportAccountsRequest.page_token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->page_token(), output);
  }

  // @@protoc_insertion_point(serialize_end:google.cloud.support.v1alpha1.ListSupportAccountsRequest)
}

::google::protobuf::uint8* ListSupportAccountsRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.support.v1alpha1.ListSupportAccountsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string filter = 1;
  if (this->filter().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->filter().data(), this->filter().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.support.v1alpha1.ListSupportAccountsRequest.filter");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->filter(), target);
  }

  // int64 page_size = 2;
  if (this->page_size() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->page_size(), target);
  }

  // string page_token = 3;
  if (this->page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->page_token().data(), this->page_token().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.support.v1alpha1.ListSupportAccountsRequest.page_token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->page_token(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.support.v1alpha1.ListSupportAccountsRequest)
  return target;
}

size_t ListSupportAccountsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.support.v1alpha1.ListSupportAccountsRequest)
  size_t total_size = 0;

  // string filter = 1;
  if (this->filter().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->filter());
  }

  // string page_token = 3;
  if (this->page_token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->page_token());
  }

  // int64 page_size = 2;
  if (this->page_size() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->page_size());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ListSupportAccountsRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.support.v1alpha1.ListSupportAccountsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ListSupportAccountsRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListSupportAccountsRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.support.v1alpha1.ListSupportAccountsRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.support.v1alpha1.ListSupportAccountsRequest)
    MergeFrom(*source);
  }
}

void ListSupportAccountsRequest::MergeFrom(const ListSupportAccountsRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.support.v1alpha1.ListSupportAccountsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.filter().size() > 0) {

    filter_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filter_);
  }
  if (from.page_token().size() > 0) {

    page_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.page_token_);
  }
  if (from.page_size() != 0) {
    set_page_size(from.page_size());
  }
}

void ListSupportAccountsRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.support.v1alpha1.ListSupportAccountsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListSupportAccountsRequest::CopyFrom(const ListSupportAccountsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.support.v1alpha1.ListSupportAccountsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListSupportAccountsRequest::IsInitialized() const {
  return true;
}

void ListSupportAccountsRequest::Swap(ListSupportAccountsRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListSupportAccountsRequest::InternalSwap(ListSupportAccountsRequest* other) {
  filter_.Swap(&other->filter_);
  page_token_.Swap(&other->page_token_);
  std::swap(page_size_, other->page_size_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ListSupportAccountsRequest::GetMetadata() const {
  protobuf_google_2fcloud_2fsupport_2fv1alpha1_2fcloud_5fsupport_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fcloud_2fsupport_2fv1alpha1_2fcloud_5fsupport_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ListSupportAccountsRequest

// string filter = 1;
void ListSupportAccountsRequest::clear_filter() {
  filter_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ListSupportAccountsRequest::filter() const {
  // @@protoc_insertion_point(field_get:google.cloud.support.v1alpha1.ListSupportAccountsRequest.filter)
  return filter_.GetNoArena();
}
void ListSupportAccountsRequest::set_filter(const ::std::string& value) {
  
  filter_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.cloud.support.v1alpha1.ListSupportAccountsRequest.filter)
}
#if LANG_CXX11
void ListSupportAccountsRequest::set_filter(::std::string&& value) {
  
  filter_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.support.v1alpha1.ListSupportAccountsRequest.filter)
}
#endif
void ListSupportAccountsRequest::set_filter(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  filter_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.cloud.support.v1alpha1.ListSupportAccountsRequest.filter)
}
void ListSupportAccountsRequest::set_filter(const char* value, size_t size) {
  
  filter_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.cloud.support.v1alpha1.ListSupportAccountsRequest.filter)
}
::std::string* ListSupportAccountsRequest::mutable_filter() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.support.v1alpha1.ListSupportAccountsRequest.filter)
  return filter_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ListSupportAccountsRequest::release_filter() {
  // @@protoc_insertion_point(field_release:google.cloud.support.v1alpha1.ListSupportAccountsRequest.filter)
  
  return filter_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ListSupportAccountsRequest::set_allocated_filter(::std::string* filter) {
  if (filter != NULL) {
    
  } else {
    
  }
  filter_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), filter);
  // @@protoc_insertion_point(field_set_allocated:google.cloud.support.v1alpha1.ListSupportAccountsRequest.filter)
}

// int64 page_size = 2;
void ListSupportAccountsRequest::clear_page_size() {
  page_size_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 ListSupportAccountsRequest::page_size() const {
  // @@protoc_insertion_point(field_get:google.cloud.support.v1alpha1.ListSupportAccountsRequest.page_size)
  return page_size_;
}
void ListSupportAccountsRequest::set_page_size(::google::protobuf::int64 value) {
  
  page_size_ = value;
  // @@protoc_insertion_point(field_set:google.cloud.support.v1alpha1.ListSupportAccountsRequest.page_size)
}

// string page_token = 3;
void ListSupportAccountsRequest::clear_page_token() {
  page_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ListSupportAccountsRequest::page_token() const {
  // @@protoc_insertion_point(field_get:google.cloud.support.v1alpha1.ListSupportAccountsRequest.page_token)
  return page_token_.GetNoArena();
}
void ListSupportAccountsRequest::set_page_token(const ::std::string& value) {
  
  page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.cloud.support.v1alpha1.ListSupportAccountsRequest.page_token)
}
#if LANG_CXX11
void ListSupportAccountsRequest::set_page_token(::std::string&& value) {
  
  page_token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.support.v1alpha1.ListSupportAccountsRequest.page_token)
}
#endif
void ListSupportAccountsRequest::set_page_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.cloud.support.v1alpha1.ListSupportAccountsRequest.page_token)
}
void ListSupportAccountsRequest::set_page_token(const char* value, size_t size) {
  
  page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.cloud.support.v1alpha1.ListSupportAccountsRequest.page_token)
}
::std::string* ListSupportAccountsRequest::mutable_page_token() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.support.v1alpha1.ListSupportAccountsRequest.page_token)
  return page_token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ListSupportAccountsRequest::release_page_token() {
  // @@protoc_insertion_point(field_release:google.cloud.support.v1alpha1.ListSupportAccountsRequest.page_token)
  
  return page_token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ListSupportAccountsRequest::set_allocated_page_token(::std::string* page_token) {
  if (page_token != NULL) {
    
  } else {
    
  }
  page_token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), page_token);
  // @@protoc_insertion_point(field_set_allocated:google.cloud.support.v1alpha1.ListSupportAccountsRequest.page_token)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListSupportAccountsResponse::kAccountsFieldNumber;
const int ListSupportAccountsResponse::kNextPageTokenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListSupportAccountsResponse::ListSupportAccountsResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_google_2fcloud_2fsupport_2fv1alpha1_2fcloud_5fsupport_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.support.v1alpha1.ListSupportAccountsResponse)
}
ListSupportAccountsResponse::ListSupportAccountsResponse(const ListSupportAccountsResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      accounts_(from.accounts_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  next_page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.next_page_token().size() > 0) {
    next_page_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.next_page_token_);
  }
  // @@protoc_insertion_point(copy_constructor:google.cloud.support.v1alpha1.ListSupportAccountsResponse)
}

void ListSupportAccountsResponse::SharedCtor() {
  next_page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

ListSupportAccountsResponse::~ListSupportAccountsResponse() {
  // @@protoc_insertion_point(destructor:google.cloud.support.v1alpha1.ListSupportAccountsResponse)
  SharedDtor();
}

void ListSupportAccountsResponse::SharedDtor() {
  next_page_token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ListSupportAccountsResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ListSupportAccountsResponse::descriptor() {
  protobuf_google_2fcloud_2fsupport_2fv1alpha1_2fcloud_5fsupport_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fcloud_2fsupport_2fv1alpha1_2fcloud_5fsupport_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListSupportAccountsResponse& ListSupportAccountsResponse::default_instance() {
  protobuf_google_2fcloud_2fsupport_2fv1alpha1_2fcloud_5fsupport_2eproto::InitDefaults();
  return *internal_default_instance();
}

ListSupportAccountsResponse* ListSupportAccountsResponse::New(::google::protobuf::Arena* arena) const {
  ListSupportAccountsResponse* n = new ListSupportAccountsResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ListSupportAccountsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.support.v1alpha1.ListSupportAccountsResponse)
  accounts_.Clear();
  next_page_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool ListSupportAccountsResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.support.v1alpha1.ListSupportAccountsResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .google.cloud.support.common.SupportAccount accounts = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_accounts()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string next_page_token = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_next_page_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->next_page_token().data(), this->next_page_token().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.support.v1alpha1.ListSupportAccountsResponse.next_page_token"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.support.v1alpha1.ListSupportAccountsResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.support.v1alpha1.ListSupportAccountsResponse)
  return false;
#undef DO_
}

void ListSupportAccountsResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.support.v1alpha1.ListSupportAccountsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.cloud.support.common.SupportAccount accounts = 1;
  for (unsigned int i = 0, n = this->accounts_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->accounts(i), output);
  }

  // string next_page_token = 2;
  if (this->next_page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->next_page_token().data(), this->next_page_token().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.support.v1alpha1.ListSupportAccountsResponse.next_page_token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->next_page_token(), output);
  }

  // @@protoc_insertion_point(serialize_end:google.cloud.support.v1alpha1.ListSupportAccountsResponse)
}

::google::protobuf::uint8* ListSupportAccountsResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.support.v1alpha1.ListSupportAccountsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.cloud.support.common.SupportAccount accounts = 1;
  for (unsigned int i = 0, n = this->accounts_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->accounts(i), deterministic, target);
  }

  // string next_page_token = 2;
  if (this->next_page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->next_page_token().data(), this->next_page_token().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.support.v1alpha1.ListSupportAccountsResponse.next_page_token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->next_page_token(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.support.v1alpha1.ListSupportAccountsResponse)
  return target;
}

size_t ListSupportAccountsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.support.v1alpha1.ListSupportAccountsResponse)
  size_t total_size = 0;

  // repeated .google.cloud.support.common.SupportAccount accounts = 1;
  {
    unsigned int count = this->accounts_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->accounts(i));
    }
  }

  // string next_page_token = 2;
  if (this->next_page_token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->next_page_token());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ListSupportAccountsResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.support.v1alpha1.ListSupportAccountsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ListSupportAccountsResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListSupportAccountsResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.support.v1alpha1.ListSupportAccountsResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.support.v1alpha1.ListSupportAccountsResponse)
    MergeFrom(*source);
  }
}

void ListSupportAccountsResponse::MergeFrom(const ListSupportAccountsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.support.v1alpha1.ListSupportAccountsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  accounts_.MergeFrom(from.accounts_);
  if (from.next_page_token().size() > 0) {

    next_page_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.next_page_token_);
  }
}

void ListSupportAccountsResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.support.v1alpha1.ListSupportAccountsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListSupportAccountsResponse::CopyFrom(const ListSupportAccountsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.support.v1alpha1.ListSupportAccountsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListSupportAccountsResponse::IsInitialized() const {
  return true;
}

void ListSupportAccountsResponse::Swap(ListSupportAccountsResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListSupportAccountsResponse::InternalSwap(ListSupportAccountsResponse* other) {
  accounts_.InternalSwap(&other->accounts_);
  next_page_token_.Swap(&other->next_page_token_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ListSupportAccountsResponse::GetMetadata() const {
  protobuf_google_2fcloud_2fsupport_2fv1alpha1_2fcloud_5fsupport_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fcloud_2fsupport_2fv1alpha1_2fcloud_5fsupport_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ListSupportAccountsResponse

// repeated .google.cloud.support.common.SupportAccount accounts = 1;
int ListSupportAccountsResponse::accounts_size() const {
  return accounts_.size();
}
void ListSupportAccountsResponse::clear_accounts() {
  accounts_.Clear();
}
const ::google::cloud::support::common::SupportAccount& ListSupportAccountsResponse::accounts(int index) const {
  // @@protoc_insertion_point(field_get:google.cloud.support.v1alpha1.ListSupportAccountsResponse.accounts)
  return accounts_.Get(index);
}
::google::cloud::support::common::SupportAccount* ListSupportAccountsResponse::mutable_accounts(int index) {
  // @@protoc_insertion_point(field_mutable:google.cloud.support.v1alpha1.ListSupportAccountsResponse.accounts)
  return accounts_.Mutable(index);
}
::google::cloud::support::common::SupportAccount* ListSupportAccountsResponse::add_accounts() {
  // @@protoc_insertion_point(field_add:google.cloud.support.v1alpha1.ListSupportAccountsResponse.accounts)
  return accounts_.Add();
}
::google::protobuf::RepeatedPtrField< ::google::cloud::support::common::SupportAccount >*
ListSupportAccountsResponse::mutable_accounts() {
  // @@protoc_insertion_point(field_mutable_list:google.cloud.support.v1alpha1.ListSupportAccountsResponse.accounts)
  return &accounts_;
}
const ::google::protobuf::RepeatedPtrField< ::google::cloud::support::common::SupportAccount >&
ListSupportAccountsResponse::accounts() const {
  // @@protoc_insertion_point(field_list:google.cloud.support.v1alpha1.ListSupportAccountsResponse.accounts)
  return accounts_;
}

// string next_page_token = 2;
void ListSupportAccountsResponse::clear_next_page_token() {
  next_page_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ListSupportAccountsResponse::next_page_token() const {
  // @@protoc_insertion_point(field_get:google.cloud.support.v1alpha1.ListSupportAccountsResponse.next_page_token)
  return next_page_token_.GetNoArena();
}
void ListSupportAccountsResponse::set_next_page_token(const ::std::string& value) {
  
  next_page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.cloud.support.v1alpha1.ListSupportAccountsResponse.next_page_token)
}
#if LANG_CXX11
void ListSupportAccountsResponse::set_next_page_token(::std::string&& value) {
  
  next_page_token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.support.v1alpha1.ListSupportAccountsResponse.next_page_token)
}
#endif
void ListSupportAccountsResponse::set_next_page_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  next_page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.cloud.support.v1alpha1.ListSupportAccountsResponse.next_page_token)
}
void ListSupportAccountsResponse::set_next_page_token(const char* value, size_t size) {
  
  next_page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.cloud.support.v1alpha1.ListSupportAccountsResponse.next_page_token)
}
::std::string* ListSupportAccountsResponse::mutable_next_page_token() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.support.v1alpha1.ListSupportAccountsResponse.next_page_token)
  return next_page_token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ListSupportAccountsResponse::release_next_page_token() {
  // @@protoc_insertion_point(field_release:google.cloud.support.v1alpha1.ListSupportAccountsResponse.next_page_token)
  
  return next_page_token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ListSupportAccountsResponse::set_allocated_next_page_token(::std::string* next_page_token) {
  if (next_page_token != NULL) {
    
  } else {
    
  }
  next_page_token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), next_page_token);
  // @@protoc_insertion_point(field_set_allocated:google.cloud.support.v1alpha1.ListSupportAccountsResponse.next_page_token)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetCaseRequest::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetCaseRequest::GetCaseRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_google_2fcloud_2fsupport_2fv1alpha1_2fcloud_5fsupport_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.support.v1alpha1.GetCaseRequest)
}
GetCaseRequest::GetCaseRequest(const GetCaseRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  // @@protoc_insertion_point(copy_constructor:google.cloud.support.v1alpha1.GetCaseRequest)
}

void GetCaseRequest::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

GetCaseRequest::~GetCaseRequest() {
  // @@protoc_insertion_point(destructor:google.cloud.support.v1alpha1.GetCaseRequest)
  SharedDtor();
}

void GetCaseRequest::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GetCaseRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetCaseRequest::descriptor() {
  protobuf_google_2fcloud_2fsupport_2fv1alpha1_2fcloud_5fsupport_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fcloud_2fsupport_2fv1alpha1_2fcloud_5fsupport_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetCaseRequest& GetCaseRequest::default_instance() {
  protobuf_google_2fcloud_2fsupport_2fv1alpha1_2fcloud_5fsupport_2eproto::InitDefaults();
  return *internal_default_instance();
}

GetCaseRequest* GetCaseRequest::New(::google::protobuf::Arena* arena) const {
  GetCaseRequest* n = new GetCaseRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetCaseRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.support.v1alpha1.GetCaseRequest)
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool GetCaseRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.support.v1alpha1.GetCaseRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.support.v1alpha1.GetCaseRequest.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.support.v1alpha1.GetCaseRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.support.v1alpha1.GetCaseRequest)
  return false;
#undef DO_
}

void GetCaseRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.support.v1alpha1.GetCaseRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.support.v1alpha1.GetCaseRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // @@protoc_insertion_point(serialize_end:google.cloud.support.v1alpha1.GetCaseRequest)
}

::google::protobuf::uint8* GetCaseRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.support.v1alpha1.GetCaseRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.support.v1alpha1.GetCaseRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.support.v1alpha1.GetCaseRequest)
  return target;
}

size_t GetCaseRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.support.v1alpha1.GetCaseRequest)
  size_t total_size = 0;

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetCaseRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.support.v1alpha1.GetCaseRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetCaseRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetCaseRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.support.v1alpha1.GetCaseRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.support.v1alpha1.GetCaseRequest)
    MergeFrom(*source);
  }
}

void GetCaseRequest::MergeFrom(const GetCaseRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.support.v1alpha1.GetCaseRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
}

void GetCaseRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.support.v1alpha1.GetCaseRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetCaseRequest::CopyFrom(const GetCaseRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.support.v1alpha1.GetCaseRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetCaseRequest::IsInitialized() const {
  return true;
}

void GetCaseRequest::Swap(GetCaseRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetCaseRequest::InternalSwap(GetCaseRequest* other) {
  name_.Swap(&other->name_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetCaseRequest::GetMetadata() const {
  protobuf_google_2fcloud_2fsupport_2fv1alpha1_2fcloud_5fsupport_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fcloud_2fsupport_2fv1alpha1_2fcloud_5fsupport_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetCaseRequest

// string name = 1;
void GetCaseRequest::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& GetCaseRequest::name() const {
  // @@protoc_insertion_point(field_get:google.cloud.support.v1alpha1.GetCaseRequest.name)
  return name_.GetNoArena();
}
void GetCaseRequest::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.cloud.support.v1alpha1.GetCaseRequest.name)
}
#if LANG_CXX11
void GetCaseRequest::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.support.v1alpha1.GetCaseRequest.name)
}
#endif
void GetCaseRequest::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.cloud.support.v1alpha1.GetCaseRequest.name)
}
void GetCaseRequest::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.cloud.support.v1alpha1.GetCaseRequest.name)
}
::std::string* GetCaseRequest::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.support.v1alpha1.GetCaseRequest.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GetCaseRequest::release_name() {
  // @@protoc_insertion_point(field_release:google.cloud.support.v1alpha1.GetCaseRequest.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GetCaseRequest::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:google.cloud.support.v1alpha1.GetCaseRequest.name)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListCasesRequest::kNameFieldNumber;
const int ListCasesRequest::kFilterFieldNumber;
const int ListCasesRequest::kPageSizeFieldNumber;
const int ListCasesRequest::kPageTokenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListCasesRequest::ListCasesRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_google_2fcloud_2fsupport_2fv1alpha1_2fcloud_5fsupport_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.support.v1alpha1.ListCasesRequest)
}
ListCasesRequest::ListCasesRequest(const ListCasesRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  filter_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.filter().size() > 0) {
    filter_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filter_);
  }
  page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.page_token().size() > 0) {
    page_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.page_token_);
  }
  page_size_ = from.page_size_;
  // @@protoc_insertion_point(copy_constructor:google.cloud.support.v1alpha1.ListCasesRequest)
}

void ListCasesRequest::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  filter_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_size_ = GOOGLE_LONGLONG(0);
  _cached_size_ = 0;
}

ListCasesRequest::~ListCasesRequest() {
  // @@protoc_insertion_point(destructor:google.cloud.support.v1alpha1.ListCasesRequest)
  SharedDtor();
}

void ListCasesRequest::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  filter_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ListCasesRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ListCasesRequest::descriptor() {
  protobuf_google_2fcloud_2fsupport_2fv1alpha1_2fcloud_5fsupport_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fcloud_2fsupport_2fv1alpha1_2fcloud_5fsupport_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListCasesRequest& ListCasesRequest::default_instance() {
  protobuf_google_2fcloud_2fsupport_2fv1alpha1_2fcloud_5fsupport_2eproto::InitDefaults();
  return *internal_default_instance();
}

ListCasesRequest* ListCasesRequest::New(::google::protobuf::Arena* arena) const {
  ListCasesRequest* n = new ListCasesRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ListCasesRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.support.v1alpha1.ListCasesRequest)
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  filter_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_size_ = GOOGLE_LONGLONG(0);
}

bool ListCasesRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.support.v1alpha1.ListCasesRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.support.v1alpha1.ListCasesRequest.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string filter = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_filter()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->filter().data(), this->filter().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.support.v1alpha1.ListCasesRequest.filter"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 page_size = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &page_size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string page_token = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_page_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->page_token().data(), this->page_token().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.support.v1alpha1.ListCasesRequest.page_token"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.support.v1alpha1.ListCasesRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.support.v1alpha1.ListCasesRequest)
  return false;
#undef DO_
}

void ListCasesRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.support.v1alpha1.ListCasesRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.support.v1alpha1.ListCasesRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // string filter = 2;
  if (this->filter().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->filter().data(), this->filter().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.support.v1alpha1.ListCasesRequest.filter");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->filter(), output);
  }

  // int64 page_size = 3;
  if (this->page_size() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->page_size(), output);
  }

  // string page_token = 4;
  if (this->page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->page_token().data(), this->page_token().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.support.v1alpha1.ListCasesRequest.page_token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->page_token(), output);
  }

  // @@protoc_insertion_point(serialize_end:google.cloud.support.v1alpha1.ListCasesRequest)
}

::google::protobuf::uint8* ListCasesRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.support.v1alpha1.ListCasesRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.support.v1alpha1.ListCasesRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // string filter = 2;
  if (this->filter().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->filter().data(), this->filter().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.support.v1alpha1.ListCasesRequest.filter");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->filter(), target);
  }

  // int64 page_size = 3;
  if (this->page_size() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->page_size(), target);
  }

  // string page_token = 4;
  if (this->page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->page_token().data(), this->page_token().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.support.v1alpha1.ListCasesRequest.page_token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->page_token(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.support.v1alpha1.ListCasesRequest)
  return target;
}

size_t ListCasesRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.support.v1alpha1.ListCasesRequest)
  size_t total_size = 0;

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string filter = 2;
  if (this->filter().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->filter());
  }

  // string page_token = 4;
  if (this->page_token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->page_token());
  }

  // int64 page_size = 3;
  if (this->page_size() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->page_size());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ListCasesRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.support.v1alpha1.ListCasesRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ListCasesRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListCasesRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.support.v1alpha1.ListCasesRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.support.v1alpha1.ListCasesRequest)
    MergeFrom(*source);
  }
}

void ListCasesRequest::MergeFrom(const ListCasesRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.support.v1alpha1.ListCasesRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.filter().size() > 0) {

    filter_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filter_);
  }
  if (from.page_token().size() > 0) {

    page_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.page_token_);
  }
  if (from.page_size() != 0) {
    set_page_size(from.page_size());
  }
}

void ListCasesRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.support.v1alpha1.ListCasesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListCasesRequest::CopyFrom(const ListCasesRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.support.v1alpha1.ListCasesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListCasesRequest::IsInitialized() const {
  return true;
}

void ListCasesRequest::Swap(ListCasesRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListCasesRequest::InternalSwap(ListCasesRequest* other) {
  name_.Swap(&other->name_);
  filter_.Swap(&other->filter_);
  page_token_.Swap(&other->page_token_);
  std::swap(page_size_, other->page_size_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ListCasesRequest::GetMetadata() const {
  protobuf_google_2fcloud_2fsupport_2fv1alpha1_2fcloud_5fsupport_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fcloud_2fsupport_2fv1alpha1_2fcloud_5fsupport_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ListCasesRequest

// string name = 1;
void ListCasesRequest::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ListCasesRequest::name() const {
  // @@protoc_insertion_point(field_get:google.cloud.support.v1alpha1.ListCasesRequest.name)
  return name_.GetNoArena();
}
void ListCasesRequest::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.cloud.support.v1alpha1.ListCasesRequest.name)
}
#if LANG_CXX11
void ListCasesRequest::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.support.v1alpha1.ListCasesRequest.name)
}
#endif
void ListCasesRequest::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.cloud.support.v1alpha1.ListCasesRequest.name)
}
void ListCasesRequest::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.cloud.support.v1alpha1.ListCasesRequest.name)
}
::std::string* ListCasesRequest::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.support.v1alpha1.ListCasesRequest.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ListCasesRequest::release_name() {
  // @@protoc_insertion_point(field_release:google.cloud.support.v1alpha1.ListCasesRequest.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ListCasesRequest::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:google.cloud.support.v1alpha1.ListCasesRequest.name)
}

// string filter = 2;
void ListCasesRequest::clear_filter() {
  filter_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ListCasesRequest::filter() const {
  // @@protoc_insertion_point(field_get:google.cloud.support.v1alpha1.ListCasesRequest.filter)
  return filter_.GetNoArena();
}
void ListCasesRequest::set_filter(const ::std::string& value) {
  
  filter_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.cloud.support.v1alpha1.ListCasesRequest.filter)
}
#if LANG_CXX11
void ListCasesRequest::set_filter(::std::string&& value) {
  
  filter_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.support.v1alpha1.ListCasesRequest.filter)
}
#endif
void ListCasesRequest::set_filter(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  filter_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.cloud.support.v1alpha1.ListCasesRequest.filter)
}
void ListCasesRequest::set_filter(const char* value, size_t size) {
  
  filter_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.cloud.support.v1alpha1.ListCasesRequest.filter)
}
::std::string* ListCasesRequest::mutable_filter() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.support.v1alpha1.ListCasesRequest.filter)
  return filter_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ListCasesRequest::release_filter() {
  // @@protoc_insertion_point(field_release:google.cloud.support.v1alpha1.ListCasesRequest.filter)
  
  return filter_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ListCasesRequest::set_allocated_filter(::std::string* filter) {
  if (filter != NULL) {
    
  } else {
    
  }
  filter_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), filter);
  // @@protoc_insertion_point(field_set_allocated:google.cloud.support.v1alpha1.ListCasesRequest.filter)
}

// int64 page_size = 3;
void ListCasesRequest::clear_page_size() {
  page_size_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 ListCasesRequest::page_size() const {
  // @@protoc_insertion_point(field_get:google.cloud.support.v1alpha1.ListCasesRequest.page_size)
  return page_size_;
}
void ListCasesRequest::set_page_size(::google::protobuf::int64 value) {
  
  page_size_ = value;
  // @@protoc_insertion_point(field_set:google.cloud.support.v1alpha1.ListCasesRequest.page_size)
}

// string page_token = 4;
void ListCasesRequest::clear_page_token() {
  page_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ListCasesRequest::page_token() const {
  // @@protoc_insertion_point(field_get:google.cloud.support.v1alpha1.ListCasesRequest.page_token)
  return page_token_.GetNoArena();
}
void ListCasesRequest::set_page_token(const ::std::string& value) {
  
  page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.cloud.support.v1alpha1.ListCasesRequest.page_token)
}
#if LANG_CXX11
void ListCasesRequest::set_page_token(::std::string&& value) {
  
  page_token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.support.v1alpha1.ListCasesRequest.page_token)
}
#endif
void ListCasesRequest::set_page_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.cloud.support.v1alpha1.ListCasesRequest.page_token)
}
void ListCasesRequest::set_page_token(const char* value, size_t size) {
  
  page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.cloud.support.v1alpha1.ListCasesRequest.page_token)
}
::std::string* ListCasesRequest::mutable_page_token() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.support.v1alpha1.ListCasesRequest.page_token)
  return page_token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ListCasesRequest::release_page_token() {
  // @@protoc_insertion_point(field_release:google.cloud.support.v1alpha1.ListCasesRequest.page_token)
  
  return page_token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ListCasesRequest::set_allocated_page_token(::std::string* page_token) {
  if (page_token != NULL) {
    
  } else {
    
  }
  page_token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), page_token);
  // @@protoc_insertion_point(field_set_allocated:google.cloud.support.v1alpha1.ListCasesRequest.page_token)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListCasesResponse::kCasesFieldNumber;
const int ListCasesResponse::kNextPageTokenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListCasesResponse::ListCasesResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_google_2fcloud_2fsupport_2fv1alpha1_2fcloud_5fsupport_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.support.v1alpha1.ListCasesResponse)
}
ListCasesResponse::ListCasesResponse(const ListCasesResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      cases_(from.cases_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  next_page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.next_page_token().size() > 0) {
    next_page_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.next_page_token_);
  }
  // @@protoc_insertion_point(copy_constructor:google.cloud.support.v1alpha1.ListCasesResponse)
}

void ListCasesResponse::SharedCtor() {
  next_page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

ListCasesResponse::~ListCasesResponse() {
  // @@protoc_insertion_point(destructor:google.cloud.support.v1alpha1.ListCasesResponse)
  SharedDtor();
}

void ListCasesResponse::SharedDtor() {
  next_page_token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ListCasesResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ListCasesResponse::descriptor() {
  protobuf_google_2fcloud_2fsupport_2fv1alpha1_2fcloud_5fsupport_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fcloud_2fsupport_2fv1alpha1_2fcloud_5fsupport_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListCasesResponse& ListCasesResponse::default_instance() {
  protobuf_google_2fcloud_2fsupport_2fv1alpha1_2fcloud_5fsupport_2eproto::InitDefaults();
  return *internal_default_instance();
}

ListCasesResponse* ListCasesResponse::New(::google::protobuf::Arena* arena) const {
  ListCasesResponse* n = new ListCasesResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ListCasesResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.support.v1alpha1.ListCasesResponse)
  cases_.Clear();
  next_page_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool ListCasesResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.support.v1alpha1.ListCasesResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .google.cloud.support.common.Case cases = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_cases()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string next_page_token = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_next_page_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->next_page_token().data(), this->next_page_token().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.support.v1alpha1.ListCasesResponse.next_page_token"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.support.v1alpha1.ListCasesResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.support.v1alpha1.ListCasesResponse)
  return false;
#undef DO_
}

void ListCasesResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.support.v1alpha1.ListCasesResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.cloud.support.common.Case cases = 1;
  for (unsigned int i = 0, n = this->cases_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->cases(i), output);
  }

  // string next_page_token = 2;
  if (this->next_page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->next_page_token().data(), this->next_page_token().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.support.v1alpha1.ListCasesResponse.next_page_token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->next_page_token(), output);
  }

  // @@protoc_insertion_point(serialize_end:google.cloud.support.v1alpha1.ListCasesResponse)
}

::google::protobuf::uint8* ListCasesResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.support.v1alpha1.ListCasesResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.cloud.support.common.Case cases = 1;
  for (unsigned int i = 0, n = this->cases_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->cases(i), deterministic, target);
  }

  // string next_page_token = 2;
  if (this->next_page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->next_page_token().data(), this->next_page_token().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.support.v1alpha1.ListCasesResponse.next_page_token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->next_page_token(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.support.v1alpha1.ListCasesResponse)
  return target;
}

size_t ListCasesResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.support.v1alpha1.ListCasesResponse)
  size_t total_size = 0;

  // repeated .google.cloud.support.common.Case cases = 1;
  {
    unsigned int count = this->cases_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->cases(i));
    }
  }

  // string next_page_token = 2;
  if (this->next_page_token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->next_page_token());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ListCasesResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.support.v1alpha1.ListCasesResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ListCasesResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListCasesResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.support.v1alpha1.ListCasesResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.support.v1alpha1.ListCasesResponse)
    MergeFrom(*source);
  }
}

void ListCasesResponse::MergeFrom(const ListCasesResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.support.v1alpha1.ListCasesResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cases_.MergeFrom(from.cases_);
  if (from.next_page_token().size() > 0) {

    next_page_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.next_page_token_);
  }
}

void ListCasesResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.support.v1alpha1.ListCasesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListCasesResponse::CopyFrom(const ListCasesResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.support.v1alpha1.ListCasesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListCasesResponse::IsInitialized() const {
  return true;
}

void ListCasesResponse::Swap(ListCasesResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListCasesResponse::InternalSwap(ListCasesResponse* other) {
  cases_.InternalSwap(&other->cases_);
  next_page_token_.Swap(&other->next_page_token_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ListCasesResponse::GetMetadata() const {
  protobuf_google_2fcloud_2fsupport_2fv1alpha1_2fcloud_5fsupport_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fcloud_2fsupport_2fv1alpha1_2fcloud_5fsupport_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ListCasesResponse

// repeated .google.cloud.support.common.Case cases = 1;
int ListCasesResponse::cases_size() const {
  return cases_.size();
}
void ListCasesResponse::clear_cases() {
  cases_.Clear();
}
const ::google::cloud::support::common::Case& ListCasesResponse::cases(int index) const {
  // @@protoc_insertion_point(field_get:google.cloud.support.v1alpha1.ListCasesResponse.cases)
  return cases_.Get(index);
}
::google::cloud::support::common::Case* ListCasesResponse::mutable_cases(int index) {
  // @@protoc_insertion_point(field_mutable:google.cloud.support.v1alpha1.ListCasesResponse.cases)
  return cases_.Mutable(index);
}
::google::cloud::support::common::Case* ListCasesResponse::add_cases() {
  // @@protoc_insertion_point(field_add:google.cloud.support.v1alpha1.ListCasesResponse.cases)
  return cases_.Add();
}
::google::protobuf::RepeatedPtrField< ::google::cloud::support::common::Case >*
ListCasesResponse::mutable_cases() {
  // @@protoc_insertion_point(field_mutable_list:google.cloud.support.v1alpha1.ListCasesResponse.cases)
  return &cases_;
}
const ::google::protobuf::RepeatedPtrField< ::google::cloud::support::common::Case >&
ListCasesResponse::cases() const {
  // @@protoc_insertion_point(field_list:google.cloud.support.v1alpha1.ListCasesResponse.cases)
  return cases_;
}

// string next_page_token = 2;
void ListCasesResponse::clear_next_page_token() {
  next_page_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ListCasesResponse::next_page_token() const {
  // @@protoc_insertion_point(field_get:google.cloud.support.v1alpha1.ListCasesResponse.next_page_token)
  return next_page_token_.GetNoArena();
}
void ListCasesResponse::set_next_page_token(const ::std::string& value) {
  
  next_page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.cloud.support.v1alpha1.ListCasesResponse.next_page_token)
}
#if LANG_CXX11
void ListCasesResponse::set_next_page_token(::std::string&& value) {
  
  next_page_token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.support.v1alpha1.ListCasesResponse.next_page_token)
}
#endif
void ListCasesResponse::set_next_page_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  next_page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.cloud.support.v1alpha1.ListCasesResponse.next_page_token)
}
void ListCasesResponse::set_next_page_token(const char* value, size_t size) {
  
  next_page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.cloud.support.v1alpha1.ListCasesResponse.next_page_token)
}
::std::string* ListCasesResponse::mutable_next_page_token() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.support.v1alpha1.ListCasesResponse.next_page_token)
  return next_page_token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ListCasesResponse::release_next_page_token() {
  // @@protoc_insertion_point(field_release:google.cloud.support.v1alpha1.ListCasesResponse.next_page_token)
  
  return next_page_token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ListCasesResponse::set_allocated_next_page_token(::std::string* next_page_token) {
  if (next_page_token != NULL) {
    
  } else {
    
  }
  next_page_token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), next_page_token);
  // @@protoc_insertion_point(field_set_allocated:google.cloud.support.v1alpha1.ListCasesResponse.next_page_token)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListCommentsRequest::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListCommentsRequest::ListCommentsRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_google_2fcloud_2fsupport_2fv1alpha1_2fcloud_5fsupport_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.support.v1alpha1.ListCommentsRequest)
}
ListCommentsRequest::ListCommentsRequest(const ListCommentsRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  // @@protoc_insertion_point(copy_constructor:google.cloud.support.v1alpha1.ListCommentsRequest)
}

void ListCommentsRequest::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

ListCommentsRequest::~ListCommentsRequest() {
  // @@protoc_insertion_point(destructor:google.cloud.support.v1alpha1.ListCommentsRequest)
  SharedDtor();
}

void ListCommentsRequest::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ListCommentsRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ListCommentsRequest::descriptor() {
  protobuf_google_2fcloud_2fsupport_2fv1alpha1_2fcloud_5fsupport_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fcloud_2fsupport_2fv1alpha1_2fcloud_5fsupport_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListCommentsRequest& ListCommentsRequest::default_instance() {
  protobuf_google_2fcloud_2fsupport_2fv1alpha1_2fcloud_5fsupport_2eproto::InitDefaults();
  return *internal_default_instance();
}

ListCommentsRequest* ListCommentsRequest::New(::google::protobuf::Arena* arena) const {
  ListCommentsRequest* n = new ListCommentsRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ListCommentsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.support.v1alpha1.ListCommentsRequest)
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool ListCommentsRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.support.v1alpha1.ListCommentsRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.support.v1alpha1.ListCommentsRequest.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.support.v1alpha1.ListCommentsRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.support.v1alpha1.ListCommentsRequest)
  return false;
#undef DO_
}

void ListCommentsRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.support.v1alpha1.ListCommentsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.support.v1alpha1.ListCommentsRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // @@protoc_insertion_point(serialize_end:google.cloud.support.v1alpha1.ListCommentsRequest)
}

::google::protobuf::uint8* ListCommentsRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.support.v1alpha1.ListCommentsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.support.v1alpha1.ListCommentsRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.support.v1alpha1.ListCommentsRequest)
  return target;
}

size_t ListCommentsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.support.v1alpha1.ListCommentsRequest)
  size_t total_size = 0;

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ListCommentsRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.support.v1alpha1.ListCommentsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ListCommentsRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListCommentsRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.support.v1alpha1.ListCommentsRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.support.v1alpha1.ListCommentsRequest)
    MergeFrom(*source);
  }
}

void ListCommentsRequest::MergeFrom(const ListCommentsRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.support.v1alpha1.ListCommentsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
}

void ListCommentsRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.support.v1alpha1.ListCommentsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListCommentsRequest::CopyFrom(const ListCommentsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.support.v1alpha1.ListCommentsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListCommentsRequest::IsInitialized() const {
  return true;
}

void ListCommentsRequest::Swap(ListCommentsRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListCommentsRequest::InternalSwap(ListCommentsRequest* other) {
  name_.Swap(&other->name_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ListCommentsRequest::GetMetadata() const {
  protobuf_google_2fcloud_2fsupport_2fv1alpha1_2fcloud_5fsupport_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fcloud_2fsupport_2fv1alpha1_2fcloud_5fsupport_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ListCommentsRequest

// string name = 1;
void ListCommentsRequest::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ListCommentsRequest::name() const {
  // @@protoc_insertion_point(field_get:google.cloud.support.v1alpha1.ListCommentsRequest.name)
  return name_.GetNoArena();
}
void ListCommentsRequest::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.cloud.support.v1alpha1.ListCommentsRequest.name)
}
#if LANG_CXX11
void ListCommentsRequest::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.support.v1alpha1.ListCommentsRequest.name)
}
#endif
void ListCommentsRequest::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.cloud.support.v1alpha1.ListCommentsRequest.name)
}
void ListCommentsRequest::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.cloud.support.v1alpha1.ListCommentsRequest.name)
}
::std::string* ListCommentsRequest::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.support.v1alpha1.ListCommentsRequest.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ListCommentsRequest::release_name() {
  // @@protoc_insertion_point(field_release:google.cloud.support.v1alpha1.ListCommentsRequest.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ListCommentsRequest::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:google.cloud.support.v1alpha1.ListCommentsRequest.name)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListCommentsResponse::kCommentsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListCommentsResponse::ListCommentsResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_google_2fcloud_2fsupport_2fv1alpha1_2fcloud_5fsupport_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.support.v1alpha1.ListCommentsResponse)
}
ListCommentsResponse::ListCommentsResponse(const ListCommentsResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      comments_(from.comments_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:google.cloud.support.v1alpha1.ListCommentsResponse)
}

void ListCommentsResponse::SharedCtor() {
  _cached_size_ = 0;
}

ListCommentsResponse::~ListCommentsResponse() {
  // @@protoc_insertion_point(destructor:google.cloud.support.v1alpha1.ListCommentsResponse)
  SharedDtor();
}

void ListCommentsResponse::SharedDtor() {
}

void ListCommentsResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ListCommentsResponse::descriptor() {
  protobuf_google_2fcloud_2fsupport_2fv1alpha1_2fcloud_5fsupport_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fcloud_2fsupport_2fv1alpha1_2fcloud_5fsupport_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListCommentsResponse& ListCommentsResponse::default_instance() {
  protobuf_google_2fcloud_2fsupport_2fv1alpha1_2fcloud_5fsupport_2eproto::InitDefaults();
  return *internal_default_instance();
}

ListCommentsResponse* ListCommentsResponse::New(::google::protobuf::Arena* arena) const {
  ListCommentsResponse* n = new ListCommentsResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ListCommentsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.support.v1alpha1.ListCommentsResponse)
  comments_.Clear();
}

bool ListCommentsResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.support.v1alpha1.ListCommentsResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .google.cloud.support.common.Comment comments = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_comments()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.support.v1alpha1.ListCommentsResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.support.v1alpha1.ListCommentsResponse)
  return false;
#undef DO_
}

void ListCommentsResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.support.v1alpha1.ListCommentsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.cloud.support.common.Comment comments = 1;
  for (unsigned int i = 0, n = this->comments_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->comments(i), output);
  }

  // @@protoc_insertion_point(serialize_end:google.cloud.support.v1alpha1.ListCommentsResponse)
}

::google::protobuf::uint8* ListCommentsResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.support.v1alpha1.ListCommentsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.cloud.support.common.Comment comments = 1;
  for (unsigned int i = 0, n = this->comments_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->comments(i), deterministic, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.support.v1alpha1.ListCommentsResponse)
  return target;
}

size_t ListCommentsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.support.v1alpha1.ListCommentsResponse)
  size_t total_size = 0;

  // repeated .google.cloud.support.common.Comment comments = 1;
  {
    unsigned int count = this->comments_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->comments(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ListCommentsResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.support.v1alpha1.ListCommentsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ListCommentsResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListCommentsResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.support.v1alpha1.ListCommentsResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.support.v1alpha1.ListCommentsResponse)
    MergeFrom(*source);
  }
}

void ListCommentsResponse::MergeFrom(const ListCommentsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.support.v1alpha1.ListCommentsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  comments_.MergeFrom(from.comments_);
}

void ListCommentsResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.support.v1alpha1.ListCommentsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListCommentsResponse::CopyFrom(const ListCommentsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.support.v1alpha1.ListCommentsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListCommentsResponse::IsInitialized() const {
  return true;
}

void ListCommentsResponse::Swap(ListCommentsResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListCommentsResponse::InternalSwap(ListCommentsResponse* other) {
  comments_.InternalSwap(&other->comments_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ListCommentsResponse::GetMetadata() const {
  protobuf_google_2fcloud_2fsupport_2fv1alpha1_2fcloud_5fsupport_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fcloud_2fsupport_2fv1alpha1_2fcloud_5fsupport_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ListCommentsResponse

// repeated .google.cloud.support.common.Comment comments = 1;
int ListCommentsResponse::comments_size() const {
  return comments_.size();
}
void ListCommentsResponse::clear_comments() {
  comments_.Clear();
}
const ::google::cloud::support::common::Comment& ListCommentsResponse::comments(int index) const {
  // @@protoc_insertion_point(field_get:google.cloud.support.v1alpha1.ListCommentsResponse.comments)
  return comments_.Get(index);
}
::google::cloud::support::common::Comment* ListCommentsResponse::mutable_comments(int index) {
  // @@protoc_insertion_point(field_mutable:google.cloud.support.v1alpha1.ListCommentsResponse.comments)
  return comments_.Mutable(index);
}
::google::cloud::support::common::Comment* ListCommentsResponse::add_comments() {
  // @@protoc_insertion_point(field_add:google.cloud.support.v1alpha1.ListCommentsResponse.comments)
  return comments_.Add();
}
::google::protobuf::RepeatedPtrField< ::google::cloud::support::common::Comment >*
ListCommentsResponse::mutable_comments() {
  // @@protoc_insertion_point(field_mutable_list:google.cloud.support.v1alpha1.ListCommentsResponse.comments)
  return &comments_;
}
const ::google::protobuf::RepeatedPtrField< ::google::cloud::support::common::Comment >&
ListCommentsResponse::comments() const {
  // @@protoc_insertion_point(field_list:google.cloud.support.v1alpha1.ListCommentsResponse.comments)
  return comments_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CreateCaseRequest::kParentFieldNumber;
const int CreateCaseRequest::kCaseFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CreateCaseRequest::CreateCaseRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_google_2fcloud_2fsupport_2fv1alpha1_2fcloud_5fsupport_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.support.v1alpha1.CreateCaseRequest)
}
CreateCaseRequest::CreateCaseRequest(const CreateCaseRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  parent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.parent().size() > 0) {
    parent_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.parent_);
  }
  if (from.has_case_()) {
    case__ = new ::google::cloud::support::common::Case(*from.case__);
  } else {
    case__ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.cloud.support.v1alpha1.CreateCaseRequest)
}

void CreateCaseRequest::SharedCtor() {
  parent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  case__ = NULL;
  _cached_size_ = 0;
}

CreateCaseRequest::~CreateCaseRequest() {
  // @@protoc_insertion_point(destructor:google.cloud.support.v1alpha1.CreateCaseRequest)
  SharedDtor();
}

void CreateCaseRequest::SharedDtor() {
  parent_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete case__;
  }
}

void CreateCaseRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CreateCaseRequest::descriptor() {
  protobuf_google_2fcloud_2fsupport_2fv1alpha1_2fcloud_5fsupport_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fcloud_2fsupport_2fv1alpha1_2fcloud_5fsupport_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CreateCaseRequest& CreateCaseRequest::default_instance() {
  protobuf_google_2fcloud_2fsupport_2fv1alpha1_2fcloud_5fsupport_2eproto::InitDefaults();
  return *internal_default_instance();
}

CreateCaseRequest* CreateCaseRequest::New(::google::protobuf::Arena* arena) const {
  CreateCaseRequest* n = new CreateCaseRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CreateCaseRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.support.v1alpha1.CreateCaseRequest)
  parent_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && case__ != NULL) {
    delete case__;
  }
  case__ = NULL;
}

bool CreateCaseRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.support.v1alpha1.CreateCaseRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string parent = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_parent()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->parent().data(), this->parent().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.support.v1alpha1.CreateCaseRequest.parent"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.cloud.support.common.Case case = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_case_()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.support.v1alpha1.CreateCaseRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.support.v1alpha1.CreateCaseRequest)
  return false;
#undef DO_
}

void CreateCaseRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.support.v1alpha1.CreateCaseRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string parent = 1;
  if (this->parent().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->parent().data(), this->parent().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.support.v1alpha1.CreateCaseRequest.parent");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->parent(), output);
  }

  // .google.cloud.support.common.Case case = 2;
  if (this->has_case_()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->case__, output);
  }

  // @@protoc_insertion_point(serialize_end:google.cloud.support.v1alpha1.CreateCaseRequest)
}

::google::protobuf::uint8* CreateCaseRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.support.v1alpha1.CreateCaseRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string parent = 1;
  if (this->parent().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->parent().data(), this->parent().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.support.v1alpha1.CreateCaseRequest.parent");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->parent(), target);
  }

  // .google.cloud.support.common.Case case = 2;
  if (this->has_case_()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->case__, deterministic, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.support.v1alpha1.CreateCaseRequest)
  return target;
}

size_t CreateCaseRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.support.v1alpha1.CreateCaseRequest)
  size_t total_size = 0;

  // string parent = 1;
  if (this->parent().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->parent());
  }

  // .google.cloud.support.common.Case case = 2;
  if (this->has_case_()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->case__);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CreateCaseRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.support.v1alpha1.CreateCaseRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateCaseRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CreateCaseRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.support.v1alpha1.CreateCaseRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.support.v1alpha1.CreateCaseRequest)
    MergeFrom(*source);
  }
}

void CreateCaseRequest::MergeFrom(const CreateCaseRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.support.v1alpha1.CreateCaseRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.parent().size() > 0) {

    parent_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.parent_);
  }
  if (from.has_case_()) {
    mutable_case_()->::google::cloud::support::common::Case::MergeFrom(from.case_());
  }
}

void CreateCaseRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.support.v1alpha1.CreateCaseRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateCaseRequest::CopyFrom(const CreateCaseRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.support.v1alpha1.CreateCaseRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateCaseRequest::IsInitialized() const {
  return true;
}

void CreateCaseRequest::Swap(CreateCaseRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CreateCaseRequest::InternalSwap(CreateCaseRequest* other) {
  parent_.Swap(&other->parent_);
  std::swap(case__, other->case__);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CreateCaseRequest::GetMetadata() const {
  protobuf_google_2fcloud_2fsupport_2fv1alpha1_2fcloud_5fsupport_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fcloud_2fsupport_2fv1alpha1_2fcloud_5fsupport_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CreateCaseRequest

// string parent = 1;
void CreateCaseRequest::clear_parent() {
  parent_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& CreateCaseRequest::parent() const {
  // @@protoc_insertion_point(field_get:google.cloud.support.v1alpha1.CreateCaseRequest.parent)
  return parent_.GetNoArena();
}
void CreateCaseRequest::set_parent(const ::std::string& value) {
  
  parent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.cloud.support.v1alpha1.CreateCaseRequest.parent)
}
#if LANG_CXX11
void CreateCaseRequest::set_parent(::std::string&& value) {
  
  parent_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.support.v1alpha1.CreateCaseRequest.parent)
}
#endif
void CreateCaseRequest::set_parent(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  parent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.cloud.support.v1alpha1.CreateCaseRequest.parent)
}
void CreateCaseRequest::set_parent(const char* value, size_t size) {
  
  parent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.cloud.support.v1alpha1.CreateCaseRequest.parent)
}
::std::string* CreateCaseRequest::mutable_parent() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.support.v1alpha1.CreateCaseRequest.parent)
  return parent_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CreateCaseRequest::release_parent() {
  // @@protoc_insertion_point(field_release:google.cloud.support.v1alpha1.CreateCaseRequest.parent)
  
  return parent_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CreateCaseRequest::set_allocated_parent(::std::string* parent) {
  if (parent != NULL) {
    
  } else {
    
  }
  parent_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), parent);
  // @@protoc_insertion_point(field_set_allocated:google.cloud.support.v1alpha1.CreateCaseRequest.parent)
}

// .google.cloud.support.common.Case case = 2;
bool CreateCaseRequest::has_case_() const {
  return this != internal_default_instance() && case__ != NULL;
}
void CreateCaseRequest::clear_case_() {
  if (GetArenaNoVirtual() == NULL && case__ != NULL) delete case__;
  case__ = NULL;
}
const ::google::cloud::support::common::Case& CreateCaseRequest::case_() const {
  // @@protoc_insertion_point(field_get:google.cloud.support.v1alpha1.CreateCaseRequest.case)
  return case__ != NULL ? *case__
                         : *::google::cloud::support::common::Case::internal_default_instance();
}
::google::cloud::support::common::Case* CreateCaseRequest::mutable_case_() {
  
  if (case__ == NULL) {
    case__ = new ::google::cloud::support::common::Case;
  }
  // @@protoc_insertion_point(field_mutable:google.cloud.support.v1alpha1.CreateCaseRequest.case)
  return case__;
}
::google::cloud::support::common::Case* CreateCaseRequest::release_case_() {
  // @@protoc_insertion_point(field_release:google.cloud.support.v1alpha1.CreateCaseRequest.case)
  
  ::google::cloud::support::common::Case* temp = case__;
  case__ = NULL;
  return temp;
}
void CreateCaseRequest::set_allocated_case_(::google::cloud::support::common::Case* case_) {
  delete case__;
  case__ = case_;
  if (case_) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.cloud.support.v1alpha1.CreateCaseRequest.case)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UpdateCaseRequest::kCaseFieldNumber;
const int UpdateCaseRequest::kUpdateMaskFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UpdateCaseRequest::UpdateCaseRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_google_2fcloud_2fsupport_2fv1alpha1_2fcloud_5fsupport_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.support.v1alpha1.UpdateCaseRequest)
}
UpdateCaseRequest::UpdateCaseRequest(const UpdateCaseRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_case_()) {
    case__ = new ::google::cloud::support::common::Case(*from.case__);
  } else {
    case__ = NULL;
  }
  if (from.has_update_mask()) {
    update_mask_ = new ::google::protobuf::FieldMask(*from.update_mask_);
  } else {
    update_mask_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.cloud.support.v1alpha1.UpdateCaseRequest)
}

void UpdateCaseRequest::SharedCtor() {
  ::memset(&case__, 0, reinterpret_cast<char*>(&update_mask_) -
    reinterpret_cast<char*>(&case__) + sizeof(update_mask_));
  _cached_size_ = 0;
}

UpdateCaseRequest::~UpdateCaseRequest() {
  // @@protoc_insertion_point(destructor:google.cloud.support.v1alpha1.UpdateCaseRequest)
  SharedDtor();
}

void UpdateCaseRequest::SharedDtor() {
  if (this != internal_default_instance()) {
    delete case__;
  }
  if (this != internal_default_instance()) {
    delete update_mask_;
  }
}

void UpdateCaseRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UpdateCaseRequest::descriptor() {
  protobuf_google_2fcloud_2fsupport_2fv1alpha1_2fcloud_5fsupport_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fcloud_2fsupport_2fv1alpha1_2fcloud_5fsupport_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UpdateCaseRequest& UpdateCaseRequest::default_instance() {
  protobuf_google_2fcloud_2fsupport_2fv1alpha1_2fcloud_5fsupport_2eproto::InitDefaults();
  return *internal_default_instance();
}

UpdateCaseRequest* UpdateCaseRequest::New(::google::protobuf::Arena* arena) const {
  UpdateCaseRequest* n = new UpdateCaseRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UpdateCaseRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.support.v1alpha1.UpdateCaseRequest)
  if (GetArenaNoVirtual() == NULL && case__ != NULL) {
    delete case__;
  }
  case__ = NULL;
  if (GetArenaNoVirtual() == NULL && update_mask_ != NULL) {
    delete update_mask_;
  }
  update_mask_ = NULL;
}

bool UpdateCaseRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.support.v1alpha1.UpdateCaseRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.cloud.support.common.Case case = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_case_()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.FieldMask update_mask = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_update_mask()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.support.v1alpha1.UpdateCaseRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.support.v1alpha1.UpdateCaseRequest)
  return false;
#undef DO_
}

void UpdateCaseRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.support.v1alpha1.UpdateCaseRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.cloud.support.common.Case case = 1;
  if (this->has_case_()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->case__, output);
  }

  // .google.protobuf.FieldMask update_mask = 2;
  if (this->has_update_mask()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->update_mask_, output);
  }

  // @@protoc_insertion_point(serialize_end:google.cloud.support.v1alpha1.UpdateCaseRequest)
}

::google::protobuf::uint8* UpdateCaseRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.support.v1alpha1.UpdateCaseRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.cloud.support.common.Case case = 1;
  if (this->has_case_()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->case__, deterministic, target);
  }

  // .google.protobuf.FieldMask update_mask = 2;
  if (this->has_update_mask()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->update_mask_, deterministic, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.support.v1alpha1.UpdateCaseRequest)
  return target;
}

size_t UpdateCaseRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.support.v1alpha1.UpdateCaseRequest)
  size_t total_size = 0;

  // .google.cloud.support.common.Case case = 1;
  if (this->has_case_()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->case__);
  }

  // .google.protobuf.FieldMask update_mask = 2;
  if (this->has_update_mask()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->update_mask_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UpdateCaseRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.support.v1alpha1.UpdateCaseRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const UpdateCaseRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UpdateCaseRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.support.v1alpha1.UpdateCaseRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.support.v1alpha1.UpdateCaseRequest)
    MergeFrom(*source);
  }
}

void UpdateCaseRequest::MergeFrom(const UpdateCaseRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.support.v1alpha1.UpdateCaseRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_case_()) {
    mutable_case_()->::google::cloud::support::common::Case::MergeFrom(from.case_());
  }
  if (from.has_update_mask()) {
    mutable_update_mask()->::google::protobuf::FieldMask::MergeFrom(from.update_mask());
  }
}

void UpdateCaseRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.support.v1alpha1.UpdateCaseRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateCaseRequest::CopyFrom(const UpdateCaseRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.support.v1alpha1.UpdateCaseRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateCaseRequest::IsInitialized() const {
  return true;
}

void UpdateCaseRequest::Swap(UpdateCaseRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UpdateCaseRequest::InternalSwap(UpdateCaseRequest* other) {
  std::swap(case__, other->case__);
  std::swap(update_mask_, other->update_mask_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UpdateCaseRequest::GetMetadata() const {
  protobuf_google_2fcloud_2fsupport_2fv1alpha1_2fcloud_5fsupport_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fcloud_2fsupport_2fv1alpha1_2fcloud_5fsupport_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// UpdateCaseRequest

// .google.cloud.support.common.Case case = 1;
bool UpdateCaseRequest::has_case_() const {
  return this != internal_default_instance() && case__ != NULL;
}
void UpdateCaseRequest::clear_case_() {
  if (GetArenaNoVirtual() == NULL && case__ != NULL) delete case__;
  case__ = NULL;
}
const ::google::cloud::support::common::Case& UpdateCaseRequest::case_() const {
  // @@protoc_insertion_point(field_get:google.cloud.support.v1alpha1.UpdateCaseRequest.case)
  return case__ != NULL ? *case__
                         : *::google::cloud::support::common::Case::internal_default_instance();
}
::google::cloud::support::common::Case* UpdateCaseRequest::mutable_case_() {
  
  if (case__ == NULL) {
    case__ = new ::google::cloud::support::common::Case;
  }
  // @@protoc_insertion_point(field_mutable:google.cloud.support.v1alpha1.UpdateCaseRequest.case)
  return case__;
}
::google::cloud::support::common::Case* UpdateCaseRequest::release_case_() {
  // @@protoc_insertion_point(field_release:google.cloud.support.v1alpha1.UpdateCaseRequest.case)
  
  ::google::cloud::support::common::Case* temp = case__;
  case__ = NULL;
  return temp;
}
void UpdateCaseRequest::set_allocated_case_(::google::cloud::support::common::Case* case_) {
  delete case__;
  case__ = case_;
  if (case_) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.cloud.support.v1alpha1.UpdateCaseRequest.case)
}

// .google.protobuf.FieldMask update_mask = 2;
bool UpdateCaseRequest::has_update_mask() const {
  return this != internal_default_instance() && update_mask_ != NULL;
}
void UpdateCaseRequest::clear_update_mask() {
  if (GetArenaNoVirtual() == NULL && update_mask_ != NULL) delete update_mask_;
  update_mask_ = NULL;
}
const ::google::protobuf::FieldMask& UpdateCaseRequest::update_mask() const {
  // @@protoc_insertion_point(field_get:google.cloud.support.v1alpha1.UpdateCaseRequest.update_mask)
  return update_mask_ != NULL ? *update_mask_
                         : *::google::protobuf::FieldMask::internal_default_instance();
}
::google::protobuf::FieldMask* UpdateCaseRequest::mutable_update_mask() {
  
  if (update_mask_ == NULL) {
    update_mask_ = new ::google::protobuf::FieldMask;
  }
  // @@protoc_insertion_point(field_mutable:google.cloud.support.v1alpha1.UpdateCaseRequest.update_mask)
  return update_mask_;
}
::google::protobuf::FieldMask* UpdateCaseRequest::release_update_mask() {
  // @@protoc_insertion_point(field_release:google.cloud.support.v1alpha1.UpdateCaseRequest.update_mask)
  
  ::google::protobuf::FieldMask* temp = update_mask_;
  update_mask_ = NULL;
  return temp;
}
void UpdateCaseRequest::set_allocated_update_mask(::google::protobuf::FieldMask* update_mask) {
  delete update_mask_;
  update_mask_ = update_mask;
  if (update_mask) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.cloud.support.v1alpha1.UpdateCaseRequest.update_mask)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CreateCommentRequest::kNameFieldNumber;
const int CreateCommentRequest::kCommentFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CreateCommentRequest::CreateCommentRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_google_2fcloud_2fsupport_2fv1alpha1_2fcloud_5fsupport_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.support.v1alpha1.CreateCommentRequest)
}
CreateCommentRequest::CreateCommentRequest(const CreateCommentRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.has_comment()) {
    comment_ = new ::google::cloud::support::common::Comment(*from.comment_);
  } else {
    comment_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.cloud.support.v1alpha1.CreateCommentRequest)
}

void CreateCommentRequest::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  comment_ = NULL;
  _cached_size_ = 0;
}

CreateCommentRequest::~CreateCommentRequest() {
  // @@protoc_insertion_point(destructor:google.cloud.support.v1alpha1.CreateCommentRequest)
  SharedDtor();
}

void CreateCommentRequest::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete comment_;
  }
}

void CreateCommentRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CreateCommentRequest::descriptor() {
  protobuf_google_2fcloud_2fsupport_2fv1alpha1_2fcloud_5fsupport_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fcloud_2fsupport_2fv1alpha1_2fcloud_5fsupport_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CreateCommentRequest& CreateCommentRequest::default_instance() {
  protobuf_google_2fcloud_2fsupport_2fv1alpha1_2fcloud_5fsupport_2eproto::InitDefaults();
  return *internal_default_instance();
}

CreateCommentRequest* CreateCommentRequest::New(::google::protobuf::Arena* arena) const {
  CreateCommentRequest* n = new CreateCommentRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CreateCommentRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.support.v1alpha1.CreateCommentRequest)
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && comment_ != NULL) {
    delete comment_;
  }
  comment_ = NULL;
}

bool CreateCommentRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.support.v1alpha1.CreateCommentRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.support.v1alpha1.CreateCommentRequest.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.cloud.support.common.Comment comment = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_comment()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.support.v1alpha1.CreateCommentRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.support.v1alpha1.CreateCommentRequest)
  return false;
#undef DO_
}

void CreateCommentRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.support.v1alpha1.CreateCommentRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.support.v1alpha1.CreateCommentRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // .google.cloud.support.common.Comment comment = 2;
  if (this->has_comment()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->comment_, output);
  }

  // @@protoc_insertion_point(serialize_end:google.cloud.support.v1alpha1.CreateCommentRequest)
}

::google::protobuf::uint8* CreateCommentRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.support.v1alpha1.CreateCommentRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.support.v1alpha1.CreateCommentRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // .google.cloud.support.common.Comment comment = 2;
  if (this->has_comment()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->comment_, deterministic, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.support.v1alpha1.CreateCommentRequest)
  return target;
}

size_t CreateCommentRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.support.v1alpha1.CreateCommentRequest)
  size_t total_size = 0;

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // .google.cloud.support.common.Comment comment = 2;
  if (this->has_comment()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->comment_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CreateCommentRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.support.v1alpha1.CreateCommentRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateCommentRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CreateCommentRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.support.v1alpha1.CreateCommentRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.support.v1alpha1.CreateCommentRequest)
    MergeFrom(*source);
  }
}

void CreateCommentRequest::MergeFrom(const CreateCommentRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.support.v1alpha1.CreateCommentRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.has_comment()) {
    mutable_comment()->::google::cloud::support::common::Comment::MergeFrom(from.comment());
  }
}

void CreateCommentRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.support.v1alpha1.CreateCommentRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateCommentRequest::CopyFrom(const CreateCommentRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.support.v1alpha1.CreateCommentRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateCommentRequest::IsInitialized() const {
  return true;
}

void CreateCommentRequest::Swap(CreateCommentRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CreateCommentRequest::InternalSwap(CreateCommentRequest* other) {
  name_.Swap(&other->name_);
  std::swap(comment_, other->comment_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CreateCommentRequest::GetMetadata() const {
  protobuf_google_2fcloud_2fsupport_2fv1alpha1_2fcloud_5fsupport_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fcloud_2fsupport_2fv1alpha1_2fcloud_5fsupport_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CreateCommentRequest

// string name = 1;
void CreateCommentRequest::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& CreateCommentRequest::name() const {
  // @@protoc_insertion_point(field_get:google.cloud.support.v1alpha1.CreateCommentRequest.name)
  return name_.GetNoArena();
}
void CreateCommentRequest::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.cloud.support.v1alpha1.CreateCommentRequest.name)
}
#if LANG_CXX11
void CreateCommentRequest::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.support.v1alpha1.CreateCommentRequest.name)
}
#endif
void CreateCommentRequest::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.cloud.support.v1alpha1.CreateCommentRequest.name)
}
void CreateCommentRequest::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.cloud.support.v1alpha1.CreateCommentRequest.name)
}
::std::string* CreateCommentRequest::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.support.v1alpha1.CreateCommentRequest.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CreateCommentRequest::release_name() {
  // @@protoc_insertion_point(field_release:google.cloud.support.v1alpha1.CreateCommentRequest.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CreateCommentRequest::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:google.cloud.support.v1alpha1.CreateCommentRequest.name)
}

// .google.cloud.support.common.Comment comment = 2;
bool CreateCommentRequest::has_comment() const {
  return this != internal_default_instance() && comment_ != NULL;
}
void CreateCommentRequest::clear_comment() {
  if (GetArenaNoVirtual() == NULL && comment_ != NULL) delete comment_;
  comment_ = NULL;
}
const ::google::cloud::support::common::Comment& CreateCommentRequest::comment() const {
  // @@protoc_insertion_point(field_get:google.cloud.support.v1alpha1.CreateCommentRequest.comment)
  return comment_ != NULL ? *comment_
                         : *::google::cloud::support::common::Comment::internal_default_instance();
}
::google::cloud::support::common::Comment* CreateCommentRequest::mutable_comment() {
  
  if (comment_ == NULL) {
    comment_ = new ::google::cloud::support::common::Comment;
  }
  // @@protoc_insertion_point(field_mutable:google.cloud.support.v1alpha1.CreateCommentRequest.comment)
  return comment_;
}
::google::cloud::support::common::Comment* CreateCommentRequest::release_comment() {
  // @@protoc_insertion_point(field_release:google.cloud.support.v1alpha1.CreateCommentRequest.comment)
  
  ::google::cloud::support::common::Comment* temp = comment_;
  comment_ = NULL;
  return temp;
}
void CreateCommentRequest::set_allocated_comment(::google::cloud::support::common::Comment* comment) {
  delete comment_;
  comment_ = comment;
  if (comment) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.cloud.support.v1alpha1.CreateCommentRequest.comment)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetIssueTaxonomyRequest::GetIssueTaxonomyRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_google_2fcloud_2fsupport_2fv1alpha1_2fcloud_5fsupport_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.support.v1alpha1.GetIssueTaxonomyRequest)
}
GetIssueTaxonomyRequest::GetIssueTaxonomyRequest(const GetIssueTaxonomyRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:google.cloud.support.v1alpha1.GetIssueTaxonomyRequest)
}

void GetIssueTaxonomyRequest::SharedCtor() {
  _cached_size_ = 0;
}

GetIssueTaxonomyRequest::~GetIssueTaxonomyRequest() {
  // @@protoc_insertion_point(destructor:google.cloud.support.v1alpha1.GetIssueTaxonomyRequest)
  SharedDtor();
}

void GetIssueTaxonomyRequest::SharedDtor() {
}

void GetIssueTaxonomyRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetIssueTaxonomyRequest::descriptor() {
  protobuf_google_2fcloud_2fsupport_2fv1alpha1_2fcloud_5fsupport_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fcloud_2fsupport_2fv1alpha1_2fcloud_5fsupport_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetIssueTaxonomyRequest& GetIssueTaxonomyRequest::default_instance() {
  protobuf_google_2fcloud_2fsupport_2fv1alpha1_2fcloud_5fsupport_2eproto::InitDefaults();
  return *internal_default_instance();
}

GetIssueTaxonomyRequest* GetIssueTaxonomyRequest::New(::google::protobuf::Arena* arena) const {
  GetIssueTaxonomyRequest* n = new GetIssueTaxonomyRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetIssueTaxonomyRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.support.v1alpha1.GetIssueTaxonomyRequest)
}

bool GetIssueTaxonomyRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.support.v1alpha1.GetIssueTaxonomyRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.support.v1alpha1.GetIssueTaxonomyRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.support.v1alpha1.GetIssueTaxonomyRequest)
  return false;
#undef DO_
}

void GetIssueTaxonomyRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.support.v1alpha1.GetIssueTaxonomyRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // @@protoc_insertion_point(serialize_end:google.cloud.support.v1alpha1.GetIssueTaxonomyRequest)
}

::google::protobuf::uint8* GetIssueTaxonomyRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.support.v1alpha1.GetIssueTaxonomyRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.support.v1alpha1.GetIssueTaxonomyRequest)
  return target;
}

size_t GetIssueTaxonomyRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.support.v1alpha1.GetIssueTaxonomyRequest)
  size_t total_size = 0;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetIssueTaxonomyRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.support.v1alpha1.GetIssueTaxonomyRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetIssueTaxonomyRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetIssueTaxonomyRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.support.v1alpha1.GetIssueTaxonomyRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.support.v1alpha1.GetIssueTaxonomyRequest)
    MergeFrom(*source);
  }
}

void GetIssueTaxonomyRequest::MergeFrom(const GetIssueTaxonomyRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.support.v1alpha1.GetIssueTaxonomyRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void GetIssueTaxonomyRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.support.v1alpha1.GetIssueTaxonomyRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetIssueTaxonomyRequest::CopyFrom(const GetIssueTaxonomyRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.support.v1alpha1.GetIssueTaxonomyRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetIssueTaxonomyRequest::IsInitialized() const {
  return true;
}

void GetIssueTaxonomyRequest::Swap(GetIssueTaxonomyRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetIssueTaxonomyRequest::InternalSwap(GetIssueTaxonomyRequest* other) {
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetIssueTaxonomyRequest::GetMetadata() const {
  protobuf_google_2fcloud_2fsupport_2fv1alpha1_2fcloud_5fsupport_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fcloud_2fsupport_2fv1alpha1_2fcloud_5fsupport_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetIssueTaxonomyRequest

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace v1alpha1
}  // namespace support
}  // namespace cloud
}  // namespace google

// @@protoc_insertion_point(global_scope)
