// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/vision/v1/text_annotation.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "google/cloud/vision/v1/text_annotation.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace google {
namespace cloud {
namespace vision {
namespace v1 {
class TextAnnotation_DetectedLanguageDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<TextAnnotation_DetectedLanguage> {
} _TextAnnotation_DetectedLanguage_default_instance_;
class TextAnnotation_DetectedBreakDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<TextAnnotation_DetectedBreak> {
} _TextAnnotation_DetectedBreak_default_instance_;
class TextAnnotation_TextPropertyDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<TextAnnotation_TextProperty> {
} _TextAnnotation_TextProperty_default_instance_;
class TextAnnotationDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<TextAnnotation> {
} _TextAnnotation_default_instance_;
class PageDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Page> {
} _Page_default_instance_;
class BlockDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Block> {
} _Block_default_instance_;
class ParagraphDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Paragraph> {
} _Paragraph_default_instance_;
class WordDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Word> {
} _Word_default_instance_;
class SymbolDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Symbol> {
} _Symbol_default_instance_;

namespace protobuf_google_2fcloud_2fvision_2fv1_2ftext_5fannotation_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[9];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[2];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] = {
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TextAnnotation_DetectedLanguage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TextAnnotation_DetectedLanguage, language_code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TextAnnotation_DetectedLanguage, confidence_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TextAnnotation_DetectedBreak, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TextAnnotation_DetectedBreak, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TextAnnotation_DetectedBreak, is_prefix_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TextAnnotation_TextProperty, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TextAnnotation_TextProperty, detected_languages_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TextAnnotation_TextProperty, detected_break_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TextAnnotation, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TextAnnotation, pages_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TextAnnotation, text_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Page, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Page, property_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Page, width_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Page, height_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Page, blocks_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Block, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Block, property_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Block, bounding_box_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Block, paragraphs_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Block, block_type_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Paragraph, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Paragraph, property_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Paragraph, bounding_box_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Paragraph, words_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Word, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Word, property_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Word, bounding_box_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Word, symbols_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Symbol, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Symbol, property_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Symbol, bounding_box_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Symbol, text_),
};

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, -1, sizeof(TextAnnotation_DetectedLanguage)},
  { 7, -1, sizeof(TextAnnotation_DetectedBreak)},
  { 14, -1, sizeof(TextAnnotation_TextProperty)},
  { 21, -1, sizeof(TextAnnotation)},
  { 28, -1, sizeof(Page)},
  { 37, -1, sizeof(Block)},
  { 46, -1, sizeof(Paragraph)},
  { 54, -1, sizeof(Word)},
  { 62, -1, sizeof(Symbol)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_TextAnnotation_DetectedLanguage_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TextAnnotation_DetectedBreak_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TextAnnotation_TextProperty_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TextAnnotation_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Page_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Block_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Paragraph_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Word_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Symbol_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "google/cloud/vision/v1/text_annotation.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 9);
}

}  // namespace

void TableStruct::Shutdown() {
  _TextAnnotation_DetectedLanguage_default_instance_.Shutdown();
  delete file_level_metadata[0].reflection;
  _TextAnnotation_DetectedBreak_default_instance_.Shutdown();
  delete file_level_metadata[1].reflection;
  _TextAnnotation_TextProperty_default_instance_.Shutdown();
  delete file_level_metadata[2].reflection;
  _TextAnnotation_default_instance_.Shutdown();
  delete file_level_metadata[3].reflection;
  _Page_default_instance_.Shutdown();
  delete file_level_metadata[4].reflection;
  _Block_default_instance_.Shutdown();
  delete file_level_metadata[5].reflection;
  _Paragraph_default_instance_.Shutdown();
  delete file_level_metadata[6].reflection;
  _Word_default_instance_.Shutdown();
  delete file_level_metadata[7].reflection;
  _Symbol_default_instance_.Shutdown();
  delete file_level_metadata[8].reflection;
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  ::google::api::protobuf_google_2fapi_2fannotations_2eproto::InitDefaults();
  ::google::cloud::vision::v1::protobuf_google_2fcloud_2fvision_2fv1_2fgeometry_2eproto::InitDefaults();
  _TextAnnotation_DetectedLanguage_default_instance_.DefaultConstruct();
  _TextAnnotation_DetectedBreak_default_instance_.DefaultConstruct();
  _TextAnnotation_TextProperty_default_instance_.DefaultConstruct();
  _TextAnnotation_default_instance_.DefaultConstruct();
  _Page_default_instance_.DefaultConstruct();
  _Block_default_instance_.DefaultConstruct();
  _Paragraph_default_instance_.DefaultConstruct();
  _Word_default_instance_.DefaultConstruct();
  _Symbol_default_instance_.DefaultConstruct();
  _TextAnnotation_TextProperty_default_instance_.get_mutable()->detected_break_ = const_cast< ::google::cloud::vision::v1::TextAnnotation_DetectedBreak*>(
      ::google::cloud::vision::v1::TextAnnotation_DetectedBreak::internal_default_instance());
  _Page_default_instance_.get_mutable()->property_ = const_cast< ::google::cloud::vision::v1::TextAnnotation_TextProperty*>(
      ::google::cloud::vision::v1::TextAnnotation_TextProperty::internal_default_instance());
  _Block_default_instance_.get_mutable()->property_ = const_cast< ::google::cloud::vision::v1::TextAnnotation_TextProperty*>(
      ::google::cloud::vision::v1::TextAnnotation_TextProperty::internal_default_instance());
  _Block_default_instance_.get_mutable()->bounding_box_ = const_cast< ::google::cloud::vision::v1::BoundingPoly*>(
      ::google::cloud::vision::v1::BoundingPoly::internal_default_instance());
  _Paragraph_default_instance_.get_mutable()->property_ = const_cast< ::google::cloud::vision::v1::TextAnnotation_TextProperty*>(
      ::google::cloud::vision::v1::TextAnnotation_TextProperty::internal_default_instance());
  _Paragraph_default_instance_.get_mutable()->bounding_box_ = const_cast< ::google::cloud::vision::v1::BoundingPoly*>(
      ::google::cloud::vision::v1::BoundingPoly::internal_default_instance());
  _Word_default_instance_.get_mutable()->property_ = const_cast< ::google::cloud::vision::v1::TextAnnotation_TextProperty*>(
      ::google::cloud::vision::v1::TextAnnotation_TextProperty::internal_default_instance());
  _Word_default_instance_.get_mutable()->bounding_box_ = const_cast< ::google::cloud::vision::v1::BoundingPoly*>(
      ::google::cloud::vision::v1::BoundingPoly::internal_default_instance());
  _Symbol_default_instance_.get_mutable()->property_ = const_cast< ::google::cloud::vision::v1::TextAnnotation_TextProperty*>(
      ::google::cloud::vision::v1::TextAnnotation_TextProperty::internal_default_instance());
  _Symbol_default_instance_.get_mutable()->bounding_box_ = const_cast< ::google::cloud::vision::v1::BoundingPoly*>(
      ::google::cloud::vision::v1::BoundingPoly::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n,google/cloud/vision/v1/text_annotation"
      ".proto\022\026google.cloud.vision.v1\032\034google/a"
      "pi/annotations.proto\032%google/cloud/visio"
      "n/v1/geometry.proto\"\226\004\n\016TextAnnotation\022+"
      "\n\005pages\030\001 \003(\0132\034.google.cloud.vision.v1.P"
      "age\022\014\n\004text\030\002 \001(\t\032=\n\020DetectedLanguage\022\025\n"
      "\rlanguage_code\030\001 \001(\t\022\022\n\nconfidence\030\002 \001(\002"
      "\032\325\001\n\rDetectedBreak\022L\n\004type\030\001 \001(\0162>.googl"
      "e.cloud.vision.v1.TextAnnotation.Detecte"
      "dBreak.BreakType\022\021\n\tis_prefix\030\002 \001(\010\"c\n\tB"
      "reakType\022\013\n\007UNKNOWN\020\000\022\t\n\005SPACE\020\001\022\016\n\nSURE"
      "_SPACE\020\002\022\022\n\016EOL_SURE_SPACE\020\003\022\n\n\006HYPHEN\020\004"
      "\022\016\n\nLINE_BREAK\020\005\032\261\001\n\014TextProperty\022S\n\022det"
      "ected_languages\030\001 \003(\01327.google.cloud.vis"
      "ion.v1.TextAnnotation.DetectedLanguage\022L"
      "\n\016detected_break\030\002 \001(\01324.google.cloud.vi"
      "sion.v1.TextAnnotation.DetectedBreak\"\233\001\n"
      "\004Page\022E\n\010property\030\001 \001(\01323.google.cloud.v"
      "ision.v1.TextAnnotation.TextProperty\022\r\n\005"
      "width\030\002 \001(\005\022\016\n\006height\030\003 \001(\005\022-\n\006blocks\030\004 "
      "\003(\0132\035.google.cloud.vision.v1.Block\"\322\002\n\005B"
      "lock\022E\n\010property\030\001 \001(\01323.google.cloud.vi"
      "sion.v1.TextAnnotation.TextProperty\022:\n\014b"
      "ounding_box\030\002 \001(\0132$.google.cloud.vision."
      "v1.BoundingPoly\0225\n\nparagraphs\030\003 \003(\0132!.go"
      "ogle.cloud.vision.v1.Paragraph\022;\n\nblock_"
      "type\030\004 \001(\0162\'.google.cloud.vision.v1.Bloc"
      "k.BlockType\"R\n\tBlockType\022\013\n\007UNKNOWN\020\000\022\010\n"
      "\004TEXT\020\001\022\t\n\005TABLE\020\002\022\013\n\007PICTURE\020\003\022\t\n\005RULER"
      "\020\004\022\013\n\007BARCODE\020\005\"\273\001\n\tParagraph\022E\n\010propert"
      "y\030\001 \001(\01323.google.cloud.vision.v1.TextAnn"
      "otation.TextProperty\022:\n\014bounding_box\030\002 \001"
      "(\0132$.google.cloud.vision.v1.BoundingPoly"
      "\022+\n\005words\030\003 \003(\0132\034.google.cloud.vision.v1"
      ".Word\"\272\001\n\004Word\022E\n\010property\030\001 \001(\01323.googl"
      "e.cloud.vision.v1.TextAnnotation.TextPro"
      "perty\022:\n\014bounding_box\030\002 \001(\0132$.google.clo"
      "ud.vision.v1.BoundingPoly\022/\n\007symbols\030\003 \003"
      "(\0132\036.google.cloud.vision.v1.Symbol\"\231\001\n\006S"
      "ymbol\022E\n\010property\030\001 \001(\01323.google.cloud.v"
      "ision.v1.TextAnnotation.TextProperty\022:\n\014"
      "bounding_box\030\002 \001(\0132$.google.cloud.vision"
      ".v1.BoundingPoly\022\014\n\004text\030\003 \001(\tBt\n\032com.go"
      "ogle.cloud.vision.v1B\023TextAnnotationProt"
      "oP\001Z<google.golang.org/genproto/googleap"
      "is/cloud/vision/v1;vision\370\001\001b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1836);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "google/cloud/vision/v1/text_annotation.proto", &protobuf_RegisterTypes);
  ::google::api::protobuf_google_2fapi_2fannotations_2eproto::AddDescriptors();
  ::google::cloud::vision::v1::protobuf_google_2fcloud_2fvision_2fv1_2fgeometry_2eproto::AddDescriptors();
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_google_2fcloud_2fvision_2fv1_2ftext_5fannotation_2eproto

const ::google::protobuf::EnumDescriptor* TextAnnotation_DetectedBreak_BreakType_descriptor() {
  protobuf_google_2fcloud_2fvision_2fv1_2ftext_5fannotation_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fcloud_2fvision_2fv1_2ftext_5fannotation_2eproto::file_level_enum_descriptors[0];
}
bool TextAnnotation_DetectedBreak_BreakType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const TextAnnotation_DetectedBreak_BreakType TextAnnotation_DetectedBreak::UNKNOWN;
const TextAnnotation_DetectedBreak_BreakType TextAnnotation_DetectedBreak::SPACE;
const TextAnnotation_DetectedBreak_BreakType TextAnnotation_DetectedBreak::SURE_SPACE;
const TextAnnotation_DetectedBreak_BreakType TextAnnotation_DetectedBreak::EOL_SURE_SPACE;
const TextAnnotation_DetectedBreak_BreakType TextAnnotation_DetectedBreak::HYPHEN;
const TextAnnotation_DetectedBreak_BreakType TextAnnotation_DetectedBreak::LINE_BREAK;
const TextAnnotation_DetectedBreak_BreakType TextAnnotation_DetectedBreak::BreakType_MIN;
const TextAnnotation_DetectedBreak_BreakType TextAnnotation_DetectedBreak::BreakType_MAX;
const int TextAnnotation_DetectedBreak::BreakType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Block_BlockType_descriptor() {
  protobuf_google_2fcloud_2fvision_2fv1_2ftext_5fannotation_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fcloud_2fvision_2fv1_2ftext_5fannotation_2eproto::file_level_enum_descriptors[1];
}
bool Block_BlockType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Block_BlockType Block::UNKNOWN;
const Block_BlockType Block::TEXT;
const Block_BlockType Block::TABLE;
const Block_BlockType Block::PICTURE;
const Block_BlockType Block::RULER;
const Block_BlockType Block::BARCODE;
const Block_BlockType Block::BlockType_MIN;
const Block_BlockType Block::BlockType_MAX;
const int Block::BlockType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TextAnnotation_DetectedLanguage::kLanguageCodeFieldNumber;
const int TextAnnotation_DetectedLanguage::kConfidenceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TextAnnotation_DetectedLanguage::TextAnnotation_DetectedLanguage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_google_2fcloud_2fvision_2fv1_2ftext_5fannotation_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.vision.v1.TextAnnotation.DetectedLanguage)
}
TextAnnotation_DetectedLanguage::TextAnnotation_DetectedLanguage(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_google_2fcloud_2fvision_2fv1_2ftext_5fannotation_2eproto::InitDefaults();
#endif  // GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.cloud.vision.v1.TextAnnotation.DetectedLanguage)
}
TextAnnotation_DetectedLanguage::TextAnnotation_DetectedLanguage(const TextAnnotation_DetectedLanguage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  language_code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.language_code().size() > 0) {
    language_code_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.language_code(),
      GetArenaNoVirtual());
  }
  confidence_ = from.confidence_;
  // @@protoc_insertion_point(copy_constructor:google.cloud.vision.v1.TextAnnotation.DetectedLanguage)
}

void TextAnnotation_DetectedLanguage::SharedCtor() {
  language_code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  confidence_ = 0;
  _cached_size_ = 0;
}

TextAnnotation_DetectedLanguage::~TextAnnotation_DetectedLanguage() {
  // @@protoc_insertion_point(destructor:google.cloud.vision.v1.TextAnnotation.DetectedLanguage)
  SharedDtor();
}

void TextAnnotation_DetectedLanguage::SharedDtor() {
  ::google::protobuf::Arena* arena = GetArenaNoVirtual();
  if (arena != NULL) {
    return;
  }

  language_code_.Destroy(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), arena);
}

void TextAnnotation_DetectedLanguage::ArenaDtor(void* object) {
  TextAnnotation_DetectedLanguage* _this = reinterpret_cast< TextAnnotation_DetectedLanguage* >(object);
  (void)_this;
}
void TextAnnotation_DetectedLanguage::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void TextAnnotation_DetectedLanguage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TextAnnotation_DetectedLanguage::descriptor() {
  protobuf_google_2fcloud_2fvision_2fv1_2ftext_5fannotation_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fcloud_2fvision_2fv1_2ftext_5fannotation_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TextAnnotation_DetectedLanguage& TextAnnotation_DetectedLanguage::default_instance() {
  protobuf_google_2fcloud_2fvision_2fv1_2ftext_5fannotation_2eproto::InitDefaults();
  return *internal_default_instance();
}

TextAnnotation_DetectedLanguage* TextAnnotation_DetectedLanguage::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<TextAnnotation_DetectedLanguage>(arena);
}

void TextAnnotation_DetectedLanguage::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.vision.v1.TextAnnotation.DetectedLanguage)
  language_code_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  confidence_ = 0;
}

bool TextAnnotation_DetectedLanguage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.vision.v1.TextAnnotation.DetectedLanguage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string language_code = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_language_code()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->language_code().data(), this->language_code().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.vision.v1.TextAnnotation.DetectedLanguage.language_code"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float confidence = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &confidence_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.vision.v1.TextAnnotation.DetectedLanguage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.vision.v1.TextAnnotation.DetectedLanguage)
  return false;
#undef DO_
}

void TextAnnotation_DetectedLanguage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.vision.v1.TextAnnotation.DetectedLanguage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string language_code = 1;
  if (this->language_code().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->language_code().data(), this->language_code().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.vision.v1.TextAnnotation.DetectedLanguage.language_code");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->language_code(), output);
  }

  // float confidence = 2;
  if (this->confidence() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->confidence(), output);
  }

  // @@protoc_insertion_point(serialize_end:google.cloud.vision.v1.TextAnnotation.DetectedLanguage)
}

::google::protobuf::uint8* TextAnnotation_DetectedLanguage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.vision.v1.TextAnnotation.DetectedLanguage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string language_code = 1;
  if (this->language_code().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->language_code().data(), this->language_code().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.vision.v1.TextAnnotation.DetectedLanguage.language_code");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->language_code(), target);
  }

  // float confidence = 2;
  if (this->confidence() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->confidence(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.vision.v1.TextAnnotation.DetectedLanguage)
  return target;
}

size_t TextAnnotation_DetectedLanguage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.vision.v1.TextAnnotation.DetectedLanguage)
  size_t total_size = 0;

  // string language_code = 1;
  if (this->language_code().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->language_code());
  }

  // float confidence = 2;
  if (this->confidence() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TextAnnotation_DetectedLanguage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.vision.v1.TextAnnotation.DetectedLanguage)
  GOOGLE_DCHECK_NE(&from, this);
  const TextAnnotation_DetectedLanguage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TextAnnotation_DetectedLanguage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.vision.v1.TextAnnotation.DetectedLanguage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.vision.v1.TextAnnotation.DetectedLanguage)
    MergeFrom(*source);
  }
}

void TextAnnotation_DetectedLanguage::MergeFrom(const TextAnnotation_DetectedLanguage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.vision.v1.TextAnnotation.DetectedLanguage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.language_code().size() > 0) {
    set_language_code(from.language_code());
  }
  if (from.confidence() != 0) {
    set_confidence(from.confidence());
  }
}

void TextAnnotation_DetectedLanguage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.vision.v1.TextAnnotation.DetectedLanguage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TextAnnotation_DetectedLanguage::CopyFrom(const TextAnnotation_DetectedLanguage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.vision.v1.TextAnnotation.DetectedLanguage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TextAnnotation_DetectedLanguage::IsInitialized() const {
  return true;
}

void TextAnnotation_DetectedLanguage::Swap(TextAnnotation_DetectedLanguage* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    TextAnnotation_DetectedLanguage* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void TextAnnotation_DetectedLanguage::UnsafeArenaSwap(TextAnnotation_DetectedLanguage* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void TextAnnotation_DetectedLanguage::InternalSwap(TextAnnotation_DetectedLanguage* other) {
  language_code_.Swap(&other->language_code_);
  std::swap(confidence_, other->confidence_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TextAnnotation_DetectedLanguage::GetMetadata() const {
  protobuf_google_2fcloud_2fvision_2fv1_2ftext_5fannotation_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fcloud_2fvision_2fv1_2ftext_5fannotation_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TextAnnotation_DetectedLanguage

// string language_code = 1;
void TextAnnotation_DetectedLanguage::clear_language_code() {
  language_code_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
const ::std::string& TextAnnotation_DetectedLanguage::language_code() const {
  // @@protoc_insertion_point(field_get:google.cloud.vision.v1.TextAnnotation.DetectedLanguage.language_code)
  return language_code_.Get();
}
void TextAnnotation_DetectedLanguage::set_language_code(const ::std::string& value) {
  
  language_code_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.cloud.vision.v1.TextAnnotation.DetectedLanguage.language_code)
}
void TextAnnotation_DetectedLanguage::set_language_code(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  language_code_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.cloud.vision.v1.TextAnnotation.DetectedLanguage.language_code)
}
void TextAnnotation_DetectedLanguage::set_language_code(const char* value,
    size_t size) {
  
  language_code_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.cloud.vision.v1.TextAnnotation.DetectedLanguage.language_code)
}
::std::string* TextAnnotation_DetectedLanguage::mutable_language_code() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.vision.v1.TextAnnotation.DetectedLanguage.language_code)
  return language_code_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* TextAnnotation_DetectedLanguage::release_language_code() {
  // @@protoc_insertion_point(field_release:google.cloud.vision.v1.TextAnnotation.DetectedLanguage.language_code)
  
  return language_code_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* TextAnnotation_DetectedLanguage::unsafe_arena_release_language_code() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.vision.v1.TextAnnotation.DetectedLanguage.language_code)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return language_code_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
void TextAnnotation_DetectedLanguage::set_allocated_language_code(::std::string* language_code) {
  if (language_code != NULL) {
    
  } else {
    
  }
  language_code_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), language_code,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.cloud.vision.v1.TextAnnotation.DetectedLanguage.language_code)
}
void TextAnnotation_DetectedLanguage::unsafe_arena_set_allocated_language_code(
    ::std::string* language_code) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (language_code != NULL) {
    
  } else {
    
  }
  language_code_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      language_code, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.vision.v1.TextAnnotation.DetectedLanguage.language_code)
}

// float confidence = 2;
void TextAnnotation_DetectedLanguage::clear_confidence() {
  confidence_ = 0;
}
float TextAnnotation_DetectedLanguage::confidence() const {
  // @@protoc_insertion_point(field_get:google.cloud.vision.v1.TextAnnotation.DetectedLanguage.confidence)
  return confidence_;
}
void TextAnnotation_DetectedLanguage::set_confidence(float value) {
  
  confidence_ = value;
  // @@protoc_insertion_point(field_set:google.cloud.vision.v1.TextAnnotation.DetectedLanguage.confidence)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TextAnnotation_DetectedBreak::kTypeFieldNumber;
const int TextAnnotation_DetectedBreak::kIsPrefixFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TextAnnotation_DetectedBreak::TextAnnotation_DetectedBreak()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_google_2fcloud_2fvision_2fv1_2ftext_5fannotation_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.vision.v1.TextAnnotation.DetectedBreak)
}
TextAnnotation_DetectedBreak::TextAnnotation_DetectedBreak(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_google_2fcloud_2fvision_2fv1_2ftext_5fannotation_2eproto::InitDefaults();
#endif  // GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.cloud.vision.v1.TextAnnotation.DetectedBreak)
}
TextAnnotation_DetectedBreak::TextAnnotation_DetectedBreak(const TextAnnotation_DetectedBreak& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&type_, &from.type_,
    reinterpret_cast<char*>(&is_prefix_) -
    reinterpret_cast<char*>(&type_) + sizeof(is_prefix_));
  // @@protoc_insertion_point(copy_constructor:google.cloud.vision.v1.TextAnnotation.DetectedBreak)
}

void TextAnnotation_DetectedBreak::SharedCtor() {
  ::memset(&type_, 0, reinterpret_cast<char*>(&is_prefix_) -
    reinterpret_cast<char*>(&type_) + sizeof(is_prefix_));
  _cached_size_ = 0;
}

TextAnnotation_DetectedBreak::~TextAnnotation_DetectedBreak() {
  // @@protoc_insertion_point(destructor:google.cloud.vision.v1.TextAnnotation.DetectedBreak)
  SharedDtor();
}

void TextAnnotation_DetectedBreak::SharedDtor() {
  ::google::protobuf::Arena* arena = GetArenaNoVirtual();
  if (arena != NULL) {
    return;
  }

}

void TextAnnotation_DetectedBreak::ArenaDtor(void* object) {
  TextAnnotation_DetectedBreak* _this = reinterpret_cast< TextAnnotation_DetectedBreak* >(object);
  (void)_this;
}
void TextAnnotation_DetectedBreak::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void TextAnnotation_DetectedBreak::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TextAnnotation_DetectedBreak::descriptor() {
  protobuf_google_2fcloud_2fvision_2fv1_2ftext_5fannotation_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fcloud_2fvision_2fv1_2ftext_5fannotation_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TextAnnotation_DetectedBreak& TextAnnotation_DetectedBreak::default_instance() {
  protobuf_google_2fcloud_2fvision_2fv1_2ftext_5fannotation_2eproto::InitDefaults();
  return *internal_default_instance();
}

TextAnnotation_DetectedBreak* TextAnnotation_DetectedBreak::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<TextAnnotation_DetectedBreak>(arena);
}

void TextAnnotation_DetectedBreak::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.vision.v1.TextAnnotation.DetectedBreak)
  ::memset(&type_, 0, reinterpret_cast<char*>(&is_prefix_) -
    reinterpret_cast<char*>(&type_) + sizeof(is_prefix_));
}

bool TextAnnotation_DetectedBreak::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.vision.v1.TextAnnotation.DetectedBreak)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.cloud.vision.v1.TextAnnotation.DetectedBreak.BreakType type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_type(static_cast< ::google::cloud::vision::v1::TextAnnotation_DetectedBreak_BreakType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_prefix = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_prefix_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.vision.v1.TextAnnotation.DetectedBreak)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.vision.v1.TextAnnotation.DetectedBreak)
  return false;
#undef DO_
}

void TextAnnotation_DetectedBreak::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.vision.v1.TextAnnotation.DetectedBreak)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.cloud.vision.v1.TextAnnotation.DetectedBreak.BreakType type = 1;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->type(), output);
  }

  // bool is_prefix = 2;
  if (this->is_prefix() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->is_prefix(), output);
  }

  // @@protoc_insertion_point(serialize_end:google.cloud.vision.v1.TextAnnotation.DetectedBreak)
}

::google::protobuf::uint8* TextAnnotation_DetectedBreak::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.vision.v1.TextAnnotation.DetectedBreak)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.cloud.vision.v1.TextAnnotation.DetectedBreak.BreakType type = 1;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->type(), target);
  }

  // bool is_prefix = 2;
  if (this->is_prefix() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->is_prefix(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.vision.v1.TextAnnotation.DetectedBreak)
  return target;
}

size_t TextAnnotation_DetectedBreak::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.vision.v1.TextAnnotation.DetectedBreak)
  size_t total_size = 0;

  // .google.cloud.vision.v1.TextAnnotation.DetectedBreak.BreakType type = 1;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  // bool is_prefix = 2;
  if (this->is_prefix() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TextAnnotation_DetectedBreak::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.vision.v1.TextAnnotation.DetectedBreak)
  GOOGLE_DCHECK_NE(&from, this);
  const TextAnnotation_DetectedBreak* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TextAnnotation_DetectedBreak>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.vision.v1.TextAnnotation.DetectedBreak)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.vision.v1.TextAnnotation.DetectedBreak)
    MergeFrom(*source);
  }
}

void TextAnnotation_DetectedBreak::MergeFrom(const TextAnnotation_DetectedBreak& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.vision.v1.TextAnnotation.DetectedBreak)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.type() != 0) {
    set_type(from.type());
  }
  if (from.is_prefix() != 0) {
    set_is_prefix(from.is_prefix());
  }
}

void TextAnnotation_DetectedBreak::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.vision.v1.TextAnnotation.DetectedBreak)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TextAnnotation_DetectedBreak::CopyFrom(const TextAnnotation_DetectedBreak& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.vision.v1.TextAnnotation.DetectedBreak)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TextAnnotation_DetectedBreak::IsInitialized() const {
  return true;
}

void TextAnnotation_DetectedBreak::Swap(TextAnnotation_DetectedBreak* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    TextAnnotation_DetectedBreak* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void TextAnnotation_DetectedBreak::UnsafeArenaSwap(TextAnnotation_DetectedBreak* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void TextAnnotation_DetectedBreak::InternalSwap(TextAnnotation_DetectedBreak* other) {
  std::swap(type_, other->type_);
  std::swap(is_prefix_, other->is_prefix_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TextAnnotation_DetectedBreak::GetMetadata() const {
  protobuf_google_2fcloud_2fvision_2fv1_2ftext_5fannotation_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fcloud_2fvision_2fv1_2ftext_5fannotation_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TextAnnotation_DetectedBreak

// .google.cloud.vision.v1.TextAnnotation.DetectedBreak.BreakType type = 1;
void TextAnnotation_DetectedBreak::clear_type() {
  type_ = 0;
}
::google::cloud::vision::v1::TextAnnotation_DetectedBreak_BreakType TextAnnotation_DetectedBreak::type() const {
  // @@protoc_insertion_point(field_get:google.cloud.vision.v1.TextAnnotation.DetectedBreak.type)
  return static_cast< ::google::cloud::vision::v1::TextAnnotation_DetectedBreak_BreakType >(type_);
}
void TextAnnotation_DetectedBreak::set_type(::google::cloud::vision::v1::TextAnnotation_DetectedBreak_BreakType value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:google.cloud.vision.v1.TextAnnotation.DetectedBreak.type)
}

// bool is_prefix = 2;
void TextAnnotation_DetectedBreak::clear_is_prefix() {
  is_prefix_ = false;
}
bool TextAnnotation_DetectedBreak::is_prefix() const {
  // @@protoc_insertion_point(field_get:google.cloud.vision.v1.TextAnnotation.DetectedBreak.is_prefix)
  return is_prefix_;
}
void TextAnnotation_DetectedBreak::set_is_prefix(bool value) {
  
  is_prefix_ = value;
  // @@protoc_insertion_point(field_set:google.cloud.vision.v1.TextAnnotation.DetectedBreak.is_prefix)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

void TextAnnotation_TextProperty::_slow_mutable_detected_break() {
  detected_break_ = ::google::protobuf::Arena::CreateMessage< ::google::cloud::vision::v1::TextAnnotation_DetectedBreak >(
      GetArenaNoVirtual());
}
::google::cloud::vision::v1::TextAnnotation_DetectedBreak* TextAnnotation_TextProperty::_slow_release_detected_break() {
  if (detected_break_ == NULL) {
    return NULL;
  } else {
    ::google::cloud::vision::v1::TextAnnotation_DetectedBreak* temp = new ::google::cloud::vision::v1::TextAnnotation_DetectedBreak(*detected_break_);
    detected_break_ = NULL;
    return temp;
  }
}
::google::cloud::vision::v1::TextAnnotation_DetectedBreak* TextAnnotation_TextProperty::unsafe_arena_release_detected_break() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.vision.v1.TextAnnotation.TextProperty.detected_break)
  
  ::google::cloud::vision::v1::TextAnnotation_DetectedBreak* temp = detected_break_;
  detected_break_ = NULL;
  return temp;
}
void TextAnnotation_TextProperty::_slow_set_allocated_detected_break(
    ::google::protobuf::Arena* message_arena, ::google::cloud::vision::v1::TextAnnotation_DetectedBreak** detected_break) {
    if (message_arena != NULL && 
        ::google::protobuf::Arena::GetArena(*detected_break) == NULL) {
      message_arena->Own(*detected_break);
    } else if (message_arena !=
               ::google::protobuf::Arena::GetArena(*detected_break)) {
      ::google::cloud::vision::v1::TextAnnotation_DetectedBreak* new_detected_break = 
            ::google::protobuf::Arena::CreateMessage< ::google::cloud::vision::v1::TextAnnotation_DetectedBreak >(
            message_arena);
      new_detected_break->CopyFrom(**detected_break);
      *detected_break = new_detected_break;
    }
}
void TextAnnotation_TextProperty::unsafe_arena_set_allocated_detected_break(
    ::google::cloud::vision::v1::TextAnnotation_DetectedBreak* detected_break) {
  if (GetArenaNoVirtual() == NULL) {
    delete detected_break_;
  }
  detected_break_ = detected_break;
  if (detected_break) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.vision.v1.TextAnnotation.TextProperty.detected_break)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TextAnnotation_TextProperty::kDetectedLanguagesFieldNumber;
const int TextAnnotation_TextProperty::kDetectedBreakFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TextAnnotation_TextProperty::TextAnnotation_TextProperty()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_google_2fcloud_2fvision_2fv1_2ftext_5fannotation_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.vision.v1.TextAnnotation.TextProperty)
}
TextAnnotation_TextProperty::TextAnnotation_TextProperty(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  detected_languages_(arena) {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_google_2fcloud_2fvision_2fv1_2ftext_5fannotation_2eproto::InitDefaults();
#endif  // GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.cloud.vision.v1.TextAnnotation.TextProperty)
}
TextAnnotation_TextProperty::TextAnnotation_TextProperty(const TextAnnotation_TextProperty& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      detected_languages_(from.detected_languages_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_detected_break()) {
    detected_break_ = new ::google::cloud::vision::v1::TextAnnotation_DetectedBreak(*from.detected_break_);
  } else {
    detected_break_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.cloud.vision.v1.TextAnnotation.TextProperty)
}

void TextAnnotation_TextProperty::SharedCtor() {
  detected_break_ = NULL;
  _cached_size_ = 0;
}

TextAnnotation_TextProperty::~TextAnnotation_TextProperty() {
  // @@protoc_insertion_point(destructor:google.cloud.vision.v1.TextAnnotation.TextProperty)
  SharedDtor();
}

void TextAnnotation_TextProperty::SharedDtor() {
  ::google::protobuf::Arena* arena = GetArenaNoVirtual();
  if (arena != NULL) {
    return;
  }

  if (this != internal_default_instance()) {
    delete detected_break_;
  }
}

void TextAnnotation_TextProperty::ArenaDtor(void* object) {
  TextAnnotation_TextProperty* _this = reinterpret_cast< TextAnnotation_TextProperty* >(object);
  (void)_this;
}
void TextAnnotation_TextProperty::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void TextAnnotation_TextProperty::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TextAnnotation_TextProperty::descriptor() {
  protobuf_google_2fcloud_2fvision_2fv1_2ftext_5fannotation_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fcloud_2fvision_2fv1_2ftext_5fannotation_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TextAnnotation_TextProperty& TextAnnotation_TextProperty::default_instance() {
  protobuf_google_2fcloud_2fvision_2fv1_2ftext_5fannotation_2eproto::InitDefaults();
  return *internal_default_instance();
}

TextAnnotation_TextProperty* TextAnnotation_TextProperty::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<TextAnnotation_TextProperty>(arena);
}

void TextAnnotation_TextProperty::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.vision.v1.TextAnnotation.TextProperty)
  detected_languages_.Clear();
  if (GetArenaNoVirtual() == NULL && detected_break_ != NULL) {
    delete detected_break_;
  }
  detected_break_ = NULL;
}

bool TextAnnotation_TextProperty::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.vision.v1.TextAnnotation.TextProperty)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .google.cloud.vision.v1.TextAnnotation.DetectedLanguage detected_languages = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_detected_languages()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.cloud.vision.v1.TextAnnotation.DetectedBreak detected_break = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_detected_break()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.vision.v1.TextAnnotation.TextProperty)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.vision.v1.TextAnnotation.TextProperty)
  return false;
#undef DO_
}

void TextAnnotation_TextProperty::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.vision.v1.TextAnnotation.TextProperty)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.cloud.vision.v1.TextAnnotation.DetectedLanguage detected_languages = 1;
  for (unsigned int i = 0, n = this->detected_languages_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->detected_languages(i), output);
  }

  // .google.cloud.vision.v1.TextAnnotation.DetectedBreak detected_break = 2;
  if (this->has_detected_break()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->detected_break_, output);
  }

  // @@protoc_insertion_point(serialize_end:google.cloud.vision.v1.TextAnnotation.TextProperty)
}

::google::protobuf::uint8* TextAnnotation_TextProperty::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.vision.v1.TextAnnotation.TextProperty)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.cloud.vision.v1.TextAnnotation.DetectedLanguage detected_languages = 1;
  for (unsigned int i = 0, n = this->detected_languages_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->detected_languages(i), deterministic, target);
  }

  // .google.cloud.vision.v1.TextAnnotation.DetectedBreak detected_break = 2;
  if (this->has_detected_break()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->detected_break_, deterministic, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.vision.v1.TextAnnotation.TextProperty)
  return target;
}

size_t TextAnnotation_TextProperty::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.vision.v1.TextAnnotation.TextProperty)
  size_t total_size = 0;

  // repeated .google.cloud.vision.v1.TextAnnotation.DetectedLanguage detected_languages = 1;
  {
    unsigned int count = this->detected_languages_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->detected_languages(i));
    }
  }

  // .google.cloud.vision.v1.TextAnnotation.DetectedBreak detected_break = 2;
  if (this->has_detected_break()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->detected_break_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TextAnnotation_TextProperty::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.vision.v1.TextAnnotation.TextProperty)
  GOOGLE_DCHECK_NE(&from, this);
  const TextAnnotation_TextProperty* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TextAnnotation_TextProperty>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.vision.v1.TextAnnotation.TextProperty)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.vision.v1.TextAnnotation.TextProperty)
    MergeFrom(*source);
  }
}

void TextAnnotation_TextProperty::MergeFrom(const TextAnnotation_TextProperty& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.vision.v1.TextAnnotation.TextProperty)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  detected_languages_.MergeFrom(from.detected_languages_);
  if (from.has_detected_break()) {
    mutable_detected_break()->::google::cloud::vision::v1::TextAnnotation_DetectedBreak::MergeFrom(from.detected_break());
  }
}

void TextAnnotation_TextProperty::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.vision.v1.TextAnnotation.TextProperty)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TextAnnotation_TextProperty::CopyFrom(const TextAnnotation_TextProperty& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.vision.v1.TextAnnotation.TextProperty)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TextAnnotation_TextProperty::IsInitialized() const {
  return true;
}

void TextAnnotation_TextProperty::Swap(TextAnnotation_TextProperty* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    TextAnnotation_TextProperty* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void TextAnnotation_TextProperty::UnsafeArenaSwap(TextAnnotation_TextProperty* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void TextAnnotation_TextProperty::InternalSwap(TextAnnotation_TextProperty* other) {
  detected_languages_.InternalSwap(&other->detected_languages_);
  std::swap(detected_break_, other->detected_break_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TextAnnotation_TextProperty::GetMetadata() const {
  protobuf_google_2fcloud_2fvision_2fv1_2ftext_5fannotation_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fcloud_2fvision_2fv1_2ftext_5fannotation_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TextAnnotation_TextProperty

// repeated .google.cloud.vision.v1.TextAnnotation.DetectedLanguage detected_languages = 1;
int TextAnnotation_TextProperty::detected_languages_size() const {
  return detected_languages_.size();
}
void TextAnnotation_TextProperty::clear_detected_languages() {
  detected_languages_.Clear();
}
const ::google::cloud::vision::v1::TextAnnotation_DetectedLanguage& TextAnnotation_TextProperty::detected_languages(int index) const {
  // @@protoc_insertion_point(field_get:google.cloud.vision.v1.TextAnnotation.TextProperty.detected_languages)
  return detected_languages_.Get(index);
}
::google::cloud::vision::v1::TextAnnotation_DetectedLanguage* TextAnnotation_TextProperty::mutable_detected_languages(int index) {
  // @@protoc_insertion_point(field_mutable:google.cloud.vision.v1.TextAnnotation.TextProperty.detected_languages)
  return detected_languages_.Mutable(index);
}
::google::cloud::vision::v1::TextAnnotation_DetectedLanguage* TextAnnotation_TextProperty::add_detected_languages() {
  // @@protoc_insertion_point(field_add:google.cloud.vision.v1.TextAnnotation.TextProperty.detected_languages)
  return detected_languages_.Add();
}
::google::protobuf::RepeatedPtrField< ::google::cloud::vision::v1::TextAnnotation_DetectedLanguage >*
TextAnnotation_TextProperty::mutable_detected_languages() {
  // @@protoc_insertion_point(field_mutable_list:google.cloud.vision.v1.TextAnnotation.TextProperty.detected_languages)
  return &detected_languages_;
}
const ::google::protobuf::RepeatedPtrField< ::google::cloud::vision::v1::TextAnnotation_DetectedLanguage >&
TextAnnotation_TextProperty::detected_languages() const {
  // @@protoc_insertion_point(field_list:google.cloud.vision.v1.TextAnnotation.TextProperty.detected_languages)
  return detected_languages_;
}

// .google.cloud.vision.v1.TextAnnotation.DetectedBreak detected_break = 2;
bool TextAnnotation_TextProperty::has_detected_break() const {
  return this != internal_default_instance() && detected_break_ != NULL;
}
void TextAnnotation_TextProperty::clear_detected_break() {
  if (GetArenaNoVirtual() == NULL && detected_break_ != NULL) delete detected_break_;
  detected_break_ = NULL;
}
const ::google::cloud::vision::v1::TextAnnotation_DetectedBreak& TextAnnotation_TextProperty::detected_break() const {
  // @@protoc_insertion_point(field_get:google.cloud.vision.v1.TextAnnotation.TextProperty.detected_break)
  return detected_break_ != NULL ? *detected_break_
                         : *::google::cloud::vision::v1::TextAnnotation_DetectedBreak::internal_default_instance();
}
::google::cloud::vision::v1::TextAnnotation_DetectedBreak* TextAnnotation_TextProperty::mutable_detected_break() {
  
  if (detected_break_ == NULL) {
    _slow_mutable_detected_break();
  }
  // @@protoc_insertion_point(field_mutable:google.cloud.vision.v1.TextAnnotation.TextProperty.detected_break)
  return detected_break_;
}
::google::cloud::vision::v1::TextAnnotation_DetectedBreak* TextAnnotation_TextProperty::release_detected_break() {
  // @@protoc_insertion_point(field_release:google.cloud.vision.v1.TextAnnotation.TextProperty.detected_break)
  
  if (GetArenaNoVirtual() != NULL) {
    return _slow_release_detected_break();
  } else {
    ::google::cloud::vision::v1::TextAnnotation_DetectedBreak* temp = detected_break_;
    detected_break_ = NULL;
    return temp;
  }
}
 void TextAnnotation_TextProperty::set_allocated_detected_break(::google::cloud::vision::v1::TextAnnotation_DetectedBreak* detected_break) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete detected_break_;
  }
  if (detected_break != NULL) {
    _slow_set_allocated_detected_break(message_arena, &detected_break);
  }
  detected_break_ = detected_break;
  if (detected_break) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.cloud.vision.v1.TextAnnotation.TextProperty.detected_break)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TextAnnotation::kPagesFieldNumber;
const int TextAnnotation::kTextFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TextAnnotation::TextAnnotation()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_google_2fcloud_2fvision_2fv1_2ftext_5fannotation_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.vision.v1.TextAnnotation)
}
TextAnnotation::TextAnnotation(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  pages_(arena) {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_google_2fcloud_2fvision_2fv1_2ftext_5fannotation_2eproto::InitDefaults();
#endif  // GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.cloud.vision.v1.TextAnnotation)
}
TextAnnotation::TextAnnotation(const TextAnnotation& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      pages_(from.pages_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.text().size() > 0) {
    text_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.text(),
      GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(copy_constructor:google.cloud.vision.v1.TextAnnotation)
}

void TextAnnotation::SharedCtor() {
  text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

TextAnnotation::~TextAnnotation() {
  // @@protoc_insertion_point(destructor:google.cloud.vision.v1.TextAnnotation)
  SharedDtor();
}

void TextAnnotation::SharedDtor() {
  ::google::protobuf::Arena* arena = GetArenaNoVirtual();
  if (arena != NULL) {
    return;
  }

  text_.Destroy(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), arena);
}

void TextAnnotation::ArenaDtor(void* object) {
  TextAnnotation* _this = reinterpret_cast< TextAnnotation* >(object);
  (void)_this;
}
void TextAnnotation::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void TextAnnotation::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TextAnnotation::descriptor() {
  protobuf_google_2fcloud_2fvision_2fv1_2ftext_5fannotation_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fcloud_2fvision_2fv1_2ftext_5fannotation_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TextAnnotation& TextAnnotation::default_instance() {
  protobuf_google_2fcloud_2fvision_2fv1_2ftext_5fannotation_2eproto::InitDefaults();
  return *internal_default_instance();
}

TextAnnotation* TextAnnotation::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<TextAnnotation>(arena);
}

void TextAnnotation::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.vision.v1.TextAnnotation)
  pages_.Clear();
  text_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}

bool TextAnnotation::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.vision.v1.TextAnnotation)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .google.cloud.vision.v1.Page pages = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_pages()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string text = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_text()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->text().data(), this->text().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.vision.v1.TextAnnotation.text"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.vision.v1.TextAnnotation)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.vision.v1.TextAnnotation)
  return false;
#undef DO_
}

void TextAnnotation::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.vision.v1.TextAnnotation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.cloud.vision.v1.Page pages = 1;
  for (unsigned int i = 0, n = this->pages_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->pages(i), output);
  }

  // string text = 2;
  if (this->text().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->text().data(), this->text().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.vision.v1.TextAnnotation.text");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->text(), output);
  }

  // @@protoc_insertion_point(serialize_end:google.cloud.vision.v1.TextAnnotation)
}

::google::protobuf::uint8* TextAnnotation::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.vision.v1.TextAnnotation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.cloud.vision.v1.Page pages = 1;
  for (unsigned int i = 0, n = this->pages_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->pages(i), deterministic, target);
  }

  // string text = 2;
  if (this->text().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->text().data(), this->text().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.vision.v1.TextAnnotation.text");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->text(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.vision.v1.TextAnnotation)
  return target;
}

size_t TextAnnotation::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.vision.v1.TextAnnotation)
  size_t total_size = 0;

  // repeated .google.cloud.vision.v1.Page pages = 1;
  {
    unsigned int count = this->pages_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->pages(i));
    }
  }

  // string text = 2;
  if (this->text().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->text());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TextAnnotation::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.vision.v1.TextAnnotation)
  GOOGLE_DCHECK_NE(&from, this);
  const TextAnnotation* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TextAnnotation>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.vision.v1.TextAnnotation)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.vision.v1.TextAnnotation)
    MergeFrom(*source);
  }
}

void TextAnnotation::MergeFrom(const TextAnnotation& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.vision.v1.TextAnnotation)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  pages_.MergeFrom(from.pages_);
  if (from.text().size() > 0) {
    set_text(from.text());
  }
}

void TextAnnotation::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.vision.v1.TextAnnotation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TextAnnotation::CopyFrom(const TextAnnotation& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.vision.v1.TextAnnotation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TextAnnotation::IsInitialized() const {
  return true;
}

void TextAnnotation::Swap(TextAnnotation* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    TextAnnotation* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void TextAnnotation::UnsafeArenaSwap(TextAnnotation* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void TextAnnotation::InternalSwap(TextAnnotation* other) {
  pages_.InternalSwap(&other->pages_);
  text_.Swap(&other->text_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TextAnnotation::GetMetadata() const {
  protobuf_google_2fcloud_2fvision_2fv1_2ftext_5fannotation_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fcloud_2fvision_2fv1_2ftext_5fannotation_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TextAnnotation

// repeated .google.cloud.vision.v1.Page pages = 1;
int TextAnnotation::pages_size() const {
  return pages_.size();
}
void TextAnnotation::clear_pages() {
  pages_.Clear();
}
const ::google::cloud::vision::v1::Page& TextAnnotation::pages(int index) const {
  // @@protoc_insertion_point(field_get:google.cloud.vision.v1.TextAnnotation.pages)
  return pages_.Get(index);
}
::google::cloud::vision::v1::Page* TextAnnotation::mutable_pages(int index) {
  // @@protoc_insertion_point(field_mutable:google.cloud.vision.v1.TextAnnotation.pages)
  return pages_.Mutable(index);
}
::google::cloud::vision::v1::Page* TextAnnotation::add_pages() {
  // @@protoc_insertion_point(field_add:google.cloud.vision.v1.TextAnnotation.pages)
  return pages_.Add();
}
::google::protobuf::RepeatedPtrField< ::google::cloud::vision::v1::Page >*
TextAnnotation::mutable_pages() {
  // @@protoc_insertion_point(field_mutable_list:google.cloud.vision.v1.TextAnnotation.pages)
  return &pages_;
}
const ::google::protobuf::RepeatedPtrField< ::google::cloud::vision::v1::Page >&
TextAnnotation::pages() const {
  // @@protoc_insertion_point(field_list:google.cloud.vision.v1.TextAnnotation.pages)
  return pages_;
}

// string text = 2;
void TextAnnotation::clear_text() {
  text_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
const ::std::string& TextAnnotation::text() const {
  // @@protoc_insertion_point(field_get:google.cloud.vision.v1.TextAnnotation.text)
  return text_.Get();
}
void TextAnnotation::set_text(const ::std::string& value) {
  
  text_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.cloud.vision.v1.TextAnnotation.text)
}
void TextAnnotation::set_text(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  text_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.cloud.vision.v1.TextAnnotation.text)
}
void TextAnnotation::set_text(const char* value,
    size_t size) {
  
  text_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.cloud.vision.v1.TextAnnotation.text)
}
::std::string* TextAnnotation::mutable_text() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.vision.v1.TextAnnotation.text)
  return text_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* TextAnnotation::release_text() {
  // @@protoc_insertion_point(field_release:google.cloud.vision.v1.TextAnnotation.text)
  
  return text_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* TextAnnotation::unsafe_arena_release_text() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.vision.v1.TextAnnotation.text)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return text_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
void TextAnnotation::set_allocated_text(::std::string* text) {
  if (text != NULL) {
    
  } else {
    
  }
  text_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), text,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.cloud.vision.v1.TextAnnotation.text)
}
void TextAnnotation::unsafe_arena_set_allocated_text(
    ::std::string* text) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (text != NULL) {
    
  } else {
    
  }
  text_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      text, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.vision.v1.TextAnnotation.text)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

void Page::_slow_mutable_property() {
  property_ = ::google::protobuf::Arena::CreateMessage< ::google::cloud::vision::v1::TextAnnotation_TextProperty >(
      GetArenaNoVirtual());
}
::google::cloud::vision::v1::TextAnnotation_TextProperty* Page::_slow_release_property() {
  if (property_ == NULL) {
    return NULL;
  } else {
    ::google::cloud::vision::v1::TextAnnotation_TextProperty* temp = new ::google::cloud::vision::v1::TextAnnotation_TextProperty(*property_);
    property_ = NULL;
    return temp;
  }
}
::google::cloud::vision::v1::TextAnnotation_TextProperty* Page::unsafe_arena_release_property() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.vision.v1.Page.property)
  
  ::google::cloud::vision::v1::TextAnnotation_TextProperty* temp = property_;
  property_ = NULL;
  return temp;
}
void Page::_slow_set_allocated_property(
    ::google::protobuf::Arena* message_arena, ::google::cloud::vision::v1::TextAnnotation_TextProperty** property) {
    if (message_arena != NULL && 
        ::google::protobuf::Arena::GetArena(*property) == NULL) {
      message_arena->Own(*property);
    } else if (message_arena !=
               ::google::protobuf::Arena::GetArena(*property)) {
      ::google::cloud::vision::v1::TextAnnotation_TextProperty* new_property = 
            ::google::protobuf::Arena::CreateMessage< ::google::cloud::vision::v1::TextAnnotation_TextProperty >(
            message_arena);
      new_property->CopyFrom(**property);
      *property = new_property;
    }
}
void Page::unsafe_arena_set_allocated_property(
    ::google::cloud::vision::v1::TextAnnotation_TextProperty* property) {
  if (GetArenaNoVirtual() == NULL) {
    delete property_;
  }
  property_ = property;
  if (property) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.vision.v1.Page.property)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Page::kPropertyFieldNumber;
const int Page::kWidthFieldNumber;
const int Page::kHeightFieldNumber;
const int Page::kBlocksFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Page::Page()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_google_2fcloud_2fvision_2fv1_2ftext_5fannotation_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.vision.v1.Page)
}
Page::Page(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  blocks_(arena) {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_google_2fcloud_2fvision_2fv1_2ftext_5fannotation_2eproto::InitDefaults();
#endif  // GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.cloud.vision.v1.Page)
}
Page::Page(const Page& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      blocks_(from.blocks_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_property()) {
    property_ = new ::google::cloud::vision::v1::TextAnnotation_TextProperty(*from.property_);
  } else {
    property_ = NULL;
  }
  ::memcpy(&width_, &from.width_,
    reinterpret_cast<char*>(&height_) -
    reinterpret_cast<char*>(&width_) + sizeof(height_));
  // @@protoc_insertion_point(copy_constructor:google.cloud.vision.v1.Page)
}

void Page::SharedCtor() {
  ::memset(&property_, 0, reinterpret_cast<char*>(&height_) -
    reinterpret_cast<char*>(&property_) + sizeof(height_));
  _cached_size_ = 0;
}

Page::~Page() {
  // @@protoc_insertion_point(destructor:google.cloud.vision.v1.Page)
  SharedDtor();
}

void Page::SharedDtor() {
  ::google::protobuf::Arena* arena = GetArenaNoVirtual();
  if (arena != NULL) {
    return;
  }

  if (this != internal_default_instance()) {
    delete property_;
  }
}

void Page::ArenaDtor(void* object) {
  Page* _this = reinterpret_cast< Page* >(object);
  (void)_this;
}
void Page::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void Page::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Page::descriptor() {
  protobuf_google_2fcloud_2fvision_2fv1_2ftext_5fannotation_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fcloud_2fvision_2fv1_2ftext_5fannotation_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Page& Page::default_instance() {
  protobuf_google_2fcloud_2fvision_2fv1_2ftext_5fannotation_2eproto::InitDefaults();
  return *internal_default_instance();
}

Page* Page::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<Page>(arena);
}

void Page::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.vision.v1.Page)
  blocks_.Clear();
  if (GetArenaNoVirtual() == NULL && property_ != NULL) {
    delete property_;
  }
  property_ = NULL;
  ::memset(&width_, 0, reinterpret_cast<char*>(&height_) -
    reinterpret_cast<char*>(&width_) + sizeof(height_));
}

bool Page::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.vision.v1.Page)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.cloud.vision.v1.TextAnnotation.TextProperty property = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_property()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 width = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &width_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 height = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &height_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.cloud.vision.v1.Block blocks = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_blocks()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.vision.v1.Page)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.vision.v1.Page)
  return false;
#undef DO_
}

void Page::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.vision.v1.Page)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.cloud.vision.v1.TextAnnotation.TextProperty property = 1;
  if (this->has_property()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->property_, output);
  }

  // int32 width = 2;
  if (this->width() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->width(), output);
  }

  // int32 height = 3;
  if (this->height() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->height(), output);
  }

  // repeated .google.cloud.vision.v1.Block blocks = 4;
  for (unsigned int i = 0, n = this->blocks_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->blocks(i), output);
  }

  // @@protoc_insertion_point(serialize_end:google.cloud.vision.v1.Page)
}

::google::protobuf::uint8* Page::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.vision.v1.Page)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.cloud.vision.v1.TextAnnotation.TextProperty property = 1;
  if (this->has_property()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->property_, deterministic, target);
  }

  // int32 width = 2;
  if (this->width() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->width(), target);
  }

  // int32 height = 3;
  if (this->height() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->height(), target);
  }

  // repeated .google.cloud.vision.v1.Block blocks = 4;
  for (unsigned int i = 0, n = this->blocks_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, this->blocks(i), deterministic, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.vision.v1.Page)
  return target;
}

size_t Page::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.vision.v1.Page)
  size_t total_size = 0;

  // repeated .google.cloud.vision.v1.Block blocks = 4;
  {
    unsigned int count = this->blocks_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->blocks(i));
    }
  }

  // .google.cloud.vision.v1.TextAnnotation.TextProperty property = 1;
  if (this->has_property()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->property_);
  }

  // int32 width = 2;
  if (this->width() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->width());
  }

  // int32 height = 3;
  if (this->height() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->height());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Page::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.vision.v1.Page)
  GOOGLE_DCHECK_NE(&from, this);
  const Page* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Page>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.vision.v1.Page)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.vision.v1.Page)
    MergeFrom(*source);
  }
}

void Page::MergeFrom(const Page& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.vision.v1.Page)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  blocks_.MergeFrom(from.blocks_);
  if (from.has_property()) {
    mutable_property()->::google::cloud::vision::v1::TextAnnotation_TextProperty::MergeFrom(from.property());
  }
  if (from.width() != 0) {
    set_width(from.width());
  }
  if (from.height() != 0) {
    set_height(from.height());
  }
}

void Page::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.vision.v1.Page)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Page::CopyFrom(const Page& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.vision.v1.Page)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Page::IsInitialized() const {
  return true;
}

void Page::Swap(Page* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    Page* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void Page::UnsafeArenaSwap(Page* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void Page::InternalSwap(Page* other) {
  blocks_.InternalSwap(&other->blocks_);
  std::swap(property_, other->property_);
  std::swap(width_, other->width_);
  std::swap(height_, other->height_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Page::GetMetadata() const {
  protobuf_google_2fcloud_2fvision_2fv1_2ftext_5fannotation_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fcloud_2fvision_2fv1_2ftext_5fannotation_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Page

// .google.cloud.vision.v1.TextAnnotation.TextProperty property = 1;
bool Page::has_property() const {
  return this != internal_default_instance() && property_ != NULL;
}
void Page::clear_property() {
  if (GetArenaNoVirtual() == NULL && property_ != NULL) delete property_;
  property_ = NULL;
}
const ::google::cloud::vision::v1::TextAnnotation_TextProperty& Page::property() const {
  // @@protoc_insertion_point(field_get:google.cloud.vision.v1.Page.property)
  return property_ != NULL ? *property_
                         : *::google::cloud::vision::v1::TextAnnotation_TextProperty::internal_default_instance();
}
::google::cloud::vision::v1::TextAnnotation_TextProperty* Page::mutable_property() {
  
  if (property_ == NULL) {
    _slow_mutable_property();
  }
  // @@protoc_insertion_point(field_mutable:google.cloud.vision.v1.Page.property)
  return property_;
}
::google::cloud::vision::v1::TextAnnotation_TextProperty* Page::release_property() {
  // @@protoc_insertion_point(field_release:google.cloud.vision.v1.Page.property)
  
  if (GetArenaNoVirtual() != NULL) {
    return _slow_release_property();
  } else {
    ::google::cloud::vision::v1::TextAnnotation_TextProperty* temp = property_;
    property_ = NULL;
    return temp;
  }
}
 void Page::set_allocated_property(::google::cloud::vision::v1::TextAnnotation_TextProperty* property) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete property_;
  }
  if (property != NULL) {
    _slow_set_allocated_property(message_arena, &property);
  }
  property_ = property;
  if (property) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.cloud.vision.v1.Page.property)
}

// int32 width = 2;
void Page::clear_width() {
  width_ = 0;
}
::google::protobuf::int32 Page::width() const {
  // @@protoc_insertion_point(field_get:google.cloud.vision.v1.Page.width)
  return width_;
}
void Page::set_width(::google::protobuf::int32 value) {
  
  width_ = value;
  // @@protoc_insertion_point(field_set:google.cloud.vision.v1.Page.width)
}

// int32 height = 3;
void Page::clear_height() {
  height_ = 0;
}
::google::protobuf::int32 Page::height() const {
  // @@protoc_insertion_point(field_get:google.cloud.vision.v1.Page.height)
  return height_;
}
void Page::set_height(::google::protobuf::int32 value) {
  
  height_ = value;
  // @@protoc_insertion_point(field_set:google.cloud.vision.v1.Page.height)
}

// repeated .google.cloud.vision.v1.Block blocks = 4;
int Page::blocks_size() const {
  return blocks_.size();
}
void Page::clear_blocks() {
  blocks_.Clear();
}
const ::google::cloud::vision::v1::Block& Page::blocks(int index) const {
  // @@protoc_insertion_point(field_get:google.cloud.vision.v1.Page.blocks)
  return blocks_.Get(index);
}
::google::cloud::vision::v1::Block* Page::mutable_blocks(int index) {
  // @@protoc_insertion_point(field_mutable:google.cloud.vision.v1.Page.blocks)
  return blocks_.Mutable(index);
}
::google::cloud::vision::v1::Block* Page::add_blocks() {
  // @@protoc_insertion_point(field_add:google.cloud.vision.v1.Page.blocks)
  return blocks_.Add();
}
::google::protobuf::RepeatedPtrField< ::google::cloud::vision::v1::Block >*
Page::mutable_blocks() {
  // @@protoc_insertion_point(field_mutable_list:google.cloud.vision.v1.Page.blocks)
  return &blocks_;
}
const ::google::protobuf::RepeatedPtrField< ::google::cloud::vision::v1::Block >&
Page::blocks() const {
  // @@protoc_insertion_point(field_list:google.cloud.vision.v1.Page.blocks)
  return blocks_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

void Block::_slow_mutable_property() {
  property_ = ::google::protobuf::Arena::CreateMessage< ::google::cloud::vision::v1::TextAnnotation_TextProperty >(
      GetArenaNoVirtual());
}
::google::cloud::vision::v1::TextAnnotation_TextProperty* Block::_slow_release_property() {
  if (property_ == NULL) {
    return NULL;
  } else {
    ::google::cloud::vision::v1::TextAnnotation_TextProperty* temp = new ::google::cloud::vision::v1::TextAnnotation_TextProperty(*property_);
    property_ = NULL;
    return temp;
  }
}
::google::cloud::vision::v1::TextAnnotation_TextProperty* Block::unsafe_arena_release_property() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.vision.v1.Block.property)
  
  ::google::cloud::vision::v1::TextAnnotation_TextProperty* temp = property_;
  property_ = NULL;
  return temp;
}
void Block::_slow_set_allocated_property(
    ::google::protobuf::Arena* message_arena, ::google::cloud::vision::v1::TextAnnotation_TextProperty** property) {
    if (message_arena != NULL && 
        ::google::protobuf::Arena::GetArena(*property) == NULL) {
      message_arena->Own(*property);
    } else if (message_arena !=
               ::google::protobuf::Arena::GetArena(*property)) {
      ::google::cloud::vision::v1::TextAnnotation_TextProperty* new_property = 
            ::google::protobuf::Arena::CreateMessage< ::google::cloud::vision::v1::TextAnnotation_TextProperty >(
            message_arena);
      new_property->CopyFrom(**property);
      *property = new_property;
    }
}
void Block::unsafe_arena_set_allocated_property(
    ::google::cloud::vision::v1::TextAnnotation_TextProperty* property) {
  if (GetArenaNoVirtual() == NULL) {
    delete property_;
  }
  property_ = property;
  if (property) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.vision.v1.Block.property)
}
void Block::_slow_mutable_bounding_box() {
  bounding_box_ = ::google::protobuf::Arena::CreateMessage< ::google::cloud::vision::v1::BoundingPoly >(
      GetArenaNoVirtual());
}
::google::cloud::vision::v1::BoundingPoly* Block::_slow_release_bounding_box() {
  if (bounding_box_ == NULL) {
    return NULL;
  } else {
    ::google::cloud::vision::v1::BoundingPoly* temp = new ::google::cloud::vision::v1::BoundingPoly(*bounding_box_);
    bounding_box_ = NULL;
    return temp;
  }
}
::google::cloud::vision::v1::BoundingPoly* Block::unsafe_arena_release_bounding_box() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.vision.v1.Block.bounding_box)
  
  ::google::cloud::vision::v1::BoundingPoly* temp = bounding_box_;
  bounding_box_ = NULL;
  return temp;
}
void Block::_slow_set_allocated_bounding_box(
    ::google::protobuf::Arena* message_arena, ::google::cloud::vision::v1::BoundingPoly** bounding_box) {
    if (message_arena != NULL && 
        ::google::protobuf::Arena::GetArena(*bounding_box) == NULL) {
      message_arena->Own(*bounding_box);
    } else if (message_arena !=
               ::google::protobuf::Arena::GetArena(*bounding_box)) {
      ::google::cloud::vision::v1::BoundingPoly* new_bounding_box = 
            ::google::protobuf::Arena::CreateMessage< ::google::cloud::vision::v1::BoundingPoly >(
            message_arena);
      new_bounding_box->CopyFrom(**bounding_box);
      *bounding_box = new_bounding_box;
    }
}
void Block::unsafe_arena_set_allocated_bounding_box(
    ::google::cloud::vision::v1::BoundingPoly* bounding_box) {
  if (GetArenaNoVirtual() == NULL) {
    delete bounding_box_;
  }
  bounding_box_ = bounding_box;
  if (bounding_box) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.vision.v1.Block.bounding_box)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Block::kPropertyFieldNumber;
const int Block::kBoundingBoxFieldNumber;
const int Block::kParagraphsFieldNumber;
const int Block::kBlockTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Block::Block()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_google_2fcloud_2fvision_2fv1_2ftext_5fannotation_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.vision.v1.Block)
}
Block::Block(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  paragraphs_(arena) {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_google_2fcloud_2fvision_2fv1_2ftext_5fannotation_2eproto::InitDefaults();
#endif  // GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.cloud.vision.v1.Block)
}
Block::Block(const Block& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      paragraphs_(from.paragraphs_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_property()) {
    property_ = new ::google::cloud::vision::v1::TextAnnotation_TextProperty(*from.property_);
  } else {
    property_ = NULL;
  }
  if (from.has_bounding_box()) {
    bounding_box_ = new ::google::cloud::vision::v1::BoundingPoly(*from.bounding_box_);
  } else {
    bounding_box_ = NULL;
  }
  block_type_ = from.block_type_;
  // @@protoc_insertion_point(copy_constructor:google.cloud.vision.v1.Block)
}

void Block::SharedCtor() {
  ::memset(&property_, 0, reinterpret_cast<char*>(&block_type_) -
    reinterpret_cast<char*>(&property_) + sizeof(block_type_));
  _cached_size_ = 0;
}

Block::~Block() {
  // @@protoc_insertion_point(destructor:google.cloud.vision.v1.Block)
  SharedDtor();
}

void Block::SharedDtor() {
  ::google::protobuf::Arena* arena = GetArenaNoVirtual();
  if (arena != NULL) {
    return;
  }

  if (this != internal_default_instance()) {
    delete property_;
  }
  if (this != internal_default_instance()) {
    delete bounding_box_;
  }
}

void Block::ArenaDtor(void* object) {
  Block* _this = reinterpret_cast< Block* >(object);
  (void)_this;
}
void Block::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void Block::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Block::descriptor() {
  protobuf_google_2fcloud_2fvision_2fv1_2ftext_5fannotation_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fcloud_2fvision_2fv1_2ftext_5fannotation_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Block& Block::default_instance() {
  protobuf_google_2fcloud_2fvision_2fv1_2ftext_5fannotation_2eproto::InitDefaults();
  return *internal_default_instance();
}

Block* Block::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<Block>(arena);
}

void Block::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.vision.v1.Block)
  paragraphs_.Clear();
  if (GetArenaNoVirtual() == NULL && property_ != NULL) {
    delete property_;
  }
  property_ = NULL;
  if (GetArenaNoVirtual() == NULL && bounding_box_ != NULL) {
    delete bounding_box_;
  }
  bounding_box_ = NULL;
  block_type_ = 0;
}

bool Block::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.vision.v1.Block)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.cloud.vision.v1.TextAnnotation.TextProperty property = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_property()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.cloud.vision.v1.BoundingPoly bounding_box = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_bounding_box()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.cloud.vision.v1.Paragraph paragraphs = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_paragraphs()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.cloud.vision.v1.Block.BlockType block_type = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_block_type(static_cast< ::google::cloud::vision::v1::Block_BlockType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.vision.v1.Block)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.vision.v1.Block)
  return false;
#undef DO_
}

void Block::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.vision.v1.Block)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.cloud.vision.v1.TextAnnotation.TextProperty property = 1;
  if (this->has_property()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->property_, output);
  }

  // .google.cloud.vision.v1.BoundingPoly bounding_box = 2;
  if (this->has_bounding_box()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->bounding_box_, output);
  }

  // repeated .google.cloud.vision.v1.Paragraph paragraphs = 3;
  for (unsigned int i = 0, n = this->paragraphs_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->paragraphs(i), output);
  }

  // .google.cloud.vision.v1.Block.BlockType block_type = 4;
  if (this->block_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->block_type(), output);
  }

  // @@protoc_insertion_point(serialize_end:google.cloud.vision.v1.Block)
}

::google::protobuf::uint8* Block::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.vision.v1.Block)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.cloud.vision.v1.TextAnnotation.TextProperty property = 1;
  if (this->has_property()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->property_, deterministic, target);
  }

  // .google.cloud.vision.v1.BoundingPoly bounding_box = 2;
  if (this->has_bounding_box()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->bounding_box_, deterministic, target);
  }

  // repeated .google.cloud.vision.v1.Paragraph paragraphs = 3;
  for (unsigned int i = 0, n = this->paragraphs_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->paragraphs(i), deterministic, target);
  }

  // .google.cloud.vision.v1.Block.BlockType block_type = 4;
  if (this->block_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->block_type(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.vision.v1.Block)
  return target;
}

size_t Block::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.vision.v1.Block)
  size_t total_size = 0;

  // repeated .google.cloud.vision.v1.Paragraph paragraphs = 3;
  {
    unsigned int count = this->paragraphs_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->paragraphs(i));
    }
  }

  // .google.cloud.vision.v1.TextAnnotation.TextProperty property = 1;
  if (this->has_property()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->property_);
  }

  // .google.cloud.vision.v1.BoundingPoly bounding_box = 2;
  if (this->has_bounding_box()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->bounding_box_);
  }

  // .google.cloud.vision.v1.Block.BlockType block_type = 4;
  if (this->block_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->block_type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Block::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.vision.v1.Block)
  GOOGLE_DCHECK_NE(&from, this);
  const Block* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Block>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.vision.v1.Block)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.vision.v1.Block)
    MergeFrom(*source);
  }
}

void Block::MergeFrom(const Block& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.vision.v1.Block)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  paragraphs_.MergeFrom(from.paragraphs_);
  if (from.has_property()) {
    mutable_property()->::google::cloud::vision::v1::TextAnnotation_TextProperty::MergeFrom(from.property());
  }
  if (from.has_bounding_box()) {
    mutable_bounding_box()->::google::cloud::vision::v1::BoundingPoly::MergeFrom(from.bounding_box());
  }
  if (from.block_type() != 0) {
    set_block_type(from.block_type());
  }
}

void Block::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.vision.v1.Block)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Block::CopyFrom(const Block& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.vision.v1.Block)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Block::IsInitialized() const {
  return true;
}

void Block::Swap(Block* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    Block* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void Block::UnsafeArenaSwap(Block* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void Block::InternalSwap(Block* other) {
  paragraphs_.InternalSwap(&other->paragraphs_);
  std::swap(property_, other->property_);
  std::swap(bounding_box_, other->bounding_box_);
  std::swap(block_type_, other->block_type_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Block::GetMetadata() const {
  protobuf_google_2fcloud_2fvision_2fv1_2ftext_5fannotation_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fcloud_2fvision_2fv1_2ftext_5fannotation_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Block

// .google.cloud.vision.v1.TextAnnotation.TextProperty property = 1;
bool Block::has_property() const {
  return this != internal_default_instance() && property_ != NULL;
}
void Block::clear_property() {
  if (GetArenaNoVirtual() == NULL && property_ != NULL) delete property_;
  property_ = NULL;
}
const ::google::cloud::vision::v1::TextAnnotation_TextProperty& Block::property() const {
  // @@protoc_insertion_point(field_get:google.cloud.vision.v1.Block.property)
  return property_ != NULL ? *property_
                         : *::google::cloud::vision::v1::TextAnnotation_TextProperty::internal_default_instance();
}
::google::cloud::vision::v1::TextAnnotation_TextProperty* Block::mutable_property() {
  
  if (property_ == NULL) {
    _slow_mutable_property();
  }
  // @@protoc_insertion_point(field_mutable:google.cloud.vision.v1.Block.property)
  return property_;
}
::google::cloud::vision::v1::TextAnnotation_TextProperty* Block::release_property() {
  // @@protoc_insertion_point(field_release:google.cloud.vision.v1.Block.property)
  
  if (GetArenaNoVirtual() != NULL) {
    return _slow_release_property();
  } else {
    ::google::cloud::vision::v1::TextAnnotation_TextProperty* temp = property_;
    property_ = NULL;
    return temp;
  }
}
 void Block::set_allocated_property(::google::cloud::vision::v1::TextAnnotation_TextProperty* property) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete property_;
  }
  if (property != NULL) {
    _slow_set_allocated_property(message_arena, &property);
  }
  property_ = property;
  if (property) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.cloud.vision.v1.Block.property)
}

// .google.cloud.vision.v1.BoundingPoly bounding_box = 2;
bool Block::has_bounding_box() const {
  return this != internal_default_instance() && bounding_box_ != NULL;
}
void Block::clear_bounding_box() {
  if (GetArenaNoVirtual() == NULL && bounding_box_ != NULL) delete bounding_box_;
  bounding_box_ = NULL;
}
const ::google::cloud::vision::v1::BoundingPoly& Block::bounding_box() const {
  // @@protoc_insertion_point(field_get:google.cloud.vision.v1.Block.bounding_box)
  return bounding_box_ != NULL ? *bounding_box_
                         : *::google::cloud::vision::v1::BoundingPoly::internal_default_instance();
}
::google::cloud::vision::v1::BoundingPoly* Block::mutable_bounding_box() {
  
  if (bounding_box_ == NULL) {
    _slow_mutable_bounding_box();
  }
  // @@protoc_insertion_point(field_mutable:google.cloud.vision.v1.Block.bounding_box)
  return bounding_box_;
}
::google::cloud::vision::v1::BoundingPoly* Block::release_bounding_box() {
  // @@protoc_insertion_point(field_release:google.cloud.vision.v1.Block.bounding_box)
  
  if (GetArenaNoVirtual() != NULL) {
    return _slow_release_bounding_box();
  } else {
    ::google::cloud::vision::v1::BoundingPoly* temp = bounding_box_;
    bounding_box_ = NULL;
    return temp;
  }
}
 void Block::set_allocated_bounding_box(::google::cloud::vision::v1::BoundingPoly* bounding_box) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete bounding_box_;
  }
  if (bounding_box != NULL) {
    _slow_set_allocated_bounding_box(message_arena, &bounding_box);
  }
  bounding_box_ = bounding_box;
  if (bounding_box) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.cloud.vision.v1.Block.bounding_box)
}

// repeated .google.cloud.vision.v1.Paragraph paragraphs = 3;
int Block::paragraphs_size() const {
  return paragraphs_.size();
}
void Block::clear_paragraphs() {
  paragraphs_.Clear();
}
const ::google::cloud::vision::v1::Paragraph& Block::paragraphs(int index) const {
  // @@protoc_insertion_point(field_get:google.cloud.vision.v1.Block.paragraphs)
  return paragraphs_.Get(index);
}
::google::cloud::vision::v1::Paragraph* Block::mutable_paragraphs(int index) {
  // @@protoc_insertion_point(field_mutable:google.cloud.vision.v1.Block.paragraphs)
  return paragraphs_.Mutable(index);
}
::google::cloud::vision::v1::Paragraph* Block::add_paragraphs() {
  // @@protoc_insertion_point(field_add:google.cloud.vision.v1.Block.paragraphs)
  return paragraphs_.Add();
}
::google::protobuf::RepeatedPtrField< ::google::cloud::vision::v1::Paragraph >*
Block::mutable_paragraphs() {
  // @@protoc_insertion_point(field_mutable_list:google.cloud.vision.v1.Block.paragraphs)
  return &paragraphs_;
}
const ::google::protobuf::RepeatedPtrField< ::google::cloud::vision::v1::Paragraph >&
Block::paragraphs() const {
  // @@protoc_insertion_point(field_list:google.cloud.vision.v1.Block.paragraphs)
  return paragraphs_;
}

// .google.cloud.vision.v1.Block.BlockType block_type = 4;
void Block::clear_block_type() {
  block_type_ = 0;
}
::google::cloud::vision::v1::Block_BlockType Block::block_type() const {
  // @@protoc_insertion_point(field_get:google.cloud.vision.v1.Block.block_type)
  return static_cast< ::google::cloud::vision::v1::Block_BlockType >(block_type_);
}
void Block::set_block_type(::google::cloud::vision::v1::Block_BlockType value) {
  
  block_type_ = value;
  // @@protoc_insertion_point(field_set:google.cloud.vision.v1.Block.block_type)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

void Paragraph::_slow_mutable_property() {
  property_ = ::google::protobuf::Arena::CreateMessage< ::google::cloud::vision::v1::TextAnnotation_TextProperty >(
      GetArenaNoVirtual());
}
::google::cloud::vision::v1::TextAnnotation_TextProperty* Paragraph::_slow_release_property() {
  if (property_ == NULL) {
    return NULL;
  } else {
    ::google::cloud::vision::v1::TextAnnotation_TextProperty* temp = new ::google::cloud::vision::v1::TextAnnotation_TextProperty(*property_);
    property_ = NULL;
    return temp;
  }
}
::google::cloud::vision::v1::TextAnnotation_TextProperty* Paragraph::unsafe_arena_release_property() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.vision.v1.Paragraph.property)
  
  ::google::cloud::vision::v1::TextAnnotation_TextProperty* temp = property_;
  property_ = NULL;
  return temp;
}
void Paragraph::_slow_set_allocated_property(
    ::google::protobuf::Arena* message_arena, ::google::cloud::vision::v1::TextAnnotation_TextProperty** property) {
    if (message_arena != NULL && 
        ::google::protobuf::Arena::GetArena(*property) == NULL) {
      message_arena->Own(*property);
    } else if (message_arena !=
               ::google::protobuf::Arena::GetArena(*property)) {
      ::google::cloud::vision::v1::TextAnnotation_TextProperty* new_property = 
            ::google::protobuf::Arena::CreateMessage< ::google::cloud::vision::v1::TextAnnotation_TextProperty >(
            message_arena);
      new_property->CopyFrom(**property);
      *property = new_property;
    }
}
void Paragraph::unsafe_arena_set_allocated_property(
    ::google::cloud::vision::v1::TextAnnotation_TextProperty* property) {
  if (GetArenaNoVirtual() == NULL) {
    delete property_;
  }
  property_ = property;
  if (property) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.vision.v1.Paragraph.property)
}
void Paragraph::_slow_mutable_bounding_box() {
  bounding_box_ = ::google::protobuf::Arena::CreateMessage< ::google::cloud::vision::v1::BoundingPoly >(
      GetArenaNoVirtual());
}
::google::cloud::vision::v1::BoundingPoly* Paragraph::_slow_release_bounding_box() {
  if (bounding_box_ == NULL) {
    return NULL;
  } else {
    ::google::cloud::vision::v1::BoundingPoly* temp = new ::google::cloud::vision::v1::BoundingPoly(*bounding_box_);
    bounding_box_ = NULL;
    return temp;
  }
}
::google::cloud::vision::v1::BoundingPoly* Paragraph::unsafe_arena_release_bounding_box() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.vision.v1.Paragraph.bounding_box)
  
  ::google::cloud::vision::v1::BoundingPoly* temp = bounding_box_;
  bounding_box_ = NULL;
  return temp;
}
void Paragraph::_slow_set_allocated_bounding_box(
    ::google::protobuf::Arena* message_arena, ::google::cloud::vision::v1::BoundingPoly** bounding_box) {
    if (message_arena != NULL && 
        ::google::protobuf::Arena::GetArena(*bounding_box) == NULL) {
      message_arena->Own(*bounding_box);
    } else if (message_arena !=
               ::google::protobuf::Arena::GetArena(*bounding_box)) {
      ::google::cloud::vision::v1::BoundingPoly* new_bounding_box = 
            ::google::protobuf::Arena::CreateMessage< ::google::cloud::vision::v1::BoundingPoly >(
            message_arena);
      new_bounding_box->CopyFrom(**bounding_box);
      *bounding_box = new_bounding_box;
    }
}
void Paragraph::unsafe_arena_set_allocated_bounding_box(
    ::google::cloud::vision::v1::BoundingPoly* bounding_box) {
  if (GetArenaNoVirtual() == NULL) {
    delete bounding_box_;
  }
  bounding_box_ = bounding_box;
  if (bounding_box) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.vision.v1.Paragraph.bounding_box)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Paragraph::kPropertyFieldNumber;
const int Paragraph::kBoundingBoxFieldNumber;
const int Paragraph::kWordsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Paragraph::Paragraph()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_google_2fcloud_2fvision_2fv1_2ftext_5fannotation_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.vision.v1.Paragraph)
}
Paragraph::Paragraph(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  words_(arena) {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_google_2fcloud_2fvision_2fv1_2ftext_5fannotation_2eproto::InitDefaults();
#endif  // GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.cloud.vision.v1.Paragraph)
}
Paragraph::Paragraph(const Paragraph& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      words_(from.words_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_property()) {
    property_ = new ::google::cloud::vision::v1::TextAnnotation_TextProperty(*from.property_);
  } else {
    property_ = NULL;
  }
  if (from.has_bounding_box()) {
    bounding_box_ = new ::google::cloud::vision::v1::BoundingPoly(*from.bounding_box_);
  } else {
    bounding_box_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.cloud.vision.v1.Paragraph)
}

void Paragraph::SharedCtor() {
  ::memset(&property_, 0, reinterpret_cast<char*>(&bounding_box_) -
    reinterpret_cast<char*>(&property_) + sizeof(bounding_box_));
  _cached_size_ = 0;
}

Paragraph::~Paragraph() {
  // @@protoc_insertion_point(destructor:google.cloud.vision.v1.Paragraph)
  SharedDtor();
}

void Paragraph::SharedDtor() {
  ::google::protobuf::Arena* arena = GetArenaNoVirtual();
  if (arena != NULL) {
    return;
  }

  if (this != internal_default_instance()) {
    delete property_;
  }
  if (this != internal_default_instance()) {
    delete bounding_box_;
  }
}

void Paragraph::ArenaDtor(void* object) {
  Paragraph* _this = reinterpret_cast< Paragraph* >(object);
  (void)_this;
}
void Paragraph::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void Paragraph::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Paragraph::descriptor() {
  protobuf_google_2fcloud_2fvision_2fv1_2ftext_5fannotation_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fcloud_2fvision_2fv1_2ftext_5fannotation_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Paragraph& Paragraph::default_instance() {
  protobuf_google_2fcloud_2fvision_2fv1_2ftext_5fannotation_2eproto::InitDefaults();
  return *internal_default_instance();
}

Paragraph* Paragraph::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<Paragraph>(arena);
}

void Paragraph::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.vision.v1.Paragraph)
  words_.Clear();
  if (GetArenaNoVirtual() == NULL && property_ != NULL) {
    delete property_;
  }
  property_ = NULL;
  if (GetArenaNoVirtual() == NULL && bounding_box_ != NULL) {
    delete bounding_box_;
  }
  bounding_box_ = NULL;
}

bool Paragraph::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.vision.v1.Paragraph)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.cloud.vision.v1.TextAnnotation.TextProperty property = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_property()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.cloud.vision.v1.BoundingPoly bounding_box = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_bounding_box()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.cloud.vision.v1.Word words = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_words()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.vision.v1.Paragraph)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.vision.v1.Paragraph)
  return false;
#undef DO_
}

void Paragraph::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.vision.v1.Paragraph)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.cloud.vision.v1.TextAnnotation.TextProperty property = 1;
  if (this->has_property()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->property_, output);
  }

  // .google.cloud.vision.v1.BoundingPoly bounding_box = 2;
  if (this->has_bounding_box()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->bounding_box_, output);
  }

  // repeated .google.cloud.vision.v1.Word words = 3;
  for (unsigned int i = 0, n = this->words_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->words(i), output);
  }

  // @@protoc_insertion_point(serialize_end:google.cloud.vision.v1.Paragraph)
}

::google::protobuf::uint8* Paragraph::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.vision.v1.Paragraph)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.cloud.vision.v1.TextAnnotation.TextProperty property = 1;
  if (this->has_property()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->property_, deterministic, target);
  }

  // .google.cloud.vision.v1.BoundingPoly bounding_box = 2;
  if (this->has_bounding_box()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->bounding_box_, deterministic, target);
  }

  // repeated .google.cloud.vision.v1.Word words = 3;
  for (unsigned int i = 0, n = this->words_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->words(i), deterministic, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.vision.v1.Paragraph)
  return target;
}

size_t Paragraph::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.vision.v1.Paragraph)
  size_t total_size = 0;

  // repeated .google.cloud.vision.v1.Word words = 3;
  {
    unsigned int count = this->words_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->words(i));
    }
  }

  // .google.cloud.vision.v1.TextAnnotation.TextProperty property = 1;
  if (this->has_property()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->property_);
  }

  // .google.cloud.vision.v1.BoundingPoly bounding_box = 2;
  if (this->has_bounding_box()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->bounding_box_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Paragraph::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.vision.v1.Paragraph)
  GOOGLE_DCHECK_NE(&from, this);
  const Paragraph* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Paragraph>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.vision.v1.Paragraph)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.vision.v1.Paragraph)
    MergeFrom(*source);
  }
}

void Paragraph::MergeFrom(const Paragraph& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.vision.v1.Paragraph)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  words_.MergeFrom(from.words_);
  if (from.has_property()) {
    mutable_property()->::google::cloud::vision::v1::TextAnnotation_TextProperty::MergeFrom(from.property());
  }
  if (from.has_bounding_box()) {
    mutable_bounding_box()->::google::cloud::vision::v1::BoundingPoly::MergeFrom(from.bounding_box());
  }
}

void Paragraph::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.vision.v1.Paragraph)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Paragraph::CopyFrom(const Paragraph& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.vision.v1.Paragraph)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Paragraph::IsInitialized() const {
  return true;
}

void Paragraph::Swap(Paragraph* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    Paragraph* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void Paragraph::UnsafeArenaSwap(Paragraph* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void Paragraph::InternalSwap(Paragraph* other) {
  words_.InternalSwap(&other->words_);
  std::swap(property_, other->property_);
  std::swap(bounding_box_, other->bounding_box_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Paragraph::GetMetadata() const {
  protobuf_google_2fcloud_2fvision_2fv1_2ftext_5fannotation_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fcloud_2fvision_2fv1_2ftext_5fannotation_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Paragraph

// .google.cloud.vision.v1.TextAnnotation.TextProperty property = 1;
bool Paragraph::has_property() const {
  return this != internal_default_instance() && property_ != NULL;
}
void Paragraph::clear_property() {
  if (GetArenaNoVirtual() == NULL && property_ != NULL) delete property_;
  property_ = NULL;
}
const ::google::cloud::vision::v1::TextAnnotation_TextProperty& Paragraph::property() const {
  // @@protoc_insertion_point(field_get:google.cloud.vision.v1.Paragraph.property)
  return property_ != NULL ? *property_
                         : *::google::cloud::vision::v1::TextAnnotation_TextProperty::internal_default_instance();
}
::google::cloud::vision::v1::TextAnnotation_TextProperty* Paragraph::mutable_property() {
  
  if (property_ == NULL) {
    _slow_mutable_property();
  }
  // @@protoc_insertion_point(field_mutable:google.cloud.vision.v1.Paragraph.property)
  return property_;
}
::google::cloud::vision::v1::TextAnnotation_TextProperty* Paragraph::release_property() {
  // @@protoc_insertion_point(field_release:google.cloud.vision.v1.Paragraph.property)
  
  if (GetArenaNoVirtual() != NULL) {
    return _slow_release_property();
  } else {
    ::google::cloud::vision::v1::TextAnnotation_TextProperty* temp = property_;
    property_ = NULL;
    return temp;
  }
}
 void Paragraph::set_allocated_property(::google::cloud::vision::v1::TextAnnotation_TextProperty* property) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete property_;
  }
  if (property != NULL) {
    _slow_set_allocated_property(message_arena, &property);
  }
  property_ = property;
  if (property) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.cloud.vision.v1.Paragraph.property)
}

// .google.cloud.vision.v1.BoundingPoly bounding_box = 2;
bool Paragraph::has_bounding_box() const {
  return this != internal_default_instance() && bounding_box_ != NULL;
}
void Paragraph::clear_bounding_box() {
  if (GetArenaNoVirtual() == NULL && bounding_box_ != NULL) delete bounding_box_;
  bounding_box_ = NULL;
}
const ::google::cloud::vision::v1::BoundingPoly& Paragraph::bounding_box() const {
  // @@protoc_insertion_point(field_get:google.cloud.vision.v1.Paragraph.bounding_box)
  return bounding_box_ != NULL ? *bounding_box_
                         : *::google::cloud::vision::v1::BoundingPoly::internal_default_instance();
}
::google::cloud::vision::v1::BoundingPoly* Paragraph::mutable_bounding_box() {
  
  if (bounding_box_ == NULL) {
    _slow_mutable_bounding_box();
  }
  // @@protoc_insertion_point(field_mutable:google.cloud.vision.v1.Paragraph.bounding_box)
  return bounding_box_;
}
::google::cloud::vision::v1::BoundingPoly* Paragraph::release_bounding_box() {
  // @@protoc_insertion_point(field_release:google.cloud.vision.v1.Paragraph.bounding_box)
  
  if (GetArenaNoVirtual() != NULL) {
    return _slow_release_bounding_box();
  } else {
    ::google::cloud::vision::v1::BoundingPoly* temp = bounding_box_;
    bounding_box_ = NULL;
    return temp;
  }
}
 void Paragraph::set_allocated_bounding_box(::google::cloud::vision::v1::BoundingPoly* bounding_box) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete bounding_box_;
  }
  if (bounding_box != NULL) {
    _slow_set_allocated_bounding_box(message_arena, &bounding_box);
  }
  bounding_box_ = bounding_box;
  if (bounding_box) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.cloud.vision.v1.Paragraph.bounding_box)
}

// repeated .google.cloud.vision.v1.Word words = 3;
int Paragraph::words_size() const {
  return words_.size();
}
void Paragraph::clear_words() {
  words_.Clear();
}
const ::google::cloud::vision::v1::Word& Paragraph::words(int index) const {
  // @@protoc_insertion_point(field_get:google.cloud.vision.v1.Paragraph.words)
  return words_.Get(index);
}
::google::cloud::vision::v1::Word* Paragraph::mutable_words(int index) {
  // @@protoc_insertion_point(field_mutable:google.cloud.vision.v1.Paragraph.words)
  return words_.Mutable(index);
}
::google::cloud::vision::v1::Word* Paragraph::add_words() {
  // @@protoc_insertion_point(field_add:google.cloud.vision.v1.Paragraph.words)
  return words_.Add();
}
::google::protobuf::RepeatedPtrField< ::google::cloud::vision::v1::Word >*
Paragraph::mutable_words() {
  // @@protoc_insertion_point(field_mutable_list:google.cloud.vision.v1.Paragraph.words)
  return &words_;
}
const ::google::protobuf::RepeatedPtrField< ::google::cloud::vision::v1::Word >&
Paragraph::words() const {
  // @@protoc_insertion_point(field_list:google.cloud.vision.v1.Paragraph.words)
  return words_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

void Word::_slow_mutable_property() {
  property_ = ::google::protobuf::Arena::CreateMessage< ::google::cloud::vision::v1::TextAnnotation_TextProperty >(
      GetArenaNoVirtual());
}
::google::cloud::vision::v1::TextAnnotation_TextProperty* Word::_slow_release_property() {
  if (property_ == NULL) {
    return NULL;
  } else {
    ::google::cloud::vision::v1::TextAnnotation_TextProperty* temp = new ::google::cloud::vision::v1::TextAnnotation_TextProperty(*property_);
    property_ = NULL;
    return temp;
  }
}
::google::cloud::vision::v1::TextAnnotation_TextProperty* Word::unsafe_arena_release_property() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.vision.v1.Word.property)
  
  ::google::cloud::vision::v1::TextAnnotation_TextProperty* temp = property_;
  property_ = NULL;
  return temp;
}
void Word::_slow_set_allocated_property(
    ::google::protobuf::Arena* message_arena, ::google::cloud::vision::v1::TextAnnotation_TextProperty** property) {
    if (message_arena != NULL && 
        ::google::protobuf::Arena::GetArena(*property) == NULL) {
      message_arena->Own(*property);
    } else if (message_arena !=
               ::google::protobuf::Arena::GetArena(*property)) {
      ::google::cloud::vision::v1::TextAnnotation_TextProperty* new_property = 
            ::google::protobuf::Arena::CreateMessage< ::google::cloud::vision::v1::TextAnnotation_TextProperty >(
            message_arena);
      new_property->CopyFrom(**property);
      *property = new_property;
    }
}
void Word::unsafe_arena_set_allocated_property(
    ::google::cloud::vision::v1::TextAnnotation_TextProperty* property) {
  if (GetArenaNoVirtual() == NULL) {
    delete property_;
  }
  property_ = property;
  if (property) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.vision.v1.Word.property)
}
void Word::_slow_mutable_bounding_box() {
  bounding_box_ = ::google::protobuf::Arena::CreateMessage< ::google::cloud::vision::v1::BoundingPoly >(
      GetArenaNoVirtual());
}
::google::cloud::vision::v1::BoundingPoly* Word::_slow_release_bounding_box() {
  if (bounding_box_ == NULL) {
    return NULL;
  } else {
    ::google::cloud::vision::v1::BoundingPoly* temp = new ::google::cloud::vision::v1::BoundingPoly(*bounding_box_);
    bounding_box_ = NULL;
    return temp;
  }
}
::google::cloud::vision::v1::BoundingPoly* Word::unsafe_arena_release_bounding_box() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.vision.v1.Word.bounding_box)
  
  ::google::cloud::vision::v1::BoundingPoly* temp = bounding_box_;
  bounding_box_ = NULL;
  return temp;
}
void Word::_slow_set_allocated_bounding_box(
    ::google::protobuf::Arena* message_arena, ::google::cloud::vision::v1::BoundingPoly** bounding_box) {
    if (message_arena != NULL && 
        ::google::protobuf::Arena::GetArena(*bounding_box) == NULL) {
      message_arena->Own(*bounding_box);
    } else if (message_arena !=
               ::google::protobuf::Arena::GetArena(*bounding_box)) {
      ::google::cloud::vision::v1::BoundingPoly* new_bounding_box = 
            ::google::protobuf::Arena::CreateMessage< ::google::cloud::vision::v1::BoundingPoly >(
            message_arena);
      new_bounding_box->CopyFrom(**bounding_box);
      *bounding_box = new_bounding_box;
    }
}
void Word::unsafe_arena_set_allocated_bounding_box(
    ::google::cloud::vision::v1::BoundingPoly* bounding_box) {
  if (GetArenaNoVirtual() == NULL) {
    delete bounding_box_;
  }
  bounding_box_ = bounding_box;
  if (bounding_box) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.vision.v1.Word.bounding_box)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Word::kPropertyFieldNumber;
const int Word::kBoundingBoxFieldNumber;
const int Word::kSymbolsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Word::Word()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_google_2fcloud_2fvision_2fv1_2ftext_5fannotation_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.vision.v1.Word)
}
Word::Word(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  symbols_(arena) {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_google_2fcloud_2fvision_2fv1_2ftext_5fannotation_2eproto::InitDefaults();
#endif  // GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.cloud.vision.v1.Word)
}
Word::Word(const Word& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      symbols_(from.symbols_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_property()) {
    property_ = new ::google::cloud::vision::v1::TextAnnotation_TextProperty(*from.property_);
  } else {
    property_ = NULL;
  }
  if (from.has_bounding_box()) {
    bounding_box_ = new ::google::cloud::vision::v1::BoundingPoly(*from.bounding_box_);
  } else {
    bounding_box_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.cloud.vision.v1.Word)
}

void Word::SharedCtor() {
  ::memset(&property_, 0, reinterpret_cast<char*>(&bounding_box_) -
    reinterpret_cast<char*>(&property_) + sizeof(bounding_box_));
  _cached_size_ = 0;
}

Word::~Word() {
  // @@protoc_insertion_point(destructor:google.cloud.vision.v1.Word)
  SharedDtor();
}

void Word::SharedDtor() {
  ::google::protobuf::Arena* arena = GetArenaNoVirtual();
  if (arena != NULL) {
    return;
  }

  if (this != internal_default_instance()) {
    delete property_;
  }
  if (this != internal_default_instance()) {
    delete bounding_box_;
  }
}

void Word::ArenaDtor(void* object) {
  Word* _this = reinterpret_cast< Word* >(object);
  (void)_this;
}
void Word::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void Word::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Word::descriptor() {
  protobuf_google_2fcloud_2fvision_2fv1_2ftext_5fannotation_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fcloud_2fvision_2fv1_2ftext_5fannotation_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Word& Word::default_instance() {
  protobuf_google_2fcloud_2fvision_2fv1_2ftext_5fannotation_2eproto::InitDefaults();
  return *internal_default_instance();
}

Word* Word::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<Word>(arena);
}

void Word::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.vision.v1.Word)
  symbols_.Clear();
  if (GetArenaNoVirtual() == NULL && property_ != NULL) {
    delete property_;
  }
  property_ = NULL;
  if (GetArenaNoVirtual() == NULL && bounding_box_ != NULL) {
    delete bounding_box_;
  }
  bounding_box_ = NULL;
}

bool Word::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.vision.v1.Word)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.cloud.vision.v1.TextAnnotation.TextProperty property = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_property()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.cloud.vision.v1.BoundingPoly bounding_box = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_bounding_box()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.cloud.vision.v1.Symbol symbols = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_symbols()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.vision.v1.Word)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.vision.v1.Word)
  return false;
#undef DO_
}

void Word::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.vision.v1.Word)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.cloud.vision.v1.TextAnnotation.TextProperty property = 1;
  if (this->has_property()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->property_, output);
  }

  // .google.cloud.vision.v1.BoundingPoly bounding_box = 2;
  if (this->has_bounding_box()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->bounding_box_, output);
  }

  // repeated .google.cloud.vision.v1.Symbol symbols = 3;
  for (unsigned int i = 0, n = this->symbols_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->symbols(i), output);
  }

  // @@protoc_insertion_point(serialize_end:google.cloud.vision.v1.Word)
}

::google::protobuf::uint8* Word::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.vision.v1.Word)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.cloud.vision.v1.TextAnnotation.TextProperty property = 1;
  if (this->has_property()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->property_, deterministic, target);
  }

  // .google.cloud.vision.v1.BoundingPoly bounding_box = 2;
  if (this->has_bounding_box()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->bounding_box_, deterministic, target);
  }

  // repeated .google.cloud.vision.v1.Symbol symbols = 3;
  for (unsigned int i = 0, n = this->symbols_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->symbols(i), deterministic, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.vision.v1.Word)
  return target;
}

size_t Word::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.vision.v1.Word)
  size_t total_size = 0;

  // repeated .google.cloud.vision.v1.Symbol symbols = 3;
  {
    unsigned int count = this->symbols_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->symbols(i));
    }
  }

  // .google.cloud.vision.v1.TextAnnotation.TextProperty property = 1;
  if (this->has_property()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->property_);
  }

  // .google.cloud.vision.v1.BoundingPoly bounding_box = 2;
  if (this->has_bounding_box()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->bounding_box_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Word::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.vision.v1.Word)
  GOOGLE_DCHECK_NE(&from, this);
  const Word* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Word>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.vision.v1.Word)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.vision.v1.Word)
    MergeFrom(*source);
  }
}

void Word::MergeFrom(const Word& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.vision.v1.Word)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  symbols_.MergeFrom(from.symbols_);
  if (from.has_property()) {
    mutable_property()->::google::cloud::vision::v1::TextAnnotation_TextProperty::MergeFrom(from.property());
  }
  if (from.has_bounding_box()) {
    mutable_bounding_box()->::google::cloud::vision::v1::BoundingPoly::MergeFrom(from.bounding_box());
  }
}

void Word::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.vision.v1.Word)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Word::CopyFrom(const Word& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.vision.v1.Word)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Word::IsInitialized() const {
  return true;
}

void Word::Swap(Word* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    Word* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void Word::UnsafeArenaSwap(Word* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void Word::InternalSwap(Word* other) {
  symbols_.InternalSwap(&other->symbols_);
  std::swap(property_, other->property_);
  std::swap(bounding_box_, other->bounding_box_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Word::GetMetadata() const {
  protobuf_google_2fcloud_2fvision_2fv1_2ftext_5fannotation_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fcloud_2fvision_2fv1_2ftext_5fannotation_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Word

// .google.cloud.vision.v1.TextAnnotation.TextProperty property = 1;
bool Word::has_property() const {
  return this != internal_default_instance() && property_ != NULL;
}
void Word::clear_property() {
  if (GetArenaNoVirtual() == NULL && property_ != NULL) delete property_;
  property_ = NULL;
}
const ::google::cloud::vision::v1::TextAnnotation_TextProperty& Word::property() const {
  // @@protoc_insertion_point(field_get:google.cloud.vision.v1.Word.property)
  return property_ != NULL ? *property_
                         : *::google::cloud::vision::v1::TextAnnotation_TextProperty::internal_default_instance();
}
::google::cloud::vision::v1::TextAnnotation_TextProperty* Word::mutable_property() {
  
  if (property_ == NULL) {
    _slow_mutable_property();
  }
  // @@protoc_insertion_point(field_mutable:google.cloud.vision.v1.Word.property)
  return property_;
}
::google::cloud::vision::v1::TextAnnotation_TextProperty* Word::release_property() {
  // @@protoc_insertion_point(field_release:google.cloud.vision.v1.Word.property)
  
  if (GetArenaNoVirtual() != NULL) {
    return _slow_release_property();
  } else {
    ::google::cloud::vision::v1::TextAnnotation_TextProperty* temp = property_;
    property_ = NULL;
    return temp;
  }
}
 void Word::set_allocated_property(::google::cloud::vision::v1::TextAnnotation_TextProperty* property) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete property_;
  }
  if (property != NULL) {
    _slow_set_allocated_property(message_arena, &property);
  }
  property_ = property;
  if (property) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.cloud.vision.v1.Word.property)
}

// .google.cloud.vision.v1.BoundingPoly bounding_box = 2;
bool Word::has_bounding_box() const {
  return this != internal_default_instance() && bounding_box_ != NULL;
}
void Word::clear_bounding_box() {
  if (GetArenaNoVirtual() == NULL && bounding_box_ != NULL) delete bounding_box_;
  bounding_box_ = NULL;
}
const ::google::cloud::vision::v1::BoundingPoly& Word::bounding_box() const {
  // @@protoc_insertion_point(field_get:google.cloud.vision.v1.Word.bounding_box)
  return bounding_box_ != NULL ? *bounding_box_
                         : *::google::cloud::vision::v1::BoundingPoly::internal_default_instance();
}
::google::cloud::vision::v1::BoundingPoly* Word::mutable_bounding_box() {
  
  if (bounding_box_ == NULL) {
    _slow_mutable_bounding_box();
  }
  // @@protoc_insertion_point(field_mutable:google.cloud.vision.v1.Word.bounding_box)
  return bounding_box_;
}
::google::cloud::vision::v1::BoundingPoly* Word::release_bounding_box() {
  // @@protoc_insertion_point(field_release:google.cloud.vision.v1.Word.bounding_box)
  
  if (GetArenaNoVirtual() != NULL) {
    return _slow_release_bounding_box();
  } else {
    ::google::cloud::vision::v1::BoundingPoly* temp = bounding_box_;
    bounding_box_ = NULL;
    return temp;
  }
}
 void Word::set_allocated_bounding_box(::google::cloud::vision::v1::BoundingPoly* bounding_box) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete bounding_box_;
  }
  if (bounding_box != NULL) {
    _slow_set_allocated_bounding_box(message_arena, &bounding_box);
  }
  bounding_box_ = bounding_box;
  if (bounding_box) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.cloud.vision.v1.Word.bounding_box)
}

// repeated .google.cloud.vision.v1.Symbol symbols = 3;
int Word::symbols_size() const {
  return symbols_.size();
}
void Word::clear_symbols() {
  symbols_.Clear();
}
const ::google::cloud::vision::v1::Symbol& Word::symbols(int index) const {
  // @@protoc_insertion_point(field_get:google.cloud.vision.v1.Word.symbols)
  return symbols_.Get(index);
}
::google::cloud::vision::v1::Symbol* Word::mutable_symbols(int index) {
  // @@protoc_insertion_point(field_mutable:google.cloud.vision.v1.Word.symbols)
  return symbols_.Mutable(index);
}
::google::cloud::vision::v1::Symbol* Word::add_symbols() {
  // @@protoc_insertion_point(field_add:google.cloud.vision.v1.Word.symbols)
  return symbols_.Add();
}
::google::protobuf::RepeatedPtrField< ::google::cloud::vision::v1::Symbol >*
Word::mutable_symbols() {
  // @@protoc_insertion_point(field_mutable_list:google.cloud.vision.v1.Word.symbols)
  return &symbols_;
}
const ::google::protobuf::RepeatedPtrField< ::google::cloud::vision::v1::Symbol >&
Word::symbols() const {
  // @@protoc_insertion_point(field_list:google.cloud.vision.v1.Word.symbols)
  return symbols_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

void Symbol::_slow_mutable_property() {
  property_ = ::google::protobuf::Arena::CreateMessage< ::google::cloud::vision::v1::TextAnnotation_TextProperty >(
      GetArenaNoVirtual());
}
::google::cloud::vision::v1::TextAnnotation_TextProperty* Symbol::_slow_release_property() {
  if (property_ == NULL) {
    return NULL;
  } else {
    ::google::cloud::vision::v1::TextAnnotation_TextProperty* temp = new ::google::cloud::vision::v1::TextAnnotation_TextProperty(*property_);
    property_ = NULL;
    return temp;
  }
}
::google::cloud::vision::v1::TextAnnotation_TextProperty* Symbol::unsafe_arena_release_property() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.vision.v1.Symbol.property)
  
  ::google::cloud::vision::v1::TextAnnotation_TextProperty* temp = property_;
  property_ = NULL;
  return temp;
}
void Symbol::_slow_set_allocated_property(
    ::google::protobuf::Arena* message_arena, ::google::cloud::vision::v1::TextAnnotation_TextProperty** property) {
    if (message_arena != NULL && 
        ::google::protobuf::Arena::GetArena(*property) == NULL) {
      message_arena->Own(*property);
    } else if (message_arena !=
               ::google::protobuf::Arena::GetArena(*property)) {
      ::google::cloud::vision::v1::TextAnnotation_TextProperty* new_property = 
            ::google::protobuf::Arena::CreateMessage< ::google::cloud::vision::v1::TextAnnotation_TextProperty >(
            message_arena);
      new_property->CopyFrom(**property);
      *property = new_property;
    }
}
void Symbol::unsafe_arena_set_allocated_property(
    ::google::cloud::vision::v1::TextAnnotation_TextProperty* property) {
  if (GetArenaNoVirtual() == NULL) {
    delete property_;
  }
  property_ = property;
  if (property) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.vision.v1.Symbol.property)
}
void Symbol::_slow_mutable_bounding_box() {
  bounding_box_ = ::google::protobuf::Arena::CreateMessage< ::google::cloud::vision::v1::BoundingPoly >(
      GetArenaNoVirtual());
}
::google::cloud::vision::v1::BoundingPoly* Symbol::_slow_release_bounding_box() {
  if (bounding_box_ == NULL) {
    return NULL;
  } else {
    ::google::cloud::vision::v1::BoundingPoly* temp = new ::google::cloud::vision::v1::BoundingPoly(*bounding_box_);
    bounding_box_ = NULL;
    return temp;
  }
}
::google::cloud::vision::v1::BoundingPoly* Symbol::unsafe_arena_release_bounding_box() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.vision.v1.Symbol.bounding_box)
  
  ::google::cloud::vision::v1::BoundingPoly* temp = bounding_box_;
  bounding_box_ = NULL;
  return temp;
}
void Symbol::_slow_set_allocated_bounding_box(
    ::google::protobuf::Arena* message_arena, ::google::cloud::vision::v1::BoundingPoly** bounding_box) {
    if (message_arena != NULL && 
        ::google::protobuf::Arena::GetArena(*bounding_box) == NULL) {
      message_arena->Own(*bounding_box);
    } else if (message_arena !=
               ::google::protobuf::Arena::GetArena(*bounding_box)) {
      ::google::cloud::vision::v1::BoundingPoly* new_bounding_box = 
            ::google::protobuf::Arena::CreateMessage< ::google::cloud::vision::v1::BoundingPoly >(
            message_arena);
      new_bounding_box->CopyFrom(**bounding_box);
      *bounding_box = new_bounding_box;
    }
}
void Symbol::unsafe_arena_set_allocated_bounding_box(
    ::google::cloud::vision::v1::BoundingPoly* bounding_box) {
  if (GetArenaNoVirtual() == NULL) {
    delete bounding_box_;
  }
  bounding_box_ = bounding_box;
  if (bounding_box) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.vision.v1.Symbol.bounding_box)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Symbol::kPropertyFieldNumber;
const int Symbol::kBoundingBoxFieldNumber;
const int Symbol::kTextFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Symbol::Symbol()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_google_2fcloud_2fvision_2fv1_2ftext_5fannotation_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.vision.v1.Symbol)
}
Symbol::Symbol(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_google_2fcloud_2fvision_2fv1_2ftext_5fannotation_2eproto::InitDefaults();
#endif  // GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.cloud.vision.v1.Symbol)
}
Symbol::Symbol(const Symbol& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.text().size() > 0) {
    text_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.text(),
      GetArenaNoVirtual());
  }
  if (from.has_property()) {
    property_ = new ::google::cloud::vision::v1::TextAnnotation_TextProperty(*from.property_);
  } else {
    property_ = NULL;
  }
  if (from.has_bounding_box()) {
    bounding_box_ = new ::google::cloud::vision::v1::BoundingPoly(*from.bounding_box_);
  } else {
    bounding_box_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.cloud.vision.v1.Symbol)
}

void Symbol::SharedCtor() {
  text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&property_, 0, reinterpret_cast<char*>(&bounding_box_) -
    reinterpret_cast<char*>(&property_) + sizeof(bounding_box_));
  _cached_size_ = 0;
}

Symbol::~Symbol() {
  // @@protoc_insertion_point(destructor:google.cloud.vision.v1.Symbol)
  SharedDtor();
}

void Symbol::SharedDtor() {
  ::google::protobuf::Arena* arena = GetArenaNoVirtual();
  if (arena != NULL) {
    return;
  }

  text_.Destroy(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), arena);
  if (this != internal_default_instance()) {
    delete property_;
  }
  if (this != internal_default_instance()) {
    delete bounding_box_;
  }
}

void Symbol::ArenaDtor(void* object) {
  Symbol* _this = reinterpret_cast< Symbol* >(object);
  (void)_this;
}
void Symbol::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void Symbol::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Symbol::descriptor() {
  protobuf_google_2fcloud_2fvision_2fv1_2ftext_5fannotation_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fcloud_2fvision_2fv1_2ftext_5fannotation_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Symbol& Symbol::default_instance() {
  protobuf_google_2fcloud_2fvision_2fv1_2ftext_5fannotation_2eproto::InitDefaults();
  return *internal_default_instance();
}

Symbol* Symbol::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<Symbol>(arena);
}

void Symbol::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.vision.v1.Symbol)
  text_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  if (GetArenaNoVirtual() == NULL && property_ != NULL) {
    delete property_;
  }
  property_ = NULL;
  if (GetArenaNoVirtual() == NULL && bounding_box_ != NULL) {
    delete bounding_box_;
  }
  bounding_box_ = NULL;
}

bool Symbol::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.vision.v1.Symbol)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.cloud.vision.v1.TextAnnotation.TextProperty property = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_property()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.cloud.vision.v1.BoundingPoly bounding_box = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_bounding_box()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string text = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_text()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->text().data(), this->text().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.vision.v1.Symbol.text"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.vision.v1.Symbol)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.vision.v1.Symbol)
  return false;
#undef DO_
}

void Symbol::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.vision.v1.Symbol)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.cloud.vision.v1.TextAnnotation.TextProperty property = 1;
  if (this->has_property()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->property_, output);
  }

  // .google.cloud.vision.v1.BoundingPoly bounding_box = 2;
  if (this->has_bounding_box()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->bounding_box_, output);
  }

  // string text = 3;
  if (this->text().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->text().data(), this->text().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.vision.v1.Symbol.text");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->text(), output);
  }

  // @@protoc_insertion_point(serialize_end:google.cloud.vision.v1.Symbol)
}

::google::protobuf::uint8* Symbol::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.vision.v1.Symbol)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.cloud.vision.v1.TextAnnotation.TextProperty property = 1;
  if (this->has_property()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->property_, deterministic, target);
  }

  // .google.cloud.vision.v1.BoundingPoly bounding_box = 2;
  if (this->has_bounding_box()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->bounding_box_, deterministic, target);
  }

  // string text = 3;
  if (this->text().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->text().data(), this->text().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.vision.v1.Symbol.text");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->text(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.vision.v1.Symbol)
  return target;
}

size_t Symbol::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.vision.v1.Symbol)
  size_t total_size = 0;

  // string text = 3;
  if (this->text().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->text());
  }

  // .google.cloud.vision.v1.TextAnnotation.TextProperty property = 1;
  if (this->has_property()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->property_);
  }

  // .google.cloud.vision.v1.BoundingPoly bounding_box = 2;
  if (this->has_bounding_box()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->bounding_box_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Symbol::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.vision.v1.Symbol)
  GOOGLE_DCHECK_NE(&from, this);
  const Symbol* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Symbol>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.vision.v1.Symbol)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.vision.v1.Symbol)
    MergeFrom(*source);
  }
}

void Symbol::MergeFrom(const Symbol& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.vision.v1.Symbol)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.text().size() > 0) {
    set_text(from.text());
  }
  if (from.has_property()) {
    mutable_property()->::google::cloud::vision::v1::TextAnnotation_TextProperty::MergeFrom(from.property());
  }
  if (from.has_bounding_box()) {
    mutable_bounding_box()->::google::cloud::vision::v1::BoundingPoly::MergeFrom(from.bounding_box());
  }
}

void Symbol::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.vision.v1.Symbol)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Symbol::CopyFrom(const Symbol& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.vision.v1.Symbol)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Symbol::IsInitialized() const {
  return true;
}

void Symbol::Swap(Symbol* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    Symbol* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void Symbol::UnsafeArenaSwap(Symbol* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void Symbol::InternalSwap(Symbol* other) {
  text_.Swap(&other->text_);
  std::swap(property_, other->property_);
  std::swap(bounding_box_, other->bounding_box_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Symbol::GetMetadata() const {
  protobuf_google_2fcloud_2fvision_2fv1_2ftext_5fannotation_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fcloud_2fvision_2fv1_2ftext_5fannotation_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Symbol

// .google.cloud.vision.v1.TextAnnotation.TextProperty property = 1;
bool Symbol::has_property() const {
  return this != internal_default_instance() && property_ != NULL;
}
void Symbol::clear_property() {
  if (GetArenaNoVirtual() == NULL && property_ != NULL) delete property_;
  property_ = NULL;
}
const ::google::cloud::vision::v1::TextAnnotation_TextProperty& Symbol::property() const {
  // @@protoc_insertion_point(field_get:google.cloud.vision.v1.Symbol.property)
  return property_ != NULL ? *property_
                         : *::google::cloud::vision::v1::TextAnnotation_TextProperty::internal_default_instance();
}
::google::cloud::vision::v1::TextAnnotation_TextProperty* Symbol::mutable_property() {
  
  if (property_ == NULL) {
    _slow_mutable_property();
  }
  // @@protoc_insertion_point(field_mutable:google.cloud.vision.v1.Symbol.property)
  return property_;
}
::google::cloud::vision::v1::TextAnnotation_TextProperty* Symbol::release_property() {
  // @@protoc_insertion_point(field_release:google.cloud.vision.v1.Symbol.property)
  
  if (GetArenaNoVirtual() != NULL) {
    return _slow_release_property();
  } else {
    ::google::cloud::vision::v1::TextAnnotation_TextProperty* temp = property_;
    property_ = NULL;
    return temp;
  }
}
 void Symbol::set_allocated_property(::google::cloud::vision::v1::TextAnnotation_TextProperty* property) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete property_;
  }
  if (property != NULL) {
    _slow_set_allocated_property(message_arena, &property);
  }
  property_ = property;
  if (property) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.cloud.vision.v1.Symbol.property)
}

// .google.cloud.vision.v1.BoundingPoly bounding_box = 2;
bool Symbol::has_bounding_box() const {
  return this != internal_default_instance() && bounding_box_ != NULL;
}
void Symbol::clear_bounding_box() {
  if (GetArenaNoVirtual() == NULL && bounding_box_ != NULL) delete bounding_box_;
  bounding_box_ = NULL;
}
const ::google::cloud::vision::v1::BoundingPoly& Symbol::bounding_box() const {
  // @@protoc_insertion_point(field_get:google.cloud.vision.v1.Symbol.bounding_box)
  return bounding_box_ != NULL ? *bounding_box_
                         : *::google::cloud::vision::v1::BoundingPoly::internal_default_instance();
}
::google::cloud::vision::v1::BoundingPoly* Symbol::mutable_bounding_box() {
  
  if (bounding_box_ == NULL) {
    _slow_mutable_bounding_box();
  }
  // @@protoc_insertion_point(field_mutable:google.cloud.vision.v1.Symbol.bounding_box)
  return bounding_box_;
}
::google::cloud::vision::v1::BoundingPoly* Symbol::release_bounding_box() {
  // @@protoc_insertion_point(field_release:google.cloud.vision.v1.Symbol.bounding_box)
  
  if (GetArenaNoVirtual() != NULL) {
    return _slow_release_bounding_box();
  } else {
    ::google::cloud::vision::v1::BoundingPoly* temp = bounding_box_;
    bounding_box_ = NULL;
    return temp;
  }
}
 void Symbol::set_allocated_bounding_box(::google::cloud::vision::v1::BoundingPoly* bounding_box) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete bounding_box_;
  }
  if (bounding_box != NULL) {
    _slow_set_allocated_bounding_box(message_arena, &bounding_box);
  }
  bounding_box_ = bounding_box;
  if (bounding_box) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.cloud.vision.v1.Symbol.bounding_box)
}

// string text = 3;
void Symbol::clear_text() {
  text_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
const ::std::string& Symbol::text() const {
  // @@protoc_insertion_point(field_get:google.cloud.vision.v1.Symbol.text)
  return text_.Get();
}
void Symbol::set_text(const ::std::string& value) {
  
  text_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.cloud.vision.v1.Symbol.text)
}
void Symbol::set_text(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  text_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.cloud.vision.v1.Symbol.text)
}
void Symbol::set_text(const char* value,
    size_t size) {
  
  text_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.cloud.vision.v1.Symbol.text)
}
::std::string* Symbol::mutable_text() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.vision.v1.Symbol.text)
  return text_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* Symbol::release_text() {
  // @@protoc_insertion_point(field_release:google.cloud.vision.v1.Symbol.text)
  
  return text_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* Symbol::unsafe_arena_release_text() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.vision.v1.Symbol.text)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return text_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
void Symbol::set_allocated_text(::std::string* text) {
  if (text != NULL) {
    
  } else {
    
  }
  text_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), text,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.cloud.vision.v1.Symbol.text)
}
void Symbol::unsafe_arena_set_allocated_text(
    ::std::string* text) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (text != NULL) {
    
  } else {
    
  }
  text_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      text, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.vision.v1.Symbol.text)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace v1
}  // namespace vision
}  // namespace cloud
}  // namespace google

// @@protoc_insertion_point(global_scope)
