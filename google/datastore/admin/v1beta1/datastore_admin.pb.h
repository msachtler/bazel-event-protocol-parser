// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/datastore/admin/v1beta1/datastore_admin.proto

#ifndef PROTOBUF_google_2fdatastore_2fadmin_2fv1beta1_2fdatastore_5fadmin_2eproto__INCLUDED
#define PROTOBUF_google_2fdatastore_2fadmin_2fv1beta1_2fdatastore_5fadmin_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3003000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3003002 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/map.h>  // IWYU pragma: export
#include <google/protobuf/map_field_inl.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "google/api/annotations.pb.h"
#include "google/longrunning/operations.pb.h"
#include <google/protobuf/timestamp.pb.h>
// @@protoc_insertion_point(includes)
namespace google {
namespace api {
}  // namespace api
namespace datastore {
namespace admin {
namespace v1beta1 {
class CommonMetadata;
class CommonMetadataDefaultTypeInternal;
extern CommonMetadataDefaultTypeInternal _CommonMetadata_default_instance_;
class CommonMetadata_LabelsEntry;
class CommonMetadata_LabelsEntryDefaultTypeInternal;
extern CommonMetadata_LabelsEntryDefaultTypeInternal _CommonMetadata_LabelsEntry_default_instance_;
class EntityFilter;
class EntityFilterDefaultTypeInternal;
extern EntityFilterDefaultTypeInternal _EntityFilter_default_instance_;
class ExportEntitiesMetadata;
class ExportEntitiesMetadataDefaultTypeInternal;
extern ExportEntitiesMetadataDefaultTypeInternal _ExportEntitiesMetadata_default_instance_;
class ExportEntitiesRequest;
class ExportEntitiesRequestDefaultTypeInternal;
extern ExportEntitiesRequestDefaultTypeInternal _ExportEntitiesRequest_default_instance_;
class ExportEntitiesRequest_LabelsEntry;
class ExportEntitiesRequest_LabelsEntryDefaultTypeInternal;
extern ExportEntitiesRequest_LabelsEntryDefaultTypeInternal _ExportEntitiesRequest_LabelsEntry_default_instance_;
class ExportEntitiesResponse;
class ExportEntitiesResponseDefaultTypeInternal;
extern ExportEntitiesResponseDefaultTypeInternal _ExportEntitiesResponse_default_instance_;
class ImportEntitiesMetadata;
class ImportEntitiesMetadataDefaultTypeInternal;
extern ImportEntitiesMetadataDefaultTypeInternal _ImportEntitiesMetadata_default_instance_;
class ImportEntitiesRequest;
class ImportEntitiesRequestDefaultTypeInternal;
extern ImportEntitiesRequestDefaultTypeInternal _ImportEntitiesRequest_default_instance_;
class ImportEntitiesRequest_LabelsEntry;
class ImportEntitiesRequest_LabelsEntryDefaultTypeInternal;
extern ImportEntitiesRequest_LabelsEntryDefaultTypeInternal _ImportEntitiesRequest_LabelsEntry_default_instance_;
class Progress;
class ProgressDefaultTypeInternal;
extern ProgressDefaultTypeInternal _Progress_default_instance_;
}  // namespace v1beta1
}  // namespace admin
}  // namespace datastore
namespace longrunning {
class CancelOperationRequest;
class CancelOperationRequestDefaultTypeInternal;
extern CancelOperationRequestDefaultTypeInternal _CancelOperationRequest_default_instance_;
class DeleteOperationRequest;
class DeleteOperationRequestDefaultTypeInternal;
extern DeleteOperationRequestDefaultTypeInternal _DeleteOperationRequest_default_instance_;
class GetOperationRequest;
class GetOperationRequestDefaultTypeInternal;
extern GetOperationRequestDefaultTypeInternal _GetOperationRequest_default_instance_;
class ListOperationsRequest;
class ListOperationsRequestDefaultTypeInternal;
extern ListOperationsRequestDefaultTypeInternal _ListOperationsRequest_default_instance_;
class ListOperationsResponse;
class ListOperationsResponseDefaultTypeInternal;
extern ListOperationsResponseDefaultTypeInternal _ListOperationsResponse_default_instance_;
class Operation;
class OperationDefaultTypeInternal;
extern OperationDefaultTypeInternal _Operation_default_instance_;
}  // namespace longrunning
namespace protobuf {
class Timestamp;
class TimestampDefaultTypeInternal;
extern TimestampDefaultTypeInternal _Timestamp_default_instance_;
}  // namespace protobuf
}  // namespace google

namespace google {
namespace datastore {
namespace admin {
namespace v1beta1 {

namespace protobuf_google_2fdatastore_2fadmin_2fv1beta1_2fdatastore_5fadmin_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_google_2fdatastore_2fadmin_2fv1beta1_2fdatastore_5fadmin_2eproto

enum CommonMetadata_State {
  CommonMetadata_State_STATE_UNSPECIFIED = 0,
  CommonMetadata_State_INITIALIZING = 1,
  CommonMetadata_State_PROCESSING = 2,
  CommonMetadata_State_CANCELLING = 3,
  CommonMetadata_State_FINALIZING = 4,
  CommonMetadata_State_SUCCESSFUL = 5,
  CommonMetadata_State_FAILED = 6,
  CommonMetadata_State_CANCELLED = 7,
  CommonMetadata_State_CommonMetadata_State_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  CommonMetadata_State_CommonMetadata_State_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool CommonMetadata_State_IsValid(int value);
const CommonMetadata_State CommonMetadata_State_State_MIN = CommonMetadata_State_STATE_UNSPECIFIED;
const CommonMetadata_State CommonMetadata_State_State_MAX = CommonMetadata_State_CANCELLED;
const int CommonMetadata_State_State_ARRAYSIZE = CommonMetadata_State_State_MAX + 1;

const ::google::protobuf::EnumDescriptor* CommonMetadata_State_descriptor();
inline const ::std::string& CommonMetadata_State_Name(CommonMetadata_State value) {
  return ::google::protobuf::internal::NameOfEnum(
    CommonMetadata_State_descriptor(), value);
}
inline bool CommonMetadata_State_Parse(
    const ::std::string& name, CommonMetadata_State* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CommonMetadata_State>(
    CommonMetadata_State_descriptor(), name, value);
}
enum OperationType {
  OPERATION_TYPE_UNSPECIFIED = 0,
  EXPORT_ENTITIES = 1,
  IMPORT_ENTITIES = 2,
  OperationType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  OperationType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool OperationType_IsValid(int value);
const OperationType OperationType_MIN = OPERATION_TYPE_UNSPECIFIED;
const OperationType OperationType_MAX = IMPORT_ENTITIES;
const int OperationType_ARRAYSIZE = OperationType_MAX + 1;

const ::google::protobuf::EnumDescriptor* OperationType_descriptor();
inline const ::std::string& OperationType_Name(OperationType value) {
  return ::google::protobuf::internal::NameOfEnum(
    OperationType_descriptor(), value);
}
inline bool OperationType_Parse(
    const ::std::string& name, OperationType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<OperationType>(
    OperationType_descriptor(), name, value);
}
// ===================================================================


// -------------------------------------------------------------------

class CommonMetadata : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.datastore.admin.v1beta1.CommonMetadata) */ {
 public:
  CommonMetadata();
  virtual ~CommonMetadata();

  CommonMetadata(const CommonMetadata& from);

  inline CommonMetadata& operator=(const CommonMetadata& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CommonMetadata& default_instance();

  static inline const CommonMetadata* internal_default_instance() {
    return reinterpret_cast<const CommonMetadata*>(
               &_CommonMetadata_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(CommonMetadata* other);

  // implements Message ----------------------------------------------

  inline CommonMetadata* New() const PROTOBUF_FINAL { return New(NULL); }

  CommonMetadata* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CommonMetadata& from);
  void MergeFrom(const CommonMetadata& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CommonMetadata* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------


  typedef CommonMetadata_State State;
  static const State STATE_UNSPECIFIED =
    CommonMetadata_State_STATE_UNSPECIFIED;
  static const State INITIALIZING =
    CommonMetadata_State_INITIALIZING;
  static const State PROCESSING =
    CommonMetadata_State_PROCESSING;
  static const State CANCELLING =
    CommonMetadata_State_CANCELLING;
  static const State FINALIZING =
    CommonMetadata_State_FINALIZING;
  static const State SUCCESSFUL =
    CommonMetadata_State_SUCCESSFUL;
  static const State FAILED =
    CommonMetadata_State_FAILED;
  static const State CANCELLED =
    CommonMetadata_State_CANCELLED;
  static inline bool State_IsValid(int value) {
    return CommonMetadata_State_IsValid(value);
  }
  static const State State_MIN =
    CommonMetadata_State_State_MIN;
  static const State State_MAX =
    CommonMetadata_State_State_MAX;
  static const int State_ARRAYSIZE =
    CommonMetadata_State_State_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  State_descriptor() {
    return CommonMetadata_State_descriptor();
  }
  static inline const ::std::string& State_Name(State value) {
    return CommonMetadata_State_Name(value);
  }
  static inline bool State_Parse(const ::std::string& name,
      State* value) {
    return CommonMetadata_State_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // map<string, string> labels = 4;
  int labels_size() const;
  void clear_labels();
  static const int kLabelsFieldNumber = 4;
  const ::google::protobuf::Map< ::std::string, ::std::string >&
      labels() const;
  ::google::protobuf::Map< ::std::string, ::std::string >*
      mutable_labels();

  // .google.protobuf.Timestamp start_time = 1;
  bool has_start_time() const;
  void clear_start_time();
  static const int kStartTimeFieldNumber = 1;
  const ::google::protobuf::Timestamp& start_time() const;
  ::google::protobuf::Timestamp* mutable_start_time();
  ::google::protobuf::Timestamp* release_start_time();
  void set_allocated_start_time(::google::protobuf::Timestamp* start_time);

  // .google.protobuf.Timestamp end_time = 2;
  bool has_end_time() const;
  void clear_end_time();
  static const int kEndTimeFieldNumber = 2;
  const ::google::protobuf::Timestamp& end_time() const;
  ::google::protobuf::Timestamp* mutable_end_time();
  ::google::protobuf::Timestamp* release_end_time();
  void set_allocated_end_time(::google::protobuf::Timestamp* end_time);

  // .google.datastore.admin.v1beta1.OperationType operation_type = 3;
  void clear_operation_type();
  static const int kOperationTypeFieldNumber = 3;
  ::google::datastore::admin::v1beta1::OperationType operation_type() const;
  void set_operation_type(::google::datastore::admin::v1beta1::OperationType value);

  // .google.datastore.admin.v1beta1.CommonMetadata.State state = 5;
  void clear_state();
  static const int kStateFieldNumber = 5;
  ::google::datastore::admin::v1beta1::CommonMetadata_State state() const;
  void set_state(::google::datastore::admin::v1beta1::CommonMetadata_State value);

  // @@protoc_insertion_point(class_scope:google.datastore.admin.v1beta1.CommonMetadata)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  public:
  class CommonMetadata_LabelsEntry : public ::google::protobuf::internal::MapEntry<CommonMetadata_LabelsEntry, 
      ::std::string, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 > {
  public:
    typedef ::google::protobuf::internal::MapEntry<CommonMetadata_LabelsEntry, 
      ::std::string, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 > SuperType;
    CommonMetadata_LabelsEntry();
    CommonMetadata_LabelsEntry(::google::protobuf::Arena* arena);
    void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
    void MergeFrom(const CommonMetadata_LabelsEntry& other);
    static const Message* internal_default_instance() { return reinterpret_cast<const Message*>(&_CommonMetadata_LabelsEntry_default_instance_); }
    ::google::protobuf::Metadata GetMetadata() const;
  };
  ::google::protobuf::internal::MapField<
      CommonMetadata_LabelsEntry,
      ::std::string, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 > labels_;
  private:
  ::google::protobuf::Timestamp* start_time_;
  ::google::protobuf::Timestamp* end_time_;
  int operation_type_;
  int state_;
  mutable int _cached_size_;
  friend struct protobuf_google_2fdatastore_2fadmin_2fv1beta1_2fdatastore_5fadmin_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Progress : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.datastore.admin.v1beta1.Progress) */ {
 public:
  Progress();
  virtual ~Progress();

  Progress(const Progress& from);

  inline Progress& operator=(const Progress& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Progress& default_instance();

  static inline const Progress* internal_default_instance() {
    return reinterpret_cast<const Progress*>(
               &_Progress_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(Progress* other);

  // implements Message ----------------------------------------------

  inline Progress* New() const PROTOBUF_FINAL { return New(NULL); }

  Progress* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Progress& from);
  void MergeFrom(const Progress& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Progress* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int64 work_completed = 1;
  void clear_work_completed();
  static const int kWorkCompletedFieldNumber = 1;
  ::google::protobuf::int64 work_completed() const;
  void set_work_completed(::google::protobuf::int64 value);

  // int64 work_estimated = 2;
  void clear_work_estimated();
  static const int kWorkEstimatedFieldNumber = 2;
  ::google::protobuf::int64 work_estimated() const;
  void set_work_estimated(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:google.datastore.admin.v1beta1.Progress)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int64 work_completed_;
  ::google::protobuf::int64 work_estimated_;
  mutable int _cached_size_;
  friend struct protobuf_google_2fdatastore_2fadmin_2fv1beta1_2fdatastore_5fadmin_2eproto::TableStruct;
};
// -------------------------------------------------------------------


// -------------------------------------------------------------------

class ExportEntitiesRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.datastore.admin.v1beta1.ExportEntitiesRequest) */ {
 public:
  ExportEntitiesRequest();
  virtual ~ExportEntitiesRequest();

  ExportEntitiesRequest(const ExportEntitiesRequest& from);

  inline ExportEntitiesRequest& operator=(const ExportEntitiesRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ExportEntitiesRequest& default_instance();

  static inline const ExportEntitiesRequest* internal_default_instance() {
    return reinterpret_cast<const ExportEntitiesRequest*>(
               &_ExportEntitiesRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(ExportEntitiesRequest* other);

  // implements Message ----------------------------------------------

  inline ExportEntitiesRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  ExportEntitiesRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ExportEntitiesRequest& from);
  void MergeFrom(const ExportEntitiesRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ExportEntitiesRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<string, string> labels = 2;
  int labels_size() const;
  void clear_labels();
  static const int kLabelsFieldNumber = 2;
  const ::google::protobuf::Map< ::std::string, ::std::string >&
      labels() const;
  ::google::protobuf::Map< ::std::string, ::std::string >*
      mutable_labels();

  // string project_id = 1;
  void clear_project_id();
  static const int kProjectIdFieldNumber = 1;
  const ::std::string& project_id() const;
  void set_project_id(const ::std::string& value);
  #if LANG_CXX11
  void set_project_id(::std::string&& value);
  #endif
  void set_project_id(const char* value);
  void set_project_id(const char* value, size_t size);
  ::std::string* mutable_project_id();
  ::std::string* release_project_id();
  void set_allocated_project_id(::std::string* project_id);

  // string output_url_prefix = 4;
  void clear_output_url_prefix();
  static const int kOutputUrlPrefixFieldNumber = 4;
  const ::std::string& output_url_prefix() const;
  void set_output_url_prefix(const ::std::string& value);
  #if LANG_CXX11
  void set_output_url_prefix(::std::string&& value);
  #endif
  void set_output_url_prefix(const char* value);
  void set_output_url_prefix(const char* value, size_t size);
  ::std::string* mutable_output_url_prefix();
  ::std::string* release_output_url_prefix();
  void set_allocated_output_url_prefix(::std::string* output_url_prefix);

  // .google.datastore.admin.v1beta1.EntityFilter entity_filter = 3;
  bool has_entity_filter() const;
  void clear_entity_filter();
  static const int kEntityFilterFieldNumber = 3;
  const ::google::datastore::admin::v1beta1::EntityFilter& entity_filter() const;
  ::google::datastore::admin::v1beta1::EntityFilter* mutable_entity_filter();
  ::google::datastore::admin::v1beta1::EntityFilter* release_entity_filter();
  void set_allocated_entity_filter(::google::datastore::admin::v1beta1::EntityFilter* entity_filter);

  // @@protoc_insertion_point(class_scope:google.datastore.admin.v1beta1.ExportEntitiesRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  public:
  class ExportEntitiesRequest_LabelsEntry : public ::google::protobuf::internal::MapEntry<ExportEntitiesRequest_LabelsEntry, 
      ::std::string, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 > {
  public:
    typedef ::google::protobuf::internal::MapEntry<ExportEntitiesRequest_LabelsEntry, 
      ::std::string, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 > SuperType;
    ExportEntitiesRequest_LabelsEntry();
    ExportEntitiesRequest_LabelsEntry(::google::protobuf::Arena* arena);
    void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
    void MergeFrom(const ExportEntitiesRequest_LabelsEntry& other);
    static const Message* internal_default_instance() { return reinterpret_cast<const Message*>(&_ExportEntitiesRequest_LabelsEntry_default_instance_); }
    ::google::protobuf::Metadata GetMetadata() const;
  };
  ::google::protobuf::internal::MapField<
      ExportEntitiesRequest_LabelsEntry,
      ::std::string, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 > labels_;
  private:
  ::google::protobuf::internal::ArenaStringPtr project_id_;
  ::google::protobuf::internal::ArenaStringPtr output_url_prefix_;
  ::google::datastore::admin::v1beta1::EntityFilter* entity_filter_;
  mutable int _cached_size_;
  friend struct protobuf_google_2fdatastore_2fadmin_2fv1beta1_2fdatastore_5fadmin_2eproto::TableStruct;
};
// -------------------------------------------------------------------


// -------------------------------------------------------------------

class ImportEntitiesRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.datastore.admin.v1beta1.ImportEntitiesRequest) */ {
 public:
  ImportEntitiesRequest();
  virtual ~ImportEntitiesRequest();

  ImportEntitiesRequest(const ImportEntitiesRequest& from);

  inline ImportEntitiesRequest& operator=(const ImportEntitiesRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ImportEntitiesRequest& default_instance();

  static inline const ImportEntitiesRequest* internal_default_instance() {
    return reinterpret_cast<const ImportEntitiesRequest*>(
               &_ImportEntitiesRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    6;

  void Swap(ImportEntitiesRequest* other);

  // implements Message ----------------------------------------------

  inline ImportEntitiesRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  ImportEntitiesRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ImportEntitiesRequest& from);
  void MergeFrom(const ImportEntitiesRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ImportEntitiesRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<string, string> labels = 2;
  int labels_size() const;
  void clear_labels();
  static const int kLabelsFieldNumber = 2;
  const ::google::protobuf::Map< ::std::string, ::std::string >&
      labels() const;
  ::google::protobuf::Map< ::std::string, ::std::string >*
      mutable_labels();

  // string project_id = 1;
  void clear_project_id();
  static const int kProjectIdFieldNumber = 1;
  const ::std::string& project_id() const;
  void set_project_id(const ::std::string& value);
  #if LANG_CXX11
  void set_project_id(::std::string&& value);
  #endif
  void set_project_id(const char* value);
  void set_project_id(const char* value, size_t size);
  ::std::string* mutable_project_id();
  ::std::string* release_project_id();
  void set_allocated_project_id(::std::string* project_id);

  // string input_url = 3;
  void clear_input_url();
  static const int kInputUrlFieldNumber = 3;
  const ::std::string& input_url() const;
  void set_input_url(const ::std::string& value);
  #if LANG_CXX11
  void set_input_url(::std::string&& value);
  #endif
  void set_input_url(const char* value);
  void set_input_url(const char* value, size_t size);
  ::std::string* mutable_input_url();
  ::std::string* release_input_url();
  void set_allocated_input_url(::std::string* input_url);

  // .google.datastore.admin.v1beta1.EntityFilter entity_filter = 4;
  bool has_entity_filter() const;
  void clear_entity_filter();
  static const int kEntityFilterFieldNumber = 4;
  const ::google::datastore::admin::v1beta1::EntityFilter& entity_filter() const;
  ::google::datastore::admin::v1beta1::EntityFilter* mutable_entity_filter();
  ::google::datastore::admin::v1beta1::EntityFilter* release_entity_filter();
  void set_allocated_entity_filter(::google::datastore::admin::v1beta1::EntityFilter* entity_filter);

  // @@protoc_insertion_point(class_scope:google.datastore.admin.v1beta1.ImportEntitiesRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  public:
  class ImportEntitiesRequest_LabelsEntry : public ::google::protobuf::internal::MapEntry<ImportEntitiesRequest_LabelsEntry, 
      ::std::string, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 > {
  public:
    typedef ::google::protobuf::internal::MapEntry<ImportEntitiesRequest_LabelsEntry, 
      ::std::string, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 > SuperType;
    ImportEntitiesRequest_LabelsEntry();
    ImportEntitiesRequest_LabelsEntry(::google::protobuf::Arena* arena);
    void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
    void MergeFrom(const ImportEntitiesRequest_LabelsEntry& other);
    static const Message* internal_default_instance() { return reinterpret_cast<const Message*>(&_ImportEntitiesRequest_LabelsEntry_default_instance_); }
    ::google::protobuf::Metadata GetMetadata() const;
  };
  ::google::protobuf::internal::MapField<
      ImportEntitiesRequest_LabelsEntry,
      ::std::string, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 > labels_;
  private:
  ::google::protobuf::internal::ArenaStringPtr project_id_;
  ::google::protobuf::internal::ArenaStringPtr input_url_;
  ::google::datastore::admin::v1beta1::EntityFilter* entity_filter_;
  mutable int _cached_size_;
  friend struct protobuf_google_2fdatastore_2fadmin_2fv1beta1_2fdatastore_5fadmin_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ExportEntitiesResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.datastore.admin.v1beta1.ExportEntitiesResponse) */ {
 public:
  ExportEntitiesResponse();
  virtual ~ExportEntitiesResponse();

  ExportEntitiesResponse(const ExportEntitiesResponse& from);

  inline ExportEntitiesResponse& operator=(const ExportEntitiesResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ExportEntitiesResponse& default_instance();

  static inline const ExportEntitiesResponse* internal_default_instance() {
    return reinterpret_cast<const ExportEntitiesResponse*>(
               &_ExportEntitiesResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    7;

  void Swap(ExportEntitiesResponse* other);

  // implements Message ----------------------------------------------

  inline ExportEntitiesResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  ExportEntitiesResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ExportEntitiesResponse& from);
  void MergeFrom(const ExportEntitiesResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ExportEntitiesResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string output_url = 1;
  void clear_output_url();
  static const int kOutputUrlFieldNumber = 1;
  const ::std::string& output_url() const;
  void set_output_url(const ::std::string& value);
  #if LANG_CXX11
  void set_output_url(::std::string&& value);
  #endif
  void set_output_url(const char* value);
  void set_output_url(const char* value, size_t size);
  ::std::string* mutable_output_url();
  ::std::string* release_output_url();
  void set_allocated_output_url(::std::string* output_url);

  // @@protoc_insertion_point(class_scope:google.datastore.admin.v1beta1.ExportEntitiesResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr output_url_;
  mutable int _cached_size_;
  friend struct protobuf_google_2fdatastore_2fadmin_2fv1beta1_2fdatastore_5fadmin_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ExportEntitiesMetadata : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.datastore.admin.v1beta1.ExportEntitiesMetadata) */ {
 public:
  ExportEntitiesMetadata();
  virtual ~ExportEntitiesMetadata();

  ExportEntitiesMetadata(const ExportEntitiesMetadata& from);

  inline ExportEntitiesMetadata& operator=(const ExportEntitiesMetadata& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ExportEntitiesMetadata& default_instance();

  static inline const ExportEntitiesMetadata* internal_default_instance() {
    return reinterpret_cast<const ExportEntitiesMetadata*>(
               &_ExportEntitiesMetadata_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    8;

  void Swap(ExportEntitiesMetadata* other);

  // implements Message ----------------------------------------------

  inline ExportEntitiesMetadata* New() const PROTOBUF_FINAL { return New(NULL); }

  ExportEntitiesMetadata* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ExportEntitiesMetadata& from);
  void MergeFrom(const ExportEntitiesMetadata& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ExportEntitiesMetadata* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string output_url_prefix = 5;
  void clear_output_url_prefix();
  static const int kOutputUrlPrefixFieldNumber = 5;
  const ::std::string& output_url_prefix() const;
  void set_output_url_prefix(const ::std::string& value);
  #if LANG_CXX11
  void set_output_url_prefix(::std::string&& value);
  #endif
  void set_output_url_prefix(const char* value);
  void set_output_url_prefix(const char* value, size_t size);
  ::std::string* mutable_output_url_prefix();
  ::std::string* release_output_url_prefix();
  void set_allocated_output_url_prefix(::std::string* output_url_prefix);

  // .google.datastore.admin.v1beta1.CommonMetadata common = 1;
  bool has_common() const;
  void clear_common();
  static const int kCommonFieldNumber = 1;
  const ::google::datastore::admin::v1beta1::CommonMetadata& common() const;
  ::google::datastore::admin::v1beta1::CommonMetadata* mutable_common();
  ::google::datastore::admin::v1beta1::CommonMetadata* release_common();
  void set_allocated_common(::google::datastore::admin::v1beta1::CommonMetadata* common);

  // .google.datastore.admin.v1beta1.Progress progress_entities = 2;
  bool has_progress_entities() const;
  void clear_progress_entities();
  static const int kProgressEntitiesFieldNumber = 2;
  const ::google::datastore::admin::v1beta1::Progress& progress_entities() const;
  ::google::datastore::admin::v1beta1::Progress* mutable_progress_entities();
  ::google::datastore::admin::v1beta1::Progress* release_progress_entities();
  void set_allocated_progress_entities(::google::datastore::admin::v1beta1::Progress* progress_entities);

  // .google.datastore.admin.v1beta1.Progress progress_bytes = 3;
  bool has_progress_bytes() const;
  void clear_progress_bytes();
  static const int kProgressBytesFieldNumber = 3;
  const ::google::datastore::admin::v1beta1::Progress& progress_bytes() const;
  ::google::datastore::admin::v1beta1::Progress* mutable_progress_bytes();
  ::google::datastore::admin::v1beta1::Progress* release_progress_bytes();
  void set_allocated_progress_bytes(::google::datastore::admin::v1beta1::Progress* progress_bytes);

  // .google.datastore.admin.v1beta1.EntityFilter entity_filter = 4;
  bool has_entity_filter() const;
  void clear_entity_filter();
  static const int kEntityFilterFieldNumber = 4;
  const ::google::datastore::admin::v1beta1::EntityFilter& entity_filter() const;
  ::google::datastore::admin::v1beta1::EntityFilter* mutable_entity_filter();
  ::google::datastore::admin::v1beta1::EntityFilter* release_entity_filter();
  void set_allocated_entity_filter(::google::datastore::admin::v1beta1::EntityFilter* entity_filter);

  // @@protoc_insertion_point(class_scope:google.datastore.admin.v1beta1.ExportEntitiesMetadata)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr output_url_prefix_;
  ::google::datastore::admin::v1beta1::CommonMetadata* common_;
  ::google::datastore::admin::v1beta1::Progress* progress_entities_;
  ::google::datastore::admin::v1beta1::Progress* progress_bytes_;
  ::google::datastore::admin::v1beta1::EntityFilter* entity_filter_;
  mutable int _cached_size_;
  friend struct protobuf_google_2fdatastore_2fadmin_2fv1beta1_2fdatastore_5fadmin_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ImportEntitiesMetadata : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.datastore.admin.v1beta1.ImportEntitiesMetadata) */ {
 public:
  ImportEntitiesMetadata();
  virtual ~ImportEntitiesMetadata();

  ImportEntitiesMetadata(const ImportEntitiesMetadata& from);

  inline ImportEntitiesMetadata& operator=(const ImportEntitiesMetadata& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ImportEntitiesMetadata& default_instance();

  static inline const ImportEntitiesMetadata* internal_default_instance() {
    return reinterpret_cast<const ImportEntitiesMetadata*>(
               &_ImportEntitiesMetadata_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    9;

  void Swap(ImportEntitiesMetadata* other);

  // implements Message ----------------------------------------------

  inline ImportEntitiesMetadata* New() const PROTOBUF_FINAL { return New(NULL); }

  ImportEntitiesMetadata* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ImportEntitiesMetadata& from);
  void MergeFrom(const ImportEntitiesMetadata& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ImportEntitiesMetadata* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string input_url = 5;
  void clear_input_url();
  static const int kInputUrlFieldNumber = 5;
  const ::std::string& input_url() const;
  void set_input_url(const ::std::string& value);
  #if LANG_CXX11
  void set_input_url(::std::string&& value);
  #endif
  void set_input_url(const char* value);
  void set_input_url(const char* value, size_t size);
  ::std::string* mutable_input_url();
  ::std::string* release_input_url();
  void set_allocated_input_url(::std::string* input_url);

  // .google.datastore.admin.v1beta1.CommonMetadata common = 1;
  bool has_common() const;
  void clear_common();
  static const int kCommonFieldNumber = 1;
  const ::google::datastore::admin::v1beta1::CommonMetadata& common() const;
  ::google::datastore::admin::v1beta1::CommonMetadata* mutable_common();
  ::google::datastore::admin::v1beta1::CommonMetadata* release_common();
  void set_allocated_common(::google::datastore::admin::v1beta1::CommonMetadata* common);

  // .google.datastore.admin.v1beta1.Progress progress_entities = 2;
  bool has_progress_entities() const;
  void clear_progress_entities();
  static const int kProgressEntitiesFieldNumber = 2;
  const ::google::datastore::admin::v1beta1::Progress& progress_entities() const;
  ::google::datastore::admin::v1beta1::Progress* mutable_progress_entities();
  ::google::datastore::admin::v1beta1::Progress* release_progress_entities();
  void set_allocated_progress_entities(::google::datastore::admin::v1beta1::Progress* progress_entities);

  // .google.datastore.admin.v1beta1.Progress progress_bytes = 3;
  bool has_progress_bytes() const;
  void clear_progress_bytes();
  static const int kProgressBytesFieldNumber = 3;
  const ::google::datastore::admin::v1beta1::Progress& progress_bytes() const;
  ::google::datastore::admin::v1beta1::Progress* mutable_progress_bytes();
  ::google::datastore::admin::v1beta1::Progress* release_progress_bytes();
  void set_allocated_progress_bytes(::google::datastore::admin::v1beta1::Progress* progress_bytes);

  // .google.datastore.admin.v1beta1.EntityFilter entity_filter = 4;
  bool has_entity_filter() const;
  void clear_entity_filter();
  static const int kEntityFilterFieldNumber = 4;
  const ::google::datastore::admin::v1beta1::EntityFilter& entity_filter() const;
  ::google::datastore::admin::v1beta1::EntityFilter* mutable_entity_filter();
  ::google::datastore::admin::v1beta1::EntityFilter* release_entity_filter();
  void set_allocated_entity_filter(::google::datastore::admin::v1beta1::EntityFilter* entity_filter);

  // @@protoc_insertion_point(class_scope:google.datastore.admin.v1beta1.ImportEntitiesMetadata)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr input_url_;
  ::google::datastore::admin::v1beta1::CommonMetadata* common_;
  ::google::datastore::admin::v1beta1::Progress* progress_entities_;
  ::google::datastore::admin::v1beta1::Progress* progress_bytes_;
  ::google::datastore::admin::v1beta1::EntityFilter* entity_filter_;
  mutable int _cached_size_;
  friend struct protobuf_google_2fdatastore_2fadmin_2fv1beta1_2fdatastore_5fadmin_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class EntityFilter : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.datastore.admin.v1beta1.EntityFilter) */ {
 public:
  EntityFilter();
  virtual ~EntityFilter();

  EntityFilter(const EntityFilter& from);

  inline EntityFilter& operator=(const EntityFilter& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const EntityFilter& default_instance();

  static inline const EntityFilter* internal_default_instance() {
    return reinterpret_cast<const EntityFilter*>(
               &_EntityFilter_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    10;

  void Swap(EntityFilter* other);

  // implements Message ----------------------------------------------

  inline EntityFilter* New() const PROTOBUF_FINAL { return New(NULL); }

  EntityFilter* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const EntityFilter& from);
  void MergeFrom(const EntityFilter& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(EntityFilter* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string kinds = 1;
  int kinds_size() const;
  void clear_kinds();
  static const int kKindsFieldNumber = 1;
  const ::std::string& kinds(int index) const;
  ::std::string* mutable_kinds(int index);
  void set_kinds(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_kinds(int index, ::std::string&& value);
  #endif
  void set_kinds(int index, const char* value);
  void set_kinds(int index, const char* value, size_t size);
  ::std::string* add_kinds();
  void add_kinds(const ::std::string& value);
  #if LANG_CXX11
  void add_kinds(::std::string&& value);
  #endif
  void add_kinds(const char* value);
  void add_kinds(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& kinds() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_kinds();

  // repeated string namespace_ids = 2;
  int namespace_ids_size() const;
  void clear_namespace_ids();
  static const int kNamespaceIdsFieldNumber = 2;
  const ::std::string& namespace_ids(int index) const;
  ::std::string* mutable_namespace_ids(int index);
  void set_namespace_ids(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_namespace_ids(int index, ::std::string&& value);
  #endif
  void set_namespace_ids(int index, const char* value);
  void set_namespace_ids(int index, const char* value, size_t size);
  ::std::string* add_namespace_ids();
  void add_namespace_ids(const ::std::string& value);
  #if LANG_CXX11
  void add_namespace_ids(::std::string&& value);
  #endif
  void add_namespace_ids(const char* value);
  void add_namespace_ids(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& namespace_ids() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_namespace_ids();

  // @@protoc_insertion_point(class_scope:google.datastore.admin.v1beta1.EntityFilter)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::std::string> kinds_;
  ::google::protobuf::RepeatedPtrField< ::std::string> namespace_ids_;
  mutable int _cached_size_;
  friend struct protobuf_google_2fdatastore_2fadmin_2fv1beta1_2fdatastore_5fadmin_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// CommonMetadata

// .google.protobuf.Timestamp start_time = 1;
inline bool CommonMetadata::has_start_time() const {
  return this != internal_default_instance() && start_time_ != NULL;
}
inline void CommonMetadata::clear_start_time() {
  if (GetArenaNoVirtual() == NULL && start_time_ != NULL) delete start_time_;
  start_time_ = NULL;
}
inline const ::google::protobuf::Timestamp& CommonMetadata::start_time() const {
  // @@protoc_insertion_point(field_get:google.datastore.admin.v1beta1.CommonMetadata.start_time)
  return start_time_ != NULL ? *start_time_
                         : *::google::protobuf::Timestamp::internal_default_instance();
}
inline ::google::protobuf::Timestamp* CommonMetadata::mutable_start_time() {
  
  if (start_time_ == NULL) {
    start_time_ = new ::google::protobuf::Timestamp;
  }
  // @@protoc_insertion_point(field_mutable:google.datastore.admin.v1beta1.CommonMetadata.start_time)
  return start_time_;
}
inline ::google::protobuf::Timestamp* CommonMetadata::release_start_time() {
  // @@protoc_insertion_point(field_release:google.datastore.admin.v1beta1.CommonMetadata.start_time)
  
  ::google::protobuf::Timestamp* temp = start_time_;
  start_time_ = NULL;
  return temp;
}
inline void CommonMetadata::set_allocated_start_time(::google::protobuf::Timestamp* start_time) {
  delete start_time_;
  if (start_time != NULL && start_time->GetArena() != NULL) {
    ::google::protobuf::Timestamp* new_start_time = new ::google::protobuf::Timestamp;
    new_start_time->CopyFrom(*start_time);
    start_time = new_start_time;
  }
  start_time_ = start_time;
  if (start_time) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.datastore.admin.v1beta1.CommonMetadata.start_time)
}

// .google.protobuf.Timestamp end_time = 2;
inline bool CommonMetadata::has_end_time() const {
  return this != internal_default_instance() && end_time_ != NULL;
}
inline void CommonMetadata::clear_end_time() {
  if (GetArenaNoVirtual() == NULL && end_time_ != NULL) delete end_time_;
  end_time_ = NULL;
}
inline const ::google::protobuf::Timestamp& CommonMetadata::end_time() const {
  // @@protoc_insertion_point(field_get:google.datastore.admin.v1beta1.CommonMetadata.end_time)
  return end_time_ != NULL ? *end_time_
                         : *::google::protobuf::Timestamp::internal_default_instance();
}
inline ::google::protobuf::Timestamp* CommonMetadata::mutable_end_time() {
  
  if (end_time_ == NULL) {
    end_time_ = new ::google::protobuf::Timestamp;
  }
  // @@protoc_insertion_point(field_mutable:google.datastore.admin.v1beta1.CommonMetadata.end_time)
  return end_time_;
}
inline ::google::protobuf::Timestamp* CommonMetadata::release_end_time() {
  // @@protoc_insertion_point(field_release:google.datastore.admin.v1beta1.CommonMetadata.end_time)
  
  ::google::protobuf::Timestamp* temp = end_time_;
  end_time_ = NULL;
  return temp;
}
inline void CommonMetadata::set_allocated_end_time(::google::protobuf::Timestamp* end_time) {
  delete end_time_;
  if (end_time != NULL && end_time->GetArena() != NULL) {
    ::google::protobuf::Timestamp* new_end_time = new ::google::protobuf::Timestamp;
    new_end_time->CopyFrom(*end_time);
    end_time = new_end_time;
  }
  end_time_ = end_time;
  if (end_time) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.datastore.admin.v1beta1.CommonMetadata.end_time)
}

// .google.datastore.admin.v1beta1.OperationType operation_type = 3;
inline void CommonMetadata::clear_operation_type() {
  operation_type_ = 0;
}
inline ::google::datastore::admin::v1beta1::OperationType CommonMetadata::operation_type() const {
  // @@protoc_insertion_point(field_get:google.datastore.admin.v1beta1.CommonMetadata.operation_type)
  return static_cast< ::google::datastore::admin::v1beta1::OperationType >(operation_type_);
}
inline void CommonMetadata::set_operation_type(::google::datastore::admin::v1beta1::OperationType value) {
  
  operation_type_ = value;
  // @@protoc_insertion_point(field_set:google.datastore.admin.v1beta1.CommonMetadata.operation_type)
}

// map<string, string> labels = 4;
inline int CommonMetadata::labels_size() const {
  return labels_.size();
}
inline void CommonMetadata::clear_labels() {
  labels_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::std::string >&
CommonMetadata::labels() const {
  // @@protoc_insertion_point(field_map:google.datastore.admin.v1beta1.CommonMetadata.labels)
  return labels_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::std::string >*
CommonMetadata::mutable_labels() {
  // @@protoc_insertion_point(field_mutable_map:google.datastore.admin.v1beta1.CommonMetadata.labels)
  return labels_.MutableMap();
}

// .google.datastore.admin.v1beta1.CommonMetadata.State state = 5;
inline void CommonMetadata::clear_state() {
  state_ = 0;
}
inline ::google::datastore::admin::v1beta1::CommonMetadata_State CommonMetadata::state() const {
  // @@protoc_insertion_point(field_get:google.datastore.admin.v1beta1.CommonMetadata.state)
  return static_cast< ::google::datastore::admin::v1beta1::CommonMetadata_State >(state_);
}
inline void CommonMetadata::set_state(::google::datastore::admin::v1beta1::CommonMetadata_State value) {
  
  state_ = value;
  // @@protoc_insertion_point(field_set:google.datastore.admin.v1beta1.CommonMetadata.state)
}

// -------------------------------------------------------------------

// Progress

// int64 work_completed = 1;
inline void Progress::clear_work_completed() {
  work_completed_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 Progress::work_completed() const {
  // @@protoc_insertion_point(field_get:google.datastore.admin.v1beta1.Progress.work_completed)
  return work_completed_;
}
inline void Progress::set_work_completed(::google::protobuf::int64 value) {
  
  work_completed_ = value;
  // @@protoc_insertion_point(field_set:google.datastore.admin.v1beta1.Progress.work_completed)
}

// int64 work_estimated = 2;
inline void Progress::clear_work_estimated() {
  work_estimated_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 Progress::work_estimated() const {
  // @@protoc_insertion_point(field_get:google.datastore.admin.v1beta1.Progress.work_estimated)
  return work_estimated_;
}
inline void Progress::set_work_estimated(::google::protobuf::int64 value) {
  
  work_estimated_ = value;
  // @@protoc_insertion_point(field_set:google.datastore.admin.v1beta1.Progress.work_estimated)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// ExportEntitiesRequest

// string project_id = 1;
inline void ExportEntitiesRequest::clear_project_id() {
  project_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ExportEntitiesRequest::project_id() const {
  // @@protoc_insertion_point(field_get:google.datastore.admin.v1beta1.ExportEntitiesRequest.project_id)
  return project_id_.GetNoArena();
}
inline void ExportEntitiesRequest::set_project_id(const ::std::string& value) {
  
  project_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.datastore.admin.v1beta1.ExportEntitiesRequest.project_id)
}
#if LANG_CXX11
inline void ExportEntitiesRequest::set_project_id(::std::string&& value) {
  
  project_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.datastore.admin.v1beta1.ExportEntitiesRequest.project_id)
}
#endif
inline void ExportEntitiesRequest::set_project_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  project_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.datastore.admin.v1beta1.ExportEntitiesRequest.project_id)
}
inline void ExportEntitiesRequest::set_project_id(const char* value, size_t size) {
  
  project_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.datastore.admin.v1beta1.ExportEntitiesRequest.project_id)
}
inline ::std::string* ExportEntitiesRequest::mutable_project_id() {
  
  // @@protoc_insertion_point(field_mutable:google.datastore.admin.v1beta1.ExportEntitiesRequest.project_id)
  return project_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ExportEntitiesRequest::release_project_id() {
  // @@protoc_insertion_point(field_release:google.datastore.admin.v1beta1.ExportEntitiesRequest.project_id)
  
  return project_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ExportEntitiesRequest::set_allocated_project_id(::std::string* project_id) {
  if (project_id != NULL) {
    
  } else {
    
  }
  project_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), project_id);
  // @@protoc_insertion_point(field_set_allocated:google.datastore.admin.v1beta1.ExportEntitiesRequest.project_id)
}

// map<string, string> labels = 2;
inline int ExportEntitiesRequest::labels_size() const {
  return labels_.size();
}
inline void ExportEntitiesRequest::clear_labels() {
  labels_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::std::string >&
ExportEntitiesRequest::labels() const {
  // @@protoc_insertion_point(field_map:google.datastore.admin.v1beta1.ExportEntitiesRequest.labels)
  return labels_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::std::string >*
ExportEntitiesRequest::mutable_labels() {
  // @@protoc_insertion_point(field_mutable_map:google.datastore.admin.v1beta1.ExportEntitiesRequest.labels)
  return labels_.MutableMap();
}

// .google.datastore.admin.v1beta1.EntityFilter entity_filter = 3;
inline bool ExportEntitiesRequest::has_entity_filter() const {
  return this != internal_default_instance() && entity_filter_ != NULL;
}
inline void ExportEntitiesRequest::clear_entity_filter() {
  if (GetArenaNoVirtual() == NULL && entity_filter_ != NULL) delete entity_filter_;
  entity_filter_ = NULL;
}
inline const ::google::datastore::admin::v1beta1::EntityFilter& ExportEntitiesRequest::entity_filter() const {
  // @@protoc_insertion_point(field_get:google.datastore.admin.v1beta1.ExportEntitiesRequest.entity_filter)
  return entity_filter_ != NULL ? *entity_filter_
                         : *::google::datastore::admin::v1beta1::EntityFilter::internal_default_instance();
}
inline ::google::datastore::admin::v1beta1::EntityFilter* ExportEntitiesRequest::mutable_entity_filter() {
  
  if (entity_filter_ == NULL) {
    entity_filter_ = new ::google::datastore::admin::v1beta1::EntityFilter;
  }
  // @@protoc_insertion_point(field_mutable:google.datastore.admin.v1beta1.ExportEntitiesRequest.entity_filter)
  return entity_filter_;
}
inline ::google::datastore::admin::v1beta1::EntityFilter* ExportEntitiesRequest::release_entity_filter() {
  // @@protoc_insertion_point(field_release:google.datastore.admin.v1beta1.ExportEntitiesRequest.entity_filter)
  
  ::google::datastore::admin::v1beta1::EntityFilter* temp = entity_filter_;
  entity_filter_ = NULL;
  return temp;
}
inline void ExportEntitiesRequest::set_allocated_entity_filter(::google::datastore::admin::v1beta1::EntityFilter* entity_filter) {
  delete entity_filter_;
  entity_filter_ = entity_filter;
  if (entity_filter) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.datastore.admin.v1beta1.ExportEntitiesRequest.entity_filter)
}

// string output_url_prefix = 4;
inline void ExportEntitiesRequest::clear_output_url_prefix() {
  output_url_prefix_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ExportEntitiesRequest::output_url_prefix() const {
  // @@protoc_insertion_point(field_get:google.datastore.admin.v1beta1.ExportEntitiesRequest.output_url_prefix)
  return output_url_prefix_.GetNoArena();
}
inline void ExportEntitiesRequest::set_output_url_prefix(const ::std::string& value) {
  
  output_url_prefix_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.datastore.admin.v1beta1.ExportEntitiesRequest.output_url_prefix)
}
#if LANG_CXX11
inline void ExportEntitiesRequest::set_output_url_prefix(::std::string&& value) {
  
  output_url_prefix_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.datastore.admin.v1beta1.ExportEntitiesRequest.output_url_prefix)
}
#endif
inline void ExportEntitiesRequest::set_output_url_prefix(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  output_url_prefix_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.datastore.admin.v1beta1.ExportEntitiesRequest.output_url_prefix)
}
inline void ExportEntitiesRequest::set_output_url_prefix(const char* value, size_t size) {
  
  output_url_prefix_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.datastore.admin.v1beta1.ExportEntitiesRequest.output_url_prefix)
}
inline ::std::string* ExportEntitiesRequest::mutable_output_url_prefix() {
  
  // @@protoc_insertion_point(field_mutable:google.datastore.admin.v1beta1.ExportEntitiesRequest.output_url_prefix)
  return output_url_prefix_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ExportEntitiesRequest::release_output_url_prefix() {
  // @@protoc_insertion_point(field_release:google.datastore.admin.v1beta1.ExportEntitiesRequest.output_url_prefix)
  
  return output_url_prefix_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ExportEntitiesRequest::set_allocated_output_url_prefix(::std::string* output_url_prefix) {
  if (output_url_prefix != NULL) {
    
  } else {
    
  }
  output_url_prefix_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), output_url_prefix);
  // @@protoc_insertion_point(field_set_allocated:google.datastore.admin.v1beta1.ExportEntitiesRequest.output_url_prefix)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// ImportEntitiesRequest

// string project_id = 1;
inline void ImportEntitiesRequest::clear_project_id() {
  project_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ImportEntitiesRequest::project_id() const {
  // @@protoc_insertion_point(field_get:google.datastore.admin.v1beta1.ImportEntitiesRequest.project_id)
  return project_id_.GetNoArena();
}
inline void ImportEntitiesRequest::set_project_id(const ::std::string& value) {
  
  project_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.datastore.admin.v1beta1.ImportEntitiesRequest.project_id)
}
#if LANG_CXX11
inline void ImportEntitiesRequest::set_project_id(::std::string&& value) {
  
  project_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.datastore.admin.v1beta1.ImportEntitiesRequest.project_id)
}
#endif
inline void ImportEntitiesRequest::set_project_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  project_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.datastore.admin.v1beta1.ImportEntitiesRequest.project_id)
}
inline void ImportEntitiesRequest::set_project_id(const char* value, size_t size) {
  
  project_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.datastore.admin.v1beta1.ImportEntitiesRequest.project_id)
}
inline ::std::string* ImportEntitiesRequest::mutable_project_id() {
  
  // @@protoc_insertion_point(field_mutable:google.datastore.admin.v1beta1.ImportEntitiesRequest.project_id)
  return project_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ImportEntitiesRequest::release_project_id() {
  // @@protoc_insertion_point(field_release:google.datastore.admin.v1beta1.ImportEntitiesRequest.project_id)
  
  return project_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ImportEntitiesRequest::set_allocated_project_id(::std::string* project_id) {
  if (project_id != NULL) {
    
  } else {
    
  }
  project_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), project_id);
  // @@protoc_insertion_point(field_set_allocated:google.datastore.admin.v1beta1.ImportEntitiesRequest.project_id)
}

// map<string, string> labels = 2;
inline int ImportEntitiesRequest::labels_size() const {
  return labels_.size();
}
inline void ImportEntitiesRequest::clear_labels() {
  labels_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::std::string >&
ImportEntitiesRequest::labels() const {
  // @@protoc_insertion_point(field_map:google.datastore.admin.v1beta1.ImportEntitiesRequest.labels)
  return labels_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::std::string >*
ImportEntitiesRequest::mutable_labels() {
  // @@protoc_insertion_point(field_mutable_map:google.datastore.admin.v1beta1.ImportEntitiesRequest.labels)
  return labels_.MutableMap();
}

// string input_url = 3;
inline void ImportEntitiesRequest::clear_input_url() {
  input_url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ImportEntitiesRequest::input_url() const {
  // @@protoc_insertion_point(field_get:google.datastore.admin.v1beta1.ImportEntitiesRequest.input_url)
  return input_url_.GetNoArena();
}
inline void ImportEntitiesRequest::set_input_url(const ::std::string& value) {
  
  input_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.datastore.admin.v1beta1.ImportEntitiesRequest.input_url)
}
#if LANG_CXX11
inline void ImportEntitiesRequest::set_input_url(::std::string&& value) {
  
  input_url_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.datastore.admin.v1beta1.ImportEntitiesRequest.input_url)
}
#endif
inline void ImportEntitiesRequest::set_input_url(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  input_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.datastore.admin.v1beta1.ImportEntitiesRequest.input_url)
}
inline void ImportEntitiesRequest::set_input_url(const char* value, size_t size) {
  
  input_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.datastore.admin.v1beta1.ImportEntitiesRequest.input_url)
}
inline ::std::string* ImportEntitiesRequest::mutable_input_url() {
  
  // @@protoc_insertion_point(field_mutable:google.datastore.admin.v1beta1.ImportEntitiesRequest.input_url)
  return input_url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ImportEntitiesRequest::release_input_url() {
  // @@protoc_insertion_point(field_release:google.datastore.admin.v1beta1.ImportEntitiesRequest.input_url)
  
  return input_url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ImportEntitiesRequest::set_allocated_input_url(::std::string* input_url) {
  if (input_url != NULL) {
    
  } else {
    
  }
  input_url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), input_url);
  // @@protoc_insertion_point(field_set_allocated:google.datastore.admin.v1beta1.ImportEntitiesRequest.input_url)
}

// .google.datastore.admin.v1beta1.EntityFilter entity_filter = 4;
inline bool ImportEntitiesRequest::has_entity_filter() const {
  return this != internal_default_instance() && entity_filter_ != NULL;
}
inline void ImportEntitiesRequest::clear_entity_filter() {
  if (GetArenaNoVirtual() == NULL && entity_filter_ != NULL) delete entity_filter_;
  entity_filter_ = NULL;
}
inline const ::google::datastore::admin::v1beta1::EntityFilter& ImportEntitiesRequest::entity_filter() const {
  // @@protoc_insertion_point(field_get:google.datastore.admin.v1beta1.ImportEntitiesRequest.entity_filter)
  return entity_filter_ != NULL ? *entity_filter_
                         : *::google::datastore::admin::v1beta1::EntityFilter::internal_default_instance();
}
inline ::google::datastore::admin::v1beta1::EntityFilter* ImportEntitiesRequest::mutable_entity_filter() {
  
  if (entity_filter_ == NULL) {
    entity_filter_ = new ::google::datastore::admin::v1beta1::EntityFilter;
  }
  // @@protoc_insertion_point(field_mutable:google.datastore.admin.v1beta1.ImportEntitiesRequest.entity_filter)
  return entity_filter_;
}
inline ::google::datastore::admin::v1beta1::EntityFilter* ImportEntitiesRequest::release_entity_filter() {
  // @@protoc_insertion_point(field_release:google.datastore.admin.v1beta1.ImportEntitiesRequest.entity_filter)
  
  ::google::datastore::admin::v1beta1::EntityFilter* temp = entity_filter_;
  entity_filter_ = NULL;
  return temp;
}
inline void ImportEntitiesRequest::set_allocated_entity_filter(::google::datastore::admin::v1beta1::EntityFilter* entity_filter) {
  delete entity_filter_;
  entity_filter_ = entity_filter;
  if (entity_filter) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.datastore.admin.v1beta1.ImportEntitiesRequest.entity_filter)
}

// -------------------------------------------------------------------

// ExportEntitiesResponse

// string output_url = 1;
inline void ExportEntitiesResponse::clear_output_url() {
  output_url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ExportEntitiesResponse::output_url() const {
  // @@protoc_insertion_point(field_get:google.datastore.admin.v1beta1.ExportEntitiesResponse.output_url)
  return output_url_.GetNoArena();
}
inline void ExportEntitiesResponse::set_output_url(const ::std::string& value) {
  
  output_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.datastore.admin.v1beta1.ExportEntitiesResponse.output_url)
}
#if LANG_CXX11
inline void ExportEntitiesResponse::set_output_url(::std::string&& value) {
  
  output_url_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.datastore.admin.v1beta1.ExportEntitiesResponse.output_url)
}
#endif
inline void ExportEntitiesResponse::set_output_url(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  output_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.datastore.admin.v1beta1.ExportEntitiesResponse.output_url)
}
inline void ExportEntitiesResponse::set_output_url(const char* value, size_t size) {
  
  output_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.datastore.admin.v1beta1.ExportEntitiesResponse.output_url)
}
inline ::std::string* ExportEntitiesResponse::mutable_output_url() {
  
  // @@protoc_insertion_point(field_mutable:google.datastore.admin.v1beta1.ExportEntitiesResponse.output_url)
  return output_url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ExportEntitiesResponse::release_output_url() {
  // @@protoc_insertion_point(field_release:google.datastore.admin.v1beta1.ExportEntitiesResponse.output_url)
  
  return output_url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ExportEntitiesResponse::set_allocated_output_url(::std::string* output_url) {
  if (output_url != NULL) {
    
  } else {
    
  }
  output_url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), output_url);
  // @@protoc_insertion_point(field_set_allocated:google.datastore.admin.v1beta1.ExportEntitiesResponse.output_url)
}

// -------------------------------------------------------------------

// ExportEntitiesMetadata

// .google.datastore.admin.v1beta1.CommonMetadata common = 1;
inline bool ExportEntitiesMetadata::has_common() const {
  return this != internal_default_instance() && common_ != NULL;
}
inline void ExportEntitiesMetadata::clear_common() {
  if (GetArenaNoVirtual() == NULL && common_ != NULL) delete common_;
  common_ = NULL;
}
inline const ::google::datastore::admin::v1beta1::CommonMetadata& ExportEntitiesMetadata::common() const {
  // @@protoc_insertion_point(field_get:google.datastore.admin.v1beta1.ExportEntitiesMetadata.common)
  return common_ != NULL ? *common_
                         : *::google::datastore::admin::v1beta1::CommonMetadata::internal_default_instance();
}
inline ::google::datastore::admin::v1beta1::CommonMetadata* ExportEntitiesMetadata::mutable_common() {
  
  if (common_ == NULL) {
    common_ = new ::google::datastore::admin::v1beta1::CommonMetadata;
  }
  // @@protoc_insertion_point(field_mutable:google.datastore.admin.v1beta1.ExportEntitiesMetadata.common)
  return common_;
}
inline ::google::datastore::admin::v1beta1::CommonMetadata* ExportEntitiesMetadata::release_common() {
  // @@protoc_insertion_point(field_release:google.datastore.admin.v1beta1.ExportEntitiesMetadata.common)
  
  ::google::datastore::admin::v1beta1::CommonMetadata* temp = common_;
  common_ = NULL;
  return temp;
}
inline void ExportEntitiesMetadata::set_allocated_common(::google::datastore::admin::v1beta1::CommonMetadata* common) {
  delete common_;
  common_ = common;
  if (common) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.datastore.admin.v1beta1.ExportEntitiesMetadata.common)
}

// .google.datastore.admin.v1beta1.Progress progress_entities = 2;
inline bool ExportEntitiesMetadata::has_progress_entities() const {
  return this != internal_default_instance() && progress_entities_ != NULL;
}
inline void ExportEntitiesMetadata::clear_progress_entities() {
  if (GetArenaNoVirtual() == NULL && progress_entities_ != NULL) delete progress_entities_;
  progress_entities_ = NULL;
}
inline const ::google::datastore::admin::v1beta1::Progress& ExportEntitiesMetadata::progress_entities() const {
  // @@protoc_insertion_point(field_get:google.datastore.admin.v1beta1.ExportEntitiesMetadata.progress_entities)
  return progress_entities_ != NULL ? *progress_entities_
                         : *::google::datastore::admin::v1beta1::Progress::internal_default_instance();
}
inline ::google::datastore::admin::v1beta1::Progress* ExportEntitiesMetadata::mutable_progress_entities() {
  
  if (progress_entities_ == NULL) {
    progress_entities_ = new ::google::datastore::admin::v1beta1::Progress;
  }
  // @@protoc_insertion_point(field_mutable:google.datastore.admin.v1beta1.ExportEntitiesMetadata.progress_entities)
  return progress_entities_;
}
inline ::google::datastore::admin::v1beta1::Progress* ExportEntitiesMetadata::release_progress_entities() {
  // @@protoc_insertion_point(field_release:google.datastore.admin.v1beta1.ExportEntitiesMetadata.progress_entities)
  
  ::google::datastore::admin::v1beta1::Progress* temp = progress_entities_;
  progress_entities_ = NULL;
  return temp;
}
inline void ExportEntitiesMetadata::set_allocated_progress_entities(::google::datastore::admin::v1beta1::Progress* progress_entities) {
  delete progress_entities_;
  progress_entities_ = progress_entities;
  if (progress_entities) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.datastore.admin.v1beta1.ExportEntitiesMetadata.progress_entities)
}

// .google.datastore.admin.v1beta1.Progress progress_bytes = 3;
inline bool ExportEntitiesMetadata::has_progress_bytes() const {
  return this != internal_default_instance() && progress_bytes_ != NULL;
}
inline void ExportEntitiesMetadata::clear_progress_bytes() {
  if (GetArenaNoVirtual() == NULL && progress_bytes_ != NULL) delete progress_bytes_;
  progress_bytes_ = NULL;
}
inline const ::google::datastore::admin::v1beta1::Progress& ExportEntitiesMetadata::progress_bytes() const {
  // @@protoc_insertion_point(field_get:google.datastore.admin.v1beta1.ExportEntitiesMetadata.progress_bytes)
  return progress_bytes_ != NULL ? *progress_bytes_
                         : *::google::datastore::admin::v1beta1::Progress::internal_default_instance();
}
inline ::google::datastore::admin::v1beta1::Progress* ExportEntitiesMetadata::mutable_progress_bytes() {
  
  if (progress_bytes_ == NULL) {
    progress_bytes_ = new ::google::datastore::admin::v1beta1::Progress;
  }
  // @@protoc_insertion_point(field_mutable:google.datastore.admin.v1beta1.ExportEntitiesMetadata.progress_bytes)
  return progress_bytes_;
}
inline ::google::datastore::admin::v1beta1::Progress* ExportEntitiesMetadata::release_progress_bytes() {
  // @@protoc_insertion_point(field_release:google.datastore.admin.v1beta1.ExportEntitiesMetadata.progress_bytes)
  
  ::google::datastore::admin::v1beta1::Progress* temp = progress_bytes_;
  progress_bytes_ = NULL;
  return temp;
}
inline void ExportEntitiesMetadata::set_allocated_progress_bytes(::google::datastore::admin::v1beta1::Progress* progress_bytes) {
  delete progress_bytes_;
  progress_bytes_ = progress_bytes;
  if (progress_bytes) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.datastore.admin.v1beta1.ExportEntitiesMetadata.progress_bytes)
}

// .google.datastore.admin.v1beta1.EntityFilter entity_filter = 4;
inline bool ExportEntitiesMetadata::has_entity_filter() const {
  return this != internal_default_instance() && entity_filter_ != NULL;
}
inline void ExportEntitiesMetadata::clear_entity_filter() {
  if (GetArenaNoVirtual() == NULL && entity_filter_ != NULL) delete entity_filter_;
  entity_filter_ = NULL;
}
inline const ::google::datastore::admin::v1beta1::EntityFilter& ExportEntitiesMetadata::entity_filter() const {
  // @@protoc_insertion_point(field_get:google.datastore.admin.v1beta1.ExportEntitiesMetadata.entity_filter)
  return entity_filter_ != NULL ? *entity_filter_
                         : *::google::datastore::admin::v1beta1::EntityFilter::internal_default_instance();
}
inline ::google::datastore::admin::v1beta1::EntityFilter* ExportEntitiesMetadata::mutable_entity_filter() {
  
  if (entity_filter_ == NULL) {
    entity_filter_ = new ::google::datastore::admin::v1beta1::EntityFilter;
  }
  // @@protoc_insertion_point(field_mutable:google.datastore.admin.v1beta1.ExportEntitiesMetadata.entity_filter)
  return entity_filter_;
}
inline ::google::datastore::admin::v1beta1::EntityFilter* ExportEntitiesMetadata::release_entity_filter() {
  // @@protoc_insertion_point(field_release:google.datastore.admin.v1beta1.ExportEntitiesMetadata.entity_filter)
  
  ::google::datastore::admin::v1beta1::EntityFilter* temp = entity_filter_;
  entity_filter_ = NULL;
  return temp;
}
inline void ExportEntitiesMetadata::set_allocated_entity_filter(::google::datastore::admin::v1beta1::EntityFilter* entity_filter) {
  delete entity_filter_;
  entity_filter_ = entity_filter;
  if (entity_filter) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.datastore.admin.v1beta1.ExportEntitiesMetadata.entity_filter)
}

// string output_url_prefix = 5;
inline void ExportEntitiesMetadata::clear_output_url_prefix() {
  output_url_prefix_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ExportEntitiesMetadata::output_url_prefix() const {
  // @@protoc_insertion_point(field_get:google.datastore.admin.v1beta1.ExportEntitiesMetadata.output_url_prefix)
  return output_url_prefix_.GetNoArena();
}
inline void ExportEntitiesMetadata::set_output_url_prefix(const ::std::string& value) {
  
  output_url_prefix_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.datastore.admin.v1beta1.ExportEntitiesMetadata.output_url_prefix)
}
#if LANG_CXX11
inline void ExportEntitiesMetadata::set_output_url_prefix(::std::string&& value) {
  
  output_url_prefix_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.datastore.admin.v1beta1.ExportEntitiesMetadata.output_url_prefix)
}
#endif
inline void ExportEntitiesMetadata::set_output_url_prefix(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  output_url_prefix_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.datastore.admin.v1beta1.ExportEntitiesMetadata.output_url_prefix)
}
inline void ExportEntitiesMetadata::set_output_url_prefix(const char* value, size_t size) {
  
  output_url_prefix_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.datastore.admin.v1beta1.ExportEntitiesMetadata.output_url_prefix)
}
inline ::std::string* ExportEntitiesMetadata::mutable_output_url_prefix() {
  
  // @@protoc_insertion_point(field_mutable:google.datastore.admin.v1beta1.ExportEntitiesMetadata.output_url_prefix)
  return output_url_prefix_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ExportEntitiesMetadata::release_output_url_prefix() {
  // @@protoc_insertion_point(field_release:google.datastore.admin.v1beta1.ExportEntitiesMetadata.output_url_prefix)
  
  return output_url_prefix_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ExportEntitiesMetadata::set_allocated_output_url_prefix(::std::string* output_url_prefix) {
  if (output_url_prefix != NULL) {
    
  } else {
    
  }
  output_url_prefix_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), output_url_prefix);
  // @@protoc_insertion_point(field_set_allocated:google.datastore.admin.v1beta1.ExportEntitiesMetadata.output_url_prefix)
}

// -------------------------------------------------------------------

// ImportEntitiesMetadata

// .google.datastore.admin.v1beta1.CommonMetadata common = 1;
inline bool ImportEntitiesMetadata::has_common() const {
  return this != internal_default_instance() && common_ != NULL;
}
inline void ImportEntitiesMetadata::clear_common() {
  if (GetArenaNoVirtual() == NULL && common_ != NULL) delete common_;
  common_ = NULL;
}
inline const ::google::datastore::admin::v1beta1::CommonMetadata& ImportEntitiesMetadata::common() const {
  // @@protoc_insertion_point(field_get:google.datastore.admin.v1beta1.ImportEntitiesMetadata.common)
  return common_ != NULL ? *common_
                         : *::google::datastore::admin::v1beta1::CommonMetadata::internal_default_instance();
}
inline ::google::datastore::admin::v1beta1::CommonMetadata* ImportEntitiesMetadata::mutable_common() {
  
  if (common_ == NULL) {
    common_ = new ::google::datastore::admin::v1beta1::CommonMetadata;
  }
  // @@protoc_insertion_point(field_mutable:google.datastore.admin.v1beta1.ImportEntitiesMetadata.common)
  return common_;
}
inline ::google::datastore::admin::v1beta1::CommonMetadata* ImportEntitiesMetadata::release_common() {
  // @@protoc_insertion_point(field_release:google.datastore.admin.v1beta1.ImportEntitiesMetadata.common)
  
  ::google::datastore::admin::v1beta1::CommonMetadata* temp = common_;
  common_ = NULL;
  return temp;
}
inline void ImportEntitiesMetadata::set_allocated_common(::google::datastore::admin::v1beta1::CommonMetadata* common) {
  delete common_;
  common_ = common;
  if (common) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.datastore.admin.v1beta1.ImportEntitiesMetadata.common)
}

// .google.datastore.admin.v1beta1.Progress progress_entities = 2;
inline bool ImportEntitiesMetadata::has_progress_entities() const {
  return this != internal_default_instance() && progress_entities_ != NULL;
}
inline void ImportEntitiesMetadata::clear_progress_entities() {
  if (GetArenaNoVirtual() == NULL && progress_entities_ != NULL) delete progress_entities_;
  progress_entities_ = NULL;
}
inline const ::google::datastore::admin::v1beta1::Progress& ImportEntitiesMetadata::progress_entities() const {
  // @@protoc_insertion_point(field_get:google.datastore.admin.v1beta1.ImportEntitiesMetadata.progress_entities)
  return progress_entities_ != NULL ? *progress_entities_
                         : *::google::datastore::admin::v1beta1::Progress::internal_default_instance();
}
inline ::google::datastore::admin::v1beta1::Progress* ImportEntitiesMetadata::mutable_progress_entities() {
  
  if (progress_entities_ == NULL) {
    progress_entities_ = new ::google::datastore::admin::v1beta1::Progress;
  }
  // @@protoc_insertion_point(field_mutable:google.datastore.admin.v1beta1.ImportEntitiesMetadata.progress_entities)
  return progress_entities_;
}
inline ::google::datastore::admin::v1beta1::Progress* ImportEntitiesMetadata::release_progress_entities() {
  // @@protoc_insertion_point(field_release:google.datastore.admin.v1beta1.ImportEntitiesMetadata.progress_entities)
  
  ::google::datastore::admin::v1beta1::Progress* temp = progress_entities_;
  progress_entities_ = NULL;
  return temp;
}
inline void ImportEntitiesMetadata::set_allocated_progress_entities(::google::datastore::admin::v1beta1::Progress* progress_entities) {
  delete progress_entities_;
  progress_entities_ = progress_entities;
  if (progress_entities) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.datastore.admin.v1beta1.ImportEntitiesMetadata.progress_entities)
}

// .google.datastore.admin.v1beta1.Progress progress_bytes = 3;
inline bool ImportEntitiesMetadata::has_progress_bytes() const {
  return this != internal_default_instance() && progress_bytes_ != NULL;
}
inline void ImportEntitiesMetadata::clear_progress_bytes() {
  if (GetArenaNoVirtual() == NULL && progress_bytes_ != NULL) delete progress_bytes_;
  progress_bytes_ = NULL;
}
inline const ::google::datastore::admin::v1beta1::Progress& ImportEntitiesMetadata::progress_bytes() const {
  // @@protoc_insertion_point(field_get:google.datastore.admin.v1beta1.ImportEntitiesMetadata.progress_bytes)
  return progress_bytes_ != NULL ? *progress_bytes_
                         : *::google::datastore::admin::v1beta1::Progress::internal_default_instance();
}
inline ::google::datastore::admin::v1beta1::Progress* ImportEntitiesMetadata::mutable_progress_bytes() {
  
  if (progress_bytes_ == NULL) {
    progress_bytes_ = new ::google::datastore::admin::v1beta1::Progress;
  }
  // @@protoc_insertion_point(field_mutable:google.datastore.admin.v1beta1.ImportEntitiesMetadata.progress_bytes)
  return progress_bytes_;
}
inline ::google::datastore::admin::v1beta1::Progress* ImportEntitiesMetadata::release_progress_bytes() {
  // @@protoc_insertion_point(field_release:google.datastore.admin.v1beta1.ImportEntitiesMetadata.progress_bytes)
  
  ::google::datastore::admin::v1beta1::Progress* temp = progress_bytes_;
  progress_bytes_ = NULL;
  return temp;
}
inline void ImportEntitiesMetadata::set_allocated_progress_bytes(::google::datastore::admin::v1beta1::Progress* progress_bytes) {
  delete progress_bytes_;
  progress_bytes_ = progress_bytes;
  if (progress_bytes) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.datastore.admin.v1beta1.ImportEntitiesMetadata.progress_bytes)
}

// .google.datastore.admin.v1beta1.EntityFilter entity_filter = 4;
inline bool ImportEntitiesMetadata::has_entity_filter() const {
  return this != internal_default_instance() && entity_filter_ != NULL;
}
inline void ImportEntitiesMetadata::clear_entity_filter() {
  if (GetArenaNoVirtual() == NULL && entity_filter_ != NULL) delete entity_filter_;
  entity_filter_ = NULL;
}
inline const ::google::datastore::admin::v1beta1::EntityFilter& ImportEntitiesMetadata::entity_filter() const {
  // @@protoc_insertion_point(field_get:google.datastore.admin.v1beta1.ImportEntitiesMetadata.entity_filter)
  return entity_filter_ != NULL ? *entity_filter_
                         : *::google::datastore::admin::v1beta1::EntityFilter::internal_default_instance();
}
inline ::google::datastore::admin::v1beta1::EntityFilter* ImportEntitiesMetadata::mutable_entity_filter() {
  
  if (entity_filter_ == NULL) {
    entity_filter_ = new ::google::datastore::admin::v1beta1::EntityFilter;
  }
  // @@protoc_insertion_point(field_mutable:google.datastore.admin.v1beta1.ImportEntitiesMetadata.entity_filter)
  return entity_filter_;
}
inline ::google::datastore::admin::v1beta1::EntityFilter* ImportEntitiesMetadata::release_entity_filter() {
  // @@protoc_insertion_point(field_release:google.datastore.admin.v1beta1.ImportEntitiesMetadata.entity_filter)
  
  ::google::datastore::admin::v1beta1::EntityFilter* temp = entity_filter_;
  entity_filter_ = NULL;
  return temp;
}
inline void ImportEntitiesMetadata::set_allocated_entity_filter(::google::datastore::admin::v1beta1::EntityFilter* entity_filter) {
  delete entity_filter_;
  entity_filter_ = entity_filter;
  if (entity_filter) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.datastore.admin.v1beta1.ImportEntitiesMetadata.entity_filter)
}

// string input_url = 5;
inline void ImportEntitiesMetadata::clear_input_url() {
  input_url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ImportEntitiesMetadata::input_url() const {
  // @@protoc_insertion_point(field_get:google.datastore.admin.v1beta1.ImportEntitiesMetadata.input_url)
  return input_url_.GetNoArena();
}
inline void ImportEntitiesMetadata::set_input_url(const ::std::string& value) {
  
  input_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.datastore.admin.v1beta1.ImportEntitiesMetadata.input_url)
}
#if LANG_CXX11
inline void ImportEntitiesMetadata::set_input_url(::std::string&& value) {
  
  input_url_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.datastore.admin.v1beta1.ImportEntitiesMetadata.input_url)
}
#endif
inline void ImportEntitiesMetadata::set_input_url(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  input_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.datastore.admin.v1beta1.ImportEntitiesMetadata.input_url)
}
inline void ImportEntitiesMetadata::set_input_url(const char* value, size_t size) {
  
  input_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.datastore.admin.v1beta1.ImportEntitiesMetadata.input_url)
}
inline ::std::string* ImportEntitiesMetadata::mutable_input_url() {
  
  // @@protoc_insertion_point(field_mutable:google.datastore.admin.v1beta1.ImportEntitiesMetadata.input_url)
  return input_url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ImportEntitiesMetadata::release_input_url() {
  // @@protoc_insertion_point(field_release:google.datastore.admin.v1beta1.ImportEntitiesMetadata.input_url)
  
  return input_url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ImportEntitiesMetadata::set_allocated_input_url(::std::string* input_url) {
  if (input_url != NULL) {
    
  } else {
    
  }
  input_url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), input_url);
  // @@protoc_insertion_point(field_set_allocated:google.datastore.admin.v1beta1.ImportEntitiesMetadata.input_url)
}

// -------------------------------------------------------------------

// EntityFilter

// repeated string kinds = 1;
inline int EntityFilter::kinds_size() const {
  return kinds_.size();
}
inline void EntityFilter::clear_kinds() {
  kinds_.Clear();
}
inline const ::std::string& EntityFilter::kinds(int index) const {
  // @@protoc_insertion_point(field_get:google.datastore.admin.v1beta1.EntityFilter.kinds)
  return kinds_.Get(index);
}
inline ::std::string* EntityFilter::mutable_kinds(int index) {
  // @@protoc_insertion_point(field_mutable:google.datastore.admin.v1beta1.EntityFilter.kinds)
  return kinds_.Mutable(index);
}
inline void EntityFilter::set_kinds(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:google.datastore.admin.v1beta1.EntityFilter.kinds)
  kinds_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void EntityFilter::set_kinds(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:google.datastore.admin.v1beta1.EntityFilter.kinds)
  kinds_.Mutable(index)->assign(std::move(value));
}
#endif
inline void EntityFilter::set_kinds(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  kinds_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:google.datastore.admin.v1beta1.EntityFilter.kinds)
}
inline void EntityFilter::set_kinds(int index, const char* value, size_t size) {
  kinds_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:google.datastore.admin.v1beta1.EntityFilter.kinds)
}
inline ::std::string* EntityFilter::add_kinds() {
  // @@protoc_insertion_point(field_add_mutable:google.datastore.admin.v1beta1.EntityFilter.kinds)
  return kinds_.Add();
}
inline void EntityFilter::add_kinds(const ::std::string& value) {
  kinds_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:google.datastore.admin.v1beta1.EntityFilter.kinds)
}
#if LANG_CXX11
inline void EntityFilter::add_kinds(::std::string&& value) {
  kinds_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:google.datastore.admin.v1beta1.EntityFilter.kinds)
}
#endif
inline void EntityFilter::add_kinds(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  kinds_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:google.datastore.admin.v1beta1.EntityFilter.kinds)
}
inline void EntityFilter::add_kinds(const char* value, size_t size) {
  kinds_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:google.datastore.admin.v1beta1.EntityFilter.kinds)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
EntityFilter::kinds() const {
  // @@protoc_insertion_point(field_list:google.datastore.admin.v1beta1.EntityFilter.kinds)
  return kinds_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
EntityFilter::mutable_kinds() {
  // @@protoc_insertion_point(field_mutable_list:google.datastore.admin.v1beta1.EntityFilter.kinds)
  return &kinds_;
}

// repeated string namespace_ids = 2;
inline int EntityFilter::namespace_ids_size() const {
  return namespace_ids_.size();
}
inline void EntityFilter::clear_namespace_ids() {
  namespace_ids_.Clear();
}
inline const ::std::string& EntityFilter::namespace_ids(int index) const {
  // @@protoc_insertion_point(field_get:google.datastore.admin.v1beta1.EntityFilter.namespace_ids)
  return namespace_ids_.Get(index);
}
inline ::std::string* EntityFilter::mutable_namespace_ids(int index) {
  // @@protoc_insertion_point(field_mutable:google.datastore.admin.v1beta1.EntityFilter.namespace_ids)
  return namespace_ids_.Mutable(index);
}
inline void EntityFilter::set_namespace_ids(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:google.datastore.admin.v1beta1.EntityFilter.namespace_ids)
  namespace_ids_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void EntityFilter::set_namespace_ids(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:google.datastore.admin.v1beta1.EntityFilter.namespace_ids)
  namespace_ids_.Mutable(index)->assign(std::move(value));
}
#endif
inline void EntityFilter::set_namespace_ids(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  namespace_ids_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:google.datastore.admin.v1beta1.EntityFilter.namespace_ids)
}
inline void EntityFilter::set_namespace_ids(int index, const char* value, size_t size) {
  namespace_ids_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:google.datastore.admin.v1beta1.EntityFilter.namespace_ids)
}
inline ::std::string* EntityFilter::add_namespace_ids() {
  // @@protoc_insertion_point(field_add_mutable:google.datastore.admin.v1beta1.EntityFilter.namespace_ids)
  return namespace_ids_.Add();
}
inline void EntityFilter::add_namespace_ids(const ::std::string& value) {
  namespace_ids_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:google.datastore.admin.v1beta1.EntityFilter.namespace_ids)
}
#if LANG_CXX11
inline void EntityFilter::add_namespace_ids(::std::string&& value) {
  namespace_ids_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:google.datastore.admin.v1beta1.EntityFilter.namespace_ids)
}
#endif
inline void EntityFilter::add_namespace_ids(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  namespace_ids_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:google.datastore.admin.v1beta1.EntityFilter.namespace_ids)
}
inline void EntityFilter::add_namespace_ids(const char* value, size_t size) {
  namespace_ids_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:google.datastore.admin.v1beta1.EntityFilter.namespace_ids)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
EntityFilter::namespace_ids() const {
  // @@protoc_insertion_point(field_list:google.datastore.admin.v1beta1.EntityFilter.namespace_ids)
  return namespace_ids_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
EntityFilter::mutable_namespace_ids() {
  // @@protoc_insertion_point(field_mutable_list:google.datastore.admin.v1beta1.EntityFilter.namespace_ids)
  return &namespace_ids_;
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace v1beta1
}  // namespace admin
}  // namespace datastore
}  // namespace google

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::google::datastore::admin::v1beta1::CommonMetadata_State> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::datastore::admin::v1beta1::CommonMetadata_State>() {
  return ::google::datastore::admin::v1beta1::CommonMetadata_State_descriptor();
}
template <> struct is_proto_enum< ::google::datastore::admin::v1beta1::OperationType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::datastore::admin::v1beta1::OperationType>() {
  return ::google::datastore::admin::v1beta1::OperationType_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_google_2fdatastore_2fadmin_2fv1beta1_2fdatastore_5fadmin_2eproto__INCLUDED
