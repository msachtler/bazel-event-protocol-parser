# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/datastore/admin/v1beta1/datastore_admin.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf.internal import enum_type_wrapper
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from google.api import annotations_pb2 as google_dot_api_dot_annotations__pb2
from google.longrunning import operations_pb2 as google_dot_longrunning_dot_operations__pb2
from google.protobuf import timestamp_pb2 as google_dot_protobuf_dot_timestamp__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='google/datastore/admin/v1beta1/datastore_admin.proto',
  package='google.datastore.admin.v1beta1',
  syntax='proto3',
  serialized_pb=_b('\n4google/datastore/admin/v1beta1/datastore_admin.proto\x12\x1egoogle.datastore.admin.v1beta1\x1a\x1cgoogle/api/annotations.proto\x1a#google/longrunning/operations.proto\x1a\x1fgoogle/protobuf/timestamp.proto\"\x83\x04\n\x0e\x43ommonMetadata\x12.\n\nstart_time\x18\x01 \x01(\x0b\x32\x1a.google.protobuf.Timestamp\x12,\n\x08\x65nd_time\x18\x02 \x01(\x0b\x32\x1a.google.protobuf.Timestamp\x12\x45\n\x0eoperation_type\x18\x03 \x01(\x0e\x32-.google.datastore.admin.v1beta1.OperationType\x12J\n\x06labels\x18\x04 \x03(\x0b\x32:.google.datastore.admin.v1beta1.CommonMetadata.LabelsEntry\x12\x43\n\x05state\x18\x05 \x01(\x0e\x32\x34.google.datastore.admin.v1beta1.CommonMetadata.State\x1a-\n\x0bLabelsEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"\x8b\x01\n\x05State\x12\x15\n\x11STATE_UNSPECIFIED\x10\x00\x12\x10\n\x0cINITIALIZING\x10\x01\x12\x0e\n\nPROCESSING\x10\x02\x12\x0e\n\nCANCELLING\x10\x03\x12\x0e\n\nFINALIZING\x10\x04\x12\x0e\n\nSUCCESSFUL\x10\x05\x12\n\n\x06\x46\x41ILED\x10\x06\x12\r\n\tCANCELLED\x10\x07\":\n\x08Progress\x12\x16\n\x0ework_completed\x18\x01 \x01(\x03\x12\x16\n\x0ework_estimated\x18\x02 \x01(\x03\"\x8d\x02\n\x15\x45xportEntitiesRequest\x12\x12\n\nproject_id\x18\x01 \x01(\t\x12Q\n\x06labels\x18\x02 \x03(\x0b\x32\x41.google.datastore.admin.v1beta1.ExportEntitiesRequest.LabelsEntry\x12\x43\n\rentity_filter\x18\x03 \x01(\x0b\x32,.google.datastore.admin.v1beta1.EntityFilter\x12\x19\n\x11output_url_prefix\x18\x04 \x01(\t\x1a-\n\x0bLabelsEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"\x85\x02\n\x15ImportEntitiesRequest\x12\x12\n\nproject_id\x18\x01 \x01(\t\x12Q\n\x06labels\x18\x02 \x03(\x0b\x32\x41.google.datastore.admin.v1beta1.ImportEntitiesRequest.LabelsEntry\x12\x11\n\tinput_url\x18\x03 \x01(\t\x12\x43\n\rentity_filter\x18\x04 \x01(\x0b\x32,.google.datastore.admin.v1beta1.EntityFilter\x1a-\n\x0bLabelsEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\",\n\x16\x45xportEntitiesResponse\x12\x12\n\noutput_url\x18\x01 \x01(\t\"\xbf\x02\n\x16\x45xportEntitiesMetadata\x12>\n\x06\x63ommon\x18\x01 \x01(\x0b\x32..google.datastore.admin.v1beta1.CommonMetadata\x12\x43\n\x11progress_entities\x18\x02 \x01(\x0b\x32(.google.datastore.admin.v1beta1.Progress\x12@\n\x0eprogress_bytes\x18\x03 \x01(\x0b\x32(.google.datastore.admin.v1beta1.Progress\x12\x43\n\rentity_filter\x18\x04 \x01(\x0b\x32,.google.datastore.admin.v1beta1.EntityFilter\x12\x19\n\x11output_url_prefix\x18\x05 \x01(\t\"\xb7\x02\n\x16ImportEntitiesMetadata\x12>\n\x06\x63ommon\x18\x01 \x01(\x0b\x32..google.datastore.admin.v1beta1.CommonMetadata\x12\x43\n\x11progress_entities\x18\x02 \x01(\x0b\x32(.google.datastore.admin.v1beta1.Progress\x12@\n\x0eprogress_bytes\x18\x03 \x01(\x0b\x32(.google.datastore.admin.v1beta1.Progress\x12\x43\n\rentity_filter\x18\x04 \x01(\x0b\x32,.google.datastore.admin.v1beta1.EntityFilter\x12\x11\n\tinput_url\x18\x05 \x01(\t\"4\n\x0c\x45ntityFilter\x12\r\n\x05kinds\x18\x01 \x03(\t\x12\x15\n\rnamespace_ids\x18\x02 \x03(\t*Y\n\rOperationType\x12\x1e\n\x1aOPERATION_TYPE_UNSPECIFIED\x10\x00\x12\x13\n\x0f\x45XPORT_ENTITIES\x10\x01\x12\x13\n\x0fIMPORT_ENTITIES\x10\x02\x32\xc6\x02\n\x0e\x44\x61tastoreAdmin\x12\x98\x01\n\x0e\x45xportEntities\x12\x35.google.datastore.admin.v1beta1.ExportEntitiesRequest\x1a\x1d.google.longrunning.Operation\"0\x82\xd3\xe4\x93\x02*\"%/v1beta1/projects/{project_id}:export:\x01*\x12\x98\x01\n\x0eImportEntities\x12\x35.google.datastore.admin.v1beta1.ImportEntitiesRequest\x1a\x1d.google.longrunning.Operation\"0\x82\xd3\xe4\x93\x02*\"%/v1beta1/projects/{project_id}:import:\x01*B\xa7\x01\n\"com.google.datastore.admin.v1beta1B\x13\x44\x61tastoreAdminProtoP\x01ZCgoogle.golang.org/genproto/googleapis/datastore/admin/v1beta1;admin\xaa\x02$Google.Cloud.Datastore.Admin.V1Beta1b\x06proto3')
  ,
  dependencies=[google_dot_api_dot_annotations__pb2.DESCRIPTOR,google_dot_longrunning_dot_operations__pb2.DESCRIPTOR,google_dot_protobuf_dot_timestamp__pb2.DESCRIPTOR,])

_OPERATIONTYPE = _descriptor.EnumDescriptor(
  name='OperationType',
  full_name='google.datastore.admin.v1beta1.OperationType',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='OPERATION_TYPE_UNSPECIFIED', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='EXPORT_ENTITIES', index=1, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='IMPORT_ENTITIES', index=2, number=2,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=2038,
  serialized_end=2127,
)
_sym_db.RegisterEnumDescriptor(_OPERATIONTYPE)

OperationType = enum_type_wrapper.EnumTypeWrapper(_OPERATIONTYPE)
OPERATION_TYPE_UNSPECIFIED = 0
EXPORT_ENTITIES = 1
IMPORT_ENTITIES = 2


_COMMONMETADATA_STATE = _descriptor.EnumDescriptor(
  name='State',
  full_name='google.datastore.admin.v1beta1.CommonMetadata.State',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='STATE_UNSPECIFIED', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='INITIALIZING', index=1, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='PROCESSING', index=2, number=2,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='CANCELLING', index=3, number=3,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='FINALIZING', index=4, number=4,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='SUCCESSFUL', index=5, number=5,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='FAILED', index=6, number=6,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='CANCELLED', index=7, number=7,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=565,
  serialized_end=704,
)
_sym_db.RegisterEnumDescriptor(_COMMONMETADATA_STATE)


_COMMONMETADATA_LABELSENTRY = _descriptor.Descriptor(
  name='LabelsEntry',
  full_name='google.datastore.admin.v1beta1.CommonMetadata.LabelsEntry',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='key', full_name='google.datastore.admin.v1beta1.CommonMetadata.LabelsEntry.key', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='value', full_name='google.datastore.admin.v1beta1.CommonMetadata.LabelsEntry.value', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=_descriptor._ParseOptions(descriptor_pb2.MessageOptions(), _b('8\001')),
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=517,
  serialized_end=562,
)

_COMMONMETADATA = _descriptor.Descriptor(
  name='CommonMetadata',
  full_name='google.datastore.admin.v1beta1.CommonMetadata',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='start_time', full_name='google.datastore.admin.v1beta1.CommonMetadata.start_time', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='end_time', full_name='google.datastore.admin.v1beta1.CommonMetadata.end_time', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='operation_type', full_name='google.datastore.admin.v1beta1.CommonMetadata.operation_type', index=2,
      number=3, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='labels', full_name='google.datastore.admin.v1beta1.CommonMetadata.labels', index=3,
      number=4, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='state', full_name='google.datastore.admin.v1beta1.CommonMetadata.state', index=4,
      number=5, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[_COMMONMETADATA_LABELSENTRY, ],
  enum_types=[
    _COMMONMETADATA_STATE,
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=189,
  serialized_end=704,
)


_PROGRESS = _descriptor.Descriptor(
  name='Progress',
  full_name='google.datastore.admin.v1beta1.Progress',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='work_completed', full_name='google.datastore.admin.v1beta1.Progress.work_completed', index=0,
      number=1, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='work_estimated', full_name='google.datastore.admin.v1beta1.Progress.work_estimated', index=1,
      number=2, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=706,
  serialized_end=764,
)


_EXPORTENTITIESREQUEST_LABELSENTRY = _descriptor.Descriptor(
  name='LabelsEntry',
  full_name='google.datastore.admin.v1beta1.ExportEntitiesRequest.LabelsEntry',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='key', full_name='google.datastore.admin.v1beta1.ExportEntitiesRequest.LabelsEntry.key', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='value', full_name='google.datastore.admin.v1beta1.ExportEntitiesRequest.LabelsEntry.value', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=_descriptor._ParseOptions(descriptor_pb2.MessageOptions(), _b('8\001')),
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=517,
  serialized_end=562,
)

_EXPORTENTITIESREQUEST = _descriptor.Descriptor(
  name='ExportEntitiesRequest',
  full_name='google.datastore.admin.v1beta1.ExportEntitiesRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='project_id', full_name='google.datastore.admin.v1beta1.ExportEntitiesRequest.project_id', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='labels', full_name='google.datastore.admin.v1beta1.ExportEntitiesRequest.labels', index=1,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='entity_filter', full_name='google.datastore.admin.v1beta1.ExportEntitiesRequest.entity_filter', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='output_url_prefix', full_name='google.datastore.admin.v1beta1.ExportEntitiesRequest.output_url_prefix', index=3,
      number=4, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[_EXPORTENTITIESREQUEST_LABELSENTRY, ],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=767,
  serialized_end=1036,
)


_IMPORTENTITIESREQUEST_LABELSENTRY = _descriptor.Descriptor(
  name='LabelsEntry',
  full_name='google.datastore.admin.v1beta1.ImportEntitiesRequest.LabelsEntry',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='key', full_name='google.datastore.admin.v1beta1.ImportEntitiesRequest.LabelsEntry.key', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='value', full_name='google.datastore.admin.v1beta1.ImportEntitiesRequest.LabelsEntry.value', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=_descriptor._ParseOptions(descriptor_pb2.MessageOptions(), _b('8\001')),
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=517,
  serialized_end=562,
)

_IMPORTENTITIESREQUEST = _descriptor.Descriptor(
  name='ImportEntitiesRequest',
  full_name='google.datastore.admin.v1beta1.ImportEntitiesRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='project_id', full_name='google.datastore.admin.v1beta1.ImportEntitiesRequest.project_id', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='labels', full_name='google.datastore.admin.v1beta1.ImportEntitiesRequest.labels', index=1,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='input_url', full_name='google.datastore.admin.v1beta1.ImportEntitiesRequest.input_url', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='entity_filter', full_name='google.datastore.admin.v1beta1.ImportEntitiesRequest.entity_filter', index=3,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[_IMPORTENTITIESREQUEST_LABELSENTRY, ],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1039,
  serialized_end=1300,
)


_EXPORTENTITIESRESPONSE = _descriptor.Descriptor(
  name='ExportEntitiesResponse',
  full_name='google.datastore.admin.v1beta1.ExportEntitiesResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='output_url', full_name='google.datastore.admin.v1beta1.ExportEntitiesResponse.output_url', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1302,
  serialized_end=1346,
)


_EXPORTENTITIESMETADATA = _descriptor.Descriptor(
  name='ExportEntitiesMetadata',
  full_name='google.datastore.admin.v1beta1.ExportEntitiesMetadata',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='common', full_name='google.datastore.admin.v1beta1.ExportEntitiesMetadata.common', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='progress_entities', full_name='google.datastore.admin.v1beta1.ExportEntitiesMetadata.progress_entities', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='progress_bytes', full_name='google.datastore.admin.v1beta1.ExportEntitiesMetadata.progress_bytes', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='entity_filter', full_name='google.datastore.admin.v1beta1.ExportEntitiesMetadata.entity_filter', index=3,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='output_url_prefix', full_name='google.datastore.admin.v1beta1.ExportEntitiesMetadata.output_url_prefix', index=4,
      number=5, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1349,
  serialized_end=1668,
)


_IMPORTENTITIESMETADATA = _descriptor.Descriptor(
  name='ImportEntitiesMetadata',
  full_name='google.datastore.admin.v1beta1.ImportEntitiesMetadata',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='common', full_name='google.datastore.admin.v1beta1.ImportEntitiesMetadata.common', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='progress_entities', full_name='google.datastore.admin.v1beta1.ImportEntitiesMetadata.progress_entities', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='progress_bytes', full_name='google.datastore.admin.v1beta1.ImportEntitiesMetadata.progress_bytes', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='entity_filter', full_name='google.datastore.admin.v1beta1.ImportEntitiesMetadata.entity_filter', index=3,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='input_url', full_name='google.datastore.admin.v1beta1.ImportEntitiesMetadata.input_url', index=4,
      number=5, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1671,
  serialized_end=1982,
)


_ENTITYFILTER = _descriptor.Descriptor(
  name='EntityFilter',
  full_name='google.datastore.admin.v1beta1.EntityFilter',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='kinds', full_name='google.datastore.admin.v1beta1.EntityFilter.kinds', index=0,
      number=1, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='namespace_ids', full_name='google.datastore.admin.v1beta1.EntityFilter.namespace_ids', index=1,
      number=2, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1984,
  serialized_end=2036,
)

_COMMONMETADATA_LABELSENTRY.containing_type = _COMMONMETADATA
_COMMONMETADATA.fields_by_name['start_time'].message_type = google_dot_protobuf_dot_timestamp__pb2._TIMESTAMP
_COMMONMETADATA.fields_by_name['end_time'].message_type = google_dot_protobuf_dot_timestamp__pb2._TIMESTAMP
_COMMONMETADATA.fields_by_name['operation_type'].enum_type = _OPERATIONTYPE
_COMMONMETADATA.fields_by_name['labels'].message_type = _COMMONMETADATA_LABELSENTRY
_COMMONMETADATA.fields_by_name['state'].enum_type = _COMMONMETADATA_STATE
_COMMONMETADATA_STATE.containing_type = _COMMONMETADATA
_EXPORTENTITIESREQUEST_LABELSENTRY.containing_type = _EXPORTENTITIESREQUEST
_EXPORTENTITIESREQUEST.fields_by_name['labels'].message_type = _EXPORTENTITIESREQUEST_LABELSENTRY
_EXPORTENTITIESREQUEST.fields_by_name['entity_filter'].message_type = _ENTITYFILTER
_IMPORTENTITIESREQUEST_LABELSENTRY.containing_type = _IMPORTENTITIESREQUEST
_IMPORTENTITIESREQUEST.fields_by_name['labels'].message_type = _IMPORTENTITIESREQUEST_LABELSENTRY
_IMPORTENTITIESREQUEST.fields_by_name['entity_filter'].message_type = _ENTITYFILTER
_EXPORTENTITIESMETADATA.fields_by_name['common'].message_type = _COMMONMETADATA
_EXPORTENTITIESMETADATA.fields_by_name['progress_entities'].message_type = _PROGRESS
_EXPORTENTITIESMETADATA.fields_by_name['progress_bytes'].message_type = _PROGRESS
_EXPORTENTITIESMETADATA.fields_by_name['entity_filter'].message_type = _ENTITYFILTER
_IMPORTENTITIESMETADATA.fields_by_name['common'].message_type = _COMMONMETADATA
_IMPORTENTITIESMETADATA.fields_by_name['progress_entities'].message_type = _PROGRESS
_IMPORTENTITIESMETADATA.fields_by_name['progress_bytes'].message_type = _PROGRESS
_IMPORTENTITIESMETADATA.fields_by_name['entity_filter'].message_type = _ENTITYFILTER
DESCRIPTOR.message_types_by_name['CommonMetadata'] = _COMMONMETADATA
DESCRIPTOR.message_types_by_name['Progress'] = _PROGRESS
DESCRIPTOR.message_types_by_name['ExportEntitiesRequest'] = _EXPORTENTITIESREQUEST
DESCRIPTOR.message_types_by_name['ImportEntitiesRequest'] = _IMPORTENTITIESREQUEST
DESCRIPTOR.message_types_by_name['ExportEntitiesResponse'] = _EXPORTENTITIESRESPONSE
DESCRIPTOR.message_types_by_name['ExportEntitiesMetadata'] = _EXPORTENTITIESMETADATA
DESCRIPTOR.message_types_by_name['ImportEntitiesMetadata'] = _IMPORTENTITIESMETADATA
DESCRIPTOR.message_types_by_name['EntityFilter'] = _ENTITYFILTER
DESCRIPTOR.enum_types_by_name['OperationType'] = _OPERATIONTYPE
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

CommonMetadata = _reflection.GeneratedProtocolMessageType('CommonMetadata', (_message.Message,), dict(

  LabelsEntry = _reflection.GeneratedProtocolMessageType('LabelsEntry', (_message.Message,), dict(
    DESCRIPTOR = _COMMONMETADATA_LABELSENTRY,
    __module__ = 'google.datastore.admin.v1beta1.datastore_admin_pb2'
    # @@protoc_insertion_point(class_scope:google.datastore.admin.v1beta1.CommonMetadata.LabelsEntry)
    ))
  ,
  DESCRIPTOR = _COMMONMETADATA,
  __module__ = 'google.datastore.admin.v1beta1.datastore_admin_pb2'
  # @@protoc_insertion_point(class_scope:google.datastore.admin.v1beta1.CommonMetadata)
  ))
_sym_db.RegisterMessage(CommonMetadata)
_sym_db.RegisterMessage(CommonMetadata.LabelsEntry)

Progress = _reflection.GeneratedProtocolMessageType('Progress', (_message.Message,), dict(
  DESCRIPTOR = _PROGRESS,
  __module__ = 'google.datastore.admin.v1beta1.datastore_admin_pb2'
  # @@protoc_insertion_point(class_scope:google.datastore.admin.v1beta1.Progress)
  ))
_sym_db.RegisterMessage(Progress)

ExportEntitiesRequest = _reflection.GeneratedProtocolMessageType('ExportEntitiesRequest', (_message.Message,), dict(

  LabelsEntry = _reflection.GeneratedProtocolMessageType('LabelsEntry', (_message.Message,), dict(
    DESCRIPTOR = _EXPORTENTITIESREQUEST_LABELSENTRY,
    __module__ = 'google.datastore.admin.v1beta1.datastore_admin_pb2'
    # @@protoc_insertion_point(class_scope:google.datastore.admin.v1beta1.ExportEntitiesRequest.LabelsEntry)
    ))
  ,
  DESCRIPTOR = _EXPORTENTITIESREQUEST,
  __module__ = 'google.datastore.admin.v1beta1.datastore_admin_pb2'
  # @@protoc_insertion_point(class_scope:google.datastore.admin.v1beta1.ExportEntitiesRequest)
  ))
_sym_db.RegisterMessage(ExportEntitiesRequest)
_sym_db.RegisterMessage(ExportEntitiesRequest.LabelsEntry)

ImportEntitiesRequest = _reflection.GeneratedProtocolMessageType('ImportEntitiesRequest', (_message.Message,), dict(

  LabelsEntry = _reflection.GeneratedProtocolMessageType('LabelsEntry', (_message.Message,), dict(
    DESCRIPTOR = _IMPORTENTITIESREQUEST_LABELSENTRY,
    __module__ = 'google.datastore.admin.v1beta1.datastore_admin_pb2'
    # @@protoc_insertion_point(class_scope:google.datastore.admin.v1beta1.ImportEntitiesRequest.LabelsEntry)
    ))
  ,
  DESCRIPTOR = _IMPORTENTITIESREQUEST,
  __module__ = 'google.datastore.admin.v1beta1.datastore_admin_pb2'
  # @@protoc_insertion_point(class_scope:google.datastore.admin.v1beta1.ImportEntitiesRequest)
  ))
_sym_db.RegisterMessage(ImportEntitiesRequest)
_sym_db.RegisterMessage(ImportEntitiesRequest.LabelsEntry)

ExportEntitiesResponse = _reflection.GeneratedProtocolMessageType('ExportEntitiesResponse', (_message.Message,), dict(
  DESCRIPTOR = _EXPORTENTITIESRESPONSE,
  __module__ = 'google.datastore.admin.v1beta1.datastore_admin_pb2'
  # @@protoc_insertion_point(class_scope:google.datastore.admin.v1beta1.ExportEntitiesResponse)
  ))
_sym_db.RegisterMessage(ExportEntitiesResponse)

ExportEntitiesMetadata = _reflection.GeneratedProtocolMessageType('ExportEntitiesMetadata', (_message.Message,), dict(
  DESCRIPTOR = _EXPORTENTITIESMETADATA,
  __module__ = 'google.datastore.admin.v1beta1.datastore_admin_pb2'
  # @@protoc_insertion_point(class_scope:google.datastore.admin.v1beta1.ExportEntitiesMetadata)
  ))
_sym_db.RegisterMessage(ExportEntitiesMetadata)

ImportEntitiesMetadata = _reflection.GeneratedProtocolMessageType('ImportEntitiesMetadata', (_message.Message,), dict(
  DESCRIPTOR = _IMPORTENTITIESMETADATA,
  __module__ = 'google.datastore.admin.v1beta1.datastore_admin_pb2'
  # @@protoc_insertion_point(class_scope:google.datastore.admin.v1beta1.ImportEntitiesMetadata)
  ))
_sym_db.RegisterMessage(ImportEntitiesMetadata)

EntityFilter = _reflection.GeneratedProtocolMessageType('EntityFilter', (_message.Message,), dict(
  DESCRIPTOR = _ENTITYFILTER,
  __module__ = 'google.datastore.admin.v1beta1.datastore_admin_pb2'
  # @@protoc_insertion_point(class_scope:google.datastore.admin.v1beta1.EntityFilter)
  ))
_sym_db.RegisterMessage(EntityFilter)


DESCRIPTOR.has_options = True
DESCRIPTOR._options = _descriptor._ParseOptions(descriptor_pb2.FileOptions(), _b('\n\"com.google.datastore.admin.v1beta1B\023DatastoreAdminProtoP\001ZCgoogle.golang.org/genproto/googleapis/datastore/admin/v1beta1;admin\252\002$Google.Cloud.Datastore.Admin.V1Beta1'))
_COMMONMETADATA_LABELSENTRY.has_options = True
_COMMONMETADATA_LABELSENTRY._options = _descriptor._ParseOptions(descriptor_pb2.MessageOptions(), _b('8\001'))
_EXPORTENTITIESREQUEST_LABELSENTRY.has_options = True
_EXPORTENTITIESREQUEST_LABELSENTRY._options = _descriptor._ParseOptions(descriptor_pb2.MessageOptions(), _b('8\001'))
_IMPORTENTITIESREQUEST_LABELSENTRY.has_options = True
_IMPORTENTITIESREQUEST_LABELSENTRY._options = _descriptor._ParseOptions(descriptor_pb2.MessageOptions(), _b('8\001'))
try:
  # THESE ELEMENTS WILL BE DEPRECATED.
  # Please use the generated *_pb2_grpc.py files instead.
  import grpc
  from grpc.beta import implementations as beta_implementations
  from grpc.beta import interfaces as beta_interfaces
  from grpc.framework.common import cardinality
  from grpc.framework.interfaces.face import utilities as face_utilities


  class DatastoreAdminStub(object):
    """Google Cloud Datastore Admin API

    The Datastore Admin API provides several admin services for Cloud Datastore.

    -----------------------------------------------------------------------------
    ## Concepts

    Project, namespace, kind, and entity as defined in the Google Cloud Datastore
    API.

    Operation: An Operation represents work being performed in the background.

    EntityFilter: Allows specifying a subset of entities in a project. This is
    specified as a combination of kinds and namespaces (either or both of which
    may be all).

    -----------------------------------------------------------------------------
    ## Services

    # Export/Import

    The Export/Import service provides the ability to copy all or a subset of
    entities to/from Google Cloud Storage.

    Exported data may be imported into Cloud Datastore for any Google Cloud
    Platform project. It is not restricted to the export source project. It is
    possible to export from one project and then import into another.

    Exported data can also be loaded into Google BigQuery for analysis.

    Exports and imports are performed asynchronously. An Operation resource is
    created for each export/import. The state (including any errors encountered)
    of the export/import may be queried via the Operation resource.

    # Operation

    The Operations collection provides a record of actions performed for the
    specified project (including any operations in progress). Operations are not
    created directly but through calls on other collections or resources.

    An operation that is not yet done may be cancelled. The request to cancel is
    asynchronous and the operation may continue to run for some time after the
    request to cancel is made.

    An operation that is done may be deleted so that it is no longer listed as
    part of the Operation collection.

    ListOperations returns all pending operations, but not completed operations.

    Operations are created by service DatastoreAdmin,
    but are accessed via service google.longrunning.Operations.
    """

    def __init__(self, channel):
      """Constructor.

      Args:
        channel: A grpc.Channel.
      """
      self.ExportEntities = channel.unary_unary(
          '/google.datastore.admin.v1beta1.DatastoreAdmin/ExportEntities',
          request_serializer=ExportEntitiesRequest.SerializeToString,
          response_deserializer=google_dot_longrunning_dot_operations__pb2.Operation.FromString,
          )
      self.ImportEntities = channel.unary_unary(
          '/google.datastore.admin.v1beta1.DatastoreAdmin/ImportEntities',
          request_serializer=ImportEntitiesRequest.SerializeToString,
          response_deserializer=google_dot_longrunning_dot_operations__pb2.Operation.FromString,
          )


  class DatastoreAdminServicer(object):
    """Google Cloud Datastore Admin API

    The Datastore Admin API provides several admin services for Cloud Datastore.

    -----------------------------------------------------------------------------
    ## Concepts

    Project, namespace, kind, and entity as defined in the Google Cloud Datastore
    API.

    Operation: An Operation represents work being performed in the background.

    EntityFilter: Allows specifying a subset of entities in a project. This is
    specified as a combination of kinds and namespaces (either or both of which
    may be all).

    -----------------------------------------------------------------------------
    ## Services

    # Export/Import

    The Export/Import service provides the ability to copy all or a subset of
    entities to/from Google Cloud Storage.

    Exported data may be imported into Cloud Datastore for any Google Cloud
    Platform project. It is not restricted to the export source project. It is
    possible to export from one project and then import into another.

    Exported data can also be loaded into Google BigQuery for analysis.

    Exports and imports are performed asynchronously. An Operation resource is
    created for each export/import. The state (including any errors encountered)
    of the export/import may be queried via the Operation resource.

    # Operation

    The Operations collection provides a record of actions performed for the
    specified project (including any operations in progress). Operations are not
    created directly but through calls on other collections or resources.

    An operation that is not yet done may be cancelled. The request to cancel is
    asynchronous and the operation may continue to run for some time after the
    request to cancel is made.

    An operation that is done may be deleted so that it is no longer listed as
    part of the Operation collection.

    ListOperations returns all pending operations, but not completed operations.

    Operations are created by service DatastoreAdmin,
    but are accessed via service google.longrunning.Operations.
    """

    def ExportEntities(self, request, context):
      """Exports a copy of all or a subset of entities from Google Cloud Datastore
      to another storage system, such as Google Cloud Storage. Recent updates to
      entities may not be reflected in the export. The export occurs in the
      background and its progress can be monitored and managed via the
      Operation resource that is created. The output of an export may only be
      used once the associated operation is done. If an export operation is
      cancelled before completion it may leave partial data behind in Google
      Cloud Storage.
      """
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def ImportEntities(self, request, context):
      """Imports entities into Google Cloud Datastore. Existing entities with the
      same key are overwritten. The import occurs in the background and its
      progress can be monitored and managed via the Operation resource that is
      created. If an ImportEntities operation is cancelled, it is possible
      that a subset of the data has already been imported to Cloud Datastore.
      """
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')


  def add_DatastoreAdminServicer_to_server(servicer, server):
    rpc_method_handlers = {
        'ExportEntities': grpc.unary_unary_rpc_method_handler(
            servicer.ExportEntities,
            request_deserializer=ExportEntitiesRequest.FromString,
            response_serializer=google_dot_longrunning_dot_operations__pb2.Operation.SerializeToString,
        ),
        'ImportEntities': grpc.unary_unary_rpc_method_handler(
            servicer.ImportEntities,
            request_deserializer=ImportEntitiesRequest.FromString,
            response_serializer=google_dot_longrunning_dot_operations__pb2.Operation.SerializeToString,
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
        'google.datastore.admin.v1beta1.DatastoreAdmin', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


  class BetaDatastoreAdminServicer(object):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This class was generated
    only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0."""
    """Google Cloud Datastore Admin API

    The Datastore Admin API provides several admin services for Cloud Datastore.

    -----------------------------------------------------------------------------
    ## Concepts

    Project, namespace, kind, and entity as defined in the Google Cloud Datastore
    API.

    Operation: An Operation represents work being performed in the background.

    EntityFilter: Allows specifying a subset of entities in a project. This is
    specified as a combination of kinds and namespaces (either or both of which
    may be all).

    -----------------------------------------------------------------------------
    ## Services

    # Export/Import

    The Export/Import service provides the ability to copy all or a subset of
    entities to/from Google Cloud Storage.

    Exported data may be imported into Cloud Datastore for any Google Cloud
    Platform project. It is not restricted to the export source project. It is
    possible to export from one project and then import into another.

    Exported data can also be loaded into Google BigQuery for analysis.

    Exports and imports are performed asynchronously. An Operation resource is
    created for each export/import. The state (including any errors encountered)
    of the export/import may be queried via the Operation resource.

    # Operation

    The Operations collection provides a record of actions performed for the
    specified project (including any operations in progress). Operations are not
    created directly but through calls on other collections or resources.

    An operation that is not yet done may be cancelled. The request to cancel is
    asynchronous and the operation may continue to run for some time after the
    request to cancel is made.

    An operation that is done may be deleted so that it is no longer listed as
    part of the Operation collection.

    ListOperations returns all pending operations, but not completed operations.

    Operations are created by service DatastoreAdmin,
    but are accessed via service google.longrunning.Operations.
    """
    def ExportEntities(self, request, context):
      """Exports a copy of all or a subset of entities from Google Cloud Datastore
      to another storage system, such as Google Cloud Storage. Recent updates to
      entities may not be reflected in the export. The export occurs in the
      background and its progress can be monitored and managed via the
      Operation resource that is created. The output of an export may only be
      used once the associated operation is done. If an export operation is
      cancelled before completion it may leave partial data behind in Google
      Cloud Storage.
      """
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def ImportEntities(self, request, context):
      """Imports entities into Google Cloud Datastore. Existing entities with the
      same key are overwritten. The import occurs in the background and its
      progress can be monitored and managed via the Operation resource that is
      created. If an ImportEntities operation is cancelled, it is possible
      that a subset of the data has already been imported to Cloud Datastore.
      """
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)


  class BetaDatastoreAdminStub(object):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This class was generated
    only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0."""
    """Google Cloud Datastore Admin API

    The Datastore Admin API provides several admin services for Cloud Datastore.

    -----------------------------------------------------------------------------
    ## Concepts

    Project, namespace, kind, and entity as defined in the Google Cloud Datastore
    API.

    Operation: An Operation represents work being performed in the background.

    EntityFilter: Allows specifying a subset of entities in a project. This is
    specified as a combination of kinds and namespaces (either or both of which
    may be all).

    -----------------------------------------------------------------------------
    ## Services

    # Export/Import

    The Export/Import service provides the ability to copy all or a subset of
    entities to/from Google Cloud Storage.

    Exported data may be imported into Cloud Datastore for any Google Cloud
    Platform project. It is not restricted to the export source project. It is
    possible to export from one project and then import into another.

    Exported data can also be loaded into Google BigQuery for analysis.

    Exports and imports are performed asynchronously. An Operation resource is
    created for each export/import. The state (including any errors encountered)
    of the export/import may be queried via the Operation resource.

    # Operation

    The Operations collection provides a record of actions performed for the
    specified project (including any operations in progress). Operations are not
    created directly but through calls on other collections or resources.

    An operation that is not yet done may be cancelled. The request to cancel is
    asynchronous and the operation may continue to run for some time after the
    request to cancel is made.

    An operation that is done may be deleted so that it is no longer listed as
    part of the Operation collection.

    ListOperations returns all pending operations, but not completed operations.

    Operations are created by service DatastoreAdmin,
    but are accessed via service google.longrunning.Operations.
    """
    def ExportEntities(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      """Exports a copy of all or a subset of entities from Google Cloud Datastore
      to another storage system, such as Google Cloud Storage. Recent updates to
      entities may not be reflected in the export. The export occurs in the
      background and its progress can be monitored and managed via the
      Operation resource that is created. The output of an export may only be
      used once the associated operation is done. If an export operation is
      cancelled before completion it may leave partial data behind in Google
      Cloud Storage.
      """
      raise NotImplementedError()
    ExportEntities.future = None
    def ImportEntities(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      """Imports entities into Google Cloud Datastore. Existing entities with the
      same key are overwritten. The import occurs in the background and its
      progress can be monitored and managed via the Operation resource that is
      created. If an ImportEntities operation is cancelled, it is possible
      that a subset of the data has already been imported to Cloud Datastore.
      """
      raise NotImplementedError()
    ImportEntities.future = None


  def beta_create_DatastoreAdmin_server(servicer, pool=None, pool_size=None, default_timeout=None, maximum_timeout=None):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This function was
    generated only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0"""
    request_deserializers = {
      ('google.datastore.admin.v1beta1.DatastoreAdmin', 'ExportEntities'): ExportEntitiesRequest.FromString,
      ('google.datastore.admin.v1beta1.DatastoreAdmin', 'ImportEntities'): ImportEntitiesRequest.FromString,
    }
    response_serializers = {
      ('google.datastore.admin.v1beta1.DatastoreAdmin', 'ExportEntities'): google_dot_longrunning_dot_operations__pb2.Operation.SerializeToString,
      ('google.datastore.admin.v1beta1.DatastoreAdmin', 'ImportEntities'): google_dot_longrunning_dot_operations__pb2.Operation.SerializeToString,
    }
    method_implementations = {
      ('google.datastore.admin.v1beta1.DatastoreAdmin', 'ExportEntities'): face_utilities.unary_unary_inline(servicer.ExportEntities),
      ('google.datastore.admin.v1beta1.DatastoreAdmin', 'ImportEntities'): face_utilities.unary_unary_inline(servicer.ImportEntities),
    }
    server_options = beta_implementations.server_options(request_deserializers=request_deserializers, response_serializers=response_serializers, thread_pool=pool, thread_pool_size=pool_size, default_timeout=default_timeout, maximum_timeout=maximum_timeout)
    return beta_implementations.server(method_implementations, options=server_options)


  def beta_create_DatastoreAdmin_stub(channel, host=None, metadata_transformer=None, pool=None, pool_size=None):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This function was
    generated only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0"""
    request_serializers = {
      ('google.datastore.admin.v1beta1.DatastoreAdmin', 'ExportEntities'): ExportEntitiesRequest.SerializeToString,
      ('google.datastore.admin.v1beta1.DatastoreAdmin', 'ImportEntities'): ImportEntitiesRequest.SerializeToString,
    }
    response_deserializers = {
      ('google.datastore.admin.v1beta1.DatastoreAdmin', 'ExportEntities'): google_dot_longrunning_dot_operations__pb2.Operation.FromString,
      ('google.datastore.admin.v1beta1.DatastoreAdmin', 'ImportEntities'): google_dot_longrunning_dot_operations__pb2.Operation.FromString,
    }
    cardinalities = {
      'ExportEntities': cardinality.Cardinality.UNARY_UNARY,
      'ImportEntities': cardinality.Cardinality.UNARY_UNARY,
    }
    stub_options = beta_implementations.stub_options(host=host, metadata_transformer=metadata_transformer, request_serializers=request_serializers, response_deserializers=response_deserializers, thread_pool=pool, thread_pool_size=pool_size)
    return beta_implementations.dynamic_stub(channel, 'google.datastore.admin.v1beta1.DatastoreAdmin', cardinalities, options=stub_options)
except ImportError:
  pass
# @@protoc_insertion_point(module_scope)
