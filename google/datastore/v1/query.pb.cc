// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/datastore/v1/query.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "google/datastore/v1/query.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace google {
namespace datastore {
namespace v1 {
class EntityResultDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<EntityResult> {
} _EntityResult_default_instance_;
class QueryDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Query> {
} _Query_default_instance_;
class KindExpressionDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<KindExpression> {
} _KindExpression_default_instance_;
class PropertyReferenceDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<PropertyReference> {
} _PropertyReference_default_instance_;
class ProjectionDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Projection> {
} _Projection_default_instance_;
class PropertyOrderDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<PropertyOrder> {
} _PropertyOrder_default_instance_;
class FilterDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Filter> {
  public:
  const ::google::datastore::v1::CompositeFilter* composite_filter_;
  const ::google::datastore::v1::PropertyFilter* property_filter_;
} _Filter_default_instance_;
class CompositeFilterDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CompositeFilter> {
} _CompositeFilter_default_instance_;
class PropertyFilterDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<PropertyFilter> {
} _PropertyFilter_default_instance_;
class GqlQuery_NamedBindingsEntryDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<GqlQuery::GqlQuery_NamedBindingsEntry> {
} _GqlQuery_NamedBindingsEntry_default_instance_;
class GqlQueryDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<GqlQuery> {
} _GqlQuery_default_instance_;
class GqlQueryParameterDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<GqlQueryParameter> {
  public:
  const ::google::datastore::v1::Value* value_;
  ::google::protobuf::internal::ArenaStringPtr cursor_;
} _GqlQueryParameter_default_instance_;
class QueryResultBatchDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<QueryResultBatch> {
} _QueryResultBatch_default_instance_;

namespace protobuf_google_2fdatastore_2fv1_2fquery_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[13];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[5];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] = {
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EntityResult, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EntityResult, entity_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EntityResult, version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EntityResult, cursor_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Query, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Query, projection_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Query, kind_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Query, filter_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Query, order_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Query, distinct_on_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Query, start_cursor_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Query, end_cursor_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Query, offset_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Query, limit_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(KindExpression, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(KindExpression, name_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PropertyReference, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PropertyReference, name_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Projection, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Projection, property_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PropertyOrder, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PropertyOrder, property_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PropertyOrder, direction_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Filter, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Filter, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET((&_Filter_default_instance_), composite_filter_),
  GOOGLE_PROTOBUF_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET((&_Filter_default_instance_), property_filter_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Filter, filter_type_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CompositeFilter, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CompositeFilter, op_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CompositeFilter, filters_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PropertyFilter, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PropertyFilter, property_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PropertyFilter, op_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PropertyFilter, value_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GqlQuery, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GqlQuery, query_string_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GqlQuery, allow_literals_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GqlQuery, named_bindings_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GqlQuery, positional_bindings_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GqlQueryParameter, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GqlQueryParameter, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET((&_GqlQueryParameter_default_instance_), value_),
  GOOGLE_PROTOBUF_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET((&_GqlQueryParameter_default_instance_), cursor_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GqlQueryParameter, parameter_type_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryResultBatch, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryResultBatch, skipped_results_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryResultBatch, skipped_cursor_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryResultBatch, entity_result_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryResultBatch, entity_results_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryResultBatch, end_cursor_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryResultBatch, more_results_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryResultBatch, snapshot_version_),
};

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, -1, sizeof(EntityResult)},
  { 8, -1, sizeof(Query)},
  { 22, -1, sizeof(KindExpression)},
  { 28, -1, sizeof(PropertyReference)},
  { 34, -1, sizeof(Projection)},
  { 40, -1, sizeof(PropertyOrder)},
  { 47, -1, sizeof(Filter)},
  { 55, -1, sizeof(CompositeFilter)},
  { 62, -1, sizeof(PropertyFilter)},
  { 70, -1, sizeof(GqlQuery)},
  { 79, -1, sizeof(GqlQueryParameter)},
  { 87, -1, sizeof(QueryResultBatch)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_EntityResult_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Query_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_KindExpression_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_PropertyReference_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Projection_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_PropertyOrder_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Filter_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CompositeFilter_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_PropertyFilter_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GqlQuery_NamedBindingsEntry_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GqlQuery_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GqlQueryParameter_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_QueryResultBatch_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "google/datastore/v1/query.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
file_level_metadata[9].reflection = GqlQuery::GqlQuery_NamedBindingsEntry::CreateReflection(file_level_metadata[9].descriptor, _GqlQuery_NamedBindingsEntry_default_instance_.get_mutable());
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 13);
}

}  // namespace

void TableStruct::Shutdown() {
  _EntityResult_default_instance_.Shutdown();
  delete file_level_metadata[0].reflection;
  _Query_default_instance_.Shutdown();
  delete file_level_metadata[1].reflection;
  _KindExpression_default_instance_.Shutdown();
  delete file_level_metadata[2].reflection;
  _PropertyReference_default_instance_.Shutdown();
  delete file_level_metadata[3].reflection;
  _Projection_default_instance_.Shutdown();
  delete file_level_metadata[4].reflection;
  _PropertyOrder_default_instance_.Shutdown();
  delete file_level_metadata[5].reflection;
  _Filter_default_instance_.Shutdown();
  delete file_level_metadata[6].reflection;
  _CompositeFilter_default_instance_.Shutdown();
  delete file_level_metadata[7].reflection;
  _PropertyFilter_default_instance_.Shutdown();
  delete file_level_metadata[8].reflection;
  _GqlQuery_default_instance_.Shutdown();
  delete file_level_metadata[10].reflection;
  _GqlQueryParameter_default_instance_.Shutdown();
  delete file_level_metadata[11].reflection;
  _QueryResultBatch_default_instance_.Shutdown();
  delete file_level_metadata[12].reflection;
  delete file_level_metadata[9].reflection;
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  ::google::api::protobuf_google_2fapi_2fannotations_2eproto::InitDefaults();
  ::google::datastore::v1::protobuf_google_2fdatastore_2fv1_2fentity_2eproto::InitDefaults();
  ::google::protobuf::protobuf_google_2fprotobuf_2fwrappers_2eproto::InitDefaults();
  ::google::type::protobuf_google_2ftype_2flatlng_2eproto::InitDefaults();
  _EntityResult_default_instance_.DefaultConstruct();
  _Query_default_instance_.DefaultConstruct();
  _KindExpression_default_instance_.DefaultConstruct();
  _PropertyReference_default_instance_.DefaultConstruct();
  _Projection_default_instance_.DefaultConstruct();
  _PropertyOrder_default_instance_.DefaultConstruct();
  _Filter_default_instance_.DefaultConstruct();
  _CompositeFilter_default_instance_.DefaultConstruct();
  _PropertyFilter_default_instance_.DefaultConstruct();
  _GqlQuery_NamedBindingsEntry_default_instance_.DefaultConstruct();
  _GqlQuery_default_instance_.DefaultConstruct();
  _GqlQueryParameter_default_instance_.DefaultConstruct();
  _QueryResultBatch_default_instance_.DefaultConstruct();
  _EntityResult_default_instance_.get_mutable()->entity_ = const_cast< ::google::datastore::v1::Entity*>(
      ::google::datastore::v1::Entity::internal_default_instance());
  _Query_default_instance_.get_mutable()->filter_ = const_cast< ::google::datastore::v1::Filter*>(
      ::google::datastore::v1::Filter::internal_default_instance());
  _Query_default_instance_.get_mutable()->limit_ = const_cast< ::google::protobuf::Int32Value*>(
      ::google::protobuf::Int32Value::internal_default_instance());
  _Projection_default_instance_.get_mutable()->property_ = const_cast< ::google::datastore::v1::PropertyReference*>(
      ::google::datastore::v1::PropertyReference::internal_default_instance());
  _PropertyOrder_default_instance_.get_mutable()->property_ = const_cast< ::google::datastore::v1::PropertyReference*>(
      ::google::datastore::v1::PropertyReference::internal_default_instance());
  _Filter_default_instance_.composite_filter_ = const_cast< ::google::datastore::v1::CompositeFilter*>(
      ::google::datastore::v1::CompositeFilter::internal_default_instance());
  _Filter_default_instance_.property_filter_ = const_cast< ::google::datastore::v1::PropertyFilter*>(
      ::google::datastore::v1::PropertyFilter::internal_default_instance());
  _PropertyFilter_default_instance_.get_mutable()->property_ = const_cast< ::google::datastore::v1::PropertyReference*>(
      ::google::datastore::v1::PropertyReference::internal_default_instance());
  _PropertyFilter_default_instance_.get_mutable()->value_ = const_cast< ::google::datastore::v1::Value*>(
      ::google::datastore::v1::Value::internal_default_instance());
  _GqlQuery_NamedBindingsEntry_default_instance_.get_mutable()->set_default_instance(_GqlQuery_NamedBindingsEntry_default_instance_.get_mutable());
  _GqlQuery_NamedBindingsEntry_default_instance_.get_mutable()->InitAsDefaultInstance();
  _GqlQueryParameter_default_instance_.value_ = const_cast< ::google::datastore::v1::Value*>(
      ::google::datastore::v1::Value::internal_default_instance());
  _GqlQueryParameter_default_instance_.cursor_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n\037google/datastore/v1/query.proto\022\023googl"
      "e.datastore.v1\032\034google/api/annotations.p"
      "roto\032 google/datastore/v1/entity.proto\032\036"
      "google/protobuf/wrappers.proto\032\030google/t"
      "ype/latlng.proto\"\257\001\n\014EntityResult\022+\n\006ent"
      "ity\030\001 \001(\0132\033.google.datastore.v1.Entity\022\017"
      "\n\007version\030\004 \001(\003\022\016\n\006cursor\030\003 \001(\014\"Q\n\nResul"
      "tType\022\033\n\027RESULT_TYPE_UNSPECIFIED\020\000\022\010\n\004FU"
      "LL\020\001\022\016\n\nPROJECTION\020\002\022\014\n\010KEY_ONLY\020\003\"\362\002\n\005Q"
      "uery\0223\n\nprojection\030\002 \003(\0132\037.google.datast"
      "ore.v1.Projection\0221\n\004kind\030\003 \003(\0132#.google"
      ".datastore.v1.KindExpression\022+\n\006filter\030\004"
      " \001(\0132\033.google.datastore.v1.Filter\0221\n\005ord"
      "er\030\005 \003(\0132\".google.datastore.v1.PropertyO"
      "rder\022;\n\013distinct_on\030\006 \003(\0132&.google.datas"
      "tore.v1.PropertyReference\022\024\n\014start_curso"
      "r\030\007 \001(\014\022\022\n\nend_cursor\030\010 \001(\014\022\016\n\006offset\030\n "
      "\001(\005\022*\n\005limit\030\014 \001(\0132\033.google.protobuf.Int"
      "32Value\"\036\n\016KindExpression\022\014\n\004name\030\001 \001(\t\""
      "!\n\021PropertyReference\022\014\n\004name\030\002 \001(\t\"F\n\nPr"
      "ojection\0228\n\010property\030\001 \001(\0132&.google.data"
      "store.v1.PropertyReference\"\321\001\n\rPropertyO"
      "rder\0228\n\010property\030\001 \001(\0132&.google.datastor"
      "e.v1.PropertyReference\022\?\n\tdirection\030\002 \001("
      "\0162,.google.datastore.v1.PropertyOrder.Di"
      "rection\"E\n\tDirection\022\031\n\025DIRECTION_UNSPEC"
      "IFIED\020\000\022\r\n\tASCENDING\020\001\022\016\n\nDESCENDING\020\002\"\231"
      "\001\n\006Filter\022@\n\020composite_filter\030\001 \001(\0132$.go"
      "ogle.datastore.v1.CompositeFilterH\000\022>\n\017p"
      "roperty_filter\030\002 \001(\0132#.google.datastore."
      "v1.PropertyFilterH\000B\r\n\013filter_type\"\251\001\n\017C"
      "ompositeFilter\0229\n\002op\030\001 \001(\0162-.google.data"
      "store.v1.CompositeFilter.Operator\022,\n\007fil"
      "ters\030\002 \003(\0132\033.google.datastore.v1.Filter\""
      "-\n\010Operator\022\030\n\024OPERATOR_UNSPECIFIED\020\000\022\007\n"
      "\003AND\020\001\"\307\002\n\016PropertyFilter\0228\n\010property\030\001 "
      "\001(\0132&.google.datastore.v1.PropertyRefere"
      "nce\0228\n\002op\030\002 \001(\0162,.google.datastore.v1.Pr"
      "opertyFilter.Operator\022)\n\005value\030\003 \001(\0132\032.g"
      "oogle.datastore.v1.Value\"\225\001\n\010Operator\022\030\n"
      "\024OPERATOR_UNSPECIFIED\020\000\022\r\n\tLESS_THAN\020\001\022\026"
      "\n\022LESS_THAN_OR_EQUAL\020\002\022\020\n\014GREATER_THAN\020\003"
      "\022\031\n\025GREATER_THAN_OR_EQUAL\020\004\022\t\n\005EQUAL\020\005\022\020"
      "\n\014HAS_ANCESTOR\020\013\"\245\002\n\010GqlQuery\022\024\n\014query_s"
      "tring\030\001 \001(\t\022\026\n\016allow_literals\030\002 \001(\010\022H\n\016n"
      "amed_bindings\030\005 \003(\01320.google.datastore.v"
      "1.GqlQuery.NamedBindingsEntry\022C\n\023positio"
      "nal_bindings\030\004 \003(\0132&.google.datastore.v1"
      ".GqlQueryParameter\032\\\n\022NamedBindingsEntry"
      "\022\013\n\003key\030\001 \001(\t\0225\n\005value\030\002 \001(\0132&.google.da"
      "tastore.v1.GqlQueryParameter:\0028\001\"d\n\021GqlQ"
      "ueryParameter\022+\n\005value\030\002 \001(\0132\032.google.da"
      "tastore.v1.ValueH\000\022\020\n\006cursor\030\003 \001(\014H\000B\020\n\016"
      "parameter_type\"\336\003\n\020QueryResultBatch\022\027\n\017s"
      "kipped_results\030\006 \001(\005\022\026\n\016skipped_cursor\030\003"
      " \001(\014\022H\n\022entity_result_type\030\001 \001(\0162,.googl"
      "e.datastore.v1.EntityResult.ResultType\0229"
      "\n\016entity_results\030\002 \003(\0132!.google.datastor"
      "e.v1.EntityResult\022\022\n\nend_cursor\030\004 \001(\014\022K\n"
      "\014more_results\030\005 \001(\01625.google.datastore.v"
      "1.QueryResultBatch.MoreResultsType\022\030\n\020sn"
      "apshot_version\030\007 \001(\003\"\230\001\n\017MoreResultsType"
      "\022!\n\035MORE_RESULTS_TYPE_UNSPECIFIED\020\000\022\020\n\014N"
      "OT_FINISHED\020\001\022\034\n\030MORE_RESULTS_AFTER_LIMI"
      "T\020\002\022\035\n\031MORE_RESULTS_AFTER_CURSOR\020\004\022\023\n\017NO"
      "_MORE_RESULTS\020\003B\201\001\n\027com.google.datastore"
      ".v1B\nQueryProtoP\001Z<google.golang.org/gen"
      "proto/googleapis/datastore/v1;datastore\252"
      "\002\031Google.Cloud.Datastore.V1b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 2755);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "google/datastore/v1/query.proto", &protobuf_RegisterTypes);
  ::google::api::protobuf_google_2fapi_2fannotations_2eproto::AddDescriptors();
  ::google::datastore::v1::protobuf_google_2fdatastore_2fv1_2fentity_2eproto::AddDescriptors();
  ::google::protobuf::protobuf_google_2fprotobuf_2fwrappers_2eproto::AddDescriptors();
  ::google::type::protobuf_google_2ftype_2flatlng_2eproto::AddDescriptors();
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_google_2fdatastore_2fv1_2fquery_2eproto

const ::google::protobuf::EnumDescriptor* EntityResult_ResultType_descriptor() {
  protobuf_google_2fdatastore_2fv1_2fquery_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fdatastore_2fv1_2fquery_2eproto::file_level_enum_descriptors[0];
}
bool EntityResult_ResultType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const EntityResult_ResultType EntityResult::RESULT_TYPE_UNSPECIFIED;
const EntityResult_ResultType EntityResult::FULL;
const EntityResult_ResultType EntityResult::PROJECTION;
const EntityResult_ResultType EntityResult::KEY_ONLY;
const EntityResult_ResultType EntityResult::ResultType_MIN;
const EntityResult_ResultType EntityResult::ResultType_MAX;
const int EntityResult::ResultType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* PropertyOrder_Direction_descriptor() {
  protobuf_google_2fdatastore_2fv1_2fquery_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fdatastore_2fv1_2fquery_2eproto::file_level_enum_descriptors[1];
}
bool PropertyOrder_Direction_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const PropertyOrder_Direction PropertyOrder::DIRECTION_UNSPECIFIED;
const PropertyOrder_Direction PropertyOrder::ASCENDING;
const PropertyOrder_Direction PropertyOrder::DESCENDING;
const PropertyOrder_Direction PropertyOrder::Direction_MIN;
const PropertyOrder_Direction PropertyOrder::Direction_MAX;
const int PropertyOrder::Direction_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* CompositeFilter_Operator_descriptor() {
  protobuf_google_2fdatastore_2fv1_2fquery_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fdatastore_2fv1_2fquery_2eproto::file_level_enum_descriptors[2];
}
bool CompositeFilter_Operator_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const CompositeFilter_Operator CompositeFilter::OPERATOR_UNSPECIFIED;
const CompositeFilter_Operator CompositeFilter::AND;
const CompositeFilter_Operator CompositeFilter::Operator_MIN;
const CompositeFilter_Operator CompositeFilter::Operator_MAX;
const int CompositeFilter::Operator_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* PropertyFilter_Operator_descriptor() {
  protobuf_google_2fdatastore_2fv1_2fquery_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fdatastore_2fv1_2fquery_2eproto::file_level_enum_descriptors[3];
}
bool PropertyFilter_Operator_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 11:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const PropertyFilter_Operator PropertyFilter::OPERATOR_UNSPECIFIED;
const PropertyFilter_Operator PropertyFilter::LESS_THAN;
const PropertyFilter_Operator PropertyFilter::LESS_THAN_OR_EQUAL;
const PropertyFilter_Operator PropertyFilter::GREATER_THAN;
const PropertyFilter_Operator PropertyFilter::GREATER_THAN_OR_EQUAL;
const PropertyFilter_Operator PropertyFilter::EQUAL;
const PropertyFilter_Operator PropertyFilter::HAS_ANCESTOR;
const PropertyFilter_Operator PropertyFilter::Operator_MIN;
const PropertyFilter_Operator PropertyFilter::Operator_MAX;
const int PropertyFilter::Operator_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* QueryResultBatch_MoreResultsType_descriptor() {
  protobuf_google_2fdatastore_2fv1_2fquery_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fdatastore_2fv1_2fquery_2eproto::file_level_enum_descriptors[4];
}
bool QueryResultBatch_MoreResultsType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const QueryResultBatch_MoreResultsType QueryResultBatch::MORE_RESULTS_TYPE_UNSPECIFIED;
const QueryResultBatch_MoreResultsType QueryResultBatch::NOT_FINISHED;
const QueryResultBatch_MoreResultsType QueryResultBatch::MORE_RESULTS_AFTER_LIMIT;
const QueryResultBatch_MoreResultsType QueryResultBatch::MORE_RESULTS_AFTER_CURSOR;
const QueryResultBatch_MoreResultsType QueryResultBatch::NO_MORE_RESULTS;
const QueryResultBatch_MoreResultsType QueryResultBatch::MoreResultsType_MIN;
const QueryResultBatch_MoreResultsType QueryResultBatch::MoreResultsType_MAX;
const int QueryResultBatch::MoreResultsType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EntityResult::kEntityFieldNumber;
const int EntityResult::kVersionFieldNumber;
const int EntityResult::kCursorFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EntityResult::EntityResult()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_google_2fdatastore_2fv1_2fquery_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.datastore.v1.EntityResult)
}
EntityResult::EntityResult(const EntityResult& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  cursor_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.cursor().size() > 0) {
    cursor_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cursor_);
  }
  if (from.has_entity()) {
    entity_ = new ::google::datastore::v1::Entity(*from.entity_);
  } else {
    entity_ = NULL;
  }
  version_ = from.version_;
  // @@protoc_insertion_point(copy_constructor:google.datastore.v1.EntityResult)
}

void EntityResult::SharedCtor() {
  cursor_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&entity_, 0, reinterpret_cast<char*>(&version_) -
    reinterpret_cast<char*>(&entity_) + sizeof(version_));
  _cached_size_ = 0;
}

EntityResult::~EntityResult() {
  // @@protoc_insertion_point(destructor:google.datastore.v1.EntityResult)
  SharedDtor();
}

void EntityResult::SharedDtor() {
  cursor_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete entity_;
  }
}

void EntityResult::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EntityResult::descriptor() {
  protobuf_google_2fdatastore_2fv1_2fquery_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fdatastore_2fv1_2fquery_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const EntityResult& EntityResult::default_instance() {
  protobuf_google_2fdatastore_2fv1_2fquery_2eproto::InitDefaults();
  return *internal_default_instance();
}

EntityResult* EntityResult::New(::google::protobuf::Arena* arena) const {
  EntityResult* n = new EntityResult;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void EntityResult::Clear() {
// @@protoc_insertion_point(message_clear_start:google.datastore.v1.EntityResult)
  cursor_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && entity_ != NULL) {
    delete entity_;
  }
  entity_ = NULL;
  version_ = GOOGLE_LONGLONG(0);
}

bool EntityResult::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.datastore.v1.EntityResult)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.datastore.v1.Entity entity = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_entity()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes cursor = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_cursor()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 version = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &version_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.datastore.v1.EntityResult)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.datastore.v1.EntityResult)
  return false;
#undef DO_
}

void EntityResult::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.datastore.v1.EntityResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.datastore.v1.Entity entity = 1;
  if (this->has_entity()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->entity_, output);
  }

  // bytes cursor = 3;
  if (this->cursor().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->cursor(), output);
  }

  // int64 version = 4;
  if (this->version() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->version(), output);
  }

  // @@protoc_insertion_point(serialize_end:google.datastore.v1.EntityResult)
}

::google::protobuf::uint8* EntityResult::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.datastore.v1.EntityResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.datastore.v1.Entity entity = 1;
  if (this->has_entity()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->entity_, deterministic, target);
  }

  // bytes cursor = 3;
  if (this->cursor().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->cursor(), target);
  }

  // int64 version = 4;
  if (this->version() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->version(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.datastore.v1.EntityResult)
  return target;
}

size_t EntityResult::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.datastore.v1.EntityResult)
  size_t total_size = 0;

  // bytes cursor = 3;
  if (this->cursor().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->cursor());
  }

  // .google.datastore.v1.Entity entity = 1;
  if (this->has_entity()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->entity_);
  }

  // int64 version = 4;
  if (this->version() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->version());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EntityResult::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.datastore.v1.EntityResult)
  GOOGLE_DCHECK_NE(&from, this);
  const EntityResult* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const EntityResult>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.datastore.v1.EntityResult)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.datastore.v1.EntityResult)
    MergeFrom(*source);
  }
}

void EntityResult::MergeFrom(const EntityResult& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.datastore.v1.EntityResult)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.cursor().size() > 0) {

    cursor_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cursor_);
  }
  if (from.has_entity()) {
    mutable_entity()->::google::datastore::v1::Entity::MergeFrom(from.entity());
  }
  if (from.version() != 0) {
    set_version(from.version());
  }
}

void EntityResult::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.datastore.v1.EntityResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EntityResult::CopyFrom(const EntityResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.datastore.v1.EntityResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EntityResult::IsInitialized() const {
  return true;
}

void EntityResult::Swap(EntityResult* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EntityResult::InternalSwap(EntityResult* other) {
  cursor_.Swap(&other->cursor_);
  std::swap(entity_, other->entity_);
  std::swap(version_, other->version_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata EntityResult::GetMetadata() const {
  protobuf_google_2fdatastore_2fv1_2fquery_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fdatastore_2fv1_2fquery_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// EntityResult

// .google.datastore.v1.Entity entity = 1;
bool EntityResult::has_entity() const {
  return this != internal_default_instance() && entity_ != NULL;
}
void EntityResult::clear_entity() {
  if (GetArenaNoVirtual() == NULL && entity_ != NULL) delete entity_;
  entity_ = NULL;
}
const ::google::datastore::v1::Entity& EntityResult::entity() const {
  // @@protoc_insertion_point(field_get:google.datastore.v1.EntityResult.entity)
  return entity_ != NULL ? *entity_
                         : *::google::datastore::v1::Entity::internal_default_instance();
}
::google::datastore::v1::Entity* EntityResult::mutable_entity() {
  
  if (entity_ == NULL) {
    entity_ = new ::google::datastore::v1::Entity;
  }
  // @@protoc_insertion_point(field_mutable:google.datastore.v1.EntityResult.entity)
  return entity_;
}
::google::datastore::v1::Entity* EntityResult::release_entity() {
  // @@protoc_insertion_point(field_release:google.datastore.v1.EntityResult.entity)
  
  ::google::datastore::v1::Entity* temp = entity_;
  entity_ = NULL;
  return temp;
}
void EntityResult::set_allocated_entity(::google::datastore::v1::Entity* entity) {
  delete entity_;
  entity_ = entity;
  if (entity) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.datastore.v1.EntityResult.entity)
}

// int64 version = 4;
void EntityResult::clear_version() {
  version_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 EntityResult::version() const {
  // @@protoc_insertion_point(field_get:google.datastore.v1.EntityResult.version)
  return version_;
}
void EntityResult::set_version(::google::protobuf::int64 value) {
  
  version_ = value;
  // @@protoc_insertion_point(field_set:google.datastore.v1.EntityResult.version)
}

// bytes cursor = 3;
void EntityResult::clear_cursor() {
  cursor_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& EntityResult::cursor() const {
  // @@protoc_insertion_point(field_get:google.datastore.v1.EntityResult.cursor)
  return cursor_.GetNoArena();
}
void EntityResult::set_cursor(const ::std::string& value) {
  
  cursor_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.datastore.v1.EntityResult.cursor)
}
#if LANG_CXX11
void EntityResult::set_cursor(::std::string&& value) {
  
  cursor_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.datastore.v1.EntityResult.cursor)
}
#endif
void EntityResult::set_cursor(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  cursor_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.datastore.v1.EntityResult.cursor)
}
void EntityResult::set_cursor(const void* value, size_t size) {
  
  cursor_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.datastore.v1.EntityResult.cursor)
}
::std::string* EntityResult::mutable_cursor() {
  
  // @@protoc_insertion_point(field_mutable:google.datastore.v1.EntityResult.cursor)
  return cursor_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* EntityResult::release_cursor() {
  // @@protoc_insertion_point(field_release:google.datastore.v1.EntityResult.cursor)
  
  return cursor_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void EntityResult::set_allocated_cursor(::std::string* cursor) {
  if (cursor != NULL) {
    
  } else {
    
  }
  cursor_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cursor);
  // @@protoc_insertion_point(field_set_allocated:google.datastore.v1.EntityResult.cursor)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Query::kProjectionFieldNumber;
const int Query::kKindFieldNumber;
const int Query::kFilterFieldNumber;
const int Query::kOrderFieldNumber;
const int Query::kDistinctOnFieldNumber;
const int Query::kStartCursorFieldNumber;
const int Query::kEndCursorFieldNumber;
const int Query::kOffsetFieldNumber;
const int Query::kLimitFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Query::Query()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_google_2fdatastore_2fv1_2fquery_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.datastore.v1.Query)
}
Query::Query(const Query& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      projection_(from.projection_),
      kind_(from.kind_),
      order_(from.order_),
      distinct_on_(from.distinct_on_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  start_cursor_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.start_cursor().size() > 0) {
    start_cursor_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.start_cursor_);
  }
  end_cursor_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.end_cursor().size() > 0) {
    end_cursor_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.end_cursor_);
  }
  if (from.has_filter()) {
    filter_ = new ::google::datastore::v1::Filter(*from.filter_);
  } else {
    filter_ = NULL;
  }
  if (from.has_limit()) {
    limit_ = new ::google::protobuf::Int32Value(*from.limit_);
  } else {
    limit_ = NULL;
  }
  offset_ = from.offset_;
  // @@protoc_insertion_point(copy_constructor:google.datastore.v1.Query)
}

void Query::SharedCtor() {
  start_cursor_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  end_cursor_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&filter_, 0, reinterpret_cast<char*>(&offset_) -
    reinterpret_cast<char*>(&filter_) + sizeof(offset_));
  _cached_size_ = 0;
}

Query::~Query() {
  // @@protoc_insertion_point(destructor:google.datastore.v1.Query)
  SharedDtor();
}

void Query::SharedDtor() {
  start_cursor_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  end_cursor_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete filter_;
  }
  if (this != internal_default_instance()) {
    delete limit_;
  }
}

void Query::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Query::descriptor() {
  protobuf_google_2fdatastore_2fv1_2fquery_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fdatastore_2fv1_2fquery_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Query& Query::default_instance() {
  protobuf_google_2fdatastore_2fv1_2fquery_2eproto::InitDefaults();
  return *internal_default_instance();
}

Query* Query::New(::google::protobuf::Arena* arena) const {
  Query* n = new Query;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Query::Clear() {
// @@protoc_insertion_point(message_clear_start:google.datastore.v1.Query)
  projection_.Clear();
  kind_.Clear();
  order_.Clear();
  distinct_on_.Clear();
  start_cursor_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  end_cursor_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && filter_ != NULL) {
    delete filter_;
  }
  filter_ = NULL;
  if (GetArenaNoVirtual() == NULL && limit_ != NULL) {
    delete limit_;
  }
  limit_ = NULL;
  offset_ = 0;
}

bool Query::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.datastore.v1.Query)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .google.datastore.v1.Projection projection = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_projection()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.datastore.v1.KindExpression kind = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_kind()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.datastore.v1.Filter filter = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_filter()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.datastore.v1.PropertyOrder order = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_order()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.datastore.v1.PropertyReference distinct_on = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_distinct_on()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes start_cursor = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_start_cursor()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes end_cursor = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_end_cursor()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 offset = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &offset_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Int32Value limit = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_limit()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.datastore.v1.Query)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.datastore.v1.Query)
  return false;
#undef DO_
}

void Query::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.datastore.v1.Query)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.datastore.v1.Projection projection = 2;
  for (unsigned int i = 0, n = this->projection_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->projection(i), output);
  }

  // repeated .google.datastore.v1.KindExpression kind = 3;
  for (unsigned int i = 0, n = this->kind_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->kind(i), output);
  }

  // .google.datastore.v1.Filter filter = 4;
  if (this->has_filter()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->filter_, output);
  }

  // repeated .google.datastore.v1.PropertyOrder order = 5;
  for (unsigned int i = 0, n = this->order_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->order(i), output);
  }

  // repeated .google.datastore.v1.PropertyReference distinct_on = 6;
  for (unsigned int i = 0, n = this->distinct_on_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->distinct_on(i), output);
  }

  // bytes start_cursor = 7;
  if (this->start_cursor().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      7, this->start_cursor(), output);
  }

  // bytes end_cursor = 8;
  if (this->end_cursor().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      8, this->end_cursor(), output);
  }

  // int32 offset = 10;
  if (this->offset() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->offset(), output);
  }

  // .google.protobuf.Int32Value limit = 12;
  if (this->has_limit()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      12, *this->limit_, output);
  }

  // @@protoc_insertion_point(serialize_end:google.datastore.v1.Query)
}

::google::protobuf::uint8* Query::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.datastore.v1.Query)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.datastore.v1.Projection projection = 2;
  for (unsigned int i = 0, n = this->projection_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->projection(i), deterministic, target);
  }

  // repeated .google.datastore.v1.KindExpression kind = 3;
  for (unsigned int i = 0, n = this->kind_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->kind(i), deterministic, target);
  }

  // .google.datastore.v1.Filter filter = 4;
  if (this->has_filter()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, *this->filter_, deterministic, target);
  }

  // repeated .google.datastore.v1.PropertyOrder order = 5;
  for (unsigned int i = 0, n = this->order_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, this->order(i), deterministic, target);
  }

  // repeated .google.datastore.v1.PropertyReference distinct_on = 6;
  for (unsigned int i = 0, n = this->distinct_on_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        6, this->distinct_on(i), deterministic, target);
  }

  // bytes start_cursor = 7;
  if (this->start_cursor().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        7, this->start_cursor(), target);
  }

  // bytes end_cursor = 8;
  if (this->end_cursor().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        8, this->end_cursor(), target);
  }

  // int32 offset = 10;
  if (this->offset() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->offset(), target);
  }

  // .google.protobuf.Int32Value limit = 12;
  if (this->has_limit()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        12, *this->limit_, deterministic, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.datastore.v1.Query)
  return target;
}

size_t Query::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.datastore.v1.Query)
  size_t total_size = 0;

  // repeated .google.datastore.v1.Projection projection = 2;
  {
    unsigned int count = this->projection_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->projection(i));
    }
  }

  // repeated .google.datastore.v1.KindExpression kind = 3;
  {
    unsigned int count = this->kind_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->kind(i));
    }
  }

  // repeated .google.datastore.v1.PropertyOrder order = 5;
  {
    unsigned int count = this->order_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->order(i));
    }
  }

  // repeated .google.datastore.v1.PropertyReference distinct_on = 6;
  {
    unsigned int count = this->distinct_on_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->distinct_on(i));
    }
  }

  // bytes start_cursor = 7;
  if (this->start_cursor().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->start_cursor());
  }

  // bytes end_cursor = 8;
  if (this->end_cursor().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->end_cursor());
  }

  // .google.datastore.v1.Filter filter = 4;
  if (this->has_filter()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->filter_);
  }

  // .google.protobuf.Int32Value limit = 12;
  if (this->has_limit()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->limit_);
  }

  // int32 offset = 10;
  if (this->offset() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->offset());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Query::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.datastore.v1.Query)
  GOOGLE_DCHECK_NE(&from, this);
  const Query* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Query>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.datastore.v1.Query)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.datastore.v1.Query)
    MergeFrom(*source);
  }
}

void Query::MergeFrom(const Query& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.datastore.v1.Query)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  projection_.MergeFrom(from.projection_);
  kind_.MergeFrom(from.kind_);
  order_.MergeFrom(from.order_);
  distinct_on_.MergeFrom(from.distinct_on_);
  if (from.start_cursor().size() > 0) {

    start_cursor_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.start_cursor_);
  }
  if (from.end_cursor().size() > 0) {

    end_cursor_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.end_cursor_);
  }
  if (from.has_filter()) {
    mutable_filter()->::google::datastore::v1::Filter::MergeFrom(from.filter());
  }
  if (from.has_limit()) {
    mutable_limit()->::google::protobuf::Int32Value::MergeFrom(from.limit());
  }
  if (from.offset() != 0) {
    set_offset(from.offset());
  }
}

void Query::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.datastore.v1.Query)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Query::CopyFrom(const Query& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.datastore.v1.Query)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Query::IsInitialized() const {
  return true;
}

void Query::Swap(Query* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Query::InternalSwap(Query* other) {
  projection_.InternalSwap(&other->projection_);
  kind_.InternalSwap(&other->kind_);
  order_.InternalSwap(&other->order_);
  distinct_on_.InternalSwap(&other->distinct_on_);
  start_cursor_.Swap(&other->start_cursor_);
  end_cursor_.Swap(&other->end_cursor_);
  std::swap(filter_, other->filter_);
  std::swap(limit_, other->limit_);
  std::swap(offset_, other->offset_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Query::GetMetadata() const {
  protobuf_google_2fdatastore_2fv1_2fquery_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fdatastore_2fv1_2fquery_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Query

// repeated .google.datastore.v1.Projection projection = 2;
int Query::projection_size() const {
  return projection_.size();
}
void Query::clear_projection() {
  projection_.Clear();
}
const ::google::datastore::v1::Projection& Query::projection(int index) const {
  // @@protoc_insertion_point(field_get:google.datastore.v1.Query.projection)
  return projection_.Get(index);
}
::google::datastore::v1::Projection* Query::mutable_projection(int index) {
  // @@protoc_insertion_point(field_mutable:google.datastore.v1.Query.projection)
  return projection_.Mutable(index);
}
::google::datastore::v1::Projection* Query::add_projection() {
  // @@protoc_insertion_point(field_add:google.datastore.v1.Query.projection)
  return projection_.Add();
}
::google::protobuf::RepeatedPtrField< ::google::datastore::v1::Projection >*
Query::mutable_projection() {
  // @@protoc_insertion_point(field_mutable_list:google.datastore.v1.Query.projection)
  return &projection_;
}
const ::google::protobuf::RepeatedPtrField< ::google::datastore::v1::Projection >&
Query::projection() const {
  // @@protoc_insertion_point(field_list:google.datastore.v1.Query.projection)
  return projection_;
}

// repeated .google.datastore.v1.KindExpression kind = 3;
int Query::kind_size() const {
  return kind_.size();
}
void Query::clear_kind() {
  kind_.Clear();
}
const ::google::datastore::v1::KindExpression& Query::kind(int index) const {
  // @@protoc_insertion_point(field_get:google.datastore.v1.Query.kind)
  return kind_.Get(index);
}
::google::datastore::v1::KindExpression* Query::mutable_kind(int index) {
  // @@protoc_insertion_point(field_mutable:google.datastore.v1.Query.kind)
  return kind_.Mutable(index);
}
::google::datastore::v1::KindExpression* Query::add_kind() {
  // @@protoc_insertion_point(field_add:google.datastore.v1.Query.kind)
  return kind_.Add();
}
::google::protobuf::RepeatedPtrField< ::google::datastore::v1::KindExpression >*
Query::mutable_kind() {
  // @@protoc_insertion_point(field_mutable_list:google.datastore.v1.Query.kind)
  return &kind_;
}
const ::google::protobuf::RepeatedPtrField< ::google::datastore::v1::KindExpression >&
Query::kind() const {
  // @@protoc_insertion_point(field_list:google.datastore.v1.Query.kind)
  return kind_;
}

// .google.datastore.v1.Filter filter = 4;
bool Query::has_filter() const {
  return this != internal_default_instance() && filter_ != NULL;
}
void Query::clear_filter() {
  if (GetArenaNoVirtual() == NULL && filter_ != NULL) delete filter_;
  filter_ = NULL;
}
const ::google::datastore::v1::Filter& Query::filter() const {
  // @@protoc_insertion_point(field_get:google.datastore.v1.Query.filter)
  return filter_ != NULL ? *filter_
                         : *::google::datastore::v1::Filter::internal_default_instance();
}
::google::datastore::v1::Filter* Query::mutable_filter() {
  
  if (filter_ == NULL) {
    filter_ = new ::google::datastore::v1::Filter;
  }
  // @@protoc_insertion_point(field_mutable:google.datastore.v1.Query.filter)
  return filter_;
}
::google::datastore::v1::Filter* Query::release_filter() {
  // @@protoc_insertion_point(field_release:google.datastore.v1.Query.filter)
  
  ::google::datastore::v1::Filter* temp = filter_;
  filter_ = NULL;
  return temp;
}
void Query::set_allocated_filter(::google::datastore::v1::Filter* filter) {
  delete filter_;
  filter_ = filter;
  if (filter) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.datastore.v1.Query.filter)
}

// repeated .google.datastore.v1.PropertyOrder order = 5;
int Query::order_size() const {
  return order_.size();
}
void Query::clear_order() {
  order_.Clear();
}
const ::google::datastore::v1::PropertyOrder& Query::order(int index) const {
  // @@protoc_insertion_point(field_get:google.datastore.v1.Query.order)
  return order_.Get(index);
}
::google::datastore::v1::PropertyOrder* Query::mutable_order(int index) {
  // @@protoc_insertion_point(field_mutable:google.datastore.v1.Query.order)
  return order_.Mutable(index);
}
::google::datastore::v1::PropertyOrder* Query::add_order() {
  // @@protoc_insertion_point(field_add:google.datastore.v1.Query.order)
  return order_.Add();
}
::google::protobuf::RepeatedPtrField< ::google::datastore::v1::PropertyOrder >*
Query::mutable_order() {
  // @@protoc_insertion_point(field_mutable_list:google.datastore.v1.Query.order)
  return &order_;
}
const ::google::protobuf::RepeatedPtrField< ::google::datastore::v1::PropertyOrder >&
Query::order() const {
  // @@protoc_insertion_point(field_list:google.datastore.v1.Query.order)
  return order_;
}

// repeated .google.datastore.v1.PropertyReference distinct_on = 6;
int Query::distinct_on_size() const {
  return distinct_on_.size();
}
void Query::clear_distinct_on() {
  distinct_on_.Clear();
}
const ::google::datastore::v1::PropertyReference& Query::distinct_on(int index) const {
  // @@protoc_insertion_point(field_get:google.datastore.v1.Query.distinct_on)
  return distinct_on_.Get(index);
}
::google::datastore::v1::PropertyReference* Query::mutable_distinct_on(int index) {
  // @@protoc_insertion_point(field_mutable:google.datastore.v1.Query.distinct_on)
  return distinct_on_.Mutable(index);
}
::google::datastore::v1::PropertyReference* Query::add_distinct_on() {
  // @@protoc_insertion_point(field_add:google.datastore.v1.Query.distinct_on)
  return distinct_on_.Add();
}
::google::protobuf::RepeatedPtrField< ::google::datastore::v1::PropertyReference >*
Query::mutable_distinct_on() {
  // @@protoc_insertion_point(field_mutable_list:google.datastore.v1.Query.distinct_on)
  return &distinct_on_;
}
const ::google::protobuf::RepeatedPtrField< ::google::datastore::v1::PropertyReference >&
Query::distinct_on() const {
  // @@protoc_insertion_point(field_list:google.datastore.v1.Query.distinct_on)
  return distinct_on_;
}

// bytes start_cursor = 7;
void Query::clear_start_cursor() {
  start_cursor_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Query::start_cursor() const {
  // @@protoc_insertion_point(field_get:google.datastore.v1.Query.start_cursor)
  return start_cursor_.GetNoArena();
}
void Query::set_start_cursor(const ::std::string& value) {
  
  start_cursor_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.datastore.v1.Query.start_cursor)
}
#if LANG_CXX11
void Query::set_start_cursor(::std::string&& value) {
  
  start_cursor_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.datastore.v1.Query.start_cursor)
}
#endif
void Query::set_start_cursor(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  start_cursor_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.datastore.v1.Query.start_cursor)
}
void Query::set_start_cursor(const void* value, size_t size) {
  
  start_cursor_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.datastore.v1.Query.start_cursor)
}
::std::string* Query::mutable_start_cursor() {
  
  // @@protoc_insertion_point(field_mutable:google.datastore.v1.Query.start_cursor)
  return start_cursor_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Query::release_start_cursor() {
  // @@protoc_insertion_point(field_release:google.datastore.v1.Query.start_cursor)
  
  return start_cursor_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Query::set_allocated_start_cursor(::std::string* start_cursor) {
  if (start_cursor != NULL) {
    
  } else {
    
  }
  start_cursor_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), start_cursor);
  // @@protoc_insertion_point(field_set_allocated:google.datastore.v1.Query.start_cursor)
}

// bytes end_cursor = 8;
void Query::clear_end_cursor() {
  end_cursor_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Query::end_cursor() const {
  // @@protoc_insertion_point(field_get:google.datastore.v1.Query.end_cursor)
  return end_cursor_.GetNoArena();
}
void Query::set_end_cursor(const ::std::string& value) {
  
  end_cursor_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.datastore.v1.Query.end_cursor)
}
#if LANG_CXX11
void Query::set_end_cursor(::std::string&& value) {
  
  end_cursor_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.datastore.v1.Query.end_cursor)
}
#endif
void Query::set_end_cursor(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  end_cursor_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.datastore.v1.Query.end_cursor)
}
void Query::set_end_cursor(const void* value, size_t size) {
  
  end_cursor_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.datastore.v1.Query.end_cursor)
}
::std::string* Query::mutable_end_cursor() {
  
  // @@protoc_insertion_point(field_mutable:google.datastore.v1.Query.end_cursor)
  return end_cursor_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Query::release_end_cursor() {
  // @@protoc_insertion_point(field_release:google.datastore.v1.Query.end_cursor)
  
  return end_cursor_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Query::set_allocated_end_cursor(::std::string* end_cursor) {
  if (end_cursor != NULL) {
    
  } else {
    
  }
  end_cursor_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), end_cursor);
  // @@protoc_insertion_point(field_set_allocated:google.datastore.v1.Query.end_cursor)
}

// int32 offset = 10;
void Query::clear_offset() {
  offset_ = 0;
}
::google::protobuf::int32 Query::offset() const {
  // @@protoc_insertion_point(field_get:google.datastore.v1.Query.offset)
  return offset_;
}
void Query::set_offset(::google::protobuf::int32 value) {
  
  offset_ = value;
  // @@protoc_insertion_point(field_set:google.datastore.v1.Query.offset)
}

// .google.protobuf.Int32Value limit = 12;
bool Query::has_limit() const {
  return this != internal_default_instance() && limit_ != NULL;
}
void Query::clear_limit() {
  if (GetArenaNoVirtual() == NULL && limit_ != NULL) delete limit_;
  limit_ = NULL;
}
const ::google::protobuf::Int32Value& Query::limit() const {
  // @@protoc_insertion_point(field_get:google.datastore.v1.Query.limit)
  return limit_ != NULL ? *limit_
                         : *::google::protobuf::Int32Value::internal_default_instance();
}
::google::protobuf::Int32Value* Query::mutable_limit() {
  
  if (limit_ == NULL) {
    limit_ = new ::google::protobuf::Int32Value;
  }
  // @@protoc_insertion_point(field_mutable:google.datastore.v1.Query.limit)
  return limit_;
}
::google::protobuf::Int32Value* Query::release_limit() {
  // @@protoc_insertion_point(field_release:google.datastore.v1.Query.limit)
  
  ::google::protobuf::Int32Value* temp = limit_;
  limit_ = NULL;
  return temp;
}
void Query::set_allocated_limit(::google::protobuf::Int32Value* limit) {
  delete limit_;
  if (limit != NULL && limit->GetArena() != NULL) {
    ::google::protobuf::Int32Value* new_limit = new ::google::protobuf::Int32Value;
    new_limit->CopyFrom(*limit);
    limit = new_limit;
  }
  limit_ = limit;
  if (limit) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.datastore.v1.Query.limit)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int KindExpression::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

KindExpression::KindExpression()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_google_2fdatastore_2fv1_2fquery_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.datastore.v1.KindExpression)
}
KindExpression::KindExpression(const KindExpression& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  // @@protoc_insertion_point(copy_constructor:google.datastore.v1.KindExpression)
}

void KindExpression::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

KindExpression::~KindExpression() {
  // @@protoc_insertion_point(destructor:google.datastore.v1.KindExpression)
  SharedDtor();
}

void KindExpression::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void KindExpression::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* KindExpression::descriptor() {
  protobuf_google_2fdatastore_2fv1_2fquery_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fdatastore_2fv1_2fquery_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const KindExpression& KindExpression::default_instance() {
  protobuf_google_2fdatastore_2fv1_2fquery_2eproto::InitDefaults();
  return *internal_default_instance();
}

KindExpression* KindExpression::New(::google::protobuf::Arena* arena) const {
  KindExpression* n = new KindExpression;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void KindExpression::Clear() {
// @@protoc_insertion_point(message_clear_start:google.datastore.v1.KindExpression)
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool KindExpression::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.datastore.v1.KindExpression)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.datastore.v1.KindExpression.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.datastore.v1.KindExpression)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.datastore.v1.KindExpression)
  return false;
#undef DO_
}

void KindExpression::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.datastore.v1.KindExpression)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.datastore.v1.KindExpression.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // @@protoc_insertion_point(serialize_end:google.datastore.v1.KindExpression)
}

::google::protobuf::uint8* KindExpression::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.datastore.v1.KindExpression)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.datastore.v1.KindExpression.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.datastore.v1.KindExpression)
  return target;
}

size_t KindExpression::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.datastore.v1.KindExpression)
  size_t total_size = 0;

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void KindExpression::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.datastore.v1.KindExpression)
  GOOGLE_DCHECK_NE(&from, this);
  const KindExpression* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const KindExpression>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.datastore.v1.KindExpression)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.datastore.v1.KindExpression)
    MergeFrom(*source);
  }
}

void KindExpression::MergeFrom(const KindExpression& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.datastore.v1.KindExpression)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
}

void KindExpression::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.datastore.v1.KindExpression)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void KindExpression::CopyFrom(const KindExpression& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.datastore.v1.KindExpression)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool KindExpression::IsInitialized() const {
  return true;
}

void KindExpression::Swap(KindExpression* other) {
  if (other == this) return;
  InternalSwap(other);
}
void KindExpression::InternalSwap(KindExpression* other) {
  name_.Swap(&other->name_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata KindExpression::GetMetadata() const {
  protobuf_google_2fdatastore_2fv1_2fquery_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fdatastore_2fv1_2fquery_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// KindExpression

// string name = 1;
void KindExpression::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& KindExpression::name() const {
  // @@protoc_insertion_point(field_get:google.datastore.v1.KindExpression.name)
  return name_.GetNoArena();
}
void KindExpression::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.datastore.v1.KindExpression.name)
}
#if LANG_CXX11
void KindExpression::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.datastore.v1.KindExpression.name)
}
#endif
void KindExpression::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.datastore.v1.KindExpression.name)
}
void KindExpression::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.datastore.v1.KindExpression.name)
}
::std::string* KindExpression::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:google.datastore.v1.KindExpression.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* KindExpression::release_name() {
  // @@protoc_insertion_point(field_release:google.datastore.v1.KindExpression.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void KindExpression::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:google.datastore.v1.KindExpression.name)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PropertyReference::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PropertyReference::PropertyReference()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_google_2fdatastore_2fv1_2fquery_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.datastore.v1.PropertyReference)
}
PropertyReference::PropertyReference(const PropertyReference& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  // @@protoc_insertion_point(copy_constructor:google.datastore.v1.PropertyReference)
}

void PropertyReference::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

PropertyReference::~PropertyReference() {
  // @@protoc_insertion_point(destructor:google.datastore.v1.PropertyReference)
  SharedDtor();
}

void PropertyReference::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void PropertyReference::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PropertyReference::descriptor() {
  protobuf_google_2fdatastore_2fv1_2fquery_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fdatastore_2fv1_2fquery_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PropertyReference& PropertyReference::default_instance() {
  protobuf_google_2fdatastore_2fv1_2fquery_2eproto::InitDefaults();
  return *internal_default_instance();
}

PropertyReference* PropertyReference::New(::google::protobuf::Arena* arena) const {
  PropertyReference* n = new PropertyReference;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PropertyReference::Clear() {
// @@protoc_insertion_point(message_clear_start:google.datastore.v1.PropertyReference)
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool PropertyReference::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.datastore.v1.PropertyReference)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.datastore.v1.PropertyReference.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.datastore.v1.PropertyReference)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.datastore.v1.PropertyReference)
  return false;
#undef DO_
}

void PropertyReference::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.datastore.v1.PropertyReference)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.datastore.v1.PropertyReference.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // @@protoc_insertion_point(serialize_end:google.datastore.v1.PropertyReference)
}

::google::protobuf::uint8* PropertyReference::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.datastore.v1.PropertyReference)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.datastore.v1.PropertyReference.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.datastore.v1.PropertyReference)
  return target;
}

size_t PropertyReference::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.datastore.v1.PropertyReference)
  size_t total_size = 0;

  // string name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PropertyReference::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.datastore.v1.PropertyReference)
  GOOGLE_DCHECK_NE(&from, this);
  const PropertyReference* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PropertyReference>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.datastore.v1.PropertyReference)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.datastore.v1.PropertyReference)
    MergeFrom(*source);
  }
}

void PropertyReference::MergeFrom(const PropertyReference& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.datastore.v1.PropertyReference)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
}

void PropertyReference::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.datastore.v1.PropertyReference)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PropertyReference::CopyFrom(const PropertyReference& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.datastore.v1.PropertyReference)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PropertyReference::IsInitialized() const {
  return true;
}

void PropertyReference::Swap(PropertyReference* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PropertyReference::InternalSwap(PropertyReference* other) {
  name_.Swap(&other->name_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PropertyReference::GetMetadata() const {
  protobuf_google_2fdatastore_2fv1_2fquery_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fdatastore_2fv1_2fquery_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PropertyReference

// string name = 2;
void PropertyReference::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& PropertyReference::name() const {
  // @@protoc_insertion_point(field_get:google.datastore.v1.PropertyReference.name)
  return name_.GetNoArena();
}
void PropertyReference::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.datastore.v1.PropertyReference.name)
}
#if LANG_CXX11
void PropertyReference::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.datastore.v1.PropertyReference.name)
}
#endif
void PropertyReference::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.datastore.v1.PropertyReference.name)
}
void PropertyReference::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.datastore.v1.PropertyReference.name)
}
::std::string* PropertyReference::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:google.datastore.v1.PropertyReference.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PropertyReference::release_name() {
  // @@protoc_insertion_point(field_release:google.datastore.v1.PropertyReference.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PropertyReference::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:google.datastore.v1.PropertyReference.name)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Projection::kPropertyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Projection::Projection()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_google_2fdatastore_2fv1_2fquery_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.datastore.v1.Projection)
}
Projection::Projection(const Projection& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_property()) {
    property_ = new ::google::datastore::v1::PropertyReference(*from.property_);
  } else {
    property_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.datastore.v1.Projection)
}

void Projection::SharedCtor() {
  property_ = NULL;
  _cached_size_ = 0;
}

Projection::~Projection() {
  // @@protoc_insertion_point(destructor:google.datastore.v1.Projection)
  SharedDtor();
}

void Projection::SharedDtor() {
  if (this != internal_default_instance()) {
    delete property_;
  }
}

void Projection::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Projection::descriptor() {
  protobuf_google_2fdatastore_2fv1_2fquery_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fdatastore_2fv1_2fquery_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Projection& Projection::default_instance() {
  protobuf_google_2fdatastore_2fv1_2fquery_2eproto::InitDefaults();
  return *internal_default_instance();
}

Projection* Projection::New(::google::protobuf::Arena* arena) const {
  Projection* n = new Projection;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Projection::Clear() {
// @@protoc_insertion_point(message_clear_start:google.datastore.v1.Projection)
  if (GetArenaNoVirtual() == NULL && property_ != NULL) {
    delete property_;
  }
  property_ = NULL;
}

bool Projection::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.datastore.v1.Projection)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.datastore.v1.PropertyReference property = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_property()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.datastore.v1.Projection)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.datastore.v1.Projection)
  return false;
#undef DO_
}

void Projection::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.datastore.v1.Projection)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.datastore.v1.PropertyReference property = 1;
  if (this->has_property()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->property_, output);
  }

  // @@protoc_insertion_point(serialize_end:google.datastore.v1.Projection)
}

::google::protobuf::uint8* Projection::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.datastore.v1.Projection)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.datastore.v1.PropertyReference property = 1;
  if (this->has_property()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->property_, deterministic, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.datastore.v1.Projection)
  return target;
}

size_t Projection::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.datastore.v1.Projection)
  size_t total_size = 0;

  // .google.datastore.v1.PropertyReference property = 1;
  if (this->has_property()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->property_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Projection::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.datastore.v1.Projection)
  GOOGLE_DCHECK_NE(&from, this);
  const Projection* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Projection>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.datastore.v1.Projection)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.datastore.v1.Projection)
    MergeFrom(*source);
  }
}

void Projection::MergeFrom(const Projection& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.datastore.v1.Projection)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_property()) {
    mutable_property()->::google::datastore::v1::PropertyReference::MergeFrom(from.property());
  }
}

void Projection::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.datastore.v1.Projection)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Projection::CopyFrom(const Projection& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.datastore.v1.Projection)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Projection::IsInitialized() const {
  return true;
}

void Projection::Swap(Projection* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Projection::InternalSwap(Projection* other) {
  std::swap(property_, other->property_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Projection::GetMetadata() const {
  protobuf_google_2fdatastore_2fv1_2fquery_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fdatastore_2fv1_2fquery_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Projection

// .google.datastore.v1.PropertyReference property = 1;
bool Projection::has_property() const {
  return this != internal_default_instance() && property_ != NULL;
}
void Projection::clear_property() {
  if (GetArenaNoVirtual() == NULL && property_ != NULL) delete property_;
  property_ = NULL;
}
const ::google::datastore::v1::PropertyReference& Projection::property() const {
  // @@protoc_insertion_point(field_get:google.datastore.v1.Projection.property)
  return property_ != NULL ? *property_
                         : *::google::datastore::v1::PropertyReference::internal_default_instance();
}
::google::datastore::v1::PropertyReference* Projection::mutable_property() {
  
  if (property_ == NULL) {
    property_ = new ::google::datastore::v1::PropertyReference;
  }
  // @@protoc_insertion_point(field_mutable:google.datastore.v1.Projection.property)
  return property_;
}
::google::datastore::v1::PropertyReference* Projection::release_property() {
  // @@protoc_insertion_point(field_release:google.datastore.v1.Projection.property)
  
  ::google::datastore::v1::PropertyReference* temp = property_;
  property_ = NULL;
  return temp;
}
void Projection::set_allocated_property(::google::datastore::v1::PropertyReference* property) {
  delete property_;
  property_ = property;
  if (property) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.datastore.v1.Projection.property)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PropertyOrder::kPropertyFieldNumber;
const int PropertyOrder::kDirectionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PropertyOrder::PropertyOrder()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_google_2fdatastore_2fv1_2fquery_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.datastore.v1.PropertyOrder)
}
PropertyOrder::PropertyOrder(const PropertyOrder& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_property()) {
    property_ = new ::google::datastore::v1::PropertyReference(*from.property_);
  } else {
    property_ = NULL;
  }
  direction_ = from.direction_;
  // @@protoc_insertion_point(copy_constructor:google.datastore.v1.PropertyOrder)
}

void PropertyOrder::SharedCtor() {
  ::memset(&property_, 0, reinterpret_cast<char*>(&direction_) -
    reinterpret_cast<char*>(&property_) + sizeof(direction_));
  _cached_size_ = 0;
}

PropertyOrder::~PropertyOrder() {
  // @@protoc_insertion_point(destructor:google.datastore.v1.PropertyOrder)
  SharedDtor();
}

void PropertyOrder::SharedDtor() {
  if (this != internal_default_instance()) {
    delete property_;
  }
}

void PropertyOrder::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PropertyOrder::descriptor() {
  protobuf_google_2fdatastore_2fv1_2fquery_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fdatastore_2fv1_2fquery_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PropertyOrder& PropertyOrder::default_instance() {
  protobuf_google_2fdatastore_2fv1_2fquery_2eproto::InitDefaults();
  return *internal_default_instance();
}

PropertyOrder* PropertyOrder::New(::google::protobuf::Arena* arena) const {
  PropertyOrder* n = new PropertyOrder;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PropertyOrder::Clear() {
// @@protoc_insertion_point(message_clear_start:google.datastore.v1.PropertyOrder)
  if (GetArenaNoVirtual() == NULL && property_ != NULL) {
    delete property_;
  }
  property_ = NULL;
  direction_ = 0;
}

bool PropertyOrder::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.datastore.v1.PropertyOrder)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.datastore.v1.PropertyReference property = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_property()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.datastore.v1.PropertyOrder.Direction direction = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_direction(static_cast< ::google::datastore::v1::PropertyOrder_Direction >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.datastore.v1.PropertyOrder)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.datastore.v1.PropertyOrder)
  return false;
#undef DO_
}

void PropertyOrder::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.datastore.v1.PropertyOrder)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.datastore.v1.PropertyReference property = 1;
  if (this->has_property()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->property_, output);
  }

  // .google.datastore.v1.PropertyOrder.Direction direction = 2;
  if (this->direction() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->direction(), output);
  }

  // @@protoc_insertion_point(serialize_end:google.datastore.v1.PropertyOrder)
}

::google::protobuf::uint8* PropertyOrder::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.datastore.v1.PropertyOrder)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.datastore.v1.PropertyReference property = 1;
  if (this->has_property()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->property_, deterministic, target);
  }

  // .google.datastore.v1.PropertyOrder.Direction direction = 2;
  if (this->direction() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->direction(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.datastore.v1.PropertyOrder)
  return target;
}

size_t PropertyOrder::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.datastore.v1.PropertyOrder)
  size_t total_size = 0;

  // .google.datastore.v1.PropertyReference property = 1;
  if (this->has_property()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->property_);
  }

  // .google.datastore.v1.PropertyOrder.Direction direction = 2;
  if (this->direction() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->direction());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PropertyOrder::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.datastore.v1.PropertyOrder)
  GOOGLE_DCHECK_NE(&from, this);
  const PropertyOrder* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PropertyOrder>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.datastore.v1.PropertyOrder)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.datastore.v1.PropertyOrder)
    MergeFrom(*source);
  }
}

void PropertyOrder::MergeFrom(const PropertyOrder& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.datastore.v1.PropertyOrder)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_property()) {
    mutable_property()->::google::datastore::v1::PropertyReference::MergeFrom(from.property());
  }
  if (from.direction() != 0) {
    set_direction(from.direction());
  }
}

void PropertyOrder::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.datastore.v1.PropertyOrder)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PropertyOrder::CopyFrom(const PropertyOrder& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.datastore.v1.PropertyOrder)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PropertyOrder::IsInitialized() const {
  return true;
}

void PropertyOrder::Swap(PropertyOrder* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PropertyOrder::InternalSwap(PropertyOrder* other) {
  std::swap(property_, other->property_);
  std::swap(direction_, other->direction_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PropertyOrder::GetMetadata() const {
  protobuf_google_2fdatastore_2fv1_2fquery_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fdatastore_2fv1_2fquery_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PropertyOrder

// .google.datastore.v1.PropertyReference property = 1;
bool PropertyOrder::has_property() const {
  return this != internal_default_instance() && property_ != NULL;
}
void PropertyOrder::clear_property() {
  if (GetArenaNoVirtual() == NULL && property_ != NULL) delete property_;
  property_ = NULL;
}
const ::google::datastore::v1::PropertyReference& PropertyOrder::property() const {
  // @@protoc_insertion_point(field_get:google.datastore.v1.PropertyOrder.property)
  return property_ != NULL ? *property_
                         : *::google::datastore::v1::PropertyReference::internal_default_instance();
}
::google::datastore::v1::PropertyReference* PropertyOrder::mutable_property() {
  
  if (property_ == NULL) {
    property_ = new ::google::datastore::v1::PropertyReference;
  }
  // @@protoc_insertion_point(field_mutable:google.datastore.v1.PropertyOrder.property)
  return property_;
}
::google::datastore::v1::PropertyReference* PropertyOrder::release_property() {
  // @@protoc_insertion_point(field_release:google.datastore.v1.PropertyOrder.property)
  
  ::google::datastore::v1::PropertyReference* temp = property_;
  property_ = NULL;
  return temp;
}
void PropertyOrder::set_allocated_property(::google::datastore::v1::PropertyReference* property) {
  delete property_;
  property_ = property;
  if (property) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.datastore.v1.PropertyOrder.property)
}

// .google.datastore.v1.PropertyOrder.Direction direction = 2;
void PropertyOrder::clear_direction() {
  direction_ = 0;
}
::google::datastore::v1::PropertyOrder_Direction PropertyOrder::direction() const {
  // @@protoc_insertion_point(field_get:google.datastore.v1.PropertyOrder.direction)
  return static_cast< ::google::datastore::v1::PropertyOrder_Direction >(direction_);
}
void PropertyOrder::set_direction(::google::datastore::v1::PropertyOrder_Direction value) {
  
  direction_ = value;
  // @@protoc_insertion_point(field_set:google.datastore.v1.PropertyOrder.direction)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Filter::kCompositeFilterFieldNumber;
const int Filter::kPropertyFilterFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Filter::Filter()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_google_2fdatastore_2fv1_2fquery_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.datastore.v1.Filter)
}
Filter::Filter(const Filter& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_filter_type();
  switch (from.filter_type_case()) {
    case kCompositeFilter: {
      mutable_composite_filter()->::google::datastore::v1::CompositeFilter::MergeFrom(from.composite_filter());
      break;
    }
    case kPropertyFilter: {
      mutable_property_filter()->::google::datastore::v1::PropertyFilter::MergeFrom(from.property_filter());
      break;
    }
    case FILTER_TYPE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:google.datastore.v1.Filter)
}

void Filter::SharedCtor() {
  clear_has_filter_type();
  _cached_size_ = 0;
}

Filter::~Filter() {
  // @@protoc_insertion_point(destructor:google.datastore.v1.Filter)
  SharedDtor();
}

void Filter::SharedDtor() {
  if (has_filter_type()) {
    clear_filter_type();
  }
}

void Filter::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Filter::descriptor() {
  protobuf_google_2fdatastore_2fv1_2fquery_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fdatastore_2fv1_2fquery_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Filter& Filter::default_instance() {
  protobuf_google_2fdatastore_2fv1_2fquery_2eproto::InitDefaults();
  return *internal_default_instance();
}

Filter* Filter::New(::google::protobuf::Arena* arena) const {
  Filter* n = new Filter;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Filter::clear_filter_type() {
// @@protoc_insertion_point(one_of_clear_start:google.datastore.v1.Filter)
  switch (filter_type_case()) {
    case kCompositeFilter: {
      delete filter_type_.composite_filter_;
      break;
    }
    case kPropertyFilter: {
      delete filter_type_.property_filter_;
      break;
    }
    case FILTER_TYPE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = FILTER_TYPE_NOT_SET;
}


void Filter::Clear() {
// @@protoc_insertion_point(message_clear_start:google.datastore.v1.Filter)
  clear_filter_type();
}

bool Filter::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.datastore.v1.Filter)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.datastore.v1.CompositeFilter composite_filter = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_composite_filter()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.datastore.v1.PropertyFilter property_filter = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_property_filter()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.datastore.v1.Filter)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.datastore.v1.Filter)
  return false;
#undef DO_
}

void Filter::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.datastore.v1.Filter)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.datastore.v1.CompositeFilter composite_filter = 1;
  if (has_composite_filter()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *filter_type_.composite_filter_, output);
  }

  // .google.datastore.v1.PropertyFilter property_filter = 2;
  if (has_property_filter()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *filter_type_.property_filter_, output);
  }

  // @@protoc_insertion_point(serialize_end:google.datastore.v1.Filter)
}

::google::protobuf::uint8* Filter::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.datastore.v1.Filter)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.datastore.v1.CompositeFilter composite_filter = 1;
  if (has_composite_filter()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *filter_type_.composite_filter_, deterministic, target);
  }

  // .google.datastore.v1.PropertyFilter property_filter = 2;
  if (has_property_filter()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *filter_type_.property_filter_, deterministic, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.datastore.v1.Filter)
  return target;
}

size_t Filter::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.datastore.v1.Filter)
  size_t total_size = 0;

  switch (filter_type_case()) {
    // .google.datastore.v1.CompositeFilter composite_filter = 1;
    case kCompositeFilter: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *filter_type_.composite_filter_);
      break;
    }
    // .google.datastore.v1.PropertyFilter property_filter = 2;
    case kPropertyFilter: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *filter_type_.property_filter_);
      break;
    }
    case FILTER_TYPE_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Filter::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.datastore.v1.Filter)
  GOOGLE_DCHECK_NE(&from, this);
  const Filter* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Filter>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.datastore.v1.Filter)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.datastore.v1.Filter)
    MergeFrom(*source);
  }
}

void Filter::MergeFrom(const Filter& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.datastore.v1.Filter)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.filter_type_case()) {
    case kCompositeFilter: {
      mutable_composite_filter()->::google::datastore::v1::CompositeFilter::MergeFrom(from.composite_filter());
      break;
    }
    case kPropertyFilter: {
      mutable_property_filter()->::google::datastore::v1::PropertyFilter::MergeFrom(from.property_filter());
      break;
    }
    case FILTER_TYPE_NOT_SET: {
      break;
    }
  }
}

void Filter::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.datastore.v1.Filter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Filter::CopyFrom(const Filter& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.datastore.v1.Filter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Filter::IsInitialized() const {
  return true;
}

void Filter::Swap(Filter* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Filter::InternalSwap(Filter* other) {
  std::swap(filter_type_, other->filter_type_);
  std::swap(_oneof_case_[0], other->_oneof_case_[0]);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Filter::GetMetadata() const {
  protobuf_google_2fdatastore_2fv1_2fquery_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fdatastore_2fv1_2fquery_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Filter

// .google.datastore.v1.CompositeFilter composite_filter = 1;
bool Filter::has_composite_filter() const {
  return filter_type_case() == kCompositeFilter;
}
void Filter::set_has_composite_filter() {
  _oneof_case_[0] = kCompositeFilter;
}
void Filter::clear_composite_filter() {
  if (has_composite_filter()) {
    delete filter_type_.composite_filter_;
    clear_has_filter_type();
  }
}
 const ::google::datastore::v1::CompositeFilter& Filter::composite_filter() const {
  // @@protoc_insertion_point(field_get:google.datastore.v1.Filter.composite_filter)
  return has_composite_filter()
      ? *filter_type_.composite_filter_
      : ::google::datastore::v1::CompositeFilter::default_instance();
}
::google::datastore::v1::CompositeFilter* Filter::mutable_composite_filter() {
  if (!has_composite_filter()) {
    clear_filter_type();
    set_has_composite_filter();
    filter_type_.composite_filter_ = new ::google::datastore::v1::CompositeFilter;
  }
  // @@protoc_insertion_point(field_mutable:google.datastore.v1.Filter.composite_filter)
  return filter_type_.composite_filter_;
}
::google::datastore::v1::CompositeFilter* Filter::release_composite_filter() {
  // @@protoc_insertion_point(field_release:google.datastore.v1.Filter.composite_filter)
  if (has_composite_filter()) {
    clear_has_filter_type();
    ::google::datastore::v1::CompositeFilter* temp = filter_type_.composite_filter_;
    filter_type_.composite_filter_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void Filter::set_allocated_composite_filter(::google::datastore::v1::CompositeFilter* composite_filter) {
  clear_filter_type();
  if (composite_filter) {
    set_has_composite_filter();
    filter_type_.composite_filter_ = composite_filter;
  }
  // @@protoc_insertion_point(field_set_allocated:google.datastore.v1.Filter.composite_filter)
}

// .google.datastore.v1.PropertyFilter property_filter = 2;
bool Filter::has_property_filter() const {
  return filter_type_case() == kPropertyFilter;
}
void Filter::set_has_property_filter() {
  _oneof_case_[0] = kPropertyFilter;
}
void Filter::clear_property_filter() {
  if (has_property_filter()) {
    delete filter_type_.property_filter_;
    clear_has_filter_type();
  }
}
 const ::google::datastore::v1::PropertyFilter& Filter::property_filter() const {
  // @@protoc_insertion_point(field_get:google.datastore.v1.Filter.property_filter)
  return has_property_filter()
      ? *filter_type_.property_filter_
      : ::google::datastore::v1::PropertyFilter::default_instance();
}
::google::datastore::v1::PropertyFilter* Filter::mutable_property_filter() {
  if (!has_property_filter()) {
    clear_filter_type();
    set_has_property_filter();
    filter_type_.property_filter_ = new ::google::datastore::v1::PropertyFilter;
  }
  // @@protoc_insertion_point(field_mutable:google.datastore.v1.Filter.property_filter)
  return filter_type_.property_filter_;
}
::google::datastore::v1::PropertyFilter* Filter::release_property_filter() {
  // @@protoc_insertion_point(field_release:google.datastore.v1.Filter.property_filter)
  if (has_property_filter()) {
    clear_has_filter_type();
    ::google::datastore::v1::PropertyFilter* temp = filter_type_.property_filter_;
    filter_type_.property_filter_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void Filter::set_allocated_property_filter(::google::datastore::v1::PropertyFilter* property_filter) {
  clear_filter_type();
  if (property_filter) {
    set_has_property_filter();
    filter_type_.property_filter_ = property_filter;
  }
  // @@protoc_insertion_point(field_set_allocated:google.datastore.v1.Filter.property_filter)
}

bool Filter::has_filter_type() const {
  return filter_type_case() != FILTER_TYPE_NOT_SET;
}
void Filter::clear_has_filter_type() {
  _oneof_case_[0] = FILTER_TYPE_NOT_SET;
}
Filter::FilterTypeCase Filter::filter_type_case() const {
  return Filter::FilterTypeCase(_oneof_case_[0]);
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CompositeFilter::kOpFieldNumber;
const int CompositeFilter::kFiltersFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CompositeFilter::CompositeFilter()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_google_2fdatastore_2fv1_2fquery_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.datastore.v1.CompositeFilter)
}
CompositeFilter::CompositeFilter(const CompositeFilter& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      filters_(from.filters_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  op_ = from.op_;
  // @@protoc_insertion_point(copy_constructor:google.datastore.v1.CompositeFilter)
}

void CompositeFilter::SharedCtor() {
  op_ = 0;
  _cached_size_ = 0;
}

CompositeFilter::~CompositeFilter() {
  // @@protoc_insertion_point(destructor:google.datastore.v1.CompositeFilter)
  SharedDtor();
}

void CompositeFilter::SharedDtor() {
}

void CompositeFilter::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CompositeFilter::descriptor() {
  protobuf_google_2fdatastore_2fv1_2fquery_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fdatastore_2fv1_2fquery_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CompositeFilter& CompositeFilter::default_instance() {
  protobuf_google_2fdatastore_2fv1_2fquery_2eproto::InitDefaults();
  return *internal_default_instance();
}

CompositeFilter* CompositeFilter::New(::google::protobuf::Arena* arena) const {
  CompositeFilter* n = new CompositeFilter;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CompositeFilter::Clear() {
// @@protoc_insertion_point(message_clear_start:google.datastore.v1.CompositeFilter)
  filters_.Clear();
  op_ = 0;
}

bool CompositeFilter::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.datastore.v1.CompositeFilter)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.datastore.v1.CompositeFilter.Operator op = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_op(static_cast< ::google::datastore::v1::CompositeFilter_Operator >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.datastore.v1.Filter filters = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_filters()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.datastore.v1.CompositeFilter)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.datastore.v1.CompositeFilter)
  return false;
#undef DO_
}

void CompositeFilter::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.datastore.v1.CompositeFilter)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.datastore.v1.CompositeFilter.Operator op = 1;
  if (this->op() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->op(), output);
  }

  // repeated .google.datastore.v1.Filter filters = 2;
  for (unsigned int i = 0, n = this->filters_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->filters(i), output);
  }

  // @@protoc_insertion_point(serialize_end:google.datastore.v1.CompositeFilter)
}

::google::protobuf::uint8* CompositeFilter::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.datastore.v1.CompositeFilter)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.datastore.v1.CompositeFilter.Operator op = 1;
  if (this->op() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->op(), target);
  }

  // repeated .google.datastore.v1.Filter filters = 2;
  for (unsigned int i = 0, n = this->filters_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->filters(i), deterministic, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.datastore.v1.CompositeFilter)
  return target;
}

size_t CompositeFilter::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.datastore.v1.CompositeFilter)
  size_t total_size = 0;

  // repeated .google.datastore.v1.Filter filters = 2;
  {
    unsigned int count = this->filters_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->filters(i));
    }
  }

  // .google.datastore.v1.CompositeFilter.Operator op = 1;
  if (this->op() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->op());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CompositeFilter::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.datastore.v1.CompositeFilter)
  GOOGLE_DCHECK_NE(&from, this);
  const CompositeFilter* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CompositeFilter>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.datastore.v1.CompositeFilter)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.datastore.v1.CompositeFilter)
    MergeFrom(*source);
  }
}

void CompositeFilter::MergeFrom(const CompositeFilter& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.datastore.v1.CompositeFilter)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  filters_.MergeFrom(from.filters_);
  if (from.op() != 0) {
    set_op(from.op());
  }
}

void CompositeFilter::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.datastore.v1.CompositeFilter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CompositeFilter::CopyFrom(const CompositeFilter& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.datastore.v1.CompositeFilter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CompositeFilter::IsInitialized() const {
  return true;
}

void CompositeFilter::Swap(CompositeFilter* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CompositeFilter::InternalSwap(CompositeFilter* other) {
  filters_.InternalSwap(&other->filters_);
  std::swap(op_, other->op_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CompositeFilter::GetMetadata() const {
  protobuf_google_2fdatastore_2fv1_2fquery_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fdatastore_2fv1_2fquery_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CompositeFilter

// .google.datastore.v1.CompositeFilter.Operator op = 1;
void CompositeFilter::clear_op() {
  op_ = 0;
}
::google::datastore::v1::CompositeFilter_Operator CompositeFilter::op() const {
  // @@protoc_insertion_point(field_get:google.datastore.v1.CompositeFilter.op)
  return static_cast< ::google::datastore::v1::CompositeFilter_Operator >(op_);
}
void CompositeFilter::set_op(::google::datastore::v1::CompositeFilter_Operator value) {
  
  op_ = value;
  // @@protoc_insertion_point(field_set:google.datastore.v1.CompositeFilter.op)
}

// repeated .google.datastore.v1.Filter filters = 2;
int CompositeFilter::filters_size() const {
  return filters_.size();
}
void CompositeFilter::clear_filters() {
  filters_.Clear();
}
const ::google::datastore::v1::Filter& CompositeFilter::filters(int index) const {
  // @@protoc_insertion_point(field_get:google.datastore.v1.CompositeFilter.filters)
  return filters_.Get(index);
}
::google::datastore::v1::Filter* CompositeFilter::mutable_filters(int index) {
  // @@protoc_insertion_point(field_mutable:google.datastore.v1.CompositeFilter.filters)
  return filters_.Mutable(index);
}
::google::datastore::v1::Filter* CompositeFilter::add_filters() {
  // @@protoc_insertion_point(field_add:google.datastore.v1.CompositeFilter.filters)
  return filters_.Add();
}
::google::protobuf::RepeatedPtrField< ::google::datastore::v1::Filter >*
CompositeFilter::mutable_filters() {
  // @@protoc_insertion_point(field_mutable_list:google.datastore.v1.CompositeFilter.filters)
  return &filters_;
}
const ::google::protobuf::RepeatedPtrField< ::google::datastore::v1::Filter >&
CompositeFilter::filters() const {
  // @@protoc_insertion_point(field_list:google.datastore.v1.CompositeFilter.filters)
  return filters_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PropertyFilter::kPropertyFieldNumber;
const int PropertyFilter::kOpFieldNumber;
const int PropertyFilter::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PropertyFilter::PropertyFilter()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_google_2fdatastore_2fv1_2fquery_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.datastore.v1.PropertyFilter)
}
PropertyFilter::PropertyFilter(const PropertyFilter& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_property()) {
    property_ = new ::google::datastore::v1::PropertyReference(*from.property_);
  } else {
    property_ = NULL;
  }
  if (from.has_value()) {
    value_ = new ::google::datastore::v1::Value(*from.value_);
  } else {
    value_ = NULL;
  }
  op_ = from.op_;
  // @@protoc_insertion_point(copy_constructor:google.datastore.v1.PropertyFilter)
}

void PropertyFilter::SharedCtor() {
  ::memset(&property_, 0, reinterpret_cast<char*>(&op_) -
    reinterpret_cast<char*>(&property_) + sizeof(op_));
  _cached_size_ = 0;
}

PropertyFilter::~PropertyFilter() {
  // @@protoc_insertion_point(destructor:google.datastore.v1.PropertyFilter)
  SharedDtor();
}

void PropertyFilter::SharedDtor() {
  if (this != internal_default_instance()) {
    delete property_;
  }
  if (this != internal_default_instance()) {
    delete value_;
  }
}

void PropertyFilter::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PropertyFilter::descriptor() {
  protobuf_google_2fdatastore_2fv1_2fquery_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fdatastore_2fv1_2fquery_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PropertyFilter& PropertyFilter::default_instance() {
  protobuf_google_2fdatastore_2fv1_2fquery_2eproto::InitDefaults();
  return *internal_default_instance();
}

PropertyFilter* PropertyFilter::New(::google::protobuf::Arena* arena) const {
  PropertyFilter* n = new PropertyFilter;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PropertyFilter::Clear() {
// @@protoc_insertion_point(message_clear_start:google.datastore.v1.PropertyFilter)
  if (GetArenaNoVirtual() == NULL && property_ != NULL) {
    delete property_;
  }
  property_ = NULL;
  if (GetArenaNoVirtual() == NULL && value_ != NULL) {
    delete value_;
  }
  value_ = NULL;
  op_ = 0;
}

bool PropertyFilter::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.datastore.v1.PropertyFilter)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.datastore.v1.PropertyReference property = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_property()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.datastore.v1.PropertyFilter.Operator op = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_op(static_cast< ::google::datastore::v1::PropertyFilter_Operator >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.datastore.v1.Value value = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.datastore.v1.PropertyFilter)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.datastore.v1.PropertyFilter)
  return false;
#undef DO_
}

void PropertyFilter::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.datastore.v1.PropertyFilter)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.datastore.v1.PropertyReference property = 1;
  if (this->has_property()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->property_, output);
  }

  // .google.datastore.v1.PropertyFilter.Operator op = 2;
  if (this->op() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->op(), output);
  }

  // .google.datastore.v1.Value value = 3;
  if (this->has_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->value_, output);
  }

  // @@protoc_insertion_point(serialize_end:google.datastore.v1.PropertyFilter)
}

::google::protobuf::uint8* PropertyFilter::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.datastore.v1.PropertyFilter)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.datastore.v1.PropertyReference property = 1;
  if (this->has_property()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->property_, deterministic, target);
  }

  // .google.datastore.v1.PropertyFilter.Operator op = 2;
  if (this->op() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->op(), target);
  }

  // .google.datastore.v1.Value value = 3;
  if (this->has_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->value_, deterministic, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.datastore.v1.PropertyFilter)
  return target;
}

size_t PropertyFilter::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.datastore.v1.PropertyFilter)
  size_t total_size = 0;

  // .google.datastore.v1.PropertyReference property = 1;
  if (this->has_property()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->property_);
  }

  // .google.datastore.v1.Value value = 3;
  if (this->has_value()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->value_);
  }

  // .google.datastore.v1.PropertyFilter.Operator op = 2;
  if (this->op() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->op());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PropertyFilter::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.datastore.v1.PropertyFilter)
  GOOGLE_DCHECK_NE(&from, this);
  const PropertyFilter* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PropertyFilter>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.datastore.v1.PropertyFilter)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.datastore.v1.PropertyFilter)
    MergeFrom(*source);
  }
}

void PropertyFilter::MergeFrom(const PropertyFilter& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.datastore.v1.PropertyFilter)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_property()) {
    mutable_property()->::google::datastore::v1::PropertyReference::MergeFrom(from.property());
  }
  if (from.has_value()) {
    mutable_value()->::google::datastore::v1::Value::MergeFrom(from.value());
  }
  if (from.op() != 0) {
    set_op(from.op());
  }
}

void PropertyFilter::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.datastore.v1.PropertyFilter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PropertyFilter::CopyFrom(const PropertyFilter& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.datastore.v1.PropertyFilter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PropertyFilter::IsInitialized() const {
  return true;
}

void PropertyFilter::Swap(PropertyFilter* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PropertyFilter::InternalSwap(PropertyFilter* other) {
  std::swap(property_, other->property_);
  std::swap(value_, other->value_);
  std::swap(op_, other->op_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PropertyFilter::GetMetadata() const {
  protobuf_google_2fdatastore_2fv1_2fquery_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fdatastore_2fv1_2fquery_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PropertyFilter

// .google.datastore.v1.PropertyReference property = 1;
bool PropertyFilter::has_property() const {
  return this != internal_default_instance() && property_ != NULL;
}
void PropertyFilter::clear_property() {
  if (GetArenaNoVirtual() == NULL && property_ != NULL) delete property_;
  property_ = NULL;
}
const ::google::datastore::v1::PropertyReference& PropertyFilter::property() const {
  // @@protoc_insertion_point(field_get:google.datastore.v1.PropertyFilter.property)
  return property_ != NULL ? *property_
                         : *::google::datastore::v1::PropertyReference::internal_default_instance();
}
::google::datastore::v1::PropertyReference* PropertyFilter::mutable_property() {
  
  if (property_ == NULL) {
    property_ = new ::google::datastore::v1::PropertyReference;
  }
  // @@protoc_insertion_point(field_mutable:google.datastore.v1.PropertyFilter.property)
  return property_;
}
::google::datastore::v1::PropertyReference* PropertyFilter::release_property() {
  // @@protoc_insertion_point(field_release:google.datastore.v1.PropertyFilter.property)
  
  ::google::datastore::v1::PropertyReference* temp = property_;
  property_ = NULL;
  return temp;
}
void PropertyFilter::set_allocated_property(::google::datastore::v1::PropertyReference* property) {
  delete property_;
  property_ = property;
  if (property) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.datastore.v1.PropertyFilter.property)
}

// .google.datastore.v1.PropertyFilter.Operator op = 2;
void PropertyFilter::clear_op() {
  op_ = 0;
}
::google::datastore::v1::PropertyFilter_Operator PropertyFilter::op() const {
  // @@protoc_insertion_point(field_get:google.datastore.v1.PropertyFilter.op)
  return static_cast< ::google::datastore::v1::PropertyFilter_Operator >(op_);
}
void PropertyFilter::set_op(::google::datastore::v1::PropertyFilter_Operator value) {
  
  op_ = value;
  // @@protoc_insertion_point(field_set:google.datastore.v1.PropertyFilter.op)
}

// .google.datastore.v1.Value value = 3;
bool PropertyFilter::has_value() const {
  return this != internal_default_instance() && value_ != NULL;
}
void PropertyFilter::clear_value() {
  if (GetArenaNoVirtual() == NULL && value_ != NULL) delete value_;
  value_ = NULL;
}
const ::google::datastore::v1::Value& PropertyFilter::value() const {
  // @@protoc_insertion_point(field_get:google.datastore.v1.PropertyFilter.value)
  return value_ != NULL ? *value_
                         : *::google::datastore::v1::Value::internal_default_instance();
}
::google::datastore::v1::Value* PropertyFilter::mutable_value() {
  
  if (value_ == NULL) {
    value_ = new ::google::datastore::v1::Value;
  }
  // @@protoc_insertion_point(field_mutable:google.datastore.v1.PropertyFilter.value)
  return value_;
}
::google::datastore::v1::Value* PropertyFilter::release_value() {
  // @@protoc_insertion_point(field_release:google.datastore.v1.PropertyFilter.value)
  
  ::google::datastore::v1::Value* temp = value_;
  value_ = NULL;
  return temp;
}
void PropertyFilter::set_allocated_value(::google::datastore::v1::Value* value) {
  delete value_;
  value_ = value;
  if (value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.datastore.v1.PropertyFilter.value)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

GqlQuery::GqlQuery_NamedBindingsEntry::GqlQuery_NamedBindingsEntry() {}
GqlQuery::GqlQuery_NamedBindingsEntry::GqlQuery_NamedBindingsEntry(::google::protobuf::Arena* arena) : SuperType(arena) {}
::google::protobuf::Metadata GqlQuery::GqlQuery_NamedBindingsEntry::GetMetadata() const {
  protobuf_google_2fdatastore_2fv1_2fquery_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fdatastore_2fv1_2fquery_2eproto::file_level_metadata[9];
}
void GqlQuery::GqlQuery_NamedBindingsEntry::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}
void GqlQuery::GqlQuery_NamedBindingsEntry::MergeFrom(const GqlQuery_NamedBindingsEntry& other) {
  MergeFromInternal(other);
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GqlQuery::kQueryStringFieldNumber;
const int GqlQuery::kAllowLiteralsFieldNumber;
const int GqlQuery::kNamedBindingsFieldNumber;
const int GqlQuery::kPositionalBindingsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GqlQuery::GqlQuery()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_google_2fdatastore_2fv1_2fquery_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.datastore.v1.GqlQuery)
}
GqlQuery::GqlQuery(const GqlQuery& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      positional_bindings_(from.positional_bindings_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  named_bindings_.MergeFrom(from.named_bindings_);
  query_string_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.query_string().size() > 0) {
    query_string_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.query_string_);
  }
  allow_literals_ = from.allow_literals_;
  // @@protoc_insertion_point(copy_constructor:google.datastore.v1.GqlQuery)
}

void GqlQuery::SharedCtor() {
  query_string_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  allow_literals_ = false;
  _cached_size_ = 0;
}

GqlQuery::~GqlQuery() {
  // @@protoc_insertion_point(destructor:google.datastore.v1.GqlQuery)
  SharedDtor();
}

void GqlQuery::SharedDtor() {
  query_string_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GqlQuery::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GqlQuery::descriptor() {
  protobuf_google_2fdatastore_2fv1_2fquery_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fdatastore_2fv1_2fquery_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GqlQuery& GqlQuery::default_instance() {
  protobuf_google_2fdatastore_2fv1_2fquery_2eproto::InitDefaults();
  return *internal_default_instance();
}

GqlQuery* GqlQuery::New(::google::protobuf::Arena* arena) const {
  GqlQuery* n = new GqlQuery;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GqlQuery::Clear() {
// @@protoc_insertion_point(message_clear_start:google.datastore.v1.GqlQuery)
  positional_bindings_.Clear();
  named_bindings_.Clear();
  query_string_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  allow_literals_ = false;
}

bool GqlQuery::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.datastore.v1.GqlQuery)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string query_string = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_query_string()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->query_string().data(), this->query_string().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.datastore.v1.GqlQuery.query_string"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool allow_literals = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &allow_literals_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.datastore.v1.GqlQueryParameter positional_bindings = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_positional_bindings()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, .google.datastore.v1.GqlQueryParameter> named_bindings = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u)) {
          GqlQuery_NamedBindingsEntry::Parser< ::google::protobuf::internal::MapField<
              GqlQuery_NamedBindingsEntry,
              ::std::string, ::google::datastore::v1::GqlQueryParameter,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
              0 >,
            ::google::protobuf::Map< ::std::string, ::google::datastore::v1::GqlQueryParameter > > parser(&named_bindings_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), parser.key().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.datastore.v1.GqlQuery.NamedBindingsEntry.key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.datastore.v1.GqlQuery)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.datastore.v1.GqlQuery)
  return false;
#undef DO_
}

void GqlQuery::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.datastore.v1.GqlQuery)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string query_string = 1;
  if (this->query_string().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->query_string().data(), this->query_string().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.datastore.v1.GqlQuery.query_string");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->query_string(), output);
  }

  // bool allow_literals = 2;
  if (this->allow_literals() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->allow_literals(), output);
  }

  // repeated .google.datastore.v1.GqlQueryParameter positional_bindings = 4;
  for (unsigned int i = 0, n = this->positional_bindings_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->positional_bindings(i), output);
  }

  // map<string, .google.datastore.v1.GqlQueryParameter> named_bindings = 5;
  if (!this->named_bindings().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::google::datastore::v1::GqlQueryParameter >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), p->first.length(),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.datastore.v1.GqlQuery.NamedBindingsEntry.key");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->named_bindings().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->named_bindings().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::google::datastore::v1::GqlQueryParameter >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::google::datastore::v1::GqlQueryParameter >::const_iterator
          it = this->named_bindings().begin();
          it != this->named_bindings().end(); ++it, ++n) {
        items[n] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[n], Less());
      ::google::protobuf::scoped_ptr<GqlQuery_NamedBindingsEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(named_bindings_.NewEntryWrapper(
            items[i]->first, items[i]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            5, *entry, output);
        Utf8Check::Check(items[i]);
      }
    } else {
      ::google::protobuf::scoped_ptr<GqlQuery_NamedBindingsEntry> entry;
      for (::google::protobuf::Map< ::std::string, ::google::datastore::v1::GqlQueryParameter >::const_iterator
          it = this->named_bindings().begin();
          it != this->named_bindings().end(); ++it) {
        entry.reset(named_bindings_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            5, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  // @@protoc_insertion_point(serialize_end:google.datastore.v1.GqlQuery)
}

::google::protobuf::uint8* GqlQuery::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.datastore.v1.GqlQuery)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string query_string = 1;
  if (this->query_string().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->query_string().data(), this->query_string().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.datastore.v1.GqlQuery.query_string");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->query_string(), target);
  }

  // bool allow_literals = 2;
  if (this->allow_literals() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->allow_literals(), target);
  }

  // repeated .google.datastore.v1.GqlQueryParameter positional_bindings = 4;
  for (unsigned int i = 0, n = this->positional_bindings_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, this->positional_bindings(i), deterministic, target);
  }

  // map<string, .google.datastore.v1.GqlQueryParameter> named_bindings = 5;
  if (!this->named_bindings().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::google::datastore::v1::GqlQueryParameter >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), p->first.length(),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.datastore.v1.GqlQuery.NamedBindingsEntry.key");
      }
    };

    if (deterministic &&
        this->named_bindings().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->named_bindings().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::google::datastore::v1::GqlQueryParameter >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::google::datastore::v1::GqlQueryParameter >::const_iterator
          it = this->named_bindings().begin();
          it != this->named_bindings().end(); ++it, ++n) {
        items[n] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[n], Less());
      ::google::protobuf::scoped_ptr<GqlQuery_NamedBindingsEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(named_bindings_.NewEntryWrapper(
            items[i]->first, items[i]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       5, *entry, deterministic, target);
;
        Utf8Check::Check(items[i]);
      }
    } else {
      ::google::protobuf::scoped_ptr<GqlQuery_NamedBindingsEntry> entry;
      for (::google::protobuf::Map< ::std::string, ::google::datastore::v1::GqlQueryParameter >::const_iterator
          it = this->named_bindings().begin();
          it != this->named_bindings().end(); ++it) {
        entry.reset(named_bindings_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       5, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.datastore.v1.GqlQuery)
  return target;
}

size_t GqlQuery::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.datastore.v1.GqlQuery)
  size_t total_size = 0;

  // repeated .google.datastore.v1.GqlQueryParameter positional_bindings = 4;
  {
    unsigned int count = this->positional_bindings_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->positional_bindings(i));
    }
  }

  // map<string, .google.datastore.v1.GqlQueryParameter> named_bindings = 5;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->named_bindings_size());
  {
    ::google::protobuf::scoped_ptr<GqlQuery_NamedBindingsEntry> entry;
    for (::google::protobuf::Map< ::std::string, ::google::datastore::v1::GqlQueryParameter >::const_iterator
        it = this->named_bindings().begin();
        it != this->named_bindings().end(); ++it) {
      entry.reset(named_bindings_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // string query_string = 1;
  if (this->query_string().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->query_string());
  }

  // bool allow_literals = 2;
  if (this->allow_literals() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GqlQuery::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.datastore.v1.GqlQuery)
  GOOGLE_DCHECK_NE(&from, this);
  const GqlQuery* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GqlQuery>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.datastore.v1.GqlQuery)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.datastore.v1.GqlQuery)
    MergeFrom(*source);
  }
}

void GqlQuery::MergeFrom(const GqlQuery& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.datastore.v1.GqlQuery)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  positional_bindings_.MergeFrom(from.positional_bindings_);
  named_bindings_.MergeFrom(from.named_bindings_);
  if (from.query_string().size() > 0) {

    query_string_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.query_string_);
  }
  if (from.allow_literals() != 0) {
    set_allow_literals(from.allow_literals());
  }
}

void GqlQuery::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.datastore.v1.GqlQuery)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GqlQuery::CopyFrom(const GqlQuery& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.datastore.v1.GqlQuery)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GqlQuery::IsInitialized() const {
  return true;
}

void GqlQuery::Swap(GqlQuery* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GqlQuery::InternalSwap(GqlQuery* other) {
  positional_bindings_.InternalSwap(&other->positional_bindings_);
  named_bindings_.Swap(&other->named_bindings_);
  query_string_.Swap(&other->query_string_);
  std::swap(allow_literals_, other->allow_literals_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GqlQuery::GetMetadata() const {
  protobuf_google_2fdatastore_2fv1_2fquery_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fdatastore_2fv1_2fquery_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GqlQuery

// string query_string = 1;
void GqlQuery::clear_query_string() {
  query_string_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& GqlQuery::query_string() const {
  // @@protoc_insertion_point(field_get:google.datastore.v1.GqlQuery.query_string)
  return query_string_.GetNoArena();
}
void GqlQuery::set_query_string(const ::std::string& value) {
  
  query_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.datastore.v1.GqlQuery.query_string)
}
#if LANG_CXX11
void GqlQuery::set_query_string(::std::string&& value) {
  
  query_string_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.datastore.v1.GqlQuery.query_string)
}
#endif
void GqlQuery::set_query_string(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  query_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.datastore.v1.GqlQuery.query_string)
}
void GqlQuery::set_query_string(const char* value, size_t size) {
  
  query_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.datastore.v1.GqlQuery.query_string)
}
::std::string* GqlQuery::mutable_query_string() {
  
  // @@protoc_insertion_point(field_mutable:google.datastore.v1.GqlQuery.query_string)
  return query_string_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GqlQuery::release_query_string() {
  // @@protoc_insertion_point(field_release:google.datastore.v1.GqlQuery.query_string)
  
  return query_string_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GqlQuery::set_allocated_query_string(::std::string* query_string) {
  if (query_string != NULL) {
    
  } else {
    
  }
  query_string_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), query_string);
  // @@protoc_insertion_point(field_set_allocated:google.datastore.v1.GqlQuery.query_string)
}

// bool allow_literals = 2;
void GqlQuery::clear_allow_literals() {
  allow_literals_ = false;
}
bool GqlQuery::allow_literals() const {
  // @@protoc_insertion_point(field_get:google.datastore.v1.GqlQuery.allow_literals)
  return allow_literals_;
}
void GqlQuery::set_allow_literals(bool value) {
  
  allow_literals_ = value;
  // @@protoc_insertion_point(field_set:google.datastore.v1.GqlQuery.allow_literals)
}

// map<string, .google.datastore.v1.GqlQueryParameter> named_bindings = 5;
int GqlQuery::named_bindings_size() const {
  return named_bindings_.size();
}
void GqlQuery::clear_named_bindings() {
  named_bindings_.Clear();
}
 const ::google::protobuf::Map< ::std::string, ::google::datastore::v1::GqlQueryParameter >&
GqlQuery::named_bindings() const {
  // @@protoc_insertion_point(field_map:google.datastore.v1.GqlQuery.named_bindings)
  return named_bindings_.GetMap();
}
 ::google::protobuf::Map< ::std::string, ::google::datastore::v1::GqlQueryParameter >*
GqlQuery::mutable_named_bindings() {
  // @@protoc_insertion_point(field_mutable_map:google.datastore.v1.GqlQuery.named_bindings)
  return named_bindings_.MutableMap();
}

// repeated .google.datastore.v1.GqlQueryParameter positional_bindings = 4;
int GqlQuery::positional_bindings_size() const {
  return positional_bindings_.size();
}
void GqlQuery::clear_positional_bindings() {
  positional_bindings_.Clear();
}
const ::google::datastore::v1::GqlQueryParameter& GqlQuery::positional_bindings(int index) const {
  // @@protoc_insertion_point(field_get:google.datastore.v1.GqlQuery.positional_bindings)
  return positional_bindings_.Get(index);
}
::google::datastore::v1::GqlQueryParameter* GqlQuery::mutable_positional_bindings(int index) {
  // @@protoc_insertion_point(field_mutable:google.datastore.v1.GqlQuery.positional_bindings)
  return positional_bindings_.Mutable(index);
}
::google::datastore::v1::GqlQueryParameter* GqlQuery::add_positional_bindings() {
  // @@protoc_insertion_point(field_add:google.datastore.v1.GqlQuery.positional_bindings)
  return positional_bindings_.Add();
}
::google::protobuf::RepeatedPtrField< ::google::datastore::v1::GqlQueryParameter >*
GqlQuery::mutable_positional_bindings() {
  // @@protoc_insertion_point(field_mutable_list:google.datastore.v1.GqlQuery.positional_bindings)
  return &positional_bindings_;
}
const ::google::protobuf::RepeatedPtrField< ::google::datastore::v1::GqlQueryParameter >&
GqlQuery::positional_bindings() const {
  // @@protoc_insertion_point(field_list:google.datastore.v1.GqlQuery.positional_bindings)
  return positional_bindings_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GqlQueryParameter::kValueFieldNumber;
const int GqlQueryParameter::kCursorFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GqlQueryParameter::GqlQueryParameter()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_google_2fdatastore_2fv1_2fquery_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.datastore.v1.GqlQueryParameter)
}
GqlQueryParameter::GqlQueryParameter(const GqlQueryParameter& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_parameter_type();
  switch (from.parameter_type_case()) {
    case kValue: {
      mutable_value()->::google::datastore::v1::Value::MergeFrom(from.value());
      break;
    }
    case kCursor: {
      set_cursor(from.cursor());
      break;
    }
    case PARAMETER_TYPE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:google.datastore.v1.GqlQueryParameter)
}

void GqlQueryParameter::SharedCtor() {
  clear_has_parameter_type();
  _cached_size_ = 0;
}

GqlQueryParameter::~GqlQueryParameter() {
  // @@protoc_insertion_point(destructor:google.datastore.v1.GqlQueryParameter)
  SharedDtor();
}

void GqlQueryParameter::SharedDtor() {
  if (has_parameter_type()) {
    clear_parameter_type();
  }
}

void GqlQueryParameter::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GqlQueryParameter::descriptor() {
  protobuf_google_2fdatastore_2fv1_2fquery_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fdatastore_2fv1_2fquery_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GqlQueryParameter& GqlQueryParameter::default_instance() {
  protobuf_google_2fdatastore_2fv1_2fquery_2eproto::InitDefaults();
  return *internal_default_instance();
}

GqlQueryParameter* GqlQueryParameter::New(::google::protobuf::Arena* arena) const {
  GqlQueryParameter* n = new GqlQueryParameter;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GqlQueryParameter::clear_parameter_type() {
// @@protoc_insertion_point(one_of_clear_start:google.datastore.v1.GqlQueryParameter)
  switch (parameter_type_case()) {
    case kValue: {
      delete parameter_type_.value_;
      break;
    }
    case kCursor: {
      parameter_type_.cursor_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case PARAMETER_TYPE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = PARAMETER_TYPE_NOT_SET;
}


void GqlQueryParameter::Clear() {
// @@protoc_insertion_point(message_clear_start:google.datastore.v1.GqlQueryParameter)
  clear_parameter_type();
}

bool GqlQueryParameter::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.datastore.v1.GqlQueryParameter)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.datastore.v1.Value value = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes cursor = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_cursor()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.datastore.v1.GqlQueryParameter)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.datastore.v1.GqlQueryParameter)
  return false;
#undef DO_
}

void GqlQueryParameter::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.datastore.v1.GqlQueryParameter)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.datastore.v1.Value value = 2;
  if (has_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *parameter_type_.value_, output);
  }

  // bytes cursor = 3;
  if (has_cursor()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->cursor(), output);
  }

  // @@protoc_insertion_point(serialize_end:google.datastore.v1.GqlQueryParameter)
}

::google::protobuf::uint8* GqlQueryParameter::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.datastore.v1.GqlQueryParameter)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.datastore.v1.Value value = 2;
  if (has_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *parameter_type_.value_, deterministic, target);
  }

  // bytes cursor = 3;
  if (has_cursor()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->cursor(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.datastore.v1.GqlQueryParameter)
  return target;
}

size_t GqlQueryParameter::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.datastore.v1.GqlQueryParameter)
  size_t total_size = 0;

  switch (parameter_type_case()) {
    // .google.datastore.v1.Value value = 2;
    case kValue: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *parameter_type_.value_);
      break;
    }
    // bytes cursor = 3;
    case kCursor: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->cursor());
      break;
    }
    case PARAMETER_TYPE_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GqlQueryParameter::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.datastore.v1.GqlQueryParameter)
  GOOGLE_DCHECK_NE(&from, this);
  const GqlQueryParameter* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GqlQueryParameter>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.datastore.v1.GqlQueryParameter)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.datastore.v1.GqlQueryParameter)
    MergeFrom(*source);
  }
}

void GqlQueryParameter::MergeFrom(const GqlQueryParameter& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.datastore.v1.GqlQueryParameter)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.parameter_type_case()) {
    case kValue: {
      mutable_value()->::google::datastore::v1::Value::MergeFrom(from.value());
      break;
    }
    case kCursor: {
      set_cursor(from.cursor());
      break;
    }
    case PARAMETER_TYPE_NOT_SET: {
      break;
    }
  }
}

void GqlQueryParameter::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.datastore.v1.GqlQueryParameter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GqlQueryParameter::CopyFrom(const GqlQueryParameter& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.datastore.v1.GqlQueryParameter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GqlQueryParameter::IsInitialized() const {
  return true;
}

void GqlQueryParameter::Swap(GqlQueryParameter* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GqlQueryParameter::InternalSwap(GqlQueryParameter* other) {
  std::swap(parameter_type_, other->parameter_type_);
  std::swap(_oneof_case_[0], other->_oneof_case_[0]);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GqlQueryParameter::GetMetadata() const {
  protobuf_google_2fdatastore_2fv1_2fquery_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fdatastore_2fv1_2fquery_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GqlQueryParameter

// .google.datastore.v1.Value value = 2;
bool GqlQueryParameter::has_value() const {
  return parameter_type_case() == kValue;
}
void GqlQueryParameter::set_has_value() {
  _oneof_case_[0] = kValue;
}
void GqlQueryParameter::clear_value() {
  if (has_value()) {
    delete parameter_type_.value_;
    clear_has_parameter_type();
  }
}
 const ::google::datastore::v1::Value& GqlQueryParameter::value() const {
  // @@protoc_insertion_point(field_get:google.datastore.v1.GqlQueryParameter.value)
  return has_value()
      ? *parameter_type_.value_
      : ::google::datastore::v1::Value::default_instance();
}
::google::datastore::v1::Value* GqlQueryParameter::mutable_value() {
  if (!has_value()) {
    clear_parameter_type();
    set_has_value();
    parameter_type_.value_ = new ::google::datastore::v1::Value;
  }
  // @@protoc_insertion_point(field_mutable:google.datastore.v1.GqlQueryParameter.value)
  return parameter_type_.value_;
}
::google::datastore::v1::Value* GqlQueryParameter::release_value() {
  // @@protoc_insertion_point(field_release:google.datastore.v1.GqlQueryParameter.value)
  if (has_value()) {
    clear_has_parameter_type();
    ::google::datastore::v1::Value* temp = parameter_type_.value_;
    parameter_type_.value_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void GqlQueryParameter::set_allocated_value(::google::datastore::v1::Value* value) {
  clear_parameter_type();
  if (value) {
    set_has_value();
    parameter_type_.value_ = value;
  }
  // @@protoc_insertion_point(field_set_allocated:google.datastore.v1.GqlQueryParameter.value)
}

// bytes cursor = 3;
bool GqlQueryParameter::has_cursor() const {
  return parameter_type_case() == kCursor;
}
void GqlQueryParameter::set_has_cursor() {
  _oneof_case_[0] = kCursor;
}
void GqlQueryParameter::clear_cursor() {
  if (has_cursor()) {
    parameter_type_.cursor_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_parameter_type();
  }
}
const ::std::string& GqlQueryParameter::cursor() const {
  // @@protoc_insertion_point(field_get:google.datastore.v1.GqlQueryParameter.cursor)
  if (has_cursor()) {
    return parameter_type_.cursor_.GetNoArena();
  }
  return *&::google::protobuf::internal::GetEmptyStringAlreadyInited();
}
void GqlQueryParameter::set_cursor(const ::std::string& value) {
  // @@protoc_insertion_point(field_set:google.datastore.v1.GqlQueryParameter.cursor)
  if (!has_cursor()) {
    clear_parameter_type();
    set_has_cursor();
    parameter_type_.cursor_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  parameter_type_.cursor_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.datastore.v1.GqlQueryParameter.cursor)
}
#if LANG_CXX11
void GqlQueryParameter::set_cursor(::std::string&& value) {
  // @@protoc_insertion_point(field_set:google.datastore.v1.GqlQueryParameter.cursor)
  if (!has_cursor()) {
    clear_parameter_type();
    set_has_cursor();
    parameter_type_.cursor_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  parameter_type_.cursor_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.datastore.v1.GqlQueryParameter.cursor)
}
#endif
void GqlQueryParameter::set_cursor(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  if (!has_cursor()) {
    clear_parameter_type();
    set_has_cursor();
    parameter_type_.cursor_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  parameter_type_.cursor_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.datastore.v1.GqlQueryParameter.cursor)
}
void GqlQueryParameter::set_cursor(const void* value, size_t size) {
  if (!has_cursor()) {
    clear_parameter_type();
    set_has_cursor();
    parameter_type_.cursor_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  parameter_type_.cursor_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.datastore.v1.GqlQueryParameter.cursor)
}
::std::string* GqlQueryParameter::mutable_cursor() {
  if (!has_cursor()) {
    clear_parameter_type();
    set_has_cursor();
    parameter_type_.cursor_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_mutable:google.datastore.v1.GqlQueryParameter.cursor)
  return parameter_type_.cursor_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GqlQueryParameter::release_cursor() {
  // @@protoc_insertion_point(field_release:google.datastore.v1.GqlQueryParameter.cursor)
  if (has_cursor()) {
    clear_has_parameter_type();
    return parameter_type_.cursor_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  } else {
    return NULL;
  }
}
void GqlQueryParameter::set_allocated_cursor(::std::string* cursor) {
  if (!has_cursor()) {
    parameter_type_.cursor_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  clear_parameter_type();
  if (cursor != NULL) {
    set_has_cursor();
    parameter_type_.cursor_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        cursor);
  }
  // @@protoc_insertion_point(field_set_allocated:google.datastore.v1.GqlQueryParameter.cursor)
}

bool GqlQueryParameter::has_parameter_type() const {
  return parameter_type_case() != PARAMETER_TYPE_NOT_SET;
}
void GqlQueryParameter::clear_has_parameter_type() {
  _oneof_case_[0] = PARAMETER_TYPE_NOT_SET;
}
GqlQueryParameter::ParameterTypeCase GqlQueryParameter::parameter_type_case() const {
  return GqlQueryParameter::ParameterTypeCase(_oneof_case_[0]);
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int QueryResultBatch::kSkippedResultsFieldNumber;
const int QueryResultBatch::kSkippedCursorFieldNumber;
const int QueryResultBatch::kEntityResultTypeFieldNumber;
const int QueryResultBatch::kEntityResultsFieldNumber;
const int QueryResultBatch::kEndCursorFieldNumber;
const int QueryResultBatch::kMoreResultsFieldNumber;
const int QueryResultBatch::kSnapshotVersionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

QueryResultBatch::QueryResultBatch()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_google_2fdatastore_2fv1_2fquery_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.datastore.v1.QueryResultBatch)
}
QueryResultBatch::QueryResultBatch(const QueryResultBatch& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      entity_results_(from.entity_results_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  skipped_cursor_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.skipped_cursor().size() > 0) {
    skipped_cursor_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.skipped_cursor_);
  }
  end_cursor_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.end_cursor().size() > 0) {
    end_cursor_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.end_cursor_);
  }
  ::memcpy(&entity_result_type_, &from.entity_result_type_,
    reinterpret_cast<char*>(&skipped_results_) -
    reinterpret_cast<char*>(&entity_result_type_) + sizeof(skipped_results_));
  // @@protoc_insertion_point(copy_constructor:google.datastore.v1.QueryResultBatch)
}

void QueryResultBatch::SharedCtor() {
  skipped_cursor_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  end_cursor_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&entity_result_type_, 0, reinterpret_cast<char*>(&skipped_results_) -
    reinterpret_cast<char*>(&entity_result_type_) + sizeof(skipped_results_));
  _cached_size_ = 0;
}

QueryResultBatch::~QueryResultBatch() {
  // @@protoc_insertion_point(destructor:google.datastore.v1.QueryResultBatch)
  SharedDtor();
}

void QueryResultBatch::SharedDtor() {
  skipped_cursor_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  end_cursor_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void QueryResultBatch::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* QueryResultBatch::descriptor() {
  protobuf_google_2fdatastore_2fv1_2fquery_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fdatastore_2fv1_2fquery_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const QueryResultBatch& QueryResultBatch::default_instance() {
  protobuf_google_2fdatastore_2fv1_2fquery_2eproto::InitDefaults();
  return *internal_default_instance();
}

QueryResultBatch* QueryResultBatch::New(::google::protobuf::Arena* arena) const {
  QueryResultBatch* n = new QueryResultBatch;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void QueryResultBatch::Clear() {
// @@protoc_insertion_point(message_clear_start:google.datastore.v1.QueryResultBatch)
  entity_results_.Clear();
  skipped_cursor_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  end_cursor_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&entity_result_type_, 0, reinterpret_cast<char*>(&skipped_results_) -
    reinterpret_cast<char*>(&entity_result_type_) + sizeof(skipped_results_));
}

bool QueryResultBatch::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.datastore.v1.QueryResultBatch)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.datastore.v1.EntityResult.ResultType entity_result_type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_entity_result_type(static_cast< ::google::datastore::v1::EntityResult_ResultType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.datastore.v1.EntityResult entity_results = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_entity_results()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes skipped_cursor = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_skipped_cursor()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes end_cursor = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_end_cursor()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.datastore.v1.QueryResultBatch.MoreResultsType more_results = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_more_results(static_cast< ::google::datastore::v1::QueryResultBatch_MoreResultsType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 skipped_results = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &skipped_results_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 snapshot_version = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &snapshot_version_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.datastore.v1.QueryResultBatch)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.datastore.v1.QueryResultBatch)
  return false;
#undef DO_
}

void QueryResultBatch::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.datastore.v1.QueryResultBatch)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.datastore.v1.EntityResult.ResultType entity_result_type = 1;
  if (this->entity_result_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->entity_result_type(), output);
  }

  // repeated .google.datastore.v1.EntityResult entity_results = 2;
  for (unsigned int i = 0, n = this->entity_results_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->entity_results(i), output);
  }

  // bytes skipped_cursor = 3;
  if (this->skipped_cursor().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->skipped_cursor(), output);
  }

  // bytes end_cursor = 4;
  if (this->end_cursor().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->end_cursor(), output);
  }

  // .google.datastore.v1.QueryResultBatch.MoreResultsType more_results = 5;
  if (this->more_results() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      5, this->more_results(), output);
  }

  // int32 skipped_results = 6;
  if (this->skipped_results() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->skipped_results(), output);
  }

  // int64 snapshot_version = 7;
  if (this->snapshot_version() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(7, this->snapshot_version(), output);
  }

  // @@protoc_insertion_point(serialize_end:google.datastore.v1.QueryResultBatch)
}

::google::protobuf::uint8* QueryResultBatch::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.datastore.v1.QueryResultBatch)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.datastore.v1.EntityResult.ResultType entity_result_type = 1;
  if (this->entity_result_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->entity_result_type(), target);
  }

  // repeated .google.datastore.v1.EntityResult entity_results = 2;
  for (unsigned int i = 0, n = this->entity_results_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->entity_results(i), deterministic, target);
  }

  // bytes skipped_cursor = 3;
  if (this->skipped_cursor().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->skipped_cursor(), target);
  }

  // bytes end_cursor = 4;
  if (this->end_cursor().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->end_cursor(), target);
  }

  // .google.datastore.v1.QueryResultBatch.MoreResultsType more_results = 5;
  if (this->more_results() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      5, this->more_results(), target);
  }

  // int32 skipped_results = 6;
  if (this->skipped_results() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->skipped_results(), target);
  }

  // int64 snapshot_version = 7;
  if (this->snapshot_version() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(7, this->snapshot_version(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.datastore.v1.QueryResultBatch)
  return target;
}

size_t QueryResultBatch::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.datastore.v1.QueryResultBatch)
  size_t total_size = 0;

  // repeated .google.datastore.v1.EntityResult entity_results = 2;
  {
    unsigned int count = this->entity_results_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->entity_results(i));
    }
  }

  // bytes skipped_cursor = 3;
  if (this->skipped_cursor().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->skipped_cursor());
  }

  // bytes end_cursor = 4;
  if (this->end_cursor().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->end_cursor());
  }

  // .google.datastore.v1.EntityResult.ResultType entity_result_type = 1;
  if (this->entity_result_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->entity_result_type());
  }

  // .google.datastore.v1.QueryResultBatch.MoreResultsType more_results = 5;
  if (this->more_results() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->more_results());
  }

  // int64 snapshot_version = 7;
  if (this->snapshot_version() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->snapshot_version());
  }

  // int32 skipped_results = 6;
  if (this->skipped_results() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->skipped_results());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void QueryResultBatch::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.datastore.v1.QueryResultBatch)
  GOOGLE_DCHECK_NE(&from, this);
  const QueryResultBatch* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const QueryResultBatch>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.datastore.v1.QueryResultBatch)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.datastore.v1.QueryResultBatch)
    MergeFrom(*source);
  }
}

void QueryResultBatch::MergeFrom(const QueryResultBatch& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.datastore.v1.QueryResultBatch)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  entity_results_.MergeFrom(from.entity_results_);
  if (from.skipped_cursor().size() > 0) {

    skipped_cursor_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.skipped_cursor_);
  }
  if (from.end_cursor().size() > 0) {

    end_cursor_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.end_cursor_);
  }
  if (from.entity_result_type() != 0) {
    set_entity_result_type(from.entity_result_type());
  }
  if (from.more_results() != 0) {
    set_more_results(from.more_results());
  }
  if (from.snapshot_version() != 0) {
    set_snapshot_version(from.snapshot_version());
  }
  if (from.skipped_results() != 0) {
    set_skipped_results(from.skipped_results());
  }
}

void QueryResultBatch::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.datastore.v1.QueryResultBatch)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QueryResultBatch::CopyFrom(const QueryResultBatch& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.datastore.v1.QueryResultBatch)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryResultBatch::IsInitialized() const {
  return true;
}

void QueryResultBatch::Swap(QueryResultBatch* other) {
  if (other == this) return;
  InternalSwap(other);
}
void QueryResultBatch::InternalSwap(QueryResultBatch* other) {
  entity_results_.InternalSwap(&other->entity_results_);
  skipped_cursor_.Swap(&other->skipped_cursor_);
  end_cursor_.Swap(&other->end_cursor_);
  std::swap(entity_result_type_, other->entity_result_type_);
  std::swap(more_results_, other->more_results_);
  std::swap(snapshot_version_, other->snapshot_version_);
  std::swap(skipped_results_, other->skipped_results_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata QueryResultBatch::GetMetadata() const {
  protobuf_google_2fdatastore_2fv1_2fquery_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fdatastore_2fv1_2fquery_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// QueryResultBatch

// int32 skipped_results = 6;
void QueryResultBatch::clear_skipped_results() {
  skipped_results_ = 0;
}
::google::protobuf::int32 QueryResultBatch::skipped_results() const {
  // @@protoc_insertion_point(field_get:google.datastore.v1.QueryResultBatch.skipped_results)
  return skipped_results_;
}
void QueryResultBatch::set_skipped_results(::google::protobuf::int32 value) {
  
  skipped_results_ = value;
  // @@protoc_insertion_point(field_set:google.datastore.v1.QueryResultBatch.skipped_results)
}

// bytes skipped_cursor = 3;
void QueryResultBatch::clear_skipped_cursor() {
  skipped_cursor_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& QueryResultBatch::skipped_cursor() const {
  // @@protoc_insertion_point(field_get:google.datastore.v1.QueryResultBatch.skipped_cursor)
  return skipped_cursor_.GetNoArena();
}
void QueryResultBatch::set_skipped_cursor(const ::std::string& value) {
  
  skipped_cursor_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.datastore.v1.QueryResultBatch.skipped_cursor)
}
#if LANG_CXX11
void QueryResultBatch::set_skipped_cursor(::std::string&& value) {
  
  skipped_cursor_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.datastore.v1.QueryResultBatch.skipped_cursor)
}
#endif
void QueryResultBatch::set_skipped_cursor(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  skipped_cursor_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.datastore.v1.QueryResultBatch.skipped_cursor)
}
void QueryResultBatch::set_skipped_cursor(const void* value, size_t size) {
  
  skipped_cursor_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.datastore.v1.QueryResultBatch.skipped_cursor)
}
::std::string* QueryResultBatch::mutable_skipped_cursor() {
  
  // @@protoc_insertion_point(field_mutable:google.datastore.v1.QueryResultBatch.skipped_cursor)
  return skipped_cursor_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* QueryResultBatch::release_skipped_cursor() {
  // @@protoc_insertion_point(field_release:google.datastore.v1.QueryResultBatch.skipped_cursor)
  
  return skipped_cursor_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void QueryResultBatch::set_allocated_skipped_cursor(::std::string* skipped_cursor) {
  if (skipped_cursor != NULL) {
    
  } else {
    
  }
  skipped_cursor_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), skipped_cursor);
  // @@protoc_insertion_point(field_set_allocated:google.datastore.v1.QueryResultBatch.skipped_cursor)
}

// .google.datastore.v1.EntityResult.ResultType entity_result_type = 1;
void QueryResultBatch::clear_entity_result_type() {
  entity_result_type_ = 0;
}
::google::datastore::v1::EntityResult_ResultType QueryResultBatch::entity_result_type() const {
  // @@protoc_insertion_point(field_get:google.datastore.v1.QueryResultBatch.entity_result_type)
  return static_cast< ::google::datastore::v1::EntityResult_ResultType >(entity_result_type_);
}
void QueryResultBatch::set_entity_result_type(::google::datastore::v1::EntityResult_ResultType value) {
  
  entity_result_type_ = value;
  // @@protoc_insertion_point(field_set:google.datastore.v1.QueryResultBatch.entity_result_type)
}

// repeated .google.datastore.v1.EntityResult entity_results = 2;
int QueryResultBatch::entity_results_size() const {
  return entity_results_.size();
}
void QueryResultBatch::clear_entity_results() {
  entity_results_.Clear();
}
const ::google::datastore::v1::EntityResult& QueryResultBatch::entity_results(int index) const {
  // @@protoc_insertion_point(field_get:google.datastore.v1.QueryResultBatch.entity_results)
  return entity_results_.Get(index);
}
::google::datastore::v1::EntityResult* QueryResultBatch::mutable_entity_results(int index) {
  // @@protoc_insertion_point(field_mutable:google.datastore.v1.QueryResultBatch.entity_results)
  return entity_results_.Mutable(index);
}
::google::datastore::v1::EntityResult* QueryResultBatch::add_entity_results() {
  // @@protoc_insertion_point(field_add:google.datastore.v1.QueryResultBatch.entity_results)
  return entity_results_.Add();
}
::google::protobuf::RepeatedPtrField< ::google::datastore::v1::EntityResult >*
QueryResultBatch::mutable_entity_results() {
  // @@protoc_insertion_point(field_mutable_list:google.datastore.v1.QueryResultBatch.entity_results)
  return &entity_results_;
}
const ::google::protobuf::RepeatedPtrField< ::google::datastore::v1::EntityResult >&
QueryResultBatch::entity_results() const {
  // @@protoc_insertion_point(field_list:google.datastore.v1.QueryResultBatch.entity_results)
  return entity_results_;
}

// bytes end_cursor = 4;
void QueryResultBatch::clear_end_cursor() {
  end_cursor_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& QueryResultBatch::end_cursor() const {
  // @@protoc_insertion_point(field_get:google.datastore.v1.QueryResultBatch.end_cursor)
  return end_cursor_.GetNoArena();
}
void QueryResultBatch::set_end_cursor(const ::std::string& value) {
  
  end_cursor_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.datastore.v1.QueryResultBatch.end_cursor)
}
#if LANG_CXX11
void QueryResultBatch::set_end_cursor(::std::string&& value) {
  
  end_cursor_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.datastore.v1.QueryResultBatch.end_cursor)
}
#endif
void QueryResultBatch::set_end_cursor(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  end_cursor_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.datastore.v1.QueryResultBatch.end_cursor)
}
void QueryResultBatch::set_end_cursor(const void* value, size_t size) {
  
  end_cursor_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.datastore.v1.QueryResultBatch.end_cursor)
}
::std::string* QueryResultBatch::mutable_end_cursor() {
  
  // @@protoc_insertion_point(field_mutable:google.datastore.v1.QueryResultBatch.end_cursor)
  return end_cursor_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* QueryResultBatch::release_end_cursor() {
  // @@protoc_insertion_point(field_release:google.datastore.v1.QueryResultBatch.end_cursor)
  
  return end_cursor_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void QueryResultBatch::set_allocated_end_cursor(::std::string* end_cursor) {
  if (end_cursor != NULL) {
    
  } else {
    
  }
  end_cursor_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), end_cursor);
  // @@protoc_insertion_point(field_set_allocated:google.datastore.v1.QueryResultBatch.end_cursor)
}

// .google.datastore.v1.QueryResultBatch.MoreResultsType more_results = 5;
void QueryResultBatch::clear_more_results() {
  more_results_ = 0;
}
::google::datastore::v1::QueryResultBatch_MoreResultsType QueryResultBatch::more_results() const {
  // @@protoc_insertion_point(field_get:google.datastore.v1.QueryResultBatch.more_results)
  return static_cast< ::google::datastore::v1::QueryResultBatch_MoreResultsType >(more_results_);
}
void QueryResultBatch::set_more_results(::google::datastore::v1::QueryResultBatch_MoreResultsType value) {
  
  more_results_ = value;
  // @@protoc_insertion_point(field_set:google.datastore.v1.QueryResultBatch.more_results)
}

// int64 snapshot_version = 7;
void QueryResultBatch::clear_snapshot_version() {
  snapshot_version_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 QueryResultBatch::snapshot_version() const {
  // @@protoc_insertion_point(field_get:google.datastore.v1.QueryResultBatch.snapshot_version)
  return snapshot_version_;
}
void QueryResultBatch::set_snapshot_version(::google::protobuf::int64 value) {
  
  snapshot_version_ = value;
  // @@protoc_insertion_point(field_set:google.datastore.v1.QueryResultBatch.snapshot_version)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace v1
}  // namespace datastore
}  // namespace google

// @@protoc_insertion_point(global_scope)
