// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/devtools/build/v1/publish_build_event.proto

#ifndef PROTOBUF_google_2fdevtools_2fbuild_2fv1_2fpublish_5fbuild_5fevent_2eproto__INCLUDED
#define PROTOBUF_google_2fdevtools_2fbuild_2fv1_2fpublish_5fbuild_5fevent_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3003000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3003002 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "google/api/annotations.pb.h"
#include "google/devtools/build/v1/build_events.pb.h"
#include <google/protobuf/duration.pb.h>
#include <google/protobuf/empty.pb.h>
// @@protoc_insertion_point(includes)
namespace google {
namespace api {
}  // namespace api
namespace devtools {
namespace build {
namespace v1 {
class BuildEvent;
class BuildEventDefaultTypeInternal;
extern BuildEventDefaultTypeInternal _BuildEvent_default_instance_;
class BuildEvent_BuildComponentStreamFinished;
class BuildEvent_BuildComponentStreamFinishedDefaultTypeInternal;
extern BuildEvent_BuildComponentStreamFinishedDefaultTypeInternal _BuildEvent_BuildComponentStreamFinished_default_instance_;
class BuildEvent_BuildEnqueued;
class BuildEvent_BuildEnqueuedDefaultTypeInternal;
extern BuildEvent_BuildEnqueuedDefaultTypeInternal _BuildEvent_BuildEnqueued_default_instance_;
class BuildEvent_BuildFinished;
class BuildEvent_BuildFinishedDefaultTypeInternal;
extern BuildEvent_BuildFinishedDefaultTypeInternal _BuildEvent_BuildFinished_default_instance_;
class BuildEvent_ConsoleOutput;
class BuildEvent_ConsoleOutputDefaultTypeInternal;
extern BuildEvent_ConsoleOutputDefaultTypeInternal _BuildEvent_ConsoleOutput_default_instance_;
class BuildEvent_InvocationAttemptFinished;
class BuildEvent_InvocationAttemptFinishedDefaultTypeInternal;
extern BuildEvent_InvocationAttemptFinishedDefaultTypeInternal _BuildEvent_InvocationAttemptFinished_default_instance_;
class BuildEvent_InvocationAttemptStarted;
class BuildEvent_InvocationAttemptStartedDefaultTypeInternal;
extern BuildEvent_InvocationAttemptStartedDefaultTypeInternal _BuildEvent_InvocationAttemptStarted_default_instance_;
class OrderedBuildEvent;
class OrderedBuildEventDefaultTypeInternal;
extern OrderedBuildEventDefaultTypeInternal _OrderedBuildEvent_default_instance_;
class PublishBuildToolEventStreamRequest;
class PublishBuildToolEventStreamRequestDefaultTypeInternal;
extern PublishBuildToolEventStreamRequestDefaultTypeInternal _PublishBuildToolEventStreamRequest_default_instance_;
class PublishBuildToolEventStreamResponse;
class PublishBuildToolEventStreamResponseDefaultTypeInternal;
extern PublishBuildToolEventStreamResponseDefaultTypeInternal _PublishBuildToolEventStreamResponse_default_instance_;
class PublishLifecycleEventRequest;
class PublishLifecycleEventRequestDefaultTypeInternal;
extern PublishLifecycleEventRequestDefaultTypeInternal _PublishLifecycleEventRequest_default_instance_;
class StreamId;
class StreamIdDefaultTypeInternal;
extern StreamIdDefaultTypeInternal _StreamId_default_instance_;
}  // namespace v1
}  // namespace build
}  // namespace devtools
namespace protobuf {
class Duration;
class DurationDefaultTypeInternal;
extern DurationDefaultTypeInternal _Duration_default_instance_;
class Empty;
class EmptyDefaultTypeInternal;
extern EmptyDefaultTypeInternal _Empty_default_instance_;
}  // namespace protobuf
}  // namespace google

namespace google {
namespace devtools {
namespace build {
namespace v1 {

namespace protobuf_google_2fdevtools_2fbuild_2fv1_2fpublish_5fbuild_5fevent_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_google_2fdevtools_2fbuild_2fv1_2fpublish_5fbuild_5fevent_2eproto

enum PublishLifecycleEventRequest_ServiceLevel {
  PublishLifecycleEventRequest_ServiceLevel_NONINTERACTIVE = 0,
  PublishLifecycleEventRequest_ServiceLevel_INTERACTIVE = 1,
  PublishLifecycleEventRequest_ServiceLevel_PublishLifecycleEventRequest_ServiceLevel_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  PublishLifecycleEventRequest_ServiceLevel_PublishLifecycleEventRequest_ServiceLevel_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool PublishLifecycleEventRequest_ServiceLevel_IsValid(int value);
const PublishLifecycleEventRequest_ServiceLevel PublishLifecycleEventRequest_ServiceLevel_ServiceLevel_MIN = PublishLifecycleEventRequest_ServiceLevel_NONINTERACTIVE;
const PublishLifecycleEventRequest_ServiceLevel PublishLifecycleEventRequest_ServiceLevel_ServiceLevel_MAX = PublishLifecycleEventRequest_ServiceLevel_INTERACTIVE;
const int PublishLifecycleEventRequest_ServiceLevel_ServiceLevel_ARRAYSIZE = PublishLifecycleEventRequest_ServiceLevel_ServiceLevel_MAX + 1;

const ::google::protobuf::EnumDescriptor* PublishLifecycleEventRequest_ServiceLevel_descriptor();
inline const ::std::string& PublishLifecycleEventRequest_ServiceLevel_Name(PublishLifecycleEventRequest_ServiceLevel value) {
  return ::google::protobuf::internal::NameOfEnum(
    PublishLifecycleEventRequest_ServiceLevel_descriptor(), value);
}
inline bool PublishLifecycleEventRequest_ServiceLevel_Parse(
    const ::std::string& name, PublishLifecycleEventRequest_ServiceLevel* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PublishLifecycleEventRequest_ServiceLevel>(
    PublishLifecycleEventRequest_ServiceLevel_descriptor(), name, value);
}
// ===================================================================

class PublishLifecycleEventRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.devtools.build.v1.PublishLifecycleEventRequest) */ {
 public:
  PublishLifecycleEventRequest();
  virtual ~PublishLifecycleEventRequest();

  PublishLifecycleEventRequest(const PublishLifecycleEventRequest& from);

  inline PublishLifecycleEventRequest& operator=(const PublishLifecycleEventRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline ::google::protobuf::Arena* GetArena() const PROTOBUF_FINAL {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const PROTOBUF_FINAL {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const PublishLifecycleEventRequest& default_instance();

  static inline const PublishLifecycleEventRequest* internal_default_instance() {
    return reinterpret_cast<const PublishLifecycleEventRequest*>(
               &_PublishLifecycleEventRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void UnsafeArenaSwap(PublishLifecycleEventRequest* other);
  void Swap(PublishLifecycleEventRequest* other);

  // implements Message ----------------------------------------------

  inline PublishLifecycleEventRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  PublishLifecycleEventRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PublishLifecycleEventRequest& from);
  void MergeFrom(const PublishLifecycleEventRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PublishLifecycleEventRequest* other);
  protected:
  explicit PublishLifecycleEventRequest(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef PublishLifecycleEventRequest_ServiceLevel ServiceLevel;
  static const ServiceLevel NONINTERACTIVE =
    PublishLifecycleEventRequest_ServiceLevel_NONINTERACTIVE;
  static const ServiceLevel INTERACTIVE =
    PublishLifecycleEventRequest_ServiceLevel_INTERACTIVE;
  static inline bool ServiceLevel_IsValid(int value) {
    return PublishLifecycleEventRequest_ServiceLevel_IsValid(value);
  }
  static const ServiceLevel ServiceLevel_MIN =
    PublishLifecycleEventRequest_ServiceLevel_ServiceLevel_MIN;
  static const ServiceLevel ServiceLevel_MAX =
    PublishLifecycleEventRequest_ServiceLevel_ServiceLevel_MAX;
  static const int ServiceLevel_ARRAYSIZE =
    PublishLifecycleEventRequest_ServiceLevel_ServiceLevel_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  ServiceLevel_descriptor() {
    return PublishLifecycleEventRequest_ServiceLevel_descriptor();
  }
  static inline const ::std::string& ServiceLevel_Name(ServiceLevel value) {
    return PublishLifecycleEventRequest_ServiceLevel_Name(value);
  }
  static inline bool ServiceLevel_Parse(const ::std::string& name,
      ServiceLevel* value) {
    return PublishLifecycleEventRequest_ServiceLevel_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated string notification_keywords = 4;
  int notification_keywords_size() const;
  void clear_notification_keywords();
  static const int kNotificationKeywordsFieldNumber = 4;
  const ::std::string& notification_keywords(int index) const;
  ::std::string* mutable_notification_keywords(int index);
  void set_notification_keywords(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_notification_keywords(int index, ::std::string&& value);
  #endif
  void set_notification_keywords(int index, const char* value);
  void set_notification_keywords(int index, const char* value, size_t size);
  ::std::string* add_notification_keywords();
  void add_notification_keywords(const ::std::string& value);
  #if LANG_CXX11
  void add_notification_keywords(::std::string&& value);
  #endif
  void add_notification_keywords(const char* value);
  void add_notification_keywords(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& notification_keywords() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_notification_keywords();

  // string project_id = 6;
  void clear_project_id();
  static const int kProjectIdFieldNumber = 6;
  const ::std::string& project_id() const;
  void set_project_id(const ::std::string& value);
  void set_project_id(const char* value);
  void set_project_id(const char* value, size_t size);
  ::std::string* mutable_project_id();
  ::std::string* release_project_id();
  void set_allocated_project_id(::std::string* project_id);
  ::std::string* unsafe_arena_release_project_id();
  void unsafe_arena_set_allocated_project_id(
      ::std::string* project_id);

  // .google.devtools.build.v1.OrderedBuildEvent build_event = 2;
  bool has_build_event() const;
  void clear_build_event();
  static const int kBuildEventFieldNumber = 2;
  private:
  void _slow_mutable_build_event();
  void _slow_set_allocated_build_event(
      ::google::protobuf::Arena* message_arena, ::google::devtools::build::v1::OrderedBuildEvent** build_event);
  ::google::devtools::build::v1::OrderedBuildEvent* _slow_release_build_event();
  public:
  const ::google::devtools::build::v1::OrderedBuildEvent& build_event() const;
  ::google::devtools::build::v1::OrderedBuildEvent* mutable_build_event();
  ::google::devtools::build::v1::OrderedBuildEvent* release_build_event();
  void set_allocated_build_event(::google::devtools::build::v1::OrderedBuildEvent* build_event);
  ::google::devtools::build::v1::OrderedBuildEvent* unsafe_arena_release_build_event();
  void unsafe_arena_set_allocated_build_event(
      ::google::devtools::build::v1::OrderedBuildEvent* build_event);

  // .google.protobuf.Duration stream_timeout = 3;
  bool has_stream_timeout() const;
  void clear_stream_timeout();
  static const int kStreamTimeoutFieldNumber = 3;
  private:
  void _slow_mutable_stream_timeout();
  void _slow_set_allocated_stream_timeout(
      ::google::protobuf::Arena* message_arena, ::google::protobuf::Duration** stream_timeout);
  ::google::protobuf::Duration* _slow_release_stream_timeout();
  public:
  const ::google::protobuf::Duration& stream_timeout() const;
  ::google::protobuf::Duration* mutable_stream_timeout();
  ::google::protobuf::Duration* release_stream_timeout();
  void set_allocated_stream_timeout(::google::protobuf::Duration* stream_timeout);
  ::google::protobuf::Duration* unsafe_arena_release_stream_timeout();
  void unsafe_arena_set_allocated_stream_timeout(
      ::google::protobuf::Duration* stream_timeout);

  // .google.devtools.build.v1.PublishLifecycleEventRequest.ServiceLevel service_level = 1;
  void clear_service_level();
  static const int kServiceLevelFieldNumber = 1;
  ::google::devtools::build::v1::PublishLifecycleEventRequest_ServiceLevel service_level() const;
  void set_service_level(::google::devtools::build::v1::PublishLifecycleEventRequest_ServiceLevel value);

  // @@protoc_insertion_point(class_scope:google.devtools.build.v1.PublishLifecycleEventRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  friend class ::google::protobuf::Arena;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::RepeatedPtrField< ::std::string> notification_keywords_;
  ::google::protobuf::internal::ArenaStringPtr project_id_;
  ::google::devtools::build::v1::OrderedBuildEvent* build_event_;
  ::google::protobuf::Duration* stream_timeout_;
  int service_level_;
  mutable int _cached_size_;
  friend struct protobuf_google_2fdevtools_2fbuild_2fv1_2fpublish_5fbuild_5fevent_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PublishBuildToolEventStreamResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.devtools.build.v1.PublishBuildToolEventStreamResponse) */ {
 public:
  PublishBuildToolEventStreamResponse();
  virtual ~PublishBuildToolEventStreamResponse();

  PublishBuildToolEventStreamResponse(const PublishBuildToolEventStreamResponse& from);

  inline PublishBuildToolEventStreamResponse& operator=(const PublishBuildToolEventStreamResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline ::google::protobuf::Arena* GetArena() const PROTOBUF_FINAL {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const PROTOBUF_FINAL {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const PublishBuildToolEventStreamResponse& default_instance();

  static inline const PublishBuildToolEventStreamResponse* internal_default_instance() {
    return reinterpret_cast<const PublishBuildToolEventStreamResponse*>(
               &_PublishBuildToolEventStreamResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void UnsafeArenaSwap(PublishBuildToolEventStreamResponse* other);
  void Swap(PublishBuildToolEventStreamResponse* other);

  // implements Message ----------------------------------------------

  inline PublishBuildToolEventStreamResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  PublishBuildToolEventStreamResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PublishBuildToolEventStreamResponse& from);
  void MergeFrom(const PublishBuildToolEventStreamResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PublishBuildToolEventStreamResponse* other);
  protected:
  explicit PublishBuildToolEventStreamResponse(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .google.devtools.build.v1.StreamId stream_id = 1;
  bool has_stream_id() const;
  void clear_stream_id();
  static const int kStreamIdFieldNumber = 1;
  private:
  void _slow_mutable_stream_id();
  void _slow_set_allocated_stream_id(
      ::google::protobuf::Arena* message_arena, ::google::devtools::build::v1::StreamId** stream_id);
  ::google::devtools::build::v1::StreamId* _slow_release_stream_id();
  public:
  const ::google::devtools::build::v1::StreamId& stream_id() const;
  ::google::devtools::build::v1::StreamId* mutable_stream_id();
  ::google::devtools::build::v1::StreamId* release_stream_id();
  void set_allocated_stream_id(::google::devtools::build::v1::StreamId* stream_id);
  ::google::devtools::build::v1::StreamId* unsafe_arena_release_stream_id();
  void unsafe_arena_set_allocated_stream_id(
      ::google::devtools::build::v1::StreamId* stream_id);

  // int64 sequence_number = 2;
  void clear_sequence_number();
  static const int kSequenceNumberFieldNumber = 2;
  ::google::protobuf::int64 sequence_number() const;
  void set_sequence_number(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:google.devtools.build.v1.PublishBuildToolEventStreamResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  friend class ::google::protobuf::Arena;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::devtools::build::v1::StreamId* stream_id_;
  ::google::protobuf::int64 sequence_number_;
  mutable int _cached_size_;
  friend struct protobuf_google_2fdevtools_2fbuild_2fv1_2fpublish_5fbuild_5fevent_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class OrderedBuildEvent : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.devtools.build.v1.OrderedBuildEvent) */ {
 public:
  OrderedBuildEvent();
  virtual ~OrderedBuildEvent();

  OrderedBuildEvent(const OrderedBuildEvent& from);

  inline OrderedBuildEvent& operator=(const OrderedBuildEvent& from) {
    CopyFrom(from);
    return *this;
  }

  inline ::google::protobuf::Arena* GetArena() const PROTOBUF_FINAL {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const PROTOBUF_FINAL {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const OrderedBuildEvent& default_instance();

  static inline const OrderedBuildEvent* internal_default_instance() {
    return reinterpret_cast<const OrderedBuildEvent*>(
               &_OrderedBuildEvent_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void UnsafeArenaSwap(OrderedBuildEvent* other);
  void Swap(OrderedBuildEvent* other);

  // implements Message ----------------------------------------------

  inline OrderedBuildEvent* New() const PROTOBUF_FINAL { return New(NULL); }

  OrderedBuildEvent* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const OrderedBuildEvent& from);
  void MergeFrom(const OrderedBuildEvent& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(OrderedBuildEvent* other);
  protected:
  explicit OrderedBuildEvent(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .google.devtools.build.v1.StreamId stream_id = 1;
  bool has_stream_id() const;
  void clear_stream_id();
  static const int kStreamIdFieldNumber = 1;
  private:
  void _slow_mutable_stream_id();
  void _slow_set_allocated_stream_id(
      ::google::protobuf::Arena* message_arena, ::google::devtools::build::v1::StreamId** stream_id);
  ::google::devtools::build::v1::StreamId* _slow_release_stream_id();
  public:
  const ::google::devtools::build::v1::StreamId& stream_id() const;
  ::google::devtools::build::v1::StreamId* mutable_stream_id();
  ::google::devtools::build::v1::StreamId* release_stream_id();
  void set_allocated_stream_id(::google::devtools::build::v1::StreamId* stream_id);
  ::google::devtools::build::v1::StreamId* unsafe_arena_release_stream_id();
  void unsafe_arena_set_allocated_stream_id(
      ::google::devtools::build::v1::StreamId* stream_id);

  // .google.devtools.build.v1.BuildEvent event = 3;
  bool has_event() const;
  void clear_event();
  static const int kEventFieldNumber = 3;
  private:
  void _slow_mutable_event();
  void _slow_set_allocated_event(
      ::google::protobuf::Arena* message_arena, ::google::devtools::build::v1::BuildEvent** event);
  ::google::devtools::build::v1::BuildEvent* _slow_release_event();
  public:
  const ::google::devtools::build::v1::BuildEvent& event() const;
  ::google::devtools::build::v1::BuildEvent* mutable_event();
  ::google::devtools::build::v1::BuildEvent* release_event();
  void set_allocated_event(::google::devtools::build::v1::BuildEvent* event);
  ::google::devtools::build::v1::BuildEvent* unsafe_arena_release_event();
  void unsafe_arena_set_allocated_event(
      ::google::devtools::build::v1::BuildEvent* event);

  // int64 sequence_number = 2;
  void clear_sequence_number();
  static const int kSequenceNumberFieldNumber = 2;
  ::google::protobuf::int64 sequence_number() const;
  void set_sequence_number(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:google.devtools.build.v1.OrderedBuildEvent)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  friend class ::google::protobuf::Arena;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::devtools::build::v1::StreamId* stream_id_;
  ::google::devtools::build::v1::BuildEvent* event_;
  ::google::protobuf::int64 sequence_number_;
  mutable int _cached_size_;
  friend struct protobuf_google_2fdevtools_2fbuild_2fv1_2fpublish_5fbuild_5fevent_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PublishBuildToolEventStreamRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.devtools.build.v1.PublishBuildToolEventStreamRequest) */ {
 public:
  PublishBuildToolEventStreamRequest();
  virtual ~PublishBuildToolEventStreamRequest();

  PublishBuildToolEventStreamRequest(const PublishBuildToolEventStreamRequest& from);

  inline PublishBuildToolEventStreamRequest& operator=(const PublishBuildToolEventStreamRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline ::google::protobuf::Arena* GetArena() const PROTOBUF_FINAL {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const PROTOBUF_FINAL {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const PublishBuildToolEventStreamRequest& default_instance();

  static inline const PublishBuildToolEventStreamRequest* internal_default_instance() {
    return reinterpret_cast<const PublishBuildToolEventStreamRequest*>(
               &_PublishBuildToolEventStreamRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void UnsafeArenaSwap(PublishBuildToolEventStreamRequest* other);
  void Swap(PublishBuildToolEventStreamRequest* other);

  // implements Message ----------------------------------------------

  inline PublishBuildToolEventStreamRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  PublishBuildToolEventStreamRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PublishBuildToolEventStreamRequest& from);
  void MergeFrom(const PublishBuildToolEventStreamRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PublishBuildToolEventStreamRequest* other);
  protected:
  explicit PublishBuildToolEventStreamRequest(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string notification_keywords = 5;
  int notification_keywords_size() const;
  void clear_notification_keywords();
  static const int kNotificationKeywordsFieldNumber = 5;
  const ::std::string& notification_keywords(int index) const;
  ::std::string* mutable_notification_keywords(int index);
  void set_notification_keywords(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_notification_keywords(int index, ::std::string&& value);
  #endif
  void set_notification_keywords(int index, const char* value);
  void set_notification_keywords(int index, const char* value, size_t size);
  ::std::string* add_notification_keywords();
  void add_notification_keywords(const ::std::string& value);
  #if LANG_CXX11
  void add_notification_keywords(::std::string&& value);
  #endif
  void add_notification_keywords(const char* value);
  void add_notification_keywords(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& notification_keywords() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_notification_keywords();

  // .google.devtools.build.v1.StreamId stream_id = 1 [deprecated = true];
  GOOGLE_PROTOBUF_DEPRECATED_ATTR bool has_stream_id() const;
  GOOGLE_PROTOBUF_DEPRECATED_ATTR void clear_stream_id();
  GOOGLE_PROTOBUF_DEPRECATED_ATTR static const int kStreamIdFieldNumber = 1;
  private:
  void _slow_mutable_stream_id();
  void _slow_set_allocated_stream_id(
      ::google::protobuf::Arena* message_arena, ::google::devtools::build::v1::StreamId** stream_id);
  ::google::devtools::build::v1::StreamId* _slow_release_stream_id();
  public:
  GOOGLE_PROTOBUF_DEPRECATED_ATTR const ::google::devtools::build::v1::StreamId& stream_id() const;
  GOOGLE_PROTOBUF_DEPRECATED_ATTR ::google::devtools::build::v1::StreamId* mutable_stream_id();
  GOOGLE_PROTOBUF_DEPRECATED_ATTR ::google::devtools::build::v1::StreamId* release_stream_id();
  GOOGLE_PROTOBUF_DEPRECATED_ATTR void set_allocated_stream_id(::google::devtools::build::v1::StreamId* stream_id);
  GOOGLE_PROTOBUF_DEPRECATED_ATTR ::google::devtools::build::v1::StreamId* unsafe_arena_release_stream_id();
  GOOGLE_PROTOBUF_DEPRECATED_ATTR void unsafe_arena_set_allocated_stream_id(
      ::google::devtools::build::v1::StreamId* stream_id);

  // .google.devtools.build.v1.BuildEvent event = 3 [deprecated = true];
  GOOGLE_PROTOBUF_DEPRECATED_ATTR bool has_event() const;
  GOOGLE_PROTOBUF_DEPRECATED_ATTR void clear_event();
  GOOGLE_PROTOBUF_DEPRECATED_ATTR static const int kEventFieldNumber = 3;
  private:
  void _slow_mutable_event();
  void _slow_set_allocated_event(
      ::google::protobuf::Arena* message_arena, ::google::devtools::build::v1::BuildEvent** event);
  ::google::devtools::build::v1::BuildEvent* _slow_release_event();
  public:
  GOOGLE_PROTOBUF_DEPRECATED_ATTR const ::google::devtools::build::v1::BuildEvent& event() const;
  GOOGLE_PROTOBUF_DEPRECATED_ATTR ::google::devtools::build::v1::BuildEvent* mutable_event();
  GOOGLE_PROTOBUF_DEPRECATED_ATTR ::google::devtools::build::v1::BuildEvent* release_event();
  GOOGLE_PROTOBUF_DEPRECATED_ATTR void set_allocated_event(::google::devtools::build::v1::BuildEvent* event);
  GOOGLE_PROTOBUF_DEPRECATED_ATTR ::google::devtools::build::v1::BuildEvent* unsafe_arena_release_event();
  GOOGLE_PROTOBUF_DEPRECATED_ATTR void unsafe_arena_set_allocated_event(
      ::google::devtools::build::v1::BuildEvent* event);

  // .google.devtools.build.v1.OrderedBuildEvent ordered_build_event = 4;
  bool has_ordered_build_event() const;
  void clear_ordered_build_event();
  static const int kOrderedBuildEventFieldNumber = 4;
  private:
  void _slow_mutable_ordered_build_event();
  void _slow_set_allocated_ordered_build_event(
      ::google::protobuf::Arena* message_arena, ::google::devtools::build::v1::OrderedBuildEvent** ordered_build_event);
  ::google::devtools::build::v1::OrderedBuildEvent* _slow_release_ordered_build_event();
  public:
  const ::google::devtools::build::v1::OrderedBuildEvent& ordered_build_event() const;
  ::google::devtools::build::v1::OrderedBuildEvent* mutable_ordered_build_event();
  ::google::devtools::build::v1::OrderedBuildEvent* release_ordered_build_event();
  void set_allocated_ordered_build_event(::google::devtools::build::v1::OrderedBuildEvent* ordered_build_event);
  ::google::devtools::build::v1::OrderedBuildEvent* unsafe_arena_release_ordered_build_event();
  void unsafe_arena_set_allocated_ordered_build_event(
      ::google::devtools::build::v1::OrderedBuildEvent* ordered_build_event);

  // int64 sequence_number = 2 [deprecated = true];
  GOOGLE_PROTOBUF_DEPRECATED_ATTR void clear_sequence_number();
  GOOGLE_PROTOBUF_DEPRECATED_ATTR static const int kSequenceNumberFieldNumber = 2;
  GOOGLE_PROTOBUF_DEPRECATED_ATTR ::google::protobuf::int64 sequence_number() const;
  GOOGLE_PROTOBUF_DEPRECATED_ATTR void set_sequence_number(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:google.devtools.build.v1.PublishBuildToolEventStreamRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  friend class ::google::protobuf::Arena;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::RepeatedPtrField< ::std::string> notification_keywords_;
  ::google::devtools::build::v1::StreamId* stream_id_;
  ::google::devtools::build::v1::BuildEvent* event_;
  ::google::devtools::build::v1::OrderedBuildEvent* ordered_build_event_;
  ::google::protobuf::int64 sequence_number_;
  mutable int _cached_size_;
  friend struct protobuf_google_2fdevtools_2fbuild_2fv1_2fpublish_5fbuild_5fevent_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// PublishLifecycleEventRequest

// .google.devtools.build.v1.PublishLifecycleEventRequest.ServiceLevel service_level = 1;
inline void PublishLifecycleEventRequest::clear_service_level() {
  service_level_ = 0;
}
inline ::google::devtools::build::v1::PublishLifecycleEventRequest_ServiceLevel PublishLifecycleEventRequest::service_level() const {
  // @@protoc_insertion_point(field_get:google.devtools.build.v1.PublishLifecycleEventRequest.service_level)
  return static_cast< ::google::devtools::build::v1::PublishLifecycleEventRequest_ServiceLevel >(service_level_);
}
inline void PublishLifecycleEventRequest::set_service_level(::google::devtools::build::v1::PublishLifecycleEventRequest_ServiceLevel value) {
  
  service_level_ = value;
  // @@protoc_insertion_point(field_set:google.devtools.build.v1.PublishLifecycleEventRequest.service_level)
}

// .google.devtools.build.v1.OrderedBuildEvent build_event = 2;
inline bool PublishLifecycleEventRequest::has_build_event() const {
  return this != internal_default_instance() && build_event_ != NULL;
}
inline void PublishLifecycleEventRequest::clear_build_event() {
  if (GetArenaNoVirtual() == NULL && build_event_ != NULL) delete build_event_;
  build_event_ = NULL;
}
inline const ::google::devtools::build::v1::OrderedBuildEvent& PublishLifecycleEventRequest::build_event() const {
  // @@protoc_insertion_point(field_get:google.devtools.build.v1.PublishLifecycleEventRequest.build_event)
  return build_event_ != NULL ? *build_event_
                         : *::google::devtools::build::v1::OrderedBuildEvent::internal_default_instance();
}
inline ::google::devtools::build::v1::OrderedBuildEvent* PublishLifecycleEventRequest::mutable_build_event() {
  
  if (build_event_ == NULL) {
    _slow_mutable_build_event();
  }
  // @@protoc_insertion_point(field_mutable:google.devtools.build.v1.PublishLifecycleEventRequest.build_event)
  return build_event_;
}
inline ::google::devtools::build::v1::OrderedBuildEvent* PublishLifecycleEventRequest::release_build_event() {
  // @@protoc_insertion_point(field_release:google.devtools.build.v1.PublishLifecycleEventRequest.build_event)
  
  if (GetArenaNoVirtual() != NULL) {
    return _slow_release_build_event();
  } else {
    ::google::devtools::build::v1::OrderedBuildEvent* temp = build_event_;
    build_event_ = NULL;
    return temp;
  }
}
inline  void PublishLifecycleEventRequest::set_allocated_build_event(::google::devtools::build::v1::OrderedBuildEvent* build_event) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete build_event_;
  }
  if (build_event != NULL) {
    _slow_set_allocated_build_event(message_arena, &build_event);
  }
  build_event_ = build_event;
  if (build_event) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.devtools.build.v1.PublishLifecycleEventRequest.build_event)
}

// .google.protobuf.Duration stream_timeout = 3;
inline bool PublishLifecycleEventRequest::has_stream_timeout() const {
  return this != internal_default_instance() && stream_timeout_ != NULL;
}
inline void PublishLifecycleEventRequest::clear_stream_timeout() {
  if (GetArenaNoVirtual() == NULL && stream_timeout_ != NULL) delete stream_timeout_;
  stream_timeout_ = NULL;
}
inline const ::google::protobuf::Duration& PublishLifecycleEventRequest::stream_timeout() const {
  // @@protoc_insertion_point(field_get:google.devtools.build.v1.PublishLifecycleEventRequest.stream_timeout)
  return stream_timeout_ != NULL ? *stream_timeout_
                         : *::google::protobuf::Duration::internal_default_instance();
}
inline ::google::protobuf::Duration* PublishLifecycleEventRequest::mutable_stream_timeout() {
  
  if (stream_timeout_ == NULL) {
    _slow_mutable_stream_timeout();
  }
  // @@protoc_insertion_point(field_mutable:google.devtools.build.v1.PublishLifecycleEventRequest.stream_timeout)
  return stream_timeout_;
}
inline ::google::protobuf::Duration* PublishLifecycleEventRequest::release_stream_timeout() {
  // @@protoc_insertion_point(field_release:google.devtools.build.v1.PublishLifecycleEventRequest.stream_timeout)
  
  if (GetArenaNoVirtual() != NULL) {
    return _slow_release_stream_timeout();
  } else {
    ::google::protobuf::Duration* temp = stream_timeout_;
    stream_timeout_ = NULL;
    return temp;
  }
}
inline  void PublishLifecycleEventRequest::set_allocated_stream_timeout(::google::protobuf::Duration* stream_timeout) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete stream_timeout_;
  }
  if (stream_timeout != NULL) {
    _slow_set_allocated_stream_timeout(message_arena, &stream_timeout);
  }
  stream_timeout_ = stream_timeout;
  if (stream_timeout) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.devtools.build.v1.PublishLifecycleEventRequest.stream_timeout)
}

// repeated string notification_keywords = 4;
inline int PublishLifecycleEventRequest::notification_keywords_size() const {
  return notification_keywords_.size();
}
inline void PublishLifecycleEventRequest::clear_notification_keywords() {
  notification_keywords_.Clear();
}
inline const ::std::string& PublishLifecycleEventRequest::notification_keywords(int index) const {
  // @@protoc_insertion_point(field_get:google.devtools.build.v1.PublishLifecycleEventRequest.notification_keywords)
  return notification_keywords_.Get(index);
}
inline ::std::string* PublishLifecycleEventRequest::mutable_notification_keywords(int index) {
  // @@protoc_insertion_point(field_mutable:google.devtools.build.v1.PublishLifecycleEventRequest.notification_keywords)
  return notification_keywords_.Mutable(index);
}
inline void PublishLifecycleEventRequest::set_notification_keywords(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:google.devtools.build.v1.PublishLifecycleEventRequest.notification_keywords)
  notification_keywords_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void PublishLifecycleEventRequest::set_notification_keywords(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:google.devtools.build.v1.PublishLifecycleEventRequest.notification_keywords)
  notification_keywords_.Mutable(index)->assign(std::move(value));
}
#endif
inline void PublishLifecycleEventRequest::set_notification_keywords(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  notification_keywords_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:google.devtools.build.v1.PublishLifecycleEventRequest.notification_keywords)
}
inline void PublishLifecycleEventRequest::set_notification_keywords(int index, const char* value, size_t size) {
  notification_keywords_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:google.devtools.build.v1.PublishLifecycleEventRequest.notification_keywords)
}
inline ::std::string* PublishLifecycleEventRequest::add_notification_keywords() {
  // @@protoc_insertion_point(field_add_mutable:google.devtools.build.v1.PublishLifecycleEventRequest.notification_keywords)
  return notification_keywords_.Add();
}
inline void PublishLifecycleEventRequest::add_notification_keywords(const ::std::string& value) {
  notification_keywords_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:google.devtools.build.v1.PublishLifecycleEventRequest.notification_keywords)
}
#if LANG_CXX11
inline void PublishLifecycleEventRequest::add_notification_keywords(::std::string&& value) {
  notification_keywords_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:google.devtools.build.v1.PublishLifecycleEventRequest.notification_keywords)
}
#endif
inline void PublishLifecycleEventRequest::add_notification_keywords(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  notification_keywords_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:google.devtools.build.v1.PublishLifecycleEventRequest.notification_keywords)
}
inline void PublishLifecycleEventRequest::add_notification_keywords(const char* value, size_t size) {
  notification_keywords_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:google.devtools.build.v1.PublishLifecycleEventRequest.notification_keywords)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
PublishLifecycleEventRequest::notification_keywords() const {
  // @@protoc_insertion_point(field_list:google.devtools.build.v1.PublishLifecycleEventRequest.notification_keywords)
  return notification_keywords_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
PublishLifecycleEventRequest::mutable_notification_keywords() {
  // @@protoc_insertion_point(field_mutable_list:google.devtools.build.v1.PublishLifecycleEventRequest.notification_keywords)
  return &notification_keywords_;
}

// string project_id = 6;
inline void PublishLifecycleEventRequest::clear_project_id() {
  project_id_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& PublishLifecycleEventRequest::project_id() const {
  // @@protoc_insertion_point(field_get:google.devtools.build.v1.PublishLifecycleEventRequest.project_id)
  return project_id_.Get();
}
inline void PublishLifecycleEventRequest::set_project_id(const ::std::string& value) {
  
  project_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.devtools.build.v1.PublishLifecycleEventRequest.project_id)
}
inline void PublishLifecycleEventRequest::set_project_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  project_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.devtools.build.v1.PublishLifecycleEventRequest.project_id)
}
inline void PublishLifecycleEventRequest::set_project_id(const char* value,
    size_t size) {
  
  project_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.devtools.build.v1.PublishLifecycleEventRequest.project_id)
}
inline ::std::string* PublishLifecycleEventRequest::mutable_project_id() {
  
  // @@protoc_insertion_point(field_mutable:google.devtools.build.v1.PublishLifecycleEventRequest.project_id)
  return project_id_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* PublishLifecycleEventRequest::release_project_id() {
  // @@protoc_insertion_point(field_release:google.devtools.build.v1.PublishLifecycleEventRequest.project_id)
  
  return project_id_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* PublishLifecycleEventRequest::unsafe_arena_release_project_id() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.devtools.build.v1.PublishLifecycleEventRequest.project_id)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return project_id_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void PublishLifecycleEventRequest::set_allocated_project_id(::std::string* project_id) {
  if (project_id != NULL) {
    
  } else {
    
  }
  project_id_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), project_id,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.devtools.build.v1.PublishLifecycleEventRequest.project_id)
}
inline void PublishLifecycleEventRequest::unsafe_arena_set_allocated_project_id(
    ::std::string* project_id) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (project_id != NULL) {
    
  } else {
    
  }
  project_id_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      project_id, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.devtools.build.v1.PublishLifecycleEventRequest.project_id)
}

// -------------------------------------------------------------------

// PublishBuildToolEventStreamResponse

// .google.devtools.build.v1.StreamId stream_id = 1;
inline bool PublishBuildToolEventStreamResponse::has_stream_id() const {
  return this != internal_default_instance() && stream_id_ != NULL;
}
inline void PublishBuildToolEventStreamResponse::clear_stream_id() {
  if (GetArenaNoVirtual() == NULL && stream_id_ != NULL) delete stream_id_;
  stream_id_ = NULL;
}
inline const ::google::devtools::build::v1::StreamId& PublishBuildToolEventStreamResponse::stream_id() const {
  // @@protoc_insertion_point(field_get:google.devtools.build.v1.PublishBuildToolEventStreamResponse.stream_id)
  return stream_id_ != NULL ? *stream_id_
                         : *::google::devtools::build::v1::StreamId::internal_default_instance();
}
inline ::google::devtools::build::v1::StreamId* PublishBuildToolEventStreamResponse::mutable_stream_id() {
  
  if (stream_id_ == NULL) {
    _slow_mutable_stream_id();
  }
  // @@protoc_insertion_point(field_mutable:google.devtools.build.v1.PublishBuildToolEventStreamResponse.stream_id)
  return stream_id_;
}
inline ::google::devtools::build::v1::StreamId* PublishBuildToolEventStreamResponse::release_stream_id() {
  // @@protoc_insertion_point(field_release:google.devtools.build.v1.PublishBuildToolEventStreamResponse.stream_id)
  
  if (GetArenaNoVirtual() != NULL) {
    return _slow_release_stream_id();
  } else {
    ::google::devtools::build::v1::StreamId* temp = stream_id_;
    stream_id_ = NULL;
    return temp;
  }
}
inline  void PublishBuildToolEventStreamResponse::set_allocated_stream_id(::google::devtools::build::v1::StreamId* stream_id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete stream_id_;
  }
  if (stream_id != NULL) {
    _slow_set_allocated_stream_id(message_arena, &stream_id);
  }
  stream_id_ = stream_id;
  if (stream_id) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.devtools.build.v1.PublishBuildToolEventStreamResponse.stream_id)
}

// int64 sequence_number = 2;
inline void PublishBuildToolEventStreamResponse::clear_sequence_number() {
  sequence_number_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 PublishBuildToolEventStreamResponse::sequence_number() const {
  // @@protoc_insertion_point(field_get:google.devtools.build.v1.PublishBuildToolEventStreamResponse.sequence_number)
  return sequence_number_;
}
inline void PublishBuildToolEventStreamResponse::set_sequence_number(::google::protobuf::int64 value) {
  
  sequence_number_ = value;
  // @@protoc_insertion_point(field_set:google.devtools.build.v1.PublishBuildToolEventStreamResponse.sequence_number)
}

// -------------------------------------------------------------------

// OrderedBuildEvent

// .google.devtools.build.v1.StreamId stream_id = 1;
inline bool OrderedBuildEvent::has_stream_id() const {
  return this != internal_default_instance() && stream_id_ != NULL;
}
inline void OrderedBuildEvent::clear_stream_id() {
  if (GetArenaNoVirtual() == NULL && stream_id_ != NULL) delete stream_id_;
  stream_id_ = NULL;
}
inline const ::google::devtools::build::v1::StreamId& OrderedBuildEvent::stream_id() const {
  // @@protoc_insertion_point(field_get:google.devtools.build.v1.OrderedBuildEvent.stream_id)
  return stream_id_ != NULL ? *stream_id_
                         : *::google::devtools::build::v1::StreamId::internal_default_instance();
}
inline ::google::devtools::build::v1::StreamId* OrderedBuildEvent::mutable_stream_id() {
  
  if (stream_id_ == NULL) {
    _slow_mutable_stream_id();
  }
  // @@protoc_insertion_point(field_mutable:google.devtools.build.v1.OrderedBuildEvent.stream_id)
  return stream_id_;
}
inline ::google::devtools::build::v1::StreamId* OrderedBuildEvent::release_stream_id() {
  // @@protoc_insertion_point(field_release:google.devtools.build.v1.OrderedBuildEvent.stream_id)
  
  if (GetArenaNoVirtual() != NULL) {
    return _slow_release_stream_id();
  } else {
    ::google::devtools::build::v1::StreamId* temp = stream_id_;
    stream_id_ = NULL;
    return temp;
  }
}
inline  void OrderedBuildEvent::set_allocated_stream_id(::google::devtools::build::v1::StreamId* stream_id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete stream_id_;
  }
  if (stream_id != NULL) {
    _slow_set_allocated_stream_id(message_arena, &stream_id);
  }
  stream_id_ = stream_id;
  if (stream_id) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.devtools.build.v1.OrderedBuildEvent.stream_id)
}

// int64 sequence_number = 2;
inline void OrderedBuildEvent::clear_sequence_number() {
  sequence_number_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 OrderedBuildEvent::sequence_number() const {
  // @@protoc_insertion_point(field_get:google.devtools.build.v1.OrderedBuildEvent.sequence_number)
  return sequence_number_;
}
inline void OrderedBuildEvent::set_sequence_number(::google::protobuf::int64 value) {
  
  sequence_number_ = value;
  // @@protoc_insertion_point(field_set:google.devtools.build.v1.OrderedBuildEvent.sequence_number)
}

// .google.devtools.build.v1.BuildEvent event = 3;
inline bool OrderedBuildEvent::has_event() const {
  return this != internal_default_instance() && event_ != NULL;
}
inline void OrderedBuildEvent::clear_event() {
  if (GetArenaNoVirtual() == NULL && event_ != NULL) delete event_;
  event_ = NULL;
}
inline const ::google::devtools::build::v1::BuildEvent& OrderedBuildEvent::event() const {
  // @@protoc_insertion_point(field_get:google.devtools.build.v1.OrderedBuildEvent.event)
  return event_ != NULL ? *event_
                         : *::google::devtools::build::v1::BuildEvent::internal_default_instance();
}
inline ::google::devtools::build::v1::BuildEvent* OrderedBuildEvent::mutable_event() {
  
  if (event_ == NULL) {
    _slow_mutable_event();
  }
  // @@protoc_insertion_point(field_mutable:google.devtools.build.v1.OrderedBuildEvent.event)
  return event_;
}
inline ::google::devtools::build::v1::BuildEvent* OrderedBuildEvent::release_event() {
  // @@protoc_insertion_point(field_release:google.devtools.build.v1.OrderedBuildEvent.event)
  
  if (GetArenaNoVirtual() != NULL) {
    return _slow_release_event();
  } else {
    ::google::devtools::build::v1::BuildEvent* temp = event_;
    event_ = NULL;
    return temp;
  }
}
inline  void OrderedBuildEvent::set_allocated_event(::google::devtools::build::v1::BuildEvent* event) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete event_;
  }
  if (event != NULL) {
    _slow_set_allocated_event(message_arena, &event);
  }
  event_ = event;
  if (event) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.devtools.build.v1.OrderedBuildEvent.event)
}

// -------------------------------------------------------------------

// PublishBuildToolEventStreamRequest

// .google.devtools.build.v1.StreamId stream_id = 1 [deprecated = true];
inline bool PublishBuildToolEventStreamRequest::has_stream_id() const {
  return this != internal_default_instance() && stream_id_ != NULL;
}
inline void PublishBuildToolEventStreamRequest::clear_stream_id() {
  if (GetArenaNoVirtual() == NULL && stream_id_ != NULL) delete stream_id_;
  stream_id_ = NULL;
}
inline const ::google::devtools::build::v1::StreamId& PublishBuildToolEventStreamRequest::stream_id() const {
  // @@protoc_insertion_point(field_get:google.devtools.build.v1.PublishBuildToolEventStreamRequest.stream_id)
  return stream_id_ != NULL ? *stream_id_
                         : *::google::devtools::build::v1::StreamId::internal_default_instance();
}
inline ::google::devtools::build::v1::StreamId* PublishBuildToolEventStreamRequest::mutable_stream_id() {
  
  if (stream_id_ == NULL) {
    _slow_mutable_stream_id();
  }
  // @@protoc_insertion_point(field_mutable:google.devtools.build.v1.PublishBuildToolEventStreamRequest.stream_id)
  return stream_id_;
}
inline ::google::devtools::build::v1::StreamId* PublishBuildToolEventStreamRequest::release_stream_id() {
  // @@protoc_insertion_point(field_release:google.devtools.build.v1.PublishBuildToolEventStreamRequest.stream_id)
  
  if (GetArenaNoVirtual() != NULL) {
    return _slow_release_stream_id();
  } else {
    ::google::devtools::build::v1::StreamId* temp = stream_id_;
    stream_id_ = NULL;
    return temp;
  }
}
inline  void PublishBuildToolEventStreamRequest::set_allocated_stream_id(::google::devtools::build::v1::StreamId* stream_id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete stream_id_;
  }
  if (stream_id != NULL) {
    _slow_set_allocated_stream_id(message_arena, &stream_id);
  }
  stream_id_ = stream_id;
  if (stream_id) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.devtools.build.v1.PublishBuildToolEventStreamRequest.stream_id)
}

// int64 sequence_number = 2 [deprecated = true];
inline void PublishBuildToolEventStreamRequest::clear_sequence_number() {
  sequence_number_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 PublishBuildToolEventStreamRequest::sequence_number() const {
  // @@protoc_insertion_point(field_get:google.devtools.build.v1.PublishBuildToolEventStreamRequest.sequence_number)
  return sequence_number_;
}
inline void PublishBuildToolEventStreamRequest::set_sequence_number(::google::protobuf::int64 value) {
  
  sequence_number_ = value;
  // @@protoc_insertion_point(field_set:google.devtools.build.v1.PublishBuildToolEventStreamRequest.sequence_number)
}

// .google.devtools.build.v1.BuildEvent event = 3 [deprecated = true];
inline bool PublishBuildToolEventStreamRequest::has_event() const {
  return this != internal_default_instance() && event_ != NULL;
}
inline void PublishBuildToolEventStreamRequest::clear_event() {
  if (GetArenaNoVirtual() == NULL && event_ != NULL) delete event_;
  event_ = NULL;
}
inline const ::google::devtools::build::v1::BuildEvent& PublishBuildToolEventStreamRequest::event() const {
  // @@protoc_insertion_point(field_get:google.devtools.build.v1.PublishBuildToolEventStreamRequest.event)
  return event_ != NULL ? *event_
                         : *::google::devtools::build::v1::BuildEvent::internal_default_instance();
}
inline ::google::devtools::build::v1::BuildEvent* PublishBuildToolEventStreamRequest::mutable_event() {
  
  if (event_ == NULL) {
    _slow_mutable_event();
  }
  // @@protoc_insertion_point(field_mutable:google.devtools.build.v1.PublishBuildToolEventStreamRequest.event)
  return event_;
}
inline ::google::devtools::build::v1::BuildEvent* PublishBuildToolEventStreamRequest::release_event() {
  // @@protoc_insertion_point(field_release:google.devtools.build.v1.PublishBuildToolEventStreamRequest.event)
  
  if (GetArenaNoVirtual() != NULL) {
    return _slow_release_event();
  } else {
    ::google::devtools::build::v1::BuildEvent* temp = event_;
    event_ = NULL;
    return temp;
  }
}
inline  void PublishBuildToolEventStreamRequest::set_allocated_event(::google::devtools::build::v1::BuildEvent* event) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete event_;
  }
  if (event != NULL) {
    _slow_set_allocated_event(message_arena, &event);
  }
  event_ = event;
  if (event) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.devtools.build.v1.PublishBuildToolEventStreamRequest.event)
}

// .google.devtools.build.v1.OrderedBuildEvent ordered_build_event = 4;
inline bool PublishBuildToolEventStreamRequest::has_ordered_build_event() const {
  return this != internal_default_instance() && ordered_build_event_ != NULL;
}
inline void PublishBuildToolEventStreamRequest::clear_ordered_build_event() {
  if (GetArenaNoVirtual() == NULL && ordered_build_event_ != NULL) delete ordered_build_event_;
  ordered_build_event_ = NULL;
}
inline const ::google::devtools::build::v1::OrderedBuildEvent& PublishBuildToolEventStreamRequest::ordered_build_event() const {
  // @@protoc_insertion_point(field_get:google.devtools.build.v1.PublishBuildToolEventStreamRequest.ordered_build_event)
  return ordered_build_event_ != NULL ? *ordered_build_event_
                         : *::google::devtools::build::v1::OrderedBuildEvent::internal_default_instance();
}
inline ::google::devtools::build::v1::OrderedBuildEvent* PublishBuildToolEventStreamRequest::mutable_ordered_build_event() {
  
  if (ordered_build_event_ == NULL) {
    _slow_mutable_ordered_build_event();
  }
  // @@protoc_insertion_point(field_mutable:google.devtools.build.v1.PublishBuildToolEventStreamRequest.ordered_build_event)
  return ordered_build_event_;
}
inline ::google::devtools::build::v1::OrderedBuildEvent* PublishBuildToolEventStreamRequest::release_ordered_build_event() {
  // @@protoc_insertion_point(field_release:google.devtools.build.v1.PublishBuildToolEventStreamRequest.ordered_build_event)
  
  if (GetArenaNoVirtual() != NULL) {
    return _slow_release_ordered_build_event();
  } else {
    ::google::devtools::build::v1::OrderedBuildEvent* temp = ordered_build_event_;
    ordered_build_event_ = NULL;
    return temp;
  }
}
inline  void PublishBuildToolEventStreamRequest::set_allocated_ordered_build_event(::google::devtools::build::v1::OrderedBuildEvent* ordered_build_event) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete ordered_build_event_;
  }
  if (ordered_build_event != NULL) {
    _slow_set_allocated_ordered_build_event(message_arena, &ordered_build_event);
  }
  ordered_build_event_ = ordered_build_event;
  if (ordered_build_event) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.devtools.build.v1.PublishBuildToolEventStreamRequest.ordered_build_event)
}

// repeated string notification_keywords = 5;
inline int PublishBuildToolEventStreamRequest::notification_keywords_size() const {
  return notification_keywords_.size();
}
inline void PublishBuildToolEventStreamRequest::clear_notification_keywords() {
  notification_keywords_.Clear();
}
inline const ::std::string& PublishBuildToolEventStreamRequest::notification_keywords(int index) const {
  // @@protoc_insertion_point(field_get:google.devtools.build.v1.PublishBuildToolEventStreamRequest.notification_keywords)
  return notification_keywords_.Get(index);
}
inline ::std::string* PublishBuildToolEventStreamRequest::mutable_notification_keywords(int index) {
  // @@protoc_insertion_point(field_mutable:google.devtools.build.v1.PublishBuildToolEventStreamRequest.notification_keywords)
  return notification_keywords_.Mutable(index);
}
inline void PublishBuildToolEventStreamRequest::set_notification_keywords(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:google.devtools.build.v1.PublishBuildToolEventStreamRequest.notification_keywords)
  notification_keywords_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void PublishBuildToolEventStreamRequest::set_notification_keywords(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:google.devtools.build.v1.PublishBuildToolEventStreamRequest.notification_keywords)
  notification_keywords_.Mutable(index)->assign(std::move(value));
}
#endif
inline void PublishBuildToolEventStreamRequest::set_notification_keywords(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  notification_keywords_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:google.devtools.build.v1.PublishBuildToolEventStreamRequest.notification_keywords)
}
inline void PublishBuildToolEventStreamRequest::set_notification_keywords(int index, const char* value, size_t size) {
  notification_keywords_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:google.devtools.build.v1.PublishBuildToolEventStreamRequest.notification_keywords)
}
inline ::std::string* PublishBuildToolEventStreamRequest::add_notification_keywords() {
  // @@protoc_insertion_point(field_add_mutable:google.devtools.build.v1.PublishBuildToolEventStreamRequest.notification_keywords)
  return notification_keywords_.Add();
}
inline void PublishBuildToolEventStreamRequest::add_notification_keywords(const ::std::string& value) {
  notification_keywords_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:google.devtools.build.v1.PublishBuildToolEventStreamRequest.notification_keywords)
}
#if LANG_CXX11
inline void PublishBuildToolEventStreamRequest::add_notification_keywords(::std::string&& value) {
  notification_keywords_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:google.devtools.build.v1.PublishBuildToolEventStreamRequest.notification_keywords)
}
#endif
inline void PublishBuildToolEventStreamRequest::add_notification_keywords(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  notification_keywords_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:google.devtools.build.v1.PublishBuildToolEventStreamRequest.notification_keywords)
}
inline void PublishBuildToolEventStreamRequest::add_notification_keywords(const char* value, size_t size) {
  notification_keywords_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:google.devtools.build.v1.PublishBuildToolEventStreamRequest.notification_keywords)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
PublishBuildToolEventStreamRequest::notification_keywords() const {
  // @@protoc_insertion_point(field_list:google.devtools.build.v1.PublishBuildToolEventStreamRequest.notification_keywords)
  return notification_keywords_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
PublishBuildToolEventStreamRequest::mutable_notification_keywords() {
  // @@protoc_insertion_point(field_mutable_list:google.devtools.build.v1.PublishBuildToolEventStreamRequest.notification_keywords)
  return &notification_keywords_;
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace v1
}  // namespace build
}  // namespace devtools
}  // namespace google

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::google::devtools::build::v1::PublishLifecycleEventRequest_ServiceLevel> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::devtools::build::v1::PublishLifecycleEventRequest_ServiceLevel>() {
  return ::google::devtools::build::v1::PublishLifecycleEventRequest_ServiceLevel_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_google_2fdevtools_2fbuild_2fv1_2fpublish_5fbuild_5fevent_2eproto__INCLUDED
