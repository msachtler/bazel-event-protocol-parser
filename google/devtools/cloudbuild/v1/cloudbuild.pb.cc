// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/devtools/cloudbuild/v1/cloudbuild.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "google/devtools/cloudbuild/v1/cloudbuild.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace google {
namespace devtools {
namespace cloudbuild {
namespace v1 {
class StorageSourceDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<StorageSource> {
} _StorageSource_default_instance_;
class RepoSourceDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<RepoSource> {
  public:
  ::google::protobuf::internal::ArenaStringPtr branch_name_;
  ::google::protobuf::internal::ArenaStringPtr tag_name_;
  ::google::protobuf::internal::ArenaStringPtr commit_sha_;
} _RepoSource_default_instance_;
class SourceDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Source> {
  public:
  const ::google::devtools::cloudbuild::v1::StorageSource* storage_source_;
  const ::google::devtools::cloudbuild::v1::RepoSource* repo_source_;
} _Source_default_instance_;
class BuiltImageDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<BuiltImage> {
} _BuiltImage_default_instance_;
class BuildStepDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<BuildStep> {
} _BuildStep_default_instance_;
class VolumeDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Volume> {
} _Volume_default_instance_;
class ResultsDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Results> {
} _Results_default_instance_;
class Build_SubstitutionsEntryDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Build::Build_SubstitutionsEntry> {
} _Build_SubstitutionsEntry_default_instance_;
class BuildDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Build> {
} _Build_default_instance_;
class BuildOperationMetadataDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<BuildOperationMetadata> {
} _BuildOperationMetadata_default_instance_;
class SourceProvenance_FileHashesEntryDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<SourceProvenance::SourceProvenance_FileHashesEntry> {
} _SourceProvenance_FileHashesEntry_default_instance_;
class SourceProvenanceDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<SourceProvenance> {
} _SourceProvenance_default_instance_;
class FileHashesDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<FileHashes> {
} _FileHashes_default_instance_;
class HashDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Hash> {
} _Hash_default_instance_;
class Secret_SecretEnvEntryDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Secret::Secret_SecretEnvEntry> {
} _Secret_SecretEnvEntry_default_instance_;
class SecretDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Secret> {
} _Secret_default_instance_;
class CreateBuildRequestDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CreateBuildRequest> {
} _CreateBuildRequest_default_instance_;
class GetBuildRequestDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<GetBuildRequest> {
} _GetBuildRequest_default_instance_;
class ListBuildsRequestDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ListBuildsRequest> {
} _ListBuildsRequest_default_instance_;
class ListBuildsResponseDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ListBuildsResponse> {
} _ListBuildsResponse_default_instance_;
class CancelBuildRequestDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CancelBuildRequest> {
} _CancelBuildRequest_default_instance_;
class BuildTrigger_SubstitutionsEntryDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<BuildTrigger::BuildTrigger_SubstitutionsEntry> {
} _BuildTrigger_SubstitutionsEntry_default_instance_;
class BuildTriggerDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<BuildTrigger> {
  public:
  const ::google::devtools::cloudbuild::v1::Build* build_;
  ::google::protobuf::internal::ArenaStringPtr filename_;
} _BuildTrigger_default_instance_;
class CreateBuildTriggerRequestDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CreateBuildTriggerRequest> {
} _CreateBuildTriggerRequest_default_instance_;
class GetBuildTriggerRequestDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<GetBuildTriggerRequest> {
} _GetBuildTriggerRequest_default_instance_;
class ListBuildTriggersRequestDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ListBuildTriggersRequest> {
} _ListBuildTriggersRequest_default_instance_;
class ListBuildTriggersResponseDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ListBuildTriggersResponse> {
} _ListBuildTriggersResponse_default_instance_;
class DeleteBuildTriggerRequestDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<DeleteBuildTriggerRequest> {
} _DeleteBuildTriggerRequest_default_instance_;
class UpdateBuildTriggerRequestDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<UpdateBuildTriggerRequest> {
} _UpdateBuildTriggerRequest_default_instance_;
class BuildOptionsDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<BuildOptions> {
} _BuildOptions_default_instance_;

namespace protobuf_google_2fdevtools_2fcloudbuild_2fv1_2fcloudbuild_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[30];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[4];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] = {
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StorageSource, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StorageSource, bucket_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StorageSource, object_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StorageSource, generation_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RepoSource, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RepoSource, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RepoSource, project_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RepoSource, repo_name_),
  GOOGLE_PROTOBUF_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET((&_RepoSource_default_instance_), branch_name_),
  GOOGLE_PROTOBUF_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET((&_RepoSource_default_instance_), tag_name_),
  GOOGLE_PROTOBUF_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET((&_RepoSource_default_instance_), commit_sha_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RepoSource, revision_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Source, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Source, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET((&_Source_default_instance_), storage_source_),
  GOOGLE_PROTOBUF_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET((&_Source_default_instance_), repo_source_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Source, source_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuiltImage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuiltImage, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuiltImage, digest_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuildStep, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuildStep, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuildStep, env_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuildStep, args_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuildStep, dir_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuildStep, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuildStep, wait_for_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuildStep, entrypoint_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuildStep, secret_env_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuildStep, volumes_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Volume, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Volume, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Volume, path_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Results, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Results, images_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Results, build_step_images_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Build, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Build, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Build, project_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Build, status_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Build, status_detail_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Build, source_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Build, steps_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Build, results_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Build, create_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Build, start_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Build, finish_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Build, timeout_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Build, images_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Build, logs_bucket_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Build, source_provenance_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Build, build_trigger_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Build, options_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Build, log_url_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Build, substitutions_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Build, tags_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Build, secrets_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuildOperationMetadata, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuildOperationMetadata, build_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SourceProvenance, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SourceProvenance, resolved_storage_source_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SourceProvenance, resolved_repo_source_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SourceProvenance, file_hashes_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FileHashes, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FileHashes, file_hash_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Hash, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Hash, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Hash, value_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Secret, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Secret, kms_key_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Secret, secret_env_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateBuildRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateBuildRequest, project_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateBuildRequest, build_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetBuildRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetBuildRequest, project_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetBuildRequest, id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListBuildsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListBuildsRequest, project_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListBuildsRequest, page_size_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListBuildsRequest, page_token_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListBuildsRequest, filter_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListBuildsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListBuildsResponse, builds_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListBuildsResponse, next_page_token_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CancelBuildRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CancelBuildRequest, project_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CancelBuildRequest, id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuildTrigger, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuildTrigger, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuildTrigger, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuildTrigger, description_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuildTrigger, trigger_template_),
  GOOGLE_PROTOBUF_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET((&_BuildTrigger_default_instance_), build_),
  GOOGLE_PROTOBUF_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET((&_BuildTrigger_default_instance_), filename_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuildTrigger, create_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuildTrigger, disabled_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuildTrigger, substitutions_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuildTrigger, build_template_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateBuildTriggerRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateBuildTriggerRequest, project_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateBuildTriggerRequest, trigger_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetBuildTriggerRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetBuildTriggerRequest, project_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetBuildTriggerRequest, trigger_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListBuildTriggersRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListBuildTriggersRequest, project_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListBuildTriggersResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListBuildTriggersResponse, triggers_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteBuildTriggerRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteBuildTriggerRequest, project_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteBuildTriggerRequest, trigger_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateBuildTriggerRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateBuildTriggerRequest, project_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateBuildTriggerRequest, trigger_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateBuildTriggerRequest, trigger_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuildOptions, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuildOptions, source_provenance_hash_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuildOptions, requested_verify_option_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuildOptions, substitution_option_),
};

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, -1, sizeof(StorageSource)},
  { 8, -1, sizeof(RepoSource)},
  { 19, -1, sizeof(Source)},
  { 27, -1, sizeof(BuiltImage)},
  { 34, -1, sizeof(BuildStep)},
  { 48, -1, sizeof(Volume)},
  { 55, -1, sizeof(Results)},
  { 62, -1, sizeof(Build)},
  { 87, -1, sizeof(BuildOperationMetadata)},
  { 93, -1, sizeof(SourceProvenance)},
  { 101, -1, sizeof(FileHashes)},
  { 107, -1, sizeof(Hash)},
  { 114, -1, sizeof(Secret)},
  { 121, -1, sizeof(CreateBuildRequest)},
  { 128, -1, sizeof(GetBuildRequest)},
  { 135, -1, sizeof(ListBuildsRequest)},
  { 144, -1, sizeof(ListBuildsResponse)},
  { 151, -1, sizeof(CancelBuildRequest)},
  { 158, -1, sizeof(BuildTrigger)},
  { 172, -1, sizeof(CreateBuildTriggerRequest)},
  { 179, -1, sizeof(GetBuildTriggerRequest)},
  { 186, -1, sizeof(ListBuildTriggersRequest)},
  { 192, -1, sizeof(ListBuildTriggersResponse)},
  { 198, -1, sizeof(DeleteBuildTriggerRequest)},
  { 205, -1, sizeof(UpdateBuildTriggerRequest)},
  { 213, -1, sizeof(BuildOptions)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_StorageSource_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_RepoSource_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Source_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_BuiltImage_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_BuildStep_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Volume_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Results_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Build_SubstitutionsEntry_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Build_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_BuildOperationMetadata_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SourceProvenance_FileHashesEntry_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SourceProvenance_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_FileHashes_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Hash_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Secret_SecretEnvEntry_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Secret_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CreateBuildRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GetBuildRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ListBuildsRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ListBuildsResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CancelBuildRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_BuildTrigger_SubstitutionsEntry_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_BuildTrigger_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CreateBuildTriggerRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GetBuildTriggerRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ListBuildTriggersRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ListBuildTriggersResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_DeleteBuildTriggerRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_UpdateBuildTriggerRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_BuildOptions_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "google/devtools/cloudbuild/v1/cloudbuild.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
file_level_metadata[7].reflection = Build::Build_SubstitutionsEntry::CreateReflection(file_level_metadata[7].descriptor, _Build_SubstitutionsEntry_default_instance_.get_mutable());
file_level_metadata[10].reflection = SourceProvenance::SourceProvenance_FileHashesEntry::CreateReflection(file_level_metadata[10].descriptor, _SourceProvenance_FileHashesEntry_default_instance_.get_mutable());
file_level_metadata[14].reflection = Secret::Secret_SecretEnvEntry::CreateReflection(file_level_metadata[14].descriptor, _Secret_SecretEnvEntry_default_instance_.get_mutable());
file_level_metadata[21].reflection = BuildTrigger::BuildTrigger_SubstitutionsEntry::CreateReflection(file_level_metadata[21].descriptor, _BuildTrigger_SubstitutionsEntry_default_instance_.get_mutable());
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 30);
}

}  // namespace

void TableStruct::Shutdown() {
  _StorageSource_default_instance_.Shutdown();
  delete file_level_metadata[0].reflection;
  _RepoSource_default_instance_.Shutdown();
  delete file_level_metadata[1].reflection;
  _Source_default_instance_.Shutdown();
  delete file_level_metadata[2].reflection;
  _BuiltImage_default_instance_.Shutdown();
  delete file_level_metadata[3].reflection;
  _BuildStep_default_instance_.Shutdown();
  delete file_level_metadata[4].reflection;
  _Volume_default_instance_.Shutdown();
  delete file_level_metadata[5].reflection;
  _Results_default_instance_.Shutdown();
  delete file_level_metadata[6].reflection;
  _Build_default_instance_.Shutdown();
  delete file_level_metadata[8].reflection;
  _BuildOperationMetadata_default_instance_.Shutdown();
  delete file_level_metadata[9].reflection;
  _SourceProvenance_default_instance_.Shutdown();
  delete file_level_metadata[11].reflection;
  _FileHashes_default_instance_.Shutdown();
  delete file_level_metadata[12].reflection;
  _Hash_default_instance_.Shutdown();
  delete file_level_metadata[13].reflection;
  _Secret_default_instance_.Shutdown();
  delete file_level_metadata[15].reflection;
  _CreateBuildRequest_default_instance_.Shutdown();
  delete file_level_metadata[16].reflection;
  _GetBuildRequest_default_instance_.Shutdown();
  delete file_level_metadata[17].reflection;
  _ListBuildsRequest_default_instance_.Shutdown();
  delete file_level_metadata[18].reflection;
  _ListBuildsResponse_default_instance_.Shutdown();
  delete file_level_metadata[19].reflection;
  _CancelBuildRequest_default_instance_.Shutdown();
  delete file_level_metadata[20].reflection;
  _BuildTrigger_default_instance_.Shutdown();
  delete file_level_metadata[22].reflection;
  _CreateBuildTriggerRequest_default_instance_.Shutdown();
  delete file_level_metadata[23].reflection;
  _GetBuildTriggerRequest_default_instance_.Shutdown();
  delete file_level_metadata[24].reflection;
  _ListBuildTriggersRequest_default_instance_.Shutdown();
  delete file_level_metadata[25].reflection;
  _ListBuildTriggersResponse_default_instance_.Shutdown();
  delete file_level_metadata[26].reflection;
  _DeleteBuildTriggerRequest_default_instance_.Shutdown();
  delete file_level_metadata[27].reflection;
  _UpdateBuildTriggerRequest_default_instance_.Shutdown();
  delete file_level_metadata[28].reflection;
  _BuildOptions_default_instance_.Shutdown();
  delete file_level_metadata[29].reflection;
  delete file_level_metadata[7].reflection;
  delete file_level_metadata[10].reflection;
  delete file_level_metadata[14].reflection;
  delete file_level_metadata[21].reflection;
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  ::google::api::protobuf_google_2fapi_2fannotations_2eproto::InitDefaults();
  ::google::longrunning::protobuf_google_2flongrunning_2foperations_2eproto::InitDefaults();
  ::google::protobuf::protobuf_google_2fprotobuf_2fduration_2eproto::InitDefaults();
  ::google::protobuf::protobuf_google_2fprotobuf_2fempty_2eproto::InitDefaults();
  ::google::protobuf::protobuf_google_2fprotobuf_2ftimestamp_2eproto::InitDefaults();
  _StorageSource_default_instance_.DefaultConstruct();
  _RepoSource_default_instance_.DefaultConstruct();
  _Source_default_instance_.DefaultConstruct();
  _BuiltImage_default_instance_.DefaultConstruct();
  _BuildStep_default_instance_.DefaultConstruct();
  _Volume_default_instance_.DefaultConstruct();
  _Results_default_instance_.DefaultConstruct();
  _Build_SubstitutionsEntry_default_instance_.DefaultConstruct();
  _Build_default_instance_.DefaultConstruct();
  _BuildOperationMetadata_default_instance_.DefaultConstruct();
  _SourceProvenance_FileHashesEntry_default_instance_.DefaultConstruct();
  _SourceProvenance_default_instance_.DefaultConstruct();
  _FileHashes_default_instance_.DefaultConstruct();
  _Hash_default_instance_.DefaultConstruct();
  _Secret_SecretEnvEntry_default_instance_.DefaultConstruct();
  _Secret_default_instance_.DefaultConstruct();
  _CreateBuildRequest_default_instance_.DefaultConstruct();
  _GetBuildRequest_default_instance_.DefaultConstruct();
  _ListBuildsRequest_default_instance_.DefaultConstruct();
  _ListBuildsResponse_default_instance_.DefaultConstruct();
  _CancelBuildRequest_default_instance_.DefaultConstruct();
  _BuildTrigger_SubstitutionsEntry_default_instance_.DefaultConstruct();
  _BuildTrigger_default_instance_.DefaultConstruct();
  _CreateBuildTriggerRequest_default_instance_.DefaultConstruct();
  _GetBuildTriggerRequest_default_instance_.DefaultConstruct();
  _ListBuildTriggersRequest_default_instance_.DefaultConstruct();
  _ListBuildTriggersResponse_default_instance_.DefaultConstruct();
  _DeleteBuildTriggerRequest_default_instance_.DefaultConstruct();
  _UpdateBuildTriggerRequest_default_instance_.DefaultConstruct();
  _BuildOptions_default_instance_.DefaultConstruct();
  _RepoSource_default_instance_.branch_name_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _RepoSource_default_instance_.tag_name_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _RepoSource_default_instance_.commit_sha_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _Source_default_instance_.storage_source_ = const_cast< ::google::devtools::cloudbuild::v1::StorageSource*>(
      ::google::devtools::cloudbuild::v1::StorageSource::internal_default_instance());
  _Source_default_instance_.repo_source_ = const_cast< ::google::devtools::cloudbuild::v1::RepoSource*>(
      ::google::devtools::cloudbuild::v1::RepoSource::internal_default_instance());
  _Build_SubstitutionsEntry_default_instance_.get_mutable()->set_default_instance(_Build_SubstitutionsEntry_default_instance_.get_mutable());
  _Build_SubstitutionsEntry_default_instance_.get_mutable()->InitAsDefaultInstance();
  _Build_default_instance_.get_mutable()->source_ = const_cast< ::google::devtools::cloudbuild::v1::Source*>(
      ::google::devtools::cloudbuild::v1::Source::internal_default_instance());
  _Build_default_instance_.get_mutable()->results_ = const_cast< ::google::devtools::cloudbuild::v1::Results*>(
      ::google::devtools::cloudbuild::v1::Results::internal_default_instance());
  _Build_default_instance_.get_mutable()->create_time_ = const_cast< ::google::protobuf::Timestamp*>(
      ::google::protobuf::Timestamp::internal_default_instance());
  _Build_default_instance_.get_mutable()->start_time_ = const_cast< ::google::protobuf::Timestamp*>(
      ::google::protobuf::Timestamp::internal_default_instance());
  _Build_default_instance_.get_mutable()->finish_time_ = const_cast< ::google::protobuf::Timestamp*>(
      ::google::protobuf::Timestamp::internal_default_instance());
  _Build_default_instance_.get_mutable()->timeout_ = const_cast< ::google::protobuf::Duration*>(
      ::google::protobuf::Duration::internal_default_instance());
  _Build_default_instance_.get_mutable()->source_provenance_ = const_cast< ::google::devtools::cloudbuild::v1::SourceProvenance*>(
      ::google::devtools::cloudbuild::v1::SourceProvenance::internal_default_instance());
  _Build_default_instance_.get_mutable()->options_ = const_cast< ::google::devtools::cloudbuild::v1::BuildOptions*>(
      ::google::devtools::cloudbuild::v1::BuildOptions::internal_default_instance());
  _BuildOperationMetadata_default_instance_.get_mutable()->build_ = const_cast< ::google::devtools::cloudbuild::v1::Build*>(
      ::google::devtools::cloudbuild::v1::Build::internal_default_instance());
  _SourceProvenance_FileHashesEntry_default_instance_.get_mutable()->set_default_instance(_SourceProvenance_FileHashesEntry_default_instance_.get_mutable());
  _SourceProvenance_FileHashesEntry_default_instance_.get_mutable()->InitAsDefaultInstance();
  _SourceProvenance_default_instance_.get_mutable()->resolved_storage_source_ = const_cast< ::google::devtools::cloudbuild::v1::StorageSource*>(
      ::google::devtools::cloudbuild::v1::StorageSource::internal_default_instance());
  _SourceProvenance_default_instance_.get_mutable()->resolved_repo_source_ = const_cast< ::google::devtools::cloudbuild::v1::RepoSource*>(
      ::google::devtools::cloudbuild::v1::RepoSource::internal_default_instance());
  _Secret_SecretEnvEntry_default_instance_.get_mutable()->set_default_instance(_Secret_SecretEnvEntry_default_instance_.get_mutable());
  _Secret_SecretEnvEntry_default_instance_.get_mutable()->InitAsDefaultInstance();
  _CreateBuildRequest_default_instance_.get_mutable()->build_ = const_cast< ::google::devtools::cloudbuild::v1::Build*>(
      ::google::devtools::cloudbuild::v1::Build::internal_default_instance());
  _BuildTrigger_SubstitutionsEntry_default_instance_.get_mutable()->set_default_instance(_BuildTrigger_SubstitutionsEntry_default_instance_.get_mutable());
  _BuildTrigger_SubstitutionsEntry_default_instance_.get_mutable()->InitAsDefaultInstance();
  _BuildTrigger_default_instance_.get_mutable()->trigger_template_ = const_cast< ::google::devtools::cloudbuild::v1::RepoSource*>(
      ::google::devtools::cloudbuild::v1::RepoSource::internal_default_instance());
  _BuildTrigger_default_instance_.build_ = const_cast< ::google::devtools::cloudbuild::v1::Build*>(
      ::google::devtools::cloudbuild::v1::Build::internal_default_instance());
  _BuildTrigger_default_instance_.filename_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _BuildTrigger_default_instance_.get_mutable()->create_time_ = const_cast< ::google::protobuf::Timestamp*>(
      ::google::protobuf::Timestamp::internal_default_instance());
  _CreateBuildTriggerRequest_default_instance_.get_mutable()->trigger_ = const_cast< ::google::devtools::cloudbuild::v1::BuildTrigger*>(
      ::google::devtools::cloudbuild::v1::BuildTrigger::internal_default_instance());
  _UpdateBuildTriggerRequest_default_instance_.get_mutable()->trigger_ = const_cast< ::google::devtools::cloudbuild::v1::BuildTrigger*>(
      ::google::devtools::cloudbuild::v1::BuildTrigger::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n.google/devtools/cloudbuild/v1/cloudbui"
      "ld.proto\022\035google.devtools.cloudbuild.v1\032"
      "\034google/api/annotations.proto\032#google/lo"
      "ngrunning/operations.proto\032\036google/proto"
      "buf/duration.proto\032\033google/protobuf/empt"
      "y.proto\032\037google/protobuf/timestamp.proto"
      "\"C\n\rStorageSource\022\016\n\006bucket\030\001 \001(\t\022\016\n\006obj"
      "ect\030\002 \001(\t\022\022\n\ngeneration\030\003 \001(\003\"\200\001\n\nRepoSo"
      "urce\022\022\n\nproject_id\030\001 \001(\t\022\021\n\trepo_name\030\002 "
      "\001(\t\022\025\n\013branch_name\030\003 \001(\tH\000\022\022\n\010tag_name\030\004"
      " \001(\tH\000\022\024\n\ncommit_sha\030\005 \001(\tH\000B\n\n\010revision"
      "\"\234\001\n\006Source\022F\n\016storage_source\030\002 \001(\0132,.go"
      "ogle.devtools.cloudbuild.v1.StorageSourc"
      "eH\000\022@\n\013repo_source\030\003 \001(\0132).google.devtoo"
      "ls.cloudbuild.v1.RepoSourceH\000B\010\n\006source\""
      "*\n\nBuiltImage\022\014\n\004name\030\001 \001(\t\022\016\n\006digest\030\003 "
      "\001(\t\"\277\001\n\tBuildStep\022\014\n\004name\030\001 \001(\t\022\013\n\003env\030\002"
      " \003(\t\022\014\n\004args\030\003 \003(\t\022\013\n\003dir\030\004 \001(\t\022\n\n\002id\030\005 "
      "\001(\t\022\020\n\010wait_for\030\006 \003(\t\022\022\n\nentrypoint\030\007 \001("
      "\t\022\022\n\nsecret_env\030\010 \003(\t\0226\n\007volumes\030\t \003(\0132%"
      ".google.devtools.cloudbuild.v1.Volume\"$\n"
      "\006Volume\022\014\n\004name\030\001 \001(\t\022\014\n\004path\030\002 \001(\t\"_\n\007R"
      "esults\0229\n\006images\030\002 \003(\0132).google.devtools"
      ".cloudbuild.v1.BuiltImage\022\031\n\021build_step_"
      "images\030\003 \003(\t\"\211\010\n\005Build\022\n\n\002id\030\001 \001(\t\022\022\n\npr"
      "oject_id\030\020 \001(\t\022;\n\006status\030\002 \001(\0162+.google."
      "devtools.cloudbuild.v1.Build.Status\022\025\n\rs"
      "tatus_detail\030\030 \001(\t\0225\n\006source\030\003 \001(\0132%.goo"
      "gle.devtools.cloudbuild.v1.Source\0227\n\005ste"
      "ps\030\013 \003(\0132(.google.devtools.cloudbuild.v1"
      ".BuildStep\0227\n\007results\030\n \001(\0132&.google.dev"
      "tools.cloudbuild.v1.Results\022/\n\013create_ti"
      "me\030\006 \001(\0132\032.google.protobuf.Timestamp\022.\n\n"
      "start_time\030\007 \001(\0132\032.google.protobuf.Times"
      "tamp\022/\n\013finish_time\030\010 \001(\0132\032.google.proto"
      "buf.Timestamp\022*\n\007timeout\030\014 \001(\0132\031.google."
      "protobuf.Duration\022\016\n\006images\030\r \003(\t\022\023\n\013log"
      "s_bucket\030\023 \001(\t\022J\n\021source_provenance\030\025 \001("
      "\0132/.google.devtools.cloudbuild.v1.Source"
      "Provenance\022\030\n\020build_trigger_id\030\026 \001(\t\022<\n\007"
      "options\030\027 \001(\0132+.google.devtools.cloudbui"
      "ld.v1.BuildOptions\022\017\n\007log_url\030\031 \001(\t\022N\n\rs"
      "ubstitutions\030\035 \003(\01327.google.devtools.clo"
      "udbuild.v1.Build.SubstitutionsEntry\022\014\n\004t"
      "ags\030\037 \003(\t\0226\n\007secrets\030  \003(\0132%.google.devt"
      "ools.cloudbuild.v1.Secret\0324\n\022Substitutio"
      "nsEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\""
      "\177\n\006Status\022\022\n\016STATUS_UNKNOWN\020\000\022\n\n\006QUEUED\020"
      "\001\022\013\n\007WORKING\020\002\022\013\n\007SUCCESS\020\003\022\013\n\007FAILURE\020\004"
      "\022\022\n\016INTERNAL_ERROR\020\005\022\013\n\007TIMEOUT\020\006\022\r\n\tCAN"
      "CELLED\020\007\"M\n\026BuildOperationMetadata\0223\n\005bu"
      "ild\030\001 \001(\0132$.google.devtools.cloudbuild.v"
      "1.Build\"\336\002\n\020SourceProvenance\022M\n\027resolved"
      "_storage_source\030\003 \001(\0132,.google.devtools."
      "cloudbuild.v1.StorageSource\022G\n\024resolved_"
      "repo_source\030\006 \001(\0132).google.devtools.clou"
      "dbuild.v1.RepoSource\022T\n\013file_hashes\030\004 \003("
      "\0132\?.google.devtools.cloudbuild.v1.Source"
      "Provenance.FileHashesEntry\032\\\n\017FileHashes"
      "Entry\022\013\n\003key\030\001 \001(\t\0228\n\005value\030\002 \001(\0132).goog"
      "le.devtools.cloudbuild.v1.FileHashes:\0028\001"
      "\"D\n\nFileHashes\0226\n\tfile_hash\030\001 \003(\0132#.goog"
      "le.devtools.cloudbuild.v1.Hash\"s\n\004Hash\022:"
      "\n\004type\030\001 \001(\0162,.google.devtools.cloudbuil"
      "d.v1.Hash.HashType\022\r\n\005value\030\002 \001(\014\" \n\010Has"
      "hType\022\010\n\004NONE\020\000\022\n\n\006SHA256\020\001\"\232\001\n\006Secret\022\024"
      "\n\014kms_key_name\030\001 \001(\t\022H\n\nsecret_env\030\003 \003(\013"
      "24.google.devtools.cloudbuild.v1.Secret."
      "SecretEnvEntry\0320\n\016SecretEnvEntry\022\013\n\003key\030"
      "\001 \001(\t\022\r\n\005value\030\002 \001(\014:\0028\001\"]\n\022CreateBuildR"
      "equest\022\022\n\nproject_id\030\001 \001(\t\0223\n\005build\030\002 \001("
      "\0132$.google.devtools.cloudbuild.v1.Build\""
      "1\n\017GetBuildRequest\022\022\n\nproject_id\030\001 \001(\t\022\n"
      "\n\002id\030\002 \001(\t\"^\n\021ListBuildsRequest\022\022\n\nproje"
      "ct_id\030\001 \001(\t\022\021\n\tpage_size\030\002 \001(\005\022\022\n\npage_t"
      "oken\030\003 \001(\t\022\016\n\006filter\030\010 \001(\t\"c\n\022ListBuilds"
      "Response\0224\n\006builds\030\001 \003(\0132$.google.devtoo"
      "ls.cloudbuild.v1.Build\022\027\n\017next_page_toke"
      "n\030\002 \001(\t\"4\n\022CancelBuildRequest\022\022\n\nproject"
      "_id\030\001 \001(\t\022\n\n\002id\030\002 \001(\t\"\241\003\n\014BuildTrigger\022\n"
      "\n\002id\030\001 \001(\t\022\023\n\013description\030\n \001(\t\022C\n\020trigg"
      "er_template\030\007 \001(\0132).google.devtools.clou"
      "dbuild.v1.RepoSource\0225\n\005build\030\004 \001(\0132$.go"
      "ogle.devtools.cloudbuild.v1.BuildH\000\022\022\n\010f"
      "ilename\030\010 \001(\tH\000\022/\n\013create_time\030\005 \001(\0132\032.g"
      "oogle.protobuf.Timestamp\022\020\n\010disabled\030\t \001"
      "(\010\022U\n\rsubstitutions\030\013 \003(\0132>.google.devto"
      "ols.cloudbuild.v1.BuildTrigger.Substitut"
      "ionsEntry\0324\n\022SubstitutionsEntry\022\013\n\003key\030\001"
      " \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001B\020\n\016build_templat"
      "e\"m\n\031CreateBuildTriggerRequest\022\022\n\nprojec"
      "t_id\030\001 \001(\t\022<\n\007trigger\030\002 \001(\0132+.google.dev"
      "tools.cloudbuild.v1.BuildTrigger\"@\n\026GetB"
      "uildTriggerRequest\022\022\n\nproject_id\030\001 \001(\t\022\022"
      "\n\ntrigger_id\030\002 \001(\t\".\n\030ListBuildTriggersR"
      "equest\022\022\n\nproject_id\030\001 \001(\t\"Z\n\031ListBuildT"
      "riggersResponse\022=\n\010triggers\030\001 \003(\0132+.goog"
      "le.devtools.cloudbuild.v1.BuildTrigger\"C"
      "\n\031DeleteBuildTriggerRequest\022\022\n\nproject_i"
      "d\030\001 \001(\t\022\022\n\ntrigger_id\030\002 \001(\t\"\201\001\n\031UpdateBu"
      "ildTriggerRequest\022\022\n\nproject_id\030\001 \001(\t\022\022\n"
      "\ntrigger_id\030\002 \001(\t\022<\n\007trigger\030\003 \001(\0132+.goo"
      "gle.devtools.cloudbuild.v1.BuildTrigger\""
      "\373\002\n\014BuildOptions\022L\n\026source_provenance_ha"
      "sh\030\001 \003(\0162,.google.devtools.cloudbuild.v1"
      ".Hash.HashType\022Y\n\027requested_verify_optio"
      "n\030\002 \001(\01628.google.devtools.cloudbuild.v1."
      "BuildOptions.VerifyOption\022[\n\023substitutio"
      "n_option\030\004 \001(\0162>.google.devtools.cloudbu"
      "ild.v1.BuildOptions.SubstitutionOption\"."
      "\n\014VerifyOption\022\020\n\014NOT_VERIFIED\020\000\022\014\n\010VERI"
      "FIED\020\001\"5\n\022SubstitutionOption\022\016\n\nMUST_MAT"
      "CH\020\000\022\017\n\013ALLOW_LOOSE\020\0012\354\013\n\nCloudBuild\022\220\001\n"
      "\013CreateBuild\0221.google.devtools.cloudbuil"
      "d.v1.CreateBuildRequest\032\035.google.longrun"
      "ning.Operation\"/\202\323\344\223\002)\" /v1/projects/{pr"
      "oject_id}/builds:\005build\022\217\001\n\010GetBuild\022..g"
      "oogle.devtools.cloudbuild.v1.GetBuildReq"
      "uest\032$.google.devtools.cloudbuild.v1.Bui"
      "ld\"-\202\323\344\223\002\'\022%/v1/projects/{project_id}/bu"
      "ilds/{id}\022\233\001\n\nListBuilds\0220.google.devtoo"
      "ls.cloudbuild.v1.ListBuildsRequest\0321.goo"
      "gle.devtools.cloudbuild.v1.ListBuildsRes"
      "ponse\"(\202\323\344\223\002\"\022 /v1/projects/{project_id}"
      "/builds\022\237\001\n\013CancelBuild\0221.google.devtool"
      "s.cloudbuild.v1.CancelBuildRequest\032$.goo"
      "gle.devtools.cloudbuild.v1.Build\"7\202\323\344\223\0021"
      "\",/v1/projects/{project_id}/builds/{id}:"
      "cancel:\001*\022\260\001\n\022CreateBuildTrigger\0228.googl"
      "e.devtools.cloudbuild.v1.CreateBuildTrig"
      "gerRequest\032+.google.devtools.cloudbuild."
      "v1.BuildTrigger\"3\202\323\344\223\002-\"\"/v1/projects/{p"
      "roject_id}/triggers:\007trigger\022\256\001\n\017GetBuil"
      "dTrigger\0225.google.devtools.cloudbuild.v1"
      ".GetBuildTriggerRequest\032+.google.devtool"
      "s.cloudbuild.v1.BuildTrigger\"7\202\323\344\223\0021\022//v"
      "1/projects/{project_id}/triggers/{trigge"
      "r_id}\022\262\001\n\021ListBuildTriggers\0227.google.dev"
      "tools.cloudbuild.v1.ListBuildTriggersReq"
      "uest\0328.google.devtools.cloudbuild.v1.Lis"
      "tBuildTriggersResponse\"*\202\323\344\223\002$\022\"/v1/proj"
      "ects/{project_id}/triggers\022\237\001\n\022DeleteBui"
      "ldTrigger\0228.google.devtools.cloudbuild.v"
      "1.DeleteBuildTriggerRequest\032\026.google.pro"
      "tobuf.Empty\"7\202\323\344\223\0021*//v1/projects/{proje"
      "ct_id}/triggers/{trigger_id}\022\275\001\n\022UpdateB"
      "uildTrigger\0228.google.devtools.cloudbuild"
      ".v1.UpdateBuildTriggerRequest\032+.google.d"
      "evtools.cloudbuild.v1.BuildTrigger\"@\202\323\344\223"
      "\002:2//v1/projects/{project_id}/triggers/{"
      "trigger_id}:\007triggerBk\n\030com.google.cloud"
      "build.v1P\001ZGgoogle.golang.org/genproto/g"
      "oogleapis/devtools/cloudbuild/v1;cloudbu"
      "ild\242\002\003GCBb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 6137);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "google/devtools/cloudbuild/v1/cloudbuild.proto", &protobuf_RegisterTypes);
  ::google::api::protobuf_google_2fapi_2fannotations_2eproto::AddDescriptors();
  ::google::longrunning::protobuf_google_2flongrunning_2foperations_2eproto::AddDescriptors();
  ::google::protobuf::protobuf_google_2fprotobuf_2fduration_2eproto::AddDescriptors();
  ::google::protobuf::protobuf_google_2fprotobuf_2fempty_2eproto::AddDescriptors();
  ::google::protobuf::protobuf_google_2fprotobuf_2ftimestamp_2eproto::AddDescriptors();
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_google_2fdevtools_2fcloudbuild_2fv1_2fcloudbuild_2eproto

const ::google::protobuf::EnumDescriptor* Build_Status_descriptor() {
  protobuf_google_2fdevtools_2fcloudbuild_2fv1_2fcloudbuild_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fdevtools_2fcloudbuild_2fv1_2fcloudbuild_2eproto::file_level_enum_descriptors[0];
}
bool Build_Status_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Build_Status Build::STATUS_UNKNOWN;
const Build_Status Build::QUEUED;
const Build_Status Build::WORKING;
const Build_Status Build::SUCCESS;
const Build_Status Build::FAILURE;
const Build_Status Build::INTERNAL_ERROR;
const Build_Status Build::TIMEOUT;
const Build_Status Build::CANCELLED;
const Build_Status Build::Status_MIN;
const Build_Status Build::Status_MAX;
const int Build::Status_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Hash_HashType_descriptor() {
  protobuf_google_2fdevtools_2fcloudbuild_2fv1_2fcloudbuild_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fdevtools_2fcloudbuild_2fv1_2fcloudbuild_2eproto::file_level_enum_descriptors[1];
}
bool Hash_HashType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Hash_HashType Hash::NONE;
const Hash_HashType Hash::SHA256;
const Hash_HashType Hash::HashType_MIN;
const Hash_HashType Hash::HashType_MAX;
const int Hash::HashType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* BuildOptions_VerifyOption_descriptor() {
  protobuf_google_2fdevtools_2fcloudbuild_2fv1_2fcloudbuild_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fdevtools_2fcloudbuild_2fv1_2fcloudbuild_2eproto::file_level_enum_descriptors[2];
}
bool BuildOptions_VerifyOption_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const BuildOptions_VerifyOption BuildOptions::NOT_VERIFIED;
const BuildOptions_VerifyOption BuildOptions::VERIFIED;
const BuildOptions_VerifyOption BuildOptions::VerifyOption_MIN;
const BuildOptions_VerifyOption BuildOptions::VerifyOption_MAX;
const int BuildOptions::VerifyOption_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* BuildOptions_SubstitutionOption_descriptor() {
  protobuf_google_2fdevtools_2fcloudbuild_2fv1_2fcloudbuild_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fdevtools_2fcloudbuild_2fv1_2fcloudbuild_2eproto::file_level_enum_descriptors[3];
}
bool BuildOptions_SubstitutionOption_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const BuildOptions_SubstitutionOption BuildOptions::MUST_MATCH;
const BuildOptions_SubstitutionOption BuildOptions::ALLOW_LOOSE;
const BuildOptions_SubstitutionOption BuildOptions::SubstitutionOption_MIN;
const BuildOptions_SubstitutionOption BuildOptions::SubstitutionOption_MAX;
const int BuildOptions::SubstitutionOption_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StorageSource::kBucketFieldNumber;
const int StorageSource::kObjectFieldNumber;
const int StorageSource::kGenerationFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StorageSource::StorageSource()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_google_2fdevtools_2fcloudbuild_2fv1_2fcloudbuild_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.devtools.cloudbuild.v1.StorageSource)
}
StorageSource::StorageSource(const StorageSource& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  bucket_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.bucket().size() > 0) {
    bucket_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bucket_);
  }
  object_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.object().size() > 0) {
    object_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.object_);
  }
  generation_ = from.generation_;
  // @@protoc_insertion_point(copy_constructor:google.devtools.cloudbuild.v1.StorageSource)
}

void StorageSource::SharedCtor() {
  bucket_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  object_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  generation_ = GOOGLE_LONGLONG(0);
  _cached_size_ = 0;
}

StorageSource::~StorageSource() {
  // @@protoc_insertion_point(destructor:google.devtools.cloudbuild.v1.StorageSource)
  SharedDtor();
}

void StorageSource::SharedDtor() {
  bucket_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  object_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void StorageSource::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* StorageSource::descriptor() {
  protobuf_google_2fdevtools_2fcloudbuild_2fv1_2fcloudbuild_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fdevtools_2fcloudbuild_2fv1_2fcloudbuild_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const StorageSource& StorageSource::default_instance() {
  protobuf_google_2fdevtools_2fcloudbuild_2fv1_2fcloudbuild_2eproto::InitDefaults();
  return *internal_default_instance();
}

StorageSource* StorageSource::New(::google::protobuf::Arena* arena) const {
  StorageSource* n = new StorageSource;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void StorageSource::Clear() {
// @@protoc_insertion_point(message_clear_start:google.devtools.cloudbuild.v1.StorageSource)
  bucket_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  object_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  generation_ = GOOGLE_LONGLONG(0);
}

bool StorageSource::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.devtools.cloudbuild.v1.StorageSource)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string bucket = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_bucket()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->bucket().data(), this->bucket().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.cloudbuild.v1.StorageSource.bucket"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string object = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_object()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->object().data(), this->object().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.cloudbuild.v1.StorageSource.object"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 generation = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &generation_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.devtools.cloudbuild.v1.StorageSource)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.devtools.cloudbuild.v1.StorageSource)
  return false;
#undef DO_
}

void StorageSource::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.devtools.cloudbuild.v1.StorageSource)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string bucket = 1;
  if (this->bucket().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->bucket().data(), this->bucket().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.cloudbuild.v1.StorageSource.bucket");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->bucket(), output);
  }

  // string object = 2;
  if (this->object().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->object().data(), this->object().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.cloudbuild.v1.StorageSource.object");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->object(), output);
  }

  // int64 generation = 3;
  if (this->generation() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->generation(), output);
  }

  // @@protoc_insertion_point(serialize_end:google.devtools.cloudbuild.v1.StorageSource)
}

::google::protobuf::uint8* StorageSource::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.devtools.cloudbuild.v1.StorageSource)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string bucket = 1;
  if (this->bucket().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->bucket().data(), this->bucket().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.cloudbuild.v1.StorageSource.bucket");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->bucket(), target);
  }

  // string object = 2;
  if (this->object().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->object().data(), this->object().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.cloudbuild.v1.StorageSource.object");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->object(), target);
  }

  // int64 generation = 3;
  if (this->generation() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->generation(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.devtools.cloudbuild.v1.StorageSource)
  return target;
}

size_t StorageSource::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.devtools.cloudbuild.v1.StorageSource)
  size_t total_size = 0;

  // string bucket = 1;
  if (this->bucket().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->bucket());
  }

  // string object = 2;
  if (this->object().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->object());
  }

  // int64 generation = 3;
  if (this->generation() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->generation());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void StorageSource::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.devtools.cloudbuild.v1.StorageSource)
  GOOGLE_DCHECK_NE(&from, this);
  const StorageSource* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const StorageSource>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.devtools.cloudbuild.v1.StorageSource)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.devtools.cloudbuild.v1.StorageSource)
    MergeFrom(*source);
  }
}

void StorageSource::MergeFrom(const StorageSource& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.devtools.cloudbuild.v1.StorageSource)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.bucket().size() > 0) {

    bucket_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bucket_);
  }
  if (from.object().size() > 0) {

    object_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.object_);
  }
  if (from.generation() != 0) {
    set_generation(from.generation());
  }
}

void StorageSource::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.devtools.cloudbuild.v1.StorageSource)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StorageSource::CopyFrom(const StorageSource& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.devtools.cloudbuild.v1.StorageSource)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StorageSource::IsInitialized() const {
  return true;
}

void StorageSource::Swap(StorageSource* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StorageSource::InternalSwap(StorageSource* other) {
  bucket_.Swap(&other->bucket_);
  object_.Swap(&other->object_);
  std::swap(generation_, other->generation_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata StorageSource::GetMetadata() const {
  protobuf_google_2fdevtools_2fcloudbuild_2fv1_2fcloudbuild_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fdevtools_2fcloudbuild_2fv1_2fcloudbuild_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// StorageSource

// string bucket = 1;
void StorageSource::clear_bucket() {
  bucket_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& StorageSource::bucket() const {
  // @@protoc_insertion_point(field_get:google.devtools.cloudbuild.v1.StorageSource.bucket)
  return bucket_.GetNoArena();
}
void StorageSource::set_bucket(const ::std::string& value) {
  
  bucket_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.cloudbuild.v1.StorageSource.bucket)
}
#if LANG_CXX11
void StorageSource::set_bucket(::std::string&& value) {
  
  bucket_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.devtools.cloudbuild.v1.StorageSource.bucket)
}
#endif
void StorageSource::set_bucket(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  bucket_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.cloudbuild.v1.StorageSource.bucket)
}
void StorageSource::set_bucket(const char* value, size_t size) {
  
  bucket_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.cloudbuild.v1.StorageSource.bucket)
}
::std::string* StorageSource::mutable_bucket() {
  
  // @@protoc_insertion_point(field_mutable:google.devtools.cloudbuild.v1.StorageSource.bucket)
  return bucket_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* StorageSource::release_bucket() {
  // @@protoc_insertion_point(field_release:google.devtools.cloudbuild.v1.StorageSource.bucket)
  
  return bucket_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void StorageSource::set_allocated_bucket(::std::string* bucket) {
  if (bucket != NULL) {
    
  } else {
    
  }
  bucket_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), bucket);
  // @@protoc_insertion_point(field_set_allocated:google.devtools.cloudbuild.v1.StorageSource.bucket)
}

// string object = 2;
void StorageSource::clear_object() {
  object_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& StorageSource::object() const {
  // @@protoc_insertion_point(field_get:google.devtools.cloudbuild.v1.StorageSource.object)
  return object_.GetNoArena();
}
void StorageSource::set_object(const ::std::string& value) {
  
  object_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.cloudbuild.v1.StorageSource.object)
}
#if LANG_CXX11
void StorageSource::set_object(::std::string&& value) {
  
  object_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.devtools.cloudbuild.v1.StorageSource.object)
}
#endif
void StorageSource::set_object(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  object_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.cloudbuild.v1.StorageSource.object)
}
void StorageSource::set_object(const char* value, size_t size) {
  
  object_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.cloudbuild.v1.StorageSource.object)
}
::std::string* StorageSource::mutable_object() {
  
  // @@protoc_insertion_point(field_mutable:google.devtools.cloudbuild.v1.StorageSource.object)
  return object_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* StorageSource::release_object() {
  // @@protoc_insertion_point(field_release:google.devtools.cloudbuild.v1.StorageSource.object)
  
  return object_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void StorageSource::set_allocated_object(::std::string* object) {
  if (object != NULL) {
    
  } else {
    
  }
  object_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), object);
  // @@protoc_insertion_point(field_set_allocated:google.devtools.cloudbuild.v1.StorageSource.object)
}

// int64 generation = 3;
void StorageSource::clear_generation() {
  generation_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 StorageSource::generation() const {
  // @@protoc_insertion_point(field_get:google.devtools.cloudbuild.v1.StorageSource.generation)
  return generation_;
}
void StorageSource::set_generation(::google::protobuf::int64 value) {
  
  generation_ = value;
  // @@protoc_insertion_point(field_set:google.devtools.cloudbuild.v1.StorageSource.generation)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RepoSource::kProjectIdFieldNumber;
const int RepoSource::kRepoNameFieldNumber;
const int RepoSource::kBranchNameFieldNumber;
const int RepoSource::kTagNameFieldNumber;
const int RepoSource::kCommitShaFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RepoSource::RepoSource()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_google_2fdevtools_2fcloudbuild_2fv1_2fcloudbuild_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.devtools.cloudbuild.v1.RepoSource)
}
RepoSource::RepoSource(const RepoSource& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.project_id().size() > 0) {
    project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
  }
  repo_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.repo_name().size() > 0) {
    repo_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.repo_name_);
  }
  clear_has_revision();
  switch (from.revision_case()) {
    case kBranchName: {
      set_branch_name(from.branch_name());
      break;
    }
    case kTagName: {
      set_tag_name(from.tag_name());
      break;
    }
    case kCommitSha: {
      set_commit_sha(from.commit_sha());
      break;
    }
    case REVISION_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:google.devtools.cloudbuild.v1.RepoSource)
}

void RepoSource::SharedCtor() {
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  repo_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_revision();
  _cached_size_ = 0;
}

RepoSource::~RepoSource() {
  // @@protoc_insertion_point(destructor:google.devtools.cloudbuild.v1.RepoSource)
  SharedDtor();
}

void RepoSource::SharedDtor() {
  project_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  repo_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (has_revision()) {
    clear_revision();
  }
}

void RepoSource::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RepoSource::descriptor() {
  protobuf_google_2fdevtools_2fcloudbuild_2fv1_2fcloudbuild_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fdevtools_2fcloudbuild_2fv1_2fcloudbuild_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RepoSource& RepoSource::default_instance() {
  protobuf_google_2fdevtools_2fcloudbuild_2fv1_2fcloudbuild_2eproto::InitDefaults();
  return *internal_default_instance();
}

RepoSource* RepoSource::New(::google::protobuf::Arena* arena) const {
  RepoSource* n = new RepoSource;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RepoSource::clear_revision() {
// @@protoc_insertion_point(one_of_clear_start:google.devtools.cloudbuild.v1.RepoSource)
  switch (revision_case()) {
    case kBranchName: {
      revision_.branch_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case kTagName: {
      revision_.tag_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case kCommitSha: {
      revision_.commit_sha_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case REVISION_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = REVISION_NOT_SET;
}


void RepoSource::Clear() {
// @@protoc_insertion_point(message_clear_start:google.devtools.cloudbuild.v1.RepoSource)
  project_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  repo_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_revision();
}

bool RepoSource::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.devtools.cloudbuild.v1.RepoSource)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string project_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_project_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->project_id().data(), this->project_id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.cloudbuild.v1.RepoSource.project_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string repo_name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_repo_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->repo_name().data(), this->repo_name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.cloudbuild.v1.RepoSource.repo_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string branch_name = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_branch_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->branch_name().data(), this->branch_name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.cloudbuild.v1.RepoSource.branch_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string tag_name = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_tag_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->tag_name().data(), this->tag_name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.cloudbuild.v1.RepoSource.tag_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string commit_sha = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_commit_sha()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->commit_sha().data(), this->commit_sha().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.cloudbuild.v1.RepoSource.commit_sha"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.devtools.cloudbuild.v1.RepoSource)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.devtools.cloudbuild.v1.RepoSource)
  return false;
#undef DO_
}

void RepoSource::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.devtools.cloudbuild.v1.RepoSource)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string project_id = 1;
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), this->project_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.cloudbuild.v1.RepoSource.project_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->project_id(), output);
  }

  // string repo_name = 2;
  if (this->repo_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->repo_name().data(), this->repo_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.cloudbuild.v1.RepoSource.repo_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->repo_name(), output);
  }

  // string branch_name = 3;
  if (has_branch_name()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->branch_name().data(), this->branch_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.cloudbuild.v1.RepoSource.branch_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->branch_name(), output);
  }

  // string tag_name = 4;
  if (has_tag_name()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->tag_name().data(), this->tag_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.cloudbuild.v1.RepoSource.tag_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->tag_name(), output);
  }

  // string commit_sha = 5;
  if (has_commit_sha()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->commit_sha().data(), this->commit_sha().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.cloudbuild.v1.RepoSource.commit_sha");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->commit_sha(), output);
  }

  // @@protoc_insertion_point(serialize_end:google.devtools.cloudbuild.v1.RepoSource)
}

::google::protobuf::uint8* RepoSource::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.devtools.cloudbuild.v1.RepoSource)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string project_id = 1;
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), this->project_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.cloudbuild.v1.RepoSource.project_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->project_id(), target);
  }

  // string repo_name = 2;
  if (this->repo_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->repo_name().data(), this->repo_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.cloudbuild.v1.RepoSource.repo_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->repo_name(), target);
  }

  // string branch_name = 3;
  if (has_branch_name()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->branch_name().data(), this->branch_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.cloudbuild.v1.RepoSource.branch_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->branch_name(), target);
  }

  // string tag_name = 4;
  if (has_tag_name()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->tag_name().data(), this->tag_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.cloudbuild.v1.RepoSource.tag_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->tag_name(), target);
  }

  // string commit_sha = 5;
  if (has_commit_sha()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->commit_sha().data(), this->commit_sha().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.cloudbuild.v1.RepoSource.commit_sha");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->commit_sha(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.devtools.cloudbuild.v1.RepoSource)
  return target;
}

size_t RepoSource::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.devtools.cloudbuild.v1.RepoSource)
  size_t total_size = 0;

  // string project_id = 1;
  if (this->project_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->project_id());
  }

  // string repo_name = 2;
  if (this->repo_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->repo_name());
  }

  switch (revision_case()) {
    // string branch_name = 3;
    case kBranchName: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->branch_name());
      break;
    }
    // string tag_name = 4;
    case kTagName: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->tag_name());
      break;
    }
    // string commit_sha = 5;
    case kCommitSha: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->commit_sha());
      break;
    }
    case REVISION_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RepoSource::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.devtools.cloudbuild.v1.RepoSource)
  GOOGLE_DCHECK_NE(&from, this);
  const RepoSource* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RepoSource>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.devtools.cloudbuild.v1.RepoSource)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.devtools.cloudbuild.v1.RepoSource)
    MergeFrom(*source);
  }
}

void RepoSource::MergeFrom(const RepoSource& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.devtools.cloudbuild.v1.RepoSource)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.project_id().size() > 0) {

    project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
  }
  if (from.repo_name().size() > 0) {

    repo_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.repo_name_);
  }
  switch (from.revision_case()) {
    case kBranchName: {
      set_branch_name(from.branch_name());
      break;
    }
    case kTagName: {
      set_tag_name(from.tag_name());
      break;
    }
    case kCommitSha: {
      set_commit_sha(from.commit_sha());
      break;
    }
    case REVISION_NOT_SET: {
      break;
    }
  }
}

void RepoSource::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.devtools.cloudbuild.v1.RepoSource)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RepoSource::CopyFrom(const RepoSource& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.devtools.cloudbuild.v1.RepoSource)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RepoSource::IsInitialized() const {
  return true;
}

void RepoSource::Swap(RepoSource* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RepoSource::InternalSwap(RepoSource* other) {
  project_id_.Swap(&other->project_id_);
  repo_name_.Swap(&other->repo_name_);
  std::swap(revision_, other->revision_);
  std::swap(_oneof_case_[0], other->_oneof_case_[0]);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RepoSource::GetMetadata() const {
  protobuf_google_2fdevtools_2fcloudbuild_2fv1_2fcloudbuild_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fdevtools_2fcloudbuild_2fv1_2fcloudbuild_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RepoSource

// string project_id = 1;
void RepoSource::clear_project_id() {
  project_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& RepoSource::project_id() const {
  // @@protoc_insertion_point(field_get:google.devtools.cloudbuild.v1.RepoSource.project_id)
  return project_id_.GetNoArena();
}
void RepoSource::set_project_id(const ::std::string& value) {
  
  project_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.cloudbuild.v1.RepoSource.project_id)
}
#if LANG_CXX11
void RepoSource::set_project_id(::std::string&& value) {
  
  project_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.devtools.cloudbuild.v1.RepoSource.project_id)
}
#endif
void RepoSource::set_project_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  project_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.cloudbuild.v1.RepoSource.project_id)
}
void RepoSource::set_project_id(const char* value, size_t size) {
  
  project_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.cloudbuild.v1.RepoSource.project_id)
}
::std::string* RepoSource::mutable_project_id() {
  
  // @@protoc_insertion_point(field_mutable:google.devtools.cloudbuild.v1.RepoSource.project_id)
  return project_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RepoSource::release_project_id() {
  // @@protoc_insertion_point(field_release:google.devtools.cloudbuild.v1.RepoSource.project_id)
  
  return project_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RepoSource::set_allocated_project_id(::std::string* project_id) {
  if (project_id != NULL) {
    
  } else {
    
  }
  project_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), project_id);
  // @@protoc_insertion_point(field_set_allocated:google.devtools.cloudbuild.v1.RepoSource.project_id)
}

// string repo_name = 2;
void RepoSource::clear_repo_name() {
  repo_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& RepoSource::repo_name() const {
  // @@protoc_insertion_point(field_get:google.devtools.cloudbuild.v1.RepoSource.repo_name)
  return repo_name_.GetNoArena();
}
void RepoSource::set_repo_name(const ::std::string& value) {
  
  repo_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.cloudbuild.v1.RepoSource.repo_name)
}
#if LANG_CXX11
void RepoSource::set_repo_name(::std::string&& value) {
  
  repo_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.devtools.cloudbuild.v1.RepoSource.repo_name)
}
#endif
void RepoSource::set_repo_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  repo_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.cloudbuild.v1.RepoSource.repo_name)
}
void RepoSource::set_repo_name(const char* value, size_t size) {
  
  repo_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.cloudbuild.v1.RepoSource.repo_name)
}
::std::string* RepoSource::mutable_repo_name() {
  
  // @@protoc_insertion_point(field_mutable:google.devtools.cloudbuild.v1.RepoSource.repo_name)
  return repo_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RepoSource::release_repo_name() {
  // @@protoc_insertion_point(field_release:google.devtools.cloudbuild.v1.RepoSource.repo_name)
  
  return repo_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RepoSource::set_allocated_repo_name(::std::string* repo_name) {
  if (repo_name != NULL) {
    
  } else {
    
  }
  repo_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), repo_name);
  // @@protoc_insertion_point(field_set_allocated:google.devtools.cloudbuild.v1.RepoSource.repo_name)
}

// string branch_name = 3;
bool RepoSource::has_branch_name() const {
  return revision_case() == kBranchName;
}
void RepoSource::set_has_branch_name() {
  _oneof_case_[0] = kBranchName;
}
void RepoSource::clear_branch_name() {
  if (has_branch_name()) {
    revision_.branch_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_revision();
  }
}
const ::std::string& RepoSource::branch_name() const {
  // @@protoc_insertion_point(field_get:google.devtools.cloudbuild.v1.RepoSource.branch_name)
  if (has_branch_name()) {
    return revision_.branch_name_.GetNoArena();
  }
  return *&::google::protobuf::internal::GetEmptyStringAlreadyInited();
}
void RepoSource::set_branch_name(const ::std::string& value) {
  // @@protoc_insertion_point(field_set:google.devtools.cloudbuild.v1.RepoSource.branch_name)
  if (!has_branch_name()) {
    clear_revision();
    set_has_branch_name();
    revision_.branch_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  revision_.branch_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.cloudbuild.v1.RepoSource.branch_name)
}
#if LANG_CXX11
void RepoSource::set_branch_name(::std::string&& value) {
  // @@protoc_insertion_point(field_set:google.devtools.cloudbuild.v1.RepoSource.branch_name)
  if (!has_branch_name()) {
    clear_revision();
    set_has_branch_name();
    revision_.branch_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  revision_.branch_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.devtools.cloudbuild.v1.RepoSource.branch_name)
}
#endif
void RepoSource::set_branch_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  if (!has_branch_name()) {
    clear_revision();
    set_has_branch_name();
    revision_.branch_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  revision_.branch_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.cloudbuild.v1.RepoSource.branch_name)
}
void RepoSource::set_branch_name(const char* value, size_t size) {
  if (!has_branch_name()) {
    clear_revision();
    set_has_branch_name();
    revision_.branch_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  revision_.branch_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.cloudbuild.v1.RepoSource.branch_name)
}
::std::string* RepoSource::mutable_branch_name() {
  if (!has_branch_name()) {
    clear_revision();
    set_has_branch_name();
    revision_.branch_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_mutable:google.devtools.cloudbuild.v1.RepoSource.branch_name)
  return revision_.branch_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RepoSource::release_branch_name() {
  // @@protoc_insertion_point(field_release:google.devtools.cloudbuild.v1.RepoSource.branch_name)
  if (has_branch_name()) {
    clear_has_revision();
    return revision_.branch_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  } else {
    return NULL;
  }
}
void RepoSource::set_allocated_branch_name(::std::string* branch_name) {
  if (!has_branch_name()) {
    revision_.branch_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  clear_revision();
  if (branch_name != NULL) {
    set_has_branch_name();
    revision_.branch_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        branch_name);
  }
  // @@protoc_insertion_point(field_set_allocated:google.devtools.cloudbuild.v1.RepoSource.branch_name)
}

// string tag_name = 4;
bool RepoSource::has_tag_name() const {
  return revision_case() == kTagName;
}
void RepoSource::set_has_tag_name() {
  _oneof_case_[0] = kTagName;
}
void RepoSource::clear_tag_name() {
  if (has_tag_name()) {
    revision_.tag_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_revision();
  }
}
const ::std::string& RepoSource::tag_name() const {
  // @@protoc_insertion_point(field_get:google.devtools.cloudbuild.v1.RepoSource.tag_name)
  if (has_tag_name()) {
    return revision_.tag_name_.GetNoArena();
  }
  return *&::google::protobuf::internal::GetEmptyStringAlreadyInited();
}
void RepoSource::set_tag_name(const ::std::string& value) {
  // @@protoc_insertion_point(field_set:google.devtools.cloudbuild.v1.RepoSource.tag_name)
  if (!has_tag_name()) {
    clear_revision();
    set_has_tag_name();
    revision_.tag_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  revision_.tag_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.cloudbuild.v1.RepoSource.tag_name)
}
#if LANG_CXX11
void RepoSource::set_tag_name(::std::string&& value) {
  // @@protoc_insertion_point(field_set:google.devtools.cloudbuild.v1.RepoSource.tag_name)
  if (!has_tag_name()) {
    clear_revision();
    set_has_tag_name();
    revision_.tag_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  revision_.tag_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.devtools.cloudbuild.v1.RepoSource.tag_name)
}
#endif
void RepoSource::set_tag_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  if (!has_tag_name()) {
    clear_revision();
    set_has_tag_name();
    revision_.tag_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  revision_.tag_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.cloudbuild.v1.RepoSource.tag_name)
}
void RepoSource::set_tag_name(const char* value, size_t size) {
  if (!has_tag_name()) {
    clear_revision();
    set_has_tag_name();
    revision_.tag_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  revision_.tag_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.cloudbuild.v1.RepoSource.tag_name)
}
::std::string* RepoSource::mutable_tag_name() {
  if (!has_tag_name()) {
    clear_revision();
    set_has_tag_name();
    revision_.tag_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_mutable:google.devtools.cloudbuild.v1.RepoSource.tag_name)
  return revision_.tag_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RepoSource::release_tag_name() {
  // @@protoc_insertion_point(field_release:google.devtools.cloudbuild.v1.RepoSource.tag_name)
  if (has_tag_name()) {
    clear_has_revision();
    return revision_.tag_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  } else {
    return NULL;
  }
}
void RepoSource::set_allocated_tag_name(::std::string* tag_name) {
  if (!has_tag_name()) {
    revision_.tag_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  clear_revision();
  if (tag_name != NULL) {
    set_has_tag_name();
    revision_.tag_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        tag_name);
  }
  // @@protoc_insertion_point(field_set_allocated:google.devtools.cloudbuild.v1.RepoSource.tag_name)
}

// string commit_sha = 5;
bool RepoSource::has_commit_sha() const {
  return revision_case() == kCommitSha;
}
void RepoSource::set_has_commit_sha() {
  _oneof_case_[0] = kCommitSha;
}
void RepoSource::clear_commit_sha() {
  if (has_commit_sha()) {
    revision_.commit_sha_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_revision();
  }
}
const ::std::string& RepoSource::commit_sha() const {
  // @@protoc_insertion_point(field_get:google.devtools.cloudbuild.v1.RepoSource.commit_sha)
  if (has_commit_sha()) {
    return revision_.commit_sha_.GetNoArena();
  }
  return *&::google::protobuf::internal::GetEmptyStringAlreadyInited();
}
void RepoSource::set_commit_sha(const ::std::string& value) {
  // @@protoc_insertion_point(field_set:google.devtools.cloudbuild.v1.RepoSource.commit_sha)
  if (!has_commit_sha()) {
    clear_revision();
    set_has_commit_sha();
    revision_.commit_sha_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  revision_.commit_sha_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.cloudbuild.v1.RepoSource.commit_sha)
}
#if LANG_CXX11
void RepoSource::set_commit_sha(::std::string&& value) {
  // @@protoc_insertion_point(field_set:google.devtools.cloudbuild.v1.RepoSource.commit_sha)
  if (!has_commit_sha()) {
    clear_revision();
    set_has_commit_sha();
    revision_.commit_sha_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  revision_.commit_sha_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.devtools.cloudbuild.v1.RepoSource.commit_sha)
}
#endif
void RepoSource::set_commit_sha(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  if (!has_commit_sha()) {
    clear_revision();
    set_has_commit_sha();
    revision_.commit_sha_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  revision_.commit_sha_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.cloudbuild.v1.RepoSource.commit_sha)
}
void RepoSource::set_commit_sha(const char* value, size_t size) {
  if (!has_commit_sha()) {
    clear_revision();
    set_has_commit_sha();
    revision_.commit_sha_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  revision_.commit_sha_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.cloudbuild.v1.RepoSource.commit_sha)
}
::std::string* RepoSource::mutable_commit_sha() {
  if (!has_commit_sha()) {
    clear_revision();
    set_has_commit_sha();
    revision_.commit_sha_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_mutable:google.devtools.cloudbuild.v1.RepoSource.commit_sha)
  return revision_.commit_sha_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RepoSource::release_commit_sha() {
  // @@protoc_insertion_point(field_release:google.devtools.cloudbuild.v1.RepoSource.commit_sha)
  if (has_commit_sha()) {
    clear_has_revision();
    return revision_.commit_sha_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  } else {
    return NULL;
  }
}
void RepoSource::set_allocated_commit_sha(::std::string* commit_sha) {
  if (!has_commit_sha()) {
    revision_.commit_sha_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  clear_revision();
  if (commit_sha != NULL) {
    set_has_commit_sha();
    revision_.commit_sha_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        commit_sha);
  }
  // @@protoc_insertion_point(field_set_allocated:google.devtools.cloudbuild.v1.RepoSource.commit_sha)
}

bool RepoSource::has_revision() const {
  return revision_case() != REVISION_NOT_SET;
}
void RepoSource::clear_has_revision() {
  _oneof_case_[0] = REVISION_NOT_SET;
}
RepoSource::RevisionCase RepoSource::revision_case() const {
  return RepoSource::RevisionCase(_oneof_case_[0]);
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Source::kStorageSourceFieldNumber;
const int Source::kRepoSourceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Source::Source()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_google_2fdevtools_2fcloudbuild_2fv1_2fcloudbuild_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.devtools.cloudbuild.v1.Source)
}
Source::Source(const Source& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_source();
  switch (from.source_case()) {
    case kStorageSource: {
      mutable_storage_source()->::google::devtools::cloudbuild::v1::StorageSource::MergeFrom(from.storage_source());
      break;
    }
    case kRepoSource: {
      mutable_repo_source()->::google::devtools::cloudbuild::v1::RepoSource::MergeFrom(from.repo_source());
      break;
    }
    case SOURCE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:google.devtools.cloudbuild.v1.Source)
}

void Source::SharedCtor() {
  clear_has_source();
  _cached_size_ = 0;
}

Source::~Source() {
  // @@protoc_insertion_point(destructor:google.devtools.cloudbuild.v1.Source)
  SharedDtor();
}

void Source::SharedDtor() {
  if (has_source()) {
    clear_source();
  }
}

void Source::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Source::descriptor() {
  protobuf_google_2fdevtools_2fcloudbuild_2fv1_2fcloudbuild_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fdevtools_2fcloudbuild_2fv1_2fcloudbuild_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Source& Source::default_instance() {
  protobuf_google_2fdevtools_2fcloudbuild_2fv1_2fcloudbuild_2eproto::InitDefaults();
  return *internal_default_instance();
}

Source* Source::New(::google::protobuf::Arena* arena) const {
  Source* n = new Source;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Source::clear_source() {
// @@protoc_insertion_point(one_of_clear_start:google.devtools.cloudbuild.v1.Source)
  switch (source_case()) {
    case kStorageSource: {
      delete source_.storage_source_;
      break;
    }
    case kRepoSource: {
      delete source_.repo_source_;
      break;
    }
    case SOURCE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = SOURCE_NOT_SET;
}


void Source::Clear() {
// @@protoc_insertion_point(message_clear_start:google.devtools.cloudbuild.v1.Source)
  clear_source();
}

bool Source::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.devtools.cloudbuild.v1.Source)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.devtools.cloudbuild.v1.StorageSource storage_source = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_storage_source()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.devtools.cloudbuild.v1.RepoSource repo_source = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_repo_source()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.devtools.cloudbuild.v1.Source)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.devtools.cloudbuild.v1.Source)
  return false;
#undef DO_
}

void Source::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.devtools.cloudbuild.v1.Source)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.devtools.cloudbuild.v1.StorageSource storage_source = 2;
  if (has_storage_source()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *source_.storage_source_, output);
  }

  // .google.devtools.cloudbuild.v1.RepoSource repo_source = 3;
  if (has_repo_source()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *source_.repo_source_, output);
  }

  // @@protoc_insertion_point(serialize_end:google.devtools.cloudbuild.v1.Source)
}

::google::protobuf::uint8* Source::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.devtools.cloudbuild.v1.Source)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.devtools.cloudbuild.v1.StorageSource storage_source = 2;
  if (has_storage_source()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *source_.storage_source_, deterministic, target);
  }

  // .google.devtools.cloudbuild.v1.RepoSource repo_source = 3;
  if (has_repo_source()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *source_.repo_source_, deterministic, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.devtools.cloudbuild.v1.Source)
  return target;
}

size_t Source::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.devtools.cloudbuild.v1.Source)
  size_t total_size = 0;

  switch (source_case()) {
    // .google.devtools.cloudbuild.v1.StorageSource storage_source = 2;
    case kStorageSource: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *source_.storage_source_);
      break;
    }
    // .google.devtools.cloudbuild.v1.RepoSource repo_source = 3;
    case kRepoSource: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *source_.repo_source_);
      break;
    }
    case SOURCE_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Source::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.devtools.cloudbuild.v1.Source)
  GOOGLE_DCHECK_NE(&from, this);
  const Source* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Source>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.devtools.cloudbuild.v1.Source)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.devtools.cloudbuild.v1.Source)
    MergeFrom(*source);
  }
}

void Source::MergeFrom(const Source& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.devtools.cloudbuild.v1.Source)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.source_case()) {
    case kStorageSource: {
      mutable_storage_source()->::google::devtools::cloudbuild::v1::StorageSource::MergeFrom(from.storage_source());
      break;
    }
    case kRepoSource: {
      mutable_repo_source()->::google::devtools::cloudbuild::v1::RepoSource::MergeFrom(from.repo_source());
      break;
    }
    case SOURCE_NOT_SET: {
      break;
    }
  }
}

void Source::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.devtools.cloudbuild.v1.Source)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Source::CopyFrom(const Source& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.devtools.cloudbuild.v1.Source)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Source::IsInitialized() const {
  return true;
}

void Source::Swap(Source* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Source::InternalSwap(Source* other) {
  std::swap(source_, other->source_);
  std::swap(_oneof_case_[0], other->_oneof_case_[0]);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Source::GetMetadata() const {
  protobuf_google_2fdevtools_2fcloudbuild_2fv1_2fcloudbuild_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fdevtools_2fcloudbuild_2fv1_2fcloudbuild_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Source

// .google.devtools.cloudbuild.v1.StorageSource storage_source = 2;
bool Source::has_storage_source() const {
  return source_case() == kStorageSource;
}
void Source::set_has_storage_source() {
  _oneof_case_[0] = kStorageSource;
}
void Source::clear_storage_source() {
  if (has_storage_source()) {
    delete source_.storage_source_;
    clear_has_source();
  }
}
 const ::google::devtools::cloudbuild::v1::StorageSource& Source::storage_source() const {
  // @@protoc_insertion_point(field_get:google.devtools.cloudbuild.v1.Source.storage_source)
  return has_storage_source()
      ? *source_.storage_source_
      : ::google::devtools::cloudbuild::v1::StorageSource::default_instance();
}
::google::devtools::cloudbuild::v1::StorageSource* Source::mutable_storage_source() {
  if (!has_storage_source()) {
    clear_source();
    set_has_storage_source();
    source_.storage_source_ = new ::google::devtools::cloudbuild::v1::StorageSource;
  }
  // @@protoc_insertion_point(field_mutable:google.devtools.cloudbuild.v1.Source.storage_source)
  return source_.storage_source_;
}
::google::devtools::cloudbuild::v1::StorageSource* Source::release_storage_source() {
  // @@protoc_insertion_point(field_release:google.devtools.cloudbuild.v1.Source.storage_source)
  if (has_storage_source()) {
    clear_has_source();
    ::google::devtools::cloudbuild::v1::StorageSource* temp = source_.storage_source_;
    source_.storage_source_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void Source::set_allocated_storage_source(::google::devtools::cloudbuild::v1::StorageSource* storage_source) {
  clear_source();
  if (storage_source) {
    set_has_storage_source();
    source_.storage_source_ = storage_source;
  }
  // @@protoc_insertion_point(field_set_allocated:google.devtools.cloudbuild.v1.Source.storage_source)
}

// .google.devtools.cloudbuild.v1.RepoSource repo_source = 3;
bool Source::has_repo_source() const {
  return source_case() == kRepoSource;
}
void Source::set_has_repo_source() {
  _oneof_case_[0] = kRepoSource;
}
void Source::clear_repo_source() {
  if (has_repo_source()) {
    delete source_.repo_source_;
    clear_has_source();
  }
}
 const ::google::devtools::cloudbuild::v1::RepoSource& Source::repo_source() const {
  // @@protoc_insertion_point(field_get:google.devtools.cloudbuild.v1.Source.repo_source)
  return has_repo_source()
      ? *source_.repo_source_
      : ::google::devtools::cloudbuild::v1::RepoSource::default_instance();
}
::google::devtools::cloudbuild::v1::RepoSource* Source::mutable_repo_source() {
  if (!has_repo_source()) {
    clear_source();
    set_has_repo_source();
    source_.repo_source_ = new ::google::devtools::cloudbuild::v1::RepoSource;
  }
  // @@protoc_insertion_point(field_mutable:google.devtools.cloudbuild.v1.Source.repo_source)
  return source_.repo_source_;
}
::google::devtools::cloudbuild::v1::RepoSource* Source::release_repo_source() {
  // @@protoc_insertion_point(field_release:google.devtools.cloudbuild.v1.Source.repo_source)
  if (has_repo_source()) {
    clear_has_source();
    ::google::devtools::cloudbuild::v1::RepoSource* temp = source_.repo_source_;
    source_.repo_source_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void Source::set_allocated_repo_source(::google::devtools::cloudbuild::v1::RepoSource* repo_source) {
  clear_source();
  if (repo_source) {
    set_has_repo_source();
    source_.repo_source_ = repo_source;
  }
  // @@protoc_insertion_point(field_set_allocated:google.devtools.cloudbuild.v1.Source.repo_source)
}

bool Source::has_source() const {
  return source_case() != SOURCE_NOT_SET;
}
void Source::clear_has_source() {
  _oneof_case_[0] = SOURCE_NOT_SET;
}
Source::SourceCase Source::source_case() const {
  return Source::SourceCase(_oneof_case_[0]);
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BuiltImage::kNameFieldNumber;
const int BuiltImage::kDigestFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BuiltImage::BuiltImage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_google_2fdevtools_2fcloudbuild_2fv1_2fcloudbuild_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.devtools.cloudbuild.v1.BuiltImage)
}
BuiltImage::BuiltImage(const BuiltImage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  digest_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.digest().size() > 0) {
    digest_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.digest_);
  }
  // @@protoc_insertion_point(copy_constructor:google.devtools.cloudbuild.v1.BuiltImage)
}

void BuiltImage::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  digest_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

BuiltImage::~BuiltImage() {
  // @@protoc_insertion_point(destructor:google.devtools.cloudbuild.v1.BuiltImage)
  SharedDtor();
}

void BuiltImage::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  digest_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void BuiltImage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BuiltImage::descriptor() {
  protobuf_google_2fdevtools_2fcloudbuild_2fv1_2fcloudbuild_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fdevtools_2fcloudbuild_2fv1_2fcloudbuild_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BuiltImage& BuiltImage::default_instance() {
  protobuf_google_2fdevtools_2fcloudbuild_2fv1_2fcloudbuild_2eproto::InitDefaults();
  return *internal_default_instance();
}

BuiltImage* BuiltImage::New(::google::protobuf::Arena* arena) const {
  BuiltImage* n = new BuiltImage;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BuiltImage::Clear() {
// @@protoc_insertion_point(message_clear_start:google.devtools.cloudbuild.v1.BuiltImage)
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  digest_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool BuiltImage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.devtools.cloudbuild.v1.BuiltImage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.cloudbuild.v1.BuiltImage.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string digest = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_digest()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->digest().data(), this->digest().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.cloudbuild.v1.BuiltImage.digest"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.devtools.cloudbuild.v1.BuiltImage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.devtools.cloudbuild.v1.BuiltImage)
  return false;
#undef DO_
}

void BuiltImage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.devtools.cloudbuild.v1.BuiltImage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.cloudbuild.v1.BuiltImage.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // string digest = 3;
  if (this->digest().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->digest().data(), this->digest().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.cloudbuild.v1.BuiltImage.digest");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->digest(), output);
  }

  // @@protoc_insertion_point(serialize_end:google.devtools.cloudbuild.v1.BuiltImage)
}

::google::protobuf::uint8* BuiltImage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.devtools.cloudbuild.v1.BuiltImage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.cloudbuild.v1.BuiltImage.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // string digest = 3;
  if (this->digest().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->digest().data(), this->digest().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.cloudbuild.v1.BuiltImage.digest");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->digest(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.devtools.cloudbuild.v1.BuiltImage)
  return target;
}

size_t BuiltImage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.devtools.cloudbuild.v1.BuiltImage)
  size_t total_size = 0;

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string digest = 3;
  if (this->digest().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->digest());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BuiltImage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.devtools.cloudbuild.v1.BuiltImage)
  GOOGLE_DCHECK_NE(&from, this);
  const BuiltImage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BuiltImage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.devtools.cloudbuild.v1.BuiltImage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.devtools.cloudbuild.v1.BuiltImage)
    MergeFrom(*source);
  }
}

void BuiltImage::MergeFrom(const BuiltImage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.devtools.cloudbuild.v1.BuiltImage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.digest().size() > 0) {

    digest_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.digest_);
  }
}

void BuiltImage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.devtools.cloudbuild.v1.BuiltImage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BuiltImage::CopyFrom(const BuiltImage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.devtools.cloudbuild.v1.BuiltImage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BuiltImage::IsInitialized() const {
  return true;
}

void BuiltImage::Swap(BuiltImage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BuiltImage::InternalSwap(BuiltImage* other) {
  name_.Swap(&other->name_);
  digest_.Swap(&other->digest_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BuiltImage::GetMetadata() const {
  protobuf_google_2fdevtools_2fcloudbuild_2fv1_2fcloudbuild_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fdevtools_2fcloudbuild_2fv1_2fcloudbuild_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BuiltImage

// string name = 1;
void BuiltImage::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& BuiltImage::name() const {
  // @@protoc_insertion_point(field_get:google.devtools.cloudbuild.v1.BuiltImage.name)
  return name_.GetNoArena();
}
void BuiltImage::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.cloudbuild.v1.BuiltImage.name)
}
#if LANG_CXX11
void BuiltImage::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.devtools.cloudbuild.v1.BuiltImage.name)
}
#endif
void BuiltImage::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.cloudbuild.v1.BuiltImage.name)
}
void BuiltImage::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.cloudbuild.v1.BuiltImage.name)
}
::std::string* BuiltImage::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:google.devtools.cloudbuild.v1.BuiltImage.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* BuiltImage::release_name() {
  // @@protoc_insertion_point(field_release:google.devtools.cloudbuild.v1.BuiltImage.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void BuiltImage::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:google.devtools.cloudbuild.v1.BuiltImage.name)
}

// string digest = 3;
void BuiltImage::clear_digest() {
  digest_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& BuiltImage::digest() const {
  // @@protoc_insertion_point(field_get:google.devtools.cloudbuild.v1.BuiltImage.digest)
  return digest_.GetNoArena();
}
void BuiltImage::set_digest(const ::std::string& value) {
  
  digest_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.cloudbuild.v1.BuiltImage.digest)
}
#if LANG_CXX11
void BuiltImage::set_digest(::std::string&& value) {
  
  digest_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.devtools.cloudbuild.v1.BuiltImage.digest)
}
#endif
void BuiltImage::set_digest(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  digest_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.cloudbuild.v1.BuiltImage.digest)
}
void BuiltImage::set_digest(const char* value, size_t size) {
  
  digest_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.cloudbuild.v1.BuiltImage.digest)
}
::std::string* BuiltImage::mutable_digest() {
  
  // @@protoc_insertion_point(field_mutable:google.devtools.cloudbuild.v1.BuiltImage.digest)
  return digest_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* BuiltImage::release_digest() {
  // @@protoc_insertion_point(field_release:google.devtools.cloudbuild.v1.BuiltImage.digest)
  
  return digest_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void BuiltImage::set_allocated_digest(::std::string* digest) {
  if (digest != NULL) {
    
  } else {
    
  }
  digest_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), digest);
  // @@protoc_insertion_point(field_set_allocated:google.devtools.cloudbuild.v1.BuiltImage.digest)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BuildStep::kNameFieldNumber;
const int BuildStep::kEnvFieldNumber;
const int BuildStep::kArgsFieldNumber;
const int BuildStep::kDirFieldNumber;
const int BuildStep::kIdFieldNumber;
const int BuildStep::kWaitForFieldNumber;
const int BuildStep::kEntrypointFieldNumber;
const int BuildStep::kSecretEnvFieldNumber;
const int BuildStep::kVolumesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BuildStep::BuildStep()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_google_2fdevtools_2fcloudbuild_2fv1_2fcloudbuild_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.devtools.cloudbuild.v1.BuildStep)
}
BuildStep::BuildStep(const BuildStep& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      env_(from.env_),
      args_(from.args_),
      wait_for_(from.wait_for_),
      secret_env_(from.secret_env_),
      volumes_(from.volumes_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  dir_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.dir().size() > 0) {
    dir_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.dir_);
  }
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.id().size() > 0) {
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  entrypoint_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.entrypoint().size() > 0) {
    entrypoint_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.entrypoint_);
  }
  // @@protoc_insertion_point(copy_constructor:google.devtools.cloudbuild.v1.BuildStep)
}

void BuildStep::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  dir_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  entrypoint_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

BuildStep::~BuildStep() {
  // @@protoc_insertion_point(destructor:google.devtools.cloudbuild.v1.BuildStep)
  SharedDtor();
}

void BuildStep::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  dir_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  entrypoint_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void BuildStep::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BuildStep::descriptor() {
  protobuf_google_2fdevtools_2fcloudbuild_2fv1_2fcloudbuild_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fdevtools_2fcloudbuild_2fv1_2fcloudbuild_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BuildStep& BuildStep::default_instance() {
  protobuf_google_2fdevtools_2fcloudbuild_2fv1_2fcloudbuild_2eproto::InitDefaults();
  return *internal_default_instance();
}

BuildStep* BuildStep::New(::google::protobuf::Arena* arena) const {
  BuildStep* n = new BuildStep;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BuildStep::Clear() {
// @@protoc_insertion_point(message_clear_start:google.devtools.cloudbuild.v1.BuildStep)
  env_.Clear();
  args_.Clear();
  wait_for_.Clear();
  secret_env_.Clear();
  volumes_.Clear();
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  dir_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  entrypoint_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool BuildStep::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.devtools.cloudbuild.v1.BuildStep)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.cloudbuild.v1.BuildStep.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string env = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_env()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->env(this->env_size() - 1).data(),
            this->env(this->env_size() - 1).length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.cloudbuild.v1.BuildStep.env"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string args = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_args()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->args(this->args_size() - 1).data(),
            this->args(this->args_size() - 1).length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.cloudbuild.v1.BuildStep.args"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string dir = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_dir()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->dir().data(), this->dir().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.cloudbuild.v1.BuildStep.dir"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string id = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->id().data(), this->id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.cloudbuild.v1.BuildStep.id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string wait_for = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_wait_for()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->wait_for(this->wait_for_size() - 1).data(),
            this->wait_for(this->wait_for_size() - 1).length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.cloudbuild.v1.BuildStep.wait_for"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string entrypoint = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_entrypoint()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->entrypoint().data(), this->entrypoint().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.cloudbuild.v1.BuildStep.entrypoint"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string secret_env = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_secret_env()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->secret_env(this->secret_env_size() - 1).data(),
            this->secret_env(this->secret_env_size() - 1).length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.cloudbuild.v1.BuildStep.secret_env"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.devtools.cloudbuild.v1.Volume volumes = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_volumes()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.devtools.cloudbuild.v1.BuildStep)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.devtools.cloudbuild.v1.BuildStep)
  return false;
#undef DO_
}

void BuildStep::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.devtools.cloudbuild.v1.BuildStep)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.cloudbuild.v1.BuildStep.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // repeated string env = 2;
  for (int i = 0, n = this->env_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->env(i).data(), this->env(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.cloudbuild.v1.BuildStep.env");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->env(i), output);
  }

  // repeated string args = 3;
  for (int i = 0, n = this->args_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->args(i).data(), this->args(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.cloudbuild.v1.BuildStep.args");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->args(i), output);
  }

  // string dir = 4;
  if (this->dir().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->dir().data(), this->dir().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.cloudbuild.v1.BuildStep.dir");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->dir(), output);
  }

  // string id = 5;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.cloudbuild.v1.BuildStep.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->id(), output);
  }

  // repeated string wait_for = 6;
  for (int i = 0, n = this->wait_for_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->wait_for(i).data(), this->wait_for(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.cloudbuild.v1.BuildStep.wait_for");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      6, this->wait_for(i), output);
  }

  // string entrypoint = 7;
  if (this->entrypoint().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->entrypoint().data(), this->entrypoint().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.cloudbuild.v1.BuildStep.entrypoint");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->entrypoint(), output);
  }

  // repeated string secret_env = 8;
  for (int i = 0, n = this->secret_env_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->secret_env(i).data(), this->secret_env(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.cloudbuild.v1.BuildStep.secret_env");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      8, this->secret_env(i), output);
  }

  // repeated .google.devtools.cloudbuild.v1.Volume volumes = 9;
  for (unsigned int i = 0, n = this->volumes_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, this->volumes(i), output);
  }

  // @@protoc_insertion_point(serialize_end:google.devtools.cloudbuild.v1.BuildStep)
}

::google::protobuf::uint8* BuildStep::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.devtools.cloudbuild.v1.BuildStep)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.cloudbuild.v1.BuildStep.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // repeated string env = 2;
  for (int i = 0, n = this->env_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->env(i).data(), this->env(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.cloudbuild.v1.BuildStep.env");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->env(i), target);
  }

  // repeated string args = 3;
  for (int i = 0, n = this->args_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->args(i).data(), this->args(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.cloudbuild.v1.BuildStep.args");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(3, this->args(i), target);
  }

  // string dir = 4;
  if (this->dir().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->dir().data(), this->dir().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.cloudbuild.v1.BuildStep.dir");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->dir(), target);
  }

  // string id = 5;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.cloudbuild.v1.BuildStep.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->id(), target);
  }

  // repeated string wait_for = 6;
  for (int i = 0, n = this->wait_for_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->wait_for(i).data(), this->wait_for(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.cloudbuild.v1.BuildStep.wait_for");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(6, this->wait_for(i), target);
  }

  // string entrypoint = 7;
  if (this->entrypoint().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->entrypoint().data(), this->entrypoint().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.cloudbuild.v1.BuildStep.entrypoint");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->entrypoint(), target);
  }

  // repeated string secret_env = 8;
  for (int i = 0, n = this->secret_env_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->secret_env(i).data(), this->secret_env(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.cloudbuild.v1.BuildStep.secret_env");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(8, this->secret_env(i), target);
  }

  // repeated .google.devtools.cloudbuild.v1.Volume volumes = 9;
  for (unsigned int i = 0, n = this->volumes_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        9, this->volumes(i), deterministic, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.devtools.cloudbuild.v1.BuildStep)
  return target;
}

size_t BuildStep::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.devtools.cloudbuild.v1.BuildStep)
  size_t total_size = 0;

  // repeated string env = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->env_size());
  for (int i = 0, n = this->env_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->env(i));
  }

  // repeated string args = 3;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->args_size());
  for (int i = 0, n = this->args_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->args(i));
  }

  // repeated string wait_for = 6;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->wait_for_size());
  for (int i = 0, n = this->wait_for_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->wait_for(i));
  }

  // repeated string secret_env = 8;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->secret_env_size());
  for (int i = 0, n = this->secret_env_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->secret_env(i));
  }

  // repeated .google.devtools.cloudbuild.v1.Volume volumes = 9;
  {
    unsigned int count = this->volumes_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->volumes(i));
    }
  }

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string dir = 4;
  if (this->dir().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->dir());
  }

  // string id = 5;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  // string entrypoint = 7;
  if (this->entrypoint().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->entrypoint());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BuildStep::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.devtools.cloudbuild.v1.BuildStep)
  GOOGLE_DCHECK_NE(&from, this);
  const BuildStep* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BuildStep>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.devtools.cloudbuild.v1.BuildStep)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.devtools.cloudbuild.v1.BuildStep)
    MergeFrom(*source);
  }
}

void BuildStep::MergeFrom(const BuildStep& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.devtools.cloudbuild.v1.BuildStep)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  env_.MergeFrom(from.env_);
  args_.MergeFrom(from.args_);
  wait_for_.MergeFrom(from.wait_for_);
  secret_env_.MergeFrom(from.secret_env_);
  volumes_.MergeFrom(from.volumes_);
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.dir().size() > 0) {

    dir_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.dir_);
  }
  if (from.id().size() > 0) {

    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  if (from.entrypoint().size() > 0) {

    entrypoint_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.entrypoint_);
  }
}

void BuildStep::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.devtools.cloudbuild.v1.BuildStep)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BuildStep::CopyFrom(const BuildStep& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.devtools.cloudbuild.v1.BuildStep)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BuildStep::IsInitialized() const {
  return true;
}

void BuildStep::Swap(BuildStep* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BuildStep::InternalSwap(BuildStep* other) {
  env_.InternalSwap(&other->env_);
  args_.InternalSwap(&other->args_);
  wait_for_.InternalSwap(&other->wait_for_);
  secret_env_.InternalSwap(&other->secret_env_);
  volumes_.InternalSwap(&other->volumes_);
  name_.Swap(&other->name_);
  dir_.Swap(&other->dir_);
  id_.Swap(&other->id_);
  entrypoint_.Swap(&other->entrypoint_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BuildStep::GetMetadata() const {
  protobuf_google_2fdevtools_2fcloudbuild_2fv1_2fcloudbuild_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fdevtools_2fcloudbuild_2fv1_2fcloudbuild_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BuildStep

// string name = 1;
void BuildStep::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& BuildStep::name() const {
  // @@protoc_insertion_point(field_get:google.devtools.cloudbuild.v1.BuildStep.name)
  return name_.GetNoArena();
}
void BuildStep::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.cloudbuild.v1.BuildStep.name)
}
#if LANG_CXX11
void BuildStep::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.devtools.cloudbuild.v1.BuildStep.name)
}
#endif
void BuildStep::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.cloudbuild.v1.BuildStep.name)
}
void BuildStep::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.cloudbuild.v1.BuildStep.name)
}
::std::string* BuildStep::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:google.devtools.cloudbuild.v1.BuildStep.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* BuildStep::release_name() {
  // @@protoc_insertion_point(field_release:google.devtools.cloudbuild.v1.BuildStep.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void BuildStep::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:google.devtools.cloudbuild.v1.BuildStep.name)
}

// repeated string env = 2;
int BuildStep::env_size() const {
  return env_.size();
}
void BuildStep::clear_env() {
  env_.Clear();
}
const ::std::string& BuildStep::env(int index) const {
  // @@protoc_insertion_point(field_get:google.devtools.cloudbuild.v1.BuildStep.env)
  return env_.Get(index);
}
::std::string* BuildStep::mutable_env(int index) {
  // @@protoc_insertion_point(field_mutable:google.devtools.cloudbuild.v1.BuildStep.env)
  return env_.Mutable(index);
}
void BuildStep::set_env(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:google.devtools.cloudbuild.v1.BuildStep.env)
  env_.Mutable(index)->assign(value);
}
#if LANG_CXX11
void BuildStep::set_env(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:google.devtools.cloudbuild.v1.BuildStep.env)
  env_.Mutable(index)->assign(std::move(value));
}
#endif
void BuildStep::set_env(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  env_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:google.devtools.cloudbuild.v1.BuildStep.env)
}
void BuildStep::set_env(int index, const char* value, size_t size) {
  env_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:google.devtools.cloudbuild.v1.BuildStep.env)
}
::std::string* BuildStep::add_env() {
  // @@protoc_insertion_point(field_add_mutable:google.devtools.cloudbuild.v1.BuildStep.env)
  return env_.Add();
}
void BuildStep::add_env(const ::std::string& value) {
  env_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:google.devtools.cloudbuild.v1.BuildStep.env)
}
#if LANG_CXX11
void BuildStep::add_env(::std::string&& value) {
  env_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:google.devtools.cloudbuild.v1.BuildStep.env)
}
#endif
void BuildStep::add_env(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  env_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:google.devtools.cloudbuild.v1.BuildStep.env)
}
void BuildStep::add_env(const char* value, size_t size) {
  env_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:google.devtools.cloudbuild.v1.BuildStep.env)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
BuildStep::env() const {
  // @@protoc_insertion_point(field_list:google.devtools.cloudbuild.v1.BuildStep.env)
  return env_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
BuildStep::mutable_env() {
  // @@protoc_insertion_point(field_mutable_list:google.devtools.cloudbuild.v1.BuildStep.env)
  return &env_;
}

// repeated string args = 3;
int BuildStep::args_size() const {
  return args_.size();
}
void BuildStep::clear_args() {
  args_.Clear();
}
const ::std::string& BuildStep::args(int index) const {
  // @@protoc_insertion_point(field_get:google.devtools.cloudbuild.v1.BuildStep.args)
  return args_.Get(index);
}
::std::string* BuildStep::mutable_args(int index) {
  // @@protoc_insertion_point(field_mutable:google.devtools.cloudbuild.v1.BuildStep.args)
  return args_.Mutable(index);
}
void BuildStep::set_args(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:google.devtools.cloudbuild.v1.BuildStep.args)
  args_.Mutable(index)->assign(value);
}
#if LANG_CXX11
void BuildStep::set_args(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:google.devtools.cloudbuild.v1.BuildStep.args)
  args_.Mutable(index)->assign(std::move(value));
}
#endif
void BuildStep::set_args(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  args_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:google.devtools.cloudbuild.v1.BuildStep.args)
}
void BuildStep::set_args(int index, const char* value, size_t size) {
  args_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:google.devtools.cloudbuild.v1.BuildStep.args)
}
::std::string* BuildStep::add_args() {
  // @@protoc_insertion_point(field_add_mutable:google.devtools.cloudbuild.v1.BuildStep.args)
  return args_.Add();
}
void BuildStep::add_args(const ::std::string& value) {
  args_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:google.devtools.cloudbuild.v1.BuildStep.args)
}
#if LANG_CXX11
void BuildStep::add_args(::std::string&& value) {
  args_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:google.devtools.cloudbuild.v1.BuildStep.args)
}
#endif
void BuildStep::add_args(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  args_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:google.devtools.cloudbuild.v1.BuildStep.args)
}
void BuildStep::add_args(const char* value, size_t size) {
  args_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:google.devtools.cloudbuild.v1.BuildStep.args)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
BuildStep::args() const {
  // @@protoc_insertion_point(field_list:google.devtools.cloudbuild.v1.BuildStep.args)
  return args_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
BuildStep::mutable_args() {
  // @@protoc_insertion_point(field_mutable_list:google.devtools.cloudbuild.v1.BuildStep.args)
  return &args_;
}

// string dir = 4;
void BuildStep::clear_dir() {
  dir_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& BuildStep::dir() const {
  // @@protoc_insertion_point(field_get:google.devtools.cloudbuild.v1.BuildStep.dir)
  return dir_.GetNoArena();
}
void BuildStep::set_dir(const ::std::string& value) {
  
  dir_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.cloudbuild.v1.BuildStep.dir)
}
#if LANG_CXX11
void BuildStep::set_dir(::std::string&& value) {
  
  dir_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.devtools.cloudbuild.v1.BuildStep.dir)
}
#endif
void BuildStep::set_dir(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  dir_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.cloudbuild.v1.BuildStep.dir)
}
void BuildStep::set_dir(const char* value, size_t size) {
  
  dir_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.cloudbuild.v1.BuildStep.dir)
}
::std::string* BuildStep::mutable_dir() {
  
  // @@protoc_insertion_point(field_mutable:google.devtools.cloudbuild.v1.BuildStep.dir)
  return dir_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* BuildStep::release_dir() {
  // @@protoc_insertion_point(field_release:google.devtools.cloudbuild.v1.BuildStep.dir)
  
  return dir_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void BuildStep::set_allocated_dir(::std::string* dir) {
  if (dir != NULL) {
    
  } else {
    
  }
  dir_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), dir);
  // @@protoc_insertion_point(field_set_allocated:google.devtools.cloudbuild.v1.BuildStep.dir)
}

// string id = 5;
void BuildStep::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& BuildStep::id() const {
  // @@protoc_insertion_point(field_get:google.devtools.cloudbuild.v1.BuildStep.id)
  return id_.GetNoArena();
}
void BuildStep::set_id(const ::std::string& value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.cloudbuild.v1.BuildStep.id)
}
#if LANG_CXX11
void BuildStep::set_id(::std::string&& value) {
  
  id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.devtools.cloudbuild.v1.BuildStep.id)
}
#endif
void BuildStep::set_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.cloudbuild.v1.BuildStep.id)
}
void BuildStep::set_id(const char* value, size_t size) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.cloudbuild.v1.BuildStep.id)
}
::std::string* BuildStep::mutable_id() {
  
  // @@protoc_insertion_point(field_mutable:google.devtools.cloudbuild.v1.BuildStep.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* BuildStep::release_id() {
  // @@protoc_insertion_point(field_release:google.devtools.cloudbuild.v1.BuildStep.id)
  
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void BuildStep::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    
  } else {
    
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:google.devtools.cloudbuild.v1.BuildStep.id)
}

// repeated string wait_for = 6;
int BuildStep::wait_for_size() const {
  return wait_for_.size();
}
void BuildStep::clear_wait_for() {
  wait_for_.Clear();
}
const ::std::string& BuildStep::wait_for(int index) const {
  // @@protoc_insertion_point(field_get:google.devtools.cloudbuild.v1.BuildStep.wait_for)
  return wait_for_.Get(index);
}
::std::string* BuildStep::mutable_wait_for(int index) {
  // @@protoc_insertion_point(field_mutable:google.devtools.cloudbuild.v1.BuildStep.wait_for)
  return wait_for_.Mutable(index);
}
void BuildStep::set_wait_for(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:google.devtools.cloudbuild.v1.BuildStep.wait_for)
  wait_for_.Mutable(index)->assign(value);
}
#if LANG_CXX11
void BuildStep::set_wait_for(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:google.devtools.cloudbuild.v1.BuildStep.wait_for)
  wait_for_.Mutable(index)->assign(std::move(value));
}
#endif
void BuildStep::set_wait_for(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  wait_for_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:google.devtools.cloudbuild.v1.BuildStep.wait_for)
}
void BuildStep::set_wait_for(int index, const char* value, size_t size) {
  wait_for_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:google.devtools.cloudbuild.v1.BuildStep.wait_for)
}
::std::string* BuildStep::add_wait_for() {
  // @@protoc_insertion_point(field_add_mutable:google.devtools.cloudbuild.v1.BuildStep.wait_for)
  return wait_for_.Add();
}
void BuildStep::add_wait_for(const ::std::string& value) {
  wait_for_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:google.devtools.cloudbuild.v1.BuildStep.wait_for)
}
#if LANG_CXX11
void BuildStep::add_wait_for(::std::string&& value) {
  wait_for_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:google.devtools.cloudbuild.v1.BuildStep.wait_for)
}
#endif
void BuildStep::add_wait_for(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  wait_for_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:google.devtools.cloudbuild.v1.BuildStep.wait_for)
}
void BuildStep::add_wait_for(const char* value, size_t size) {
  wait_for_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:google.devtools.cloudbuild.v1.BuildStep.wait_for)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
BuildStep::wait_for() const {
  // @@protoc_insertion_point(field_list:google.devtools.cloudbuild.v1.BuildStep.wait_for)
  return wait_for_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
BuildStep::mutable_wait_for() {
  // @@protoc_insertion_point(field_mutable_list:google.devtools.cloudbuild.v1.BuildStep.wait_for)
  return &wait_for_;
}

// string entrypoint = 7;
void BuildStep::clear_entrypoint() {
  entrypoint_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& BuildStep::entrypoint() const {
  // @@protoc_insertion_point(field_get:google.devtools.cloudbuild.v1.BuildStep.entrypoint)
  return entrypoint_.GetNoArena();
}
void BuildStep::set_entrypoint(const ::std::string& value) {
  
  entrypoint_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.cloudbuild.v1.BuildStep.entrypoint)
}
#if LANG_CXX11
void BuildStep::set_entrypoint(::std::string&& value) {
  
  entrypoint_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.devtools.cloudbuild.v1.BuildStep.entrypoint)
}
#endif
void BuildStep::set_entrypoint(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  entrypoint_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.cloudbuild.v1.BuildStep.entrypoint)
}
void BuildStep::set_entrypoint(const char* value, size_t size) {
  
  entrypoint_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.cloudbuild.v1.BuildStep.entrypoint)
}
::std::string* BuildStep::mutable_entrypoint() {
  
  // @@protoc_insertion_point(field_mutable:google.devtools.cloudbuild.v1.BuildStep.entrypoint)
  return entrypoint_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* BuildStep::release_entrypoint() {
  // @@protoc_insertion_point(field_release:google.devtools.cloudbuild.v1.BuildStep.entrypoint)
  
  return entrypoint_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void BuildStep::set_allocated_entrypoint(::std::string* entrypoint) {
  if (entrypoint != NULL) {
    
  } else {
    
  }
  entrypoint_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), entrypoint);
  // @@protoc_insertion_point(field_set_allocated:google.devtools.cloudbuild.v1.BuildStep.entrypoint)
}

// repeated string secret_env = 8;
int BuildStep::secret_env_size() const {
  return secret_env_.size();
}
void BuildStep::clear_secret_env() {
  secret_env_.Clear();
}
const ::std::string& BuildStep::secret_env(int index) const {
  // @@protoc_insertion_point(field_get:google.devtools.cloudbuild.v1.BuildStep.secret_env)
  return secret_env_.Get(index);
}
::std::string* BuildStep::mutable_secret_env(int index) {
  // @@protoc_insertion_point(field_mutable:google.devtools.cloudbuild.v1.BuildStep.secret_env)
  return secret_env_.Mutable(index);
}
void BuildStep::set_secret_env(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:google.devtools.cloudbuild.v1.BuildStep.secret_env)
  secret_env_.Mutable(index)->assign(value);
}
#if LANG_CXX11
void BuildStep::set_secret_env(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:google.devtools.cloudbuild.v1.BuildStep.secret_env)
  secret_env_.Mutable(index)->assign(std::move(value));
}
#endif
void BuildStep::set_secret_env(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  secret_env_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:google.devtools.cloudbuild.v1.BuildStep.secret_env)
}
void BuildStep::set_secret_env(int index, const char* value, size_t size) {
  secret_env_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:google.devtools.cloudbuild.v1.BuildStep.secret_env)
}
::std::string* BuildStep::add_secret_env() {
  // @@protoc_insertion_point(field_add_mutable:google.devtools.cloudbuild.v1.BuildStep.secret_env)
  return secret_env_.Add();
}
void BuildStep::add_secret_env(const ::std::string& value) {
  secret_env_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:google.devtools.cloudbuild.v1.BuildStep.secret_env)
}
#if LANG_CXX11
void BuildStep::add_secret_env(::std::string&& value) {
  secret_env_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:google.devtools.cloudbuild.v1.BuildStep.secret_env)
}
#endif
void BuildStep::add_secret_env(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  secret_env_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:google.devtools.cloudbuild.v1.BuildStep.secret_env)
}
void BuildStep::add_secret_env(const char* value, size_t size) {
  secret_env_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:google.devtools.cloudbuild.v1.BuildStep.secret_env)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
BuildStep::secret_env() const {
  // @@protoc_insertion_point(field_list:google.devtools.cloudbuild.v1.BuildStep.secret_env)
  return secret_env_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
BuildStep::mutable_secret_env() {
  // @@protoc_insertion_point(field_mutable_list:google.devtools.cloudbuild.v1.BuildStep.secret_env)
  return &secret_env_;
}

// repeated .google.devtools.cloudbuild.v1.Volume volumes = 9;
int BuildStep::volumes_size() const {
  return volumes_.size();
}
void BuildStep::clear_volumes() {
  volumes_.Clear();
}
const ::google::devtools::cloudbuild::v1::Volume& BuildStep::volumes(int index) const {
  // @@protoc_insertion_point(field_get:google.devtools.cloudbuild.v1.BuildStep.volumes)
  return volumes_.Get(index);
}
::google::devtools::cloudbuild::v1::Volume* BuildStep::mutable_volumes(int index) {
  // @@protoc_insertion_point(field_mutable:google.devtools.cloudbuild.v1.BuildStep.volumes)
  return volumes_.Mutable(index);
}
::google::devtools::cloudbuild::v1::Volume* BuildStep::add_volumes() {
  // @@protoc_insertion_point(field_add:google.devtools.cloudbuild.v1.BuildStep.volumes)
  return volumes_.Add();
}
::google::protobuf::RepeatedPtrField< ::google::devtools::cloudbuild::v1::Volume >*
BuildStep::mutable_volumes() {
  // @@protoc_insertion_point(field_mutable_list:google.devtools.cloudbuild.v1.BuildStep.volumes)
  return &volumes_;
}
const ::google::protobuf::RepeatedPtrField< ::google::devtools::cloudbuild::v1::Volume >&
BuildStep::volumes() const {
  // @@protoc_insertion_point(field_list:google.devtools.cloudbuild.v1.BuildStep.volumes)
  return volumes_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Volume::kNameFieldNumber;
const int Volume::kPathFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Volume::Volume()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_google_2fdevtools_2fcloudbuild_2fv1_2fcloudbuild_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.devtools.cloudbuild.v1.Volume)
}
Volume::Volume(const Volume& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.path().size() > 0) {
    path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.path_);
  }
  // @@protoc_insertion_point(copy_constructor:google.devtools.cloudbuild.v1.Volume)
}

void Volume::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

Volume::~Volume() {
  // @@protoc_insertion_point(destructor:google.devtools.cloudbuild.v1.Volume)
  SharedDtor();
}

void Volume::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  path_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Volume::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Volume::descriptor() {
  protobuf_google_2fdevtools_2fcloudbuild_2fv1_2fcloudbuild_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fdevtools_2fcloudbuild_2fv1_2fcloudbuild_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Volume& Volume::default_instance() {
  protobuf_google_2fdevtools_2fcloudbuild_2fv1_2fcloudbuild_2eproto::InitDefaults();
  return *internal_default_instance();
}

Volume* Volume::New(::google::protobuf::Arena* arena) const {
  Volume* n = new Volume;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Volume::Clear() {
// @@protoc_insertion_point(message_clear_start:google.devtools.cloudbuild.v1.Volume)
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool Volume::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.devtools.cloudbuild.v1.Volume)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.cloudbuild.v1.Volume.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string path = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_path()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->path().data(), this->path().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.cloudbuild.v1.Volume.path"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.devtools.cloudbuild.v1.Volume)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.devtools.cloudbuild.v1.Volume)
  return false;
#undef DO_
}

void Volume::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.devtools.cloudbuild.v1.Volume)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.cloudbuild.v1.Volume.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // string path = 2;
  if (this->path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->path().data(), this->path().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.cloudbuild.v1.Volume.path");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->path(), output);
  }

  // @@protoc_insertion_point(serialize_end:google.devtools.cloudbuild.v1.Volume)
}

::google::protobuf::uint8* Volume::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.devtools.cloudbuild.v1.Volume)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.cloudbuild.v1.Volume.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // string path = 2;
  if (this->path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->path().data(), this->path().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.cloudbuild.v1.Volume.path");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->path(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.devtools.cloudbuild.v1.Volume)
  return target;
}

size_t Volume::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.devtools.cloudbuild.v1.Volume)
  size_t total_size = 0;

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string path = 2;
  if (this->path().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->path());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Volume::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.devtools.cloudbuild.v1.Volume)
  GOOGLE_DCHECK_NE(&from, this);
  const Volume* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Volume>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.devtools.cloudbuild.v1.Volume)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.devtools.cloudbuild.v1.Volume)
    MergeFrom(*source);
  }
}

void Volume::MergeFrom(const Volume& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.devtools.cloudbuild.v1.Volume)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.path().size() > 0) {

    path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.path_);
  }
}

void Volume::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.devtools.cloudbuild.v1.Volume)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Volume::CopyFrom(const Volume& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.devtools.cloudbuild.v1.Volume)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Volume::IsInitialized() const {
  return true;
}

void Volume::Swap(Volume* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Volume::InternalSwap(Volume* other) {
  name_.Swap(&other->name_);
  path_.Swap(&other->path_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Volume::GetMetadata() const {
  protobuf_google_2fdevtools_2fcloudbuild_2fv1_2fcloudbuild_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fdevtools_2fcloudbuild_2fv1_2fcloudbuild_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Volume

// string name = 1;
void Volume::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Volume::name() const {
  // @@protoc_insertion_point(field_get:google.devtools.cloudbuild.v1.Volume.name)
  return name_.GetNoArena();
}
void Volume::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.cloudbuild.v1.Volume.name)
}
#if LANG_CXX11
void Volume::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.devtools.cloudbuild.v1.Volume.name)
}
#endif
void Volume::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.cloudbuild.v1.Volume.name)
}
void Volume::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.cloudbuild.v1.Volume.name)
}
::std::string* Volume::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:google.devtools.cloudbuild.v1.Volume.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Volume::release_name() {
  // @@protoc_insertion_point(field_release:google.devtools.cloudbuild.v1.Volume.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Volume::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:google.devtools.cloudbuild.v1.Volume.name)
}

// string path = 2;
void Volume::clear_path() {
  path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Volume::path() const {
  // @@protoc_insertion_point(field_get:google.devtools.cloudbuild.v1.Volume.path)
  return path_.GetNoArena();
}
void Volume::set_path(const ::std::string& value) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.cloudbuild.v1.Volume.path)
}
#if LANG_CXX11
void Volume::set_path(::std::string&& value) {
  
  path_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.devtools.cloudbuild.v1.Volume.path)
}
#endif
void Volume::set_path(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.cloudbuild.v1.Volume.path)
}
void Volume::set_path(const char* value, size_t size) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.cloudbuild.v1.Volume.path)
}
::std::string* Volume::mutable_path() {
  
  // @@protoc_insertion_point(field_mutable:google.devtools.cloudbuild.v1.Volume.path)
  return path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Volume::release_path() {
  // @@protoc_insertion_point(field_release:google.devtools.cloudbuild.v1.Volume.path)
  
  return path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Volume::set_allocated_path(::std::string* path) {
  if (path != NULL) {
    
  } else {
    
  }
  path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), path);
  // @@protoc_insertion_point(field_set_allocated:google.devtools.cloudbuild.v1.Volume.path)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Results::kImagesFieldNumber;
const int Results::kBuildStepImagesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Results::Results()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_google_2fdevtools_2fcloudbuild_2fv1_2fcloudbuild_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.devtools.cloudbuild.v1.Results)
}
Results::Results(const Results& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      images_(from.images_),
      build_step_images_(from.build_step_images_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:google.devtools.cloudbuild.v1.Results)
}

void Results::SharedCtor() {
  _cached_size_ = 0;
}

Results::~Results() {
  // @@protoc_insertion_point(destructor:google.devtools.cloudbuild.v1.Results)
  SharedDtor();
}

void Results::SharedDtor() {
}

void Results::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Results::descriptor() {
  protobuf_google_2fdevtools_2fcloudbuild_2fv1_2fcloudbuild_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fdevtools_2fcloudbuild_2fv1_2fcloudbuild_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Results& Results::default_instance() {
  protobuf_google_2fdevtools_2fcloudbuild_2fv1_2fcloudbuild_2eproto::InitDefaults();
  return *internal_default_instance();
}

Results* Results::New(::google::protobuf::Arena* arena) const {
  Results* n = new Results;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Results::Clear() {
// @@protoc_insertion_point(message_clear_start:google.devtools.cloudbuild.v1.Results)
  images_.Clear();
  build_step_images_.Clear();
}

bool Results::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.devtools.cloudbuild.v1.Results)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .google.devtools.cloudbuild.v1.BuiltImage images = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_images()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string build_step_images = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_build_step_images()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->build_step_images(this->build_step_images_size() - 1).data(),
            this->build_step_images(this->build_step_images_size() - 1).length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.cloudbuild.v1.Results.build_step_images"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.devtools.cloudbuild.v1.Results)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.devtools.cloudbuild.v1.Results)
  return false;
#undef DO_
}

void Results::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.devtools.cloudbuild.v1.Results)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.devtools.cloudbuild.v1.BuiltImage images = 2;
  for (unsigned int i = 0, n = this->images_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->images(i), output);
  }

  // repeated string build_step_images = 3;
  for (int i = 0, n = this->build_step_images_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->build_step_images(i).data(), this->build_step_images(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.cloudbuild.v1.Results.build_step_images");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->build_step_images(i), output);
  }

  // @@protoc_insertion_point(serialize_end:google.devtools.cloudbuild.v1.Results)
}

::google::protobuf::uint8* Results::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.devtools.cloudbuild.v1.Results)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.devtools.cloudbuild.v1.BuiltImage images = 2;
  for (unsigned int i = 0, n = this->images_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->images(i), deterministic, target);
  }

  // repeated string build_step_images = 3;
  for (int i = 0, n = this->build_step_images_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->build_step_images(i).data(), this->build_step_images(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.cloudbuild.v1.Results.build_step_images");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(3, this->build_step_images(i), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.devtools.cloudbuild.v1.Results)
  return target;
}

size_t Results::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.devtools.cloudbuild.v1.Results)
  size_t total_size = 0;

  // repeated .google.devtools.cloudbuild.v1.BuiltImage images = 2;
  {
    unsigned int count = this->images_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->images(i));
    }
  }

  // repeated string build_step_images = 3;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->build_step_images_size());
  for (int i = 0, n = this->build_step_images_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->build_step_images(i));
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Results::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.devtools.cloudbuild.v1.Results)
  GOOGLE_DCHECK_NE(&from, this);
  const Results* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Results>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.devtools.cloudbuild.v1.Results)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.devtools.cloudbuild.v1.Results)
    MergeFrom(*source);
  }
}

void Results::MergeFrom(const Results& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.devtools.cloudbuild.v1.Results)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  images_.MergeFrom(from.images_);
  build_step_images_.MergeFrom(from.build_step_images_);
}

void Results::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.devtools.cloudbuild.v1.Results)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Results::CopyFrom(const Results& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.devtools.cloudbuild.v1.Results)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Results::IsInitialized() const {
  return true;
}

void Results::Swap(Results* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Results::InternalSwap(Results* other) {
  images_.InternalSwap(&other->images_);
  build_step_images_.InternalSwap(&other->build_step_images_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Results::GetMetadata() const {
  protobuf_google_2fdevtools_2fcloudbuild_2fv1_2fcloudbuild_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fdevtools_2fcloudbuild_2fv1_2fcloudbuild_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Results

// repeated .google.devtools.cloudbuild.v1.BuiltImage images = 2;
int Results::images_size() const {
  return images_.size();
}
void Results::clear_images() {
  images_.Clear();
}
const ::google::devtools::cloudbuild::v1::BuiltImage& Results::images(int index) const {
  // @@protoc_insertion_point(field_get:google.devtools.cloudbuild.v1.Results.images)
  return images_.Get(index);
}
::google::devtools::cloudbuild::v1::BuiltImage* Results::mutable_images(int index) {
  // @@protoc_insertion_point(field_mutable:google.devtools.cloudbuild.v1.Results.images)
  return images_.Mutable(index);
}
::google::devtools::cloudbuild::v1::BuiltImage* Results::add_images() {
  // @@protoc_insertion_point(field_add:google.devtools.cloudbuild.v1.Results.images)
  return images_.Add();
}
::google::protobuf::RepeatedPtrField< ::google::devtools::cloudbuild::v1::BuiltImage >*
Results::mutable_images() {
  // @@protoc_insertion_point(field_mutable_list:google.devtools.cloudbuild.v1.Results.images)
  return &images_;
}
const ::google::protobuf::RepeatedPtrField< ::google::devtools::cloudbuild::v1::BuiltImage >&
Results::images() const {
  // @@protoc_insertion_point(field_list:google.devtools.cloudbuild.v1.Results.images)
  return images_;
}

// repeated string build_step_images = 3;
int Results::build_step_images_size() const {
  return build_step_images_.size();
}
void Results::clear_build_step_images() {
  build_step_images_.Clear();
}
const ::std::string& Results::build_step_images(int index) const {
  // @@protoc_insertion_point(field_get:google.devtools.cloudbuild.v1.Results.build_step_images)
  return build_step_images_.Get(index);
}
::std::string* Results::mutable_build_step_images(int index) {
  // @@protoc_insertion_point(field_mutable:google.devtools.cloudbuild.v1.Results.build_step_images)
  return build_step_images_.Mutable(index);
}
void Results::set_build_step_images(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:google.devtools.cloudbuild.v1.Results.build_step_images)
  build_step_images_.Mutable(index)->assign(value);
}
#if LANG_CXX11
void Results::set_build_step_images(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:google.devtools.cloudbuild.v1.Results.build_step_images)
  build_step_images_.Mutable(index)->assign(std::move(value));
}
#endif
void Results::set_build_step_images(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  build_step_images_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:google.devtools.cloudbuild.v1.Results.build_step_images)
}
void Results::set_build_step_images(int index, const char* value, size_t size) {
  build_step_images_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:google.devtools.cloudbuild.v1.Results.build_step_images)
}
::std::string* Results::add_build_step_images() {
  // @@protoc_insertion_point(field_add_mutable:google.devtools.cloudbuild.v1.Results.build_step_images)
  return build_step_images_.Add();
}
void Results::add_build_step_images(const ::std::string& value) {
  build_step_images_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:google.devtools.cloudbuild.v1.Results.build_step_images)
}
#if LANG_CXX11
void Results::add_build_step_images(::std::string&& value) {
  build_step_images_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:google.devtools.cloudbuild.v1.Results.build_step_images)
}
#endif
void Results::add_build_step_images(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  build_step_images_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:google.devtools.cloudbuild.v1.Results.build_step_images)
}
void Results::add_build_step_images(const char* value, size_t size) {
  build_step_images_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:google.devtools.cloudbuild.v1.Results.build_step_images)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
Results::build_step_images() const {
  // @@protoc_insertion_point(field_list:google.devtools.cloudbuild.v1.Results.build_step_images)
  return build_step_images_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
Results::mutable_build_step_images() {
  // @@protoc_insertion_point(field_mutable_list:google.devtools.cloudbuild.v1.Results.build_step_images)
  return &build_step_images_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

Build::Build_SubstitutionsEntry::Build_SubstitutionsEntry() {}
Build::Build_SubstitutionsEntry::Build_SubstitutionsEntry(::google::protobuf::Arena* arena) : SuperType(arena) {}
::google::protobuf::Metadata Build::Build_SubstitutionsEntry::GetMetadata() const {
  protobuf_google_2fdevtools_2fcloudbuild_2fv1_2fcloudbuild_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fdevtools_2fcloudbuild_2fv1_2fcloudbuild_2eproto::file_level_metadata[7];
}
void Build::Build_SubstitutionsEntry::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}
void Build::Build_SubstitutionsEntry::MergeFrom(const Build_SubstitutionsEntry& other) {
  MergeFromInternal(other);
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Build::kIdFieldNumber;
const int Build::kProjectIdFieldNumber;
const int Build::kStatusFieldNumber;
const int Build::kStatusDetailFieldNumber;
const int Build::kSourceFieldNumber;
const int Build::kStepsFieldNumber;
const int Build::kResultsFieldNumber;
const int Build::kCreateTimeFieldNumber;
const int Build::kStartTimeFieldNumber;
const int Build::kFinishTimeFieldNumber;
const int Build::kTimeoutFieldNumber;
const int Build::kImagesFieldNumber;
const int Build::kLogsBucketFieldNumber;
const int Build::kSourceProvenanceFieldNumber;
const int Build::kBuildTriggerIdFieldNumber;
const int Build::kOptionsFieldNumber;
const int Build::kLogUrlFieldNumber;
const int Build::kSubstitutionsFieldNumber;
const int Build::kTagsFieldNumber;
const int Build::kSecretsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Build::Build()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_google_2fdevtools_2fcloudbuild_2fv1_2fcloudbuild_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.devtools.cloudbuild.v1.Build)
}
Build::Build(const Build& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      steps_(from.steps_),
      images_(from.images_),
      tags_(from.tags_),
      secrets_(from.secrets_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  substitutions_.MergeFrom(from.substitutions_);
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.id().size() > 0) {
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.project_id().size() > 0) {
    project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
  }
  logs_bucket_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.logs_bucket().size() > 0) {
    logs_bucket_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.logs_bucket_);
  }
  build_trigger_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.build_trigger_id().size() > 0) {
    build_trigger_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.build_trigger_id_);
  }
  status_detail_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.status_detail().size() > 0) {
    status_detail_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.status_detail_);
  }
  log_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.log_url().size() > 0) {
    log_url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.log_url_);
  }
  if (from.has_source()) {
    source_ = new ::google::devtools::cloudbuild::v1::Source(*from.source_);
  } else {
    source_ = NULL;
  }
  if (from.has_create_time()) {
    create_time_ = new ::google::protobuf::Timestamp(*from.create_time_);
  } else {
    create_time_ = NULL;
  }
  if (from.has_start_time()) {
    start_time_ = new ::google::protobuf::Timestamp(*from.start_time_);
  } else {
    start_time_ = NULL;
  }
  if (from.has_finish_time()) {
    finish_time_ = new ::google::protobuf::Timestamp(*from.finish_time_);
  } else {
    finish_time_ = NULL;
  }
  if (from.has_results()) {
    results_ = new ::google::devtools::cloudbuild::v1::Results(*from.results_);
  } else {
    results_ = NULL;
  }
  if (from.has_timeout()) {
    timeout_ = new ::google::protobuf::Duration(*from.timeout_);
  } else {
    timeout_ = NULL;
  }
  if (from.has_source_provenance()) {
    source_provenance_ = new ::google::devtools::cloudbuild::v1::SourceProvenance(*from.source_provenance_);
  } else {
    source_provenance_ = NULL;
  }
  if (from.has_options()) {
    options_ = new ::google::devtools::cloudbuild::v1::BuildOptions(*from.options_);
  } else {
    options_ = NULL;
  }
  status_ = from.status_;
  // @@protoc_insertion_point(copy_constructor:google.devtools.cloudbuild.v1.Build)
}

void Build::SharedCtor() {
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  logs_bucket_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  build_trigger_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  status_detail_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  log_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&source_, 0, reinterpret_cast<char*>(&status_) -
    reinterpret_cast<char*>(&source_) + sizeof(status_));
  _cached_size_ = 0;
}

Build::~Build() {
  // @@protoc_insertion_point(destructor:google.devtools.cloudbuild.v1.Build)
  SharedDtor();
}

void Build::SharedDtor() {
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  project_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  logs_bucket_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  build_trigger_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  status_detail_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  log_url_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete source_;
  }
  if (this != internal_default_instance()) {
    delete create_time_;
  }
  if (this != internal_default_instance()) {
    delete start_time_;
  }
  if (this != internal_default_instance()) {
    delete finish_time_;
  }
  if (this != internal_default_instance()) {
    delete results_;
  }
  if (this != internal_default_instance()) {
    delete timeout_;
  }
  if (this != internal_default_instance()) {
    delete source_provenance_;
  }
  if (this != internal_default_instance()) {
    delete options_;
  }
}

void Build::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Build::descriptor() {
  protobuf_google_2fdevtools_2fcloudbuild_2fv1_2fcloudbuild_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fdevtools_2fcloudbuild_2fv1_2fcloudbuild_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Build& Build::default_instance() {
  protobuf_google_2fdevtools_2fcloudbuild_2fv1_2fcloudbuild_2eproto::InitDefaults();
  return *internal_default_instance();
}

Build* Build::New(::google::protobuf::Arena* arena) const {
  Build* n = new Build;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Build::Clear() {
// @@protoc_insertion_point(message_clear_start:google.devtools.cloudbuild.v1.Build)
  steps_.Clear();
  images_.Clear();
  substitutions_.Clear();
  tags_.Clear();
  secrets_.Clear();
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  project_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  logs_bucket_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  build_trigger_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  status_detail_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  log_url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && source_ != NULL) {
    delete source_;
  }
  source_ = NULL;
  if (GetArenaNoVirtual() == NULL && create_time_ != NULL) {
    delete create_time_;
  }
  create_time_ = NULL;
  if (GetArenaNoVirtual() == NULL && start_time_ != NULL) {
    delete start_time_;
  }
  start_time_ = NULL;
  if (GetArenaNoVirtual() == NULL && finish_time_ != NULL) {
    delete finish_time_;
  }
  finish_time_ = NULL;
  if (GetArenaNoVirtual() == NULL && results_ != NULL) {
    delete results_;
  }
  results_ = NULL;
  if (GetArenaNoVirtual() == NULL && timeout_ != NULL) {
    delete timeout_;
  }
  timeout_ = NULL;
  if (GetArenaNoVirtual() == NULL && source_provenance_ != NULL) {
    delete source_provenance_;
  }
  source_provenance_ = NULL;
  if (GetArenaNoVirtual() == NULL && options_ != NULL) {
    delete options_;
  }
  options_ = NULL;
  status_ = 0;
}

bool Build::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.devtools.cloudbuild.v1.Build)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->id().data(), this->id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.cloudbuild.v1.Build.id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.devtools.cloudbuild.v1.Build.Status status = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_status(static_cast< ::google::devtools::cloudbuild::v1::Build_Status >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.devtools.cloudbuild.v1.Source source = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_source()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Timestamp create_time = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_create_time()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Timestamp start_time = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_start_time()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Timestamp finish_time = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_finish_time()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.devtools.cloudbuild.v1.Results results = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_results()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.devtools.cloudbuild.v1.BuildStep steps = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_steps()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Duration timeout = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_timeout()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string images = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_images()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->images(this->images_size() - 1).data(),
            this->images(this->images_size() - 1).length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.cloudbuild.v1.Build.images"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string project_id = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(130u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_project_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->project_id().data(), this->project_id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.cloudbuild.v1.Build.project_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string logs_bucket = 19;
      case 19: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(154u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_logs_bucket()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->logs_bucket().data(), this->logs_bucket().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.cloudbuild.v1.Build.logs_bucket"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.devtools.cloudbuild.v1.SourceProvenance source_provenance = 21;
      case 21: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(170u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_source_provenance()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string build_trigger_id = 22;
      case 22: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(178u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_build_trigger_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->build_trigger_id().data(), this->build_trigger_id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.cloudbuild.v1.Build.build_trigger_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.devtools.cloudbuild.v1.BuildOptions options = 23;
      case 23: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(186u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_options()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string status_detail = 24;
      case 24: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(194u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_status_detail()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->status_detail().data(), this->status_detail().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.cloudbuild.v1.Build.status_detail"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string log_url = 25;
      case 25: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(202u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_log_url()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->log_url().data(), this->log_url().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.cloudbuild.v1.Build.log_url"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, string> substitutions = 29;
      case 29: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(234u)) {
          Build_SubstitutionsEntry::Parser< ::google::protobuf::internal::MapField<
              Build_SubstitutionsEntry,
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&substitutions_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), parser.key().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.cloudbuild.v1.Build.SubstitutionsEntry.key"));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.value().data(), parser.value().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.cloudbuild.v1.Build.SubstitutionsEntry.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string tags = 31;
      case 31: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(250u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_tags()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->tags(this->tags_size() - 1).data(),
            this->tags(this->tags_size() - 1).length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.cloudbuild.v1.Build.tags"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.devtools.cloudbuild.v1.Secret secrets = 32;
      case 32: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(258u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_secrets()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.devtools.cloudbuild.v1.Build)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.devtools.cloudbuild.v1.Build)
  return false;
#undef DO_
}

void Build::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.devtools.cloudbuild.v1.Build)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.cloudbuild.v1.Build.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->id(), output);
  }

  // .google.devtools.cloudbuild.v1.Build.Status status = 2;
  if (this->status() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->status(), output);
  }

  // .google.devtools.cloudbuild.v1.Source source = 3;
  if (this->has_source()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->source_, output);
  }

  // .google.protobuf.Timestamp create_time = 6;
  if (this->has_create_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, *this->create_time_, output);
  }

  // .google.protobuf.Timestamp start_time = 7;
  if (this->has_start_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, *this->start_time_, output);
  }

  // .google.protobuf.Timestamp finish_time = 8;
  if (this->has_finish_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, *this->finish_time_, output);
  }

  // .google.devtools.cloudbuild.v1.Results results = 10;
  if (this->has_results()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, *this->results_, output);
  }

  // repeated .google.devtools.cloudbuild.v1.BuildStep steps = 11;
  for (unsigned int i = 0, n = this->steps_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, this->steps(i), output);
  }

  // .google.protobuf.Duration timeout = 12;
  if (this->has_timeout()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      12, *this->timeout_, output);
  }

  // repeated string images = 13;
  for (int i = 0, n = this->images_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->images(i).data(), this->images(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.cloudbuild.v1.Build.images");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      13, this->images(i), output);
  }

  // string project_id = 16;
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), this->project_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.cloudbuild.v1.Build.project_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      16, this->project_id(), output);
  }

  // string logs_bucket = 19;
  if (this->logs_bucket().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->logs_bucket().data(), this->logs_bucket().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.cloudbuild.v1.Build.logs_bucket");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      19, this->logs_bucket(), output);
  }

  // .google.devtools.cloudbuild.v1.SourceProvenance source_provenance = 21;
  if (this->has_source_provenance()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      21, *this->source_provenance_, output);
  }

  // string build_trigger_id = 22;
  if (this->build_trigger_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->build_trigger_id().data(), this->build_trigger_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.cloudbuild.v1.Build.build_trigger_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      22, this->build_trigger_id(), output);
  }

  // .google.devtools.cloudbuild.v1.BuildOptions options = 23;
  if (this->has_options()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      23, *this->options_, output);
  }

  // string status_detail = 24;
  if (this->status_detail().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->status_detail().data(), this->status_detail().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.cloudbuild.v1.Build.status_detail");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      24, this->status_detail(), output);
  }

  // string log_url = 25;
  if (this->log_url().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->log_url().data(), this->log_url().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.cloudbuild.v1.Build.log_url");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      25, this->log_url(), output);
  }

  // map<string, string> substitutions = 29;
  if (!this->substitutions().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), p->first.length(),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.devtools.cloudbuild.v1.Build.SubstitutionsEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), p->second.length(),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.devtools.cloudbuild.v1.Build.SubstitutionsEntry.value");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->substitutions().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->substitutions().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->substitutions().begin();
          it != this->substitutions().end(); ++it, ++n) {
        items[n] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[n], Less());
      ::google::protobuf::scoped_ptr<Build_SubstitutionsEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(substitutions_.NewEntryWrapper(
            items[i]->first, items[i]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            29, *entry, output);
        Utf8Check::Check(items[i]);
      }
    } else {
      ::google::protobuf::scoped_ptr<Build_SubstitutionsEntry> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->substitutions().begin();
          it != this->substitutions().end(); ++it) {
        entry.reset(substitutions_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            29, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  // repeated string tags = 31;
  for (int i = 0, n = this->tags_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->tags(i).data(), this->tags(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.cloudbuild.v1.Build.tags");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      31, this->tags(i), output);
  }

  // repeated .google.devtools.cloudbuild.v1.Secret secrets = 32;
  for (unsigned int i = 0, n = this->secrets_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      32, this->secrets(i), output);
  }

  // @@protoc_insertion_point(serialize_end:google.devtools.cloudbuild.v1.Build)
}

::google::protobuf::uint8* Build::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.devtools.cloudbuild.v1.Build)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.cloudbuild.v1.Build.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->id(), target);
  }

  // .google.devtools.cloudbuild.v1.Build.Status status = 2;
  if (this->status() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->status(), target);
  }

  // .google.devtools.cloudbuild.v1.Source source = 3;
  if (this->has_source()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->source_, deterministic, target);
  }

  // .google.protobuf.Timestamp create_time = 6;
  if (this->has_create_time()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        6, *this->create_time_, deterministic, target);
  }

  // .google.protobuf.Timestamp start_time = 7;
  if (this->has_start_time()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        7, *this->start_time_, deterministic, target);
  }

  // .google.protobuf.Timestamp finish_time = 8;
  if (this->has_finish_time()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        8, *this->finish_time_, deterministic, target);
  }

  // .google.devtools.cloudbuild.v1.Results results = 10;
  if (this->has_results()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        10, *this->results_, deterministic, target);
  }

  // repeated .google.devtools.cloudbuild.v1.BuildStep steps = 11;
  for (unsigned int i = 0, n = this->steps_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        11, this->steps(i), deterministic, target);
  }

  // .google.protobuf.Duration timeout = 12;
  if (this->has_timeout()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        12, *this->timeout_, deterministic, target);
  }

  // repeated string images = 13;
  for (int i = 0, n = this->images_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->images(i).data(), this->images(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.cloudbuild.v1.Build.images");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(13, this->images(i), target);
  }

  // string project_id = 16;
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), this->project_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.cloudbuild.v1.Build.project_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        16, this->project_id(), target);
  }

  // string logs_bucket = 19;
  if (this->logs_bucket().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->logs_bucket().data(), this->logs_bucket().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.cloudbuild.v1.Build.logs_bucket");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        19, this->logs_bucket(), target);
  }

  // .google.devtools.cloudbuild.v1.SourceProvenance source_provenance = 21;
  if (this->has_source_provenance()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        21, *this->source_provenance_, deterministic, target);
  }

  // string build_trigger_id = 22;
  if (this->build_trigger_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->build_trigger_id().data(), this->build_trigger_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.cloudbuild.v1.Build.build_trigger_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        22, this->build_trigger_id(), target);
  }

  // .google.devtools.cloudbuild.v1.BuildOptions options = 23;
  if (this->has_options()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        23, *this->options_, deterministic, target);
  }

  // string status_detail = 24;
  if (this->status_detail().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->status_detail().data(), this->status_detail().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.cloudbuild.v1.Build.status_detail");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        24, this->status_detail(), target);
  }

  // string log_url = 25;
  if (this->log_url().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->log_url().data(), this->log_url().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.cloudbuild.v1.Build.log_url");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        25, this->log_url(), target);
  }

  // map<string, string> substitutions = 29;
  if (!this->substitutions().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), p->first.length(),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.devtools.cloudbuild.v1.Build.SubstitutionsEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), p->second.length(),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.devtools.cloudbuild.v1.Build.SubstitutionsEntry.value");
      }
    };

    if (deterministic &&
        this->substitutions().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->substitutions().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->substitutions().begin();
          it != this->substitutions().end(); ++it, ++n) {
        items[n] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[n], Less());
      ::google::protobuf::scoped_ptr<Build_SubstitutionsEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(substitutions_.NewEntryWrapper(
            items[i]->first, items[i]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       29, *entry, deterministic, target);
;
        Utf8Check::Check(items[i]);
      }
    } else {
      ::google::protobuf::scoped_ptr<Build_SubstitutionsEntry> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->substitutions().begin();
          it != this->substitutions().end(); ++it) {
        entry.reset(substitutions_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       29, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  // repeated string tags = 31;
  for (int i = 0, n = this->tags_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->tags(i).data(), this->tags(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.cloudbuild.v1.Build.tags");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(31, this->tags(i), target);
  }

  // repeated .google.devtools.cloudbuild.v1.Secret secrets = 32;
  for (unsigned int i = 0, n = this->secrets_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        32, this->secrets(i), deterministic, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.devtools.cloudbuild.v1.Build)
  return target;
}

size_t Build::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.devtools.cloudbuild.v1.Build)
  size_t total_size = 0;

  // repeated .google.devtools.cloudbuild.v1.BuildStep steps = 11;
  {
    unsigned int count = this->steps_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->steps(i));
    }
  }

  // repeated string images = 13;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->images_size());
  for (int i = 0, n = this->images_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->images(i));
  }

  // map<string, string> substitutions = 29;
  total_size += 2 *
      ::google::protobuf::internal::FromIntSize(this->substitutions_size());
  {
    ::google::protobuf::scoped_ptr<Build_SubstitutionsEntry> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->substitutions().begin();
        it != this->substitutions().end(); ++it) {
      entry.reset(substitutions_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // repeated string tags = 31;
  total_size += 2 *
      ::google::protobuf::internal::FromIntSize(this->tags_size());
  for (int i = 0, n = this->tags_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->tags(i));
  }

  // repeated .google.devtools.cloudbuild.v1.Secret secrets = 32;
  {
    unsigned int count = this->secrets_size();
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->secrets(i));
    }
  }

  // string id = 1;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  // string project_id = 16;
  if (this->project_id().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->project_id());
  }

  // string logs_bucket = 19;
  if (this->logs_bucket().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->logs_bucket());
  }

  // string build_trigger_id = 22;
  if (this->build_trigger_id().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->build_trigger_id());
  }

  // string status_detail = 24;
  if (this->status_detail().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->status_detail());
  }

  // string log_url = 25;
  if (this->log_url().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->log_url());
  }

  // .google.devtools.cloudbuild.v1.Source source = 3;
  if (this->has_source()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->source_);
  }

  // .google.protobuf.Timestamp create_time = 6;
  if (this->has_create_time()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->create_time_);
  }

  // .google.protobuf.Timestamp start_time = 7;
  if (this->has_start_time()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->start_time_);
  }

  // .google.protobuf.Timestamp finish_time = 8;
  if (this->has_finish_time()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->finish_time_);
  }

  // .google.devtools.cloudbuild.v1.Results results = 10;
  if (this->has_results()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->results_);
  }

  // .google.protobuf.Duration timeout = 12;
  if (this->has_timeout()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->timeout_);
  }

  // .google.devtools.cloudbuild.v1.SourceProvenance source_provenance = 21;
  if (this->has_source_provenance()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->source_provenance_);
  }

  // .google.devtools.cloudbuild.v1.BuildOptions options = 23;
  if (this->has_options()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->options_);
  }

  // .google.devtools.cloudbuild.v1.Build.Status status = 2;
  if (this->status() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->status());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Build::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.devtools.cloudbuild.v1.Build)
  GOOGLE_DCHECK_NE(&from, this);
  const Build* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Build>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.devtools.cloudbuild.v1.Build)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.devtools.cloudbuild.v1.Build)
    MergeFrom(*source);
  }
}

void Build::MergeFrom(const Build& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.devtools.cloudbuild.v1.Build)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  steps_.MergeFrom(from.steps_);
  images_.MergeFrom(from.images_);
  substitutions_.MergeFrom(from.substitutions_);
  tags_.MergeFrom(from.tags_);
  secrets_.MergeFrom(from.secrets_);
  if (from.id().size() > 0) {

    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  if (from.project_id().size() > 0) {

    project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
  }
  if (from.logs_bucket().size() > 0) {

    logs_bucket_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.logs_bucket_);
  }
  if (from.build_trigger_id().size() > 0) {

    build_trigger_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.build_trigger_id_);
  }
  if (from.status_detail().size() > 0) {

    status_detail_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.status_detail_);
  }
  if (from.log_url().size() > 0) {

    log_url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.log_url_);
  }
  if (from.has_source()) {
    mutable_source()->::google::devtools::cloudbuild::v1::Source::MergeFrom(from.source());
  }
  if (from.has_create_time()) {
    mutable_create_time()->::google::protobuf::Timestamp::MergeFrom(from.create_time());
  }
  if (from.has_start_time()) {
    mutable_start_time()->::google::protobuf::Timestamp::MergeFrom(from.start_time());
  }
  if (from.has_finish_time()) {
    mutable_finish_time()->::google::protobuf::Timestamp::MergeFrom(from.finish_time());
  }
  if (from.has_results()) {
    mutable_results()->::google::devtools::cloudbuild::v1::Results::MergeFrom(from.results());
  }
  if (from.has_timeout()) {
    mutable_timeout()->::google::protobuf::Duration::MergeFrom(from.timeout());
  }
  if (from.has_source_provenance()) {
    mutable_source_provenance()->::google::devtools::cloudbuild::v1::SourceProvenance::MergeFrom(from.source_provenance());
  }
  if (from.has_options()) {
    mutable_options()->::google::devtools::cloudbuild::v1::BuildOptions::MergeFrom(from.options());
  }
  if (from.status() != 0) {
    set_status(from.status());
  }
}

void Build::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.devtools.cloudbuild.v1.Build)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Build::CopyFrom(const Build& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.devtools.cloudbuild.v1.Build)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Build::IsInitialized() const {
  return true;
}

void Build::Swap(Build* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Build::InternalSwap(Build* other) {
  steps_.InternalSwap(&other->steps_);
  images_.InternalSwap(&other->images_);
  substitutions_.Swap(&other->substitutions_);
  tags_.InternalSwap(&other->tags_);
  secrets_.InternalSwap(&other->secrets_);
  id_.Swap(&other->id_);
  project_id_.Swap(&other->project_id_);
  logs_bucket_.Swap(&other->logs_bucket_);
  build_trigger_id_.Swap(&other->build_trigger_id_);
  status_detail_.Swap(&other->status_detail_);
  log_url_.Swap(&other->log_url_);
  std::swap(source_, other->source_);
  std::swap(create_time_, other->create_time_);
  std::swap(start_time_, other->start_time_);
  std::swap(finish_time_, other->finish_time_);
  std::swap(results_, other->results_);
  std::swap(timeout_, other->timeout_);
  std::swap(source_provenance_, other->source_provenance_);
  std::swap(options_, other->options_);
  std::swap(status_, other->status_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Build::GetMetadata() const {
  protobuf_google_2fdevtools_2fcloudbuild_2fv1_2fcloudbuild_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fdevtools_2fcloudbuild_2fv1_2fcloudbuild_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Build

// string id = 1;
void Build::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Build::id() const {
  // @@protoc_insertion_point(field_get:google.devtools.cloudbuild.v1.Build.id)
  return id_.GetNoArena();
}
void Build::set_id(const ::std::string& value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.cloudbuild.v1.Build.id)
}
#if LANG_CXX11
void Build::set_id(::std::string&& value) {
  
  id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.devtools.cloudbuild.v1.Build.id)
}
#endif
void Build::set_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.cloudbuild.v1.Build.id)
}
void Build::set_id(const char* value, size_t size) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.cloudbuild.v1.Build.id)
}
::std::string* Build::mutable_id() {
  
  // @@protoc_insertion_point(field_mutable:google.devtools.cloudbuild.v1.Build.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Build::release_id() {
  // @@protoc_insertion_point(field_release:google.devtools.cloudbuild.v1.Build.id)
  
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Build::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    
  } else {
    
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:google.devtools.cloudbuild.v1.Build.id)
}

// string project_id = 16;
void Build::clear_project_id() {
  project_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Build::project_id() const {
  // @@protoc_insertion_point(field_get:google.devtools.cloudbuild.v1.Build.project_id)
  return project_id_.GetNoArena();
}
void Build::set_project_id(const ::std::string& value) {
  
  project_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.cloudbuild.v1.Build.project_id)
}
#if LANG_CXX11
void Build::set_project_id(::std::string&& value) {
  
  project_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.devtools.cloudbuild.v1.Build.project_id)
}
#endif
void Build::set_project_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  project_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.cloudbuild.v1.Build.project_id)
}
void Build::set_project_id(const char* value, size_t size) {
  
  project_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.cloudbuild.v1.Build.project_id)
}
::std::string* Build::mutable_project_id() {
  
  // @@protoc_insertion_point(field_mutable:google.devtools.cloudbuild.v1.Build.project_id)
  return project_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Build::release_project_id() {
  // @@protoc_insertion_point(field_release:google.devtools.cloudbuild.v1.Build.project_id)
  
  return project_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Build::set_allocated_project_id(::std::string* project_id) {
  if (project_id != NULL) {
    
  } else {
    
  }
  project_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), project_id);
  // @@protoc_insertion_point(field_set_allocated:google.devtools.cloudbuild.v1.Build.project_id)
}

// .google.devtools.cloudbuild.v1.Build.Status status = 2;
void Build::clear_status() {
  status_ = 0;
}
::google::devtools::cloudbuild::v1::Build_Status Build::status() const {
  // @@protoc_insertion_point(field_get:google.devtools.cloudbuild.v1.Build.status)
  return static_cast< ::google::devtools::cloudbuild::v1::Build_Status >(status_);
}
void Build::set_status(::google::devtools::cloudbuild::v1::Build_Status value) {
  
  status_ = value;
  // @@protoc_insertion_point(field_set:google.devtools.cloudbuild.v1.Build.status)
}

// string status_detail = 24;
void Build::clear_status_detail() {
  status_detail_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Build::status_detail() const {
  // @@protoc_insertion_point(field_get:google.devtools.cloudbuild.v1.Build.status_detail)
  return status_detail_.GetNoArena();
}
void Build::set_status_detail(const ::std::string& value) {
  
  status_detail_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.cloudbuild.v1.Build.status_detail)
}
#if LANG_CXX11
void Build::set_status_detail(::std::string&& value) {
  
  status_detail_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.devtools.cloudbuild.v1.Build.status_detail)
}
#endif
void Build::set_status_detail(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  status_detail_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.cloudbuild.v1.Build.status_detail)
}
void Build::set_status_detail(const char* value, size_t size) {
  
  status_detail_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.cloudbuild.v1.Build.status_detail)
}
::std::string* Build::mutable_status_detail() {
  
  // @@protoc_insertion_point(field_mutable:google.devtools.cloudbuild.v1.Build.status_detail)
  return status_detail_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Build::release_status_detail() {
  // @@protoc_insertion_point(field_release:google.devtools.cloudbuild.v1.Build.status_detail)
  
  return status_detail_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Build::set_allocated_status_detail(::std::string* status_detail) {
  if (status_detail != NULL) {
    
  } else {
    
  }
  status_detail_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), status_detail);
  // @@protoc_insertion_point(field_set_allocated:google.devtools.cloudbuild.v1.Build.status_detail)
}

// .google.devtools.cloudbuild.v1.Source source = 3;
bool Build::has_source() const {
  return this != internal_default_instance() && source_ != NULL;
}
void Build::clear_source() {
  if (GetArenaNoVirtual() == NULL && source_ != NULL) delete source_;
  source_ = NULL;
}
const ::google::devtools::cloudbuild::v1::Source& Build::source() const {
  // @@protoc_insertion_point(field_get:google.devtools.cloudbuild.v1.Build.source)
  return source_ != NULL ? *source_
                         : *::google::devtools::cloudbuild::v1::Source::internal_default_instance();
}
::google::devtools::cloudbuild::v1::Source* Build::mutable_source() {
  
  if (source_ == NULL) {
    source_ = new ::google::devtools::cloudbuild::v1::Source;
  }
  // @@protoc_insertion_point(field_mutable:google.devtools.cloudbuild.v1.Build.source)
  return source_;
}
::google::devtools::cloudbuild::v1::Source* Build::release_source() {
  // @@protoc_insertion_point(field_release:google.devtools.cloudbuild.v1.Build.source)
  
  ::google::devtools::cloudbuild::v1::Source* temp = source_;
  source_ = NULL;
  return temp;
}
void Build::set_allocated_source(::google::devtools::cloudbuild::v1::Source* source) {
  delete source_;
  source_ = source;
  if (source) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.devtools.cloudbuild.v1.Build.source)
}

// repeated .google.devtools.cloudbuild.v1.BuildStep steps = 11;
int Build::steps_size() const {
  return steps_.size();
}
void Build::clear_steps() {
  steps_.Clear();
}
const ::google::devtools::cloudbuild::v1::BuildStep& Build::steps(int index) const {
  // @@protoc_insertion_point(field_get:google.devtools.cloudbuild.v1.Build.steps)
  return steps_.Get(index);
}
::google::devtools::cloudbuild::v1::BuildStep* Build::mutable_steps(int index) {
  // @@protoc_insertion_point(field_mutable:google.devtools.cloudbuild.v1.Build.steps)
  return steps_.Mutable(index);
}
::google::devtools::cloudbuild::v1::BuildStep* Build::add_steps() {
  // @@protoc_insertion_point(field_add:google.devtools.cloudbuild.v1.Build.steps)
  return steps_.Add();
}
::google::protobuf::RepeatedPtrField< ::google::devtools::cloudbuild::v1::BuildStep >*
Build::mutable_steps() {
  // @@protoc_insertion_point(field_mutable_list:google.devtools.cloudbuild.v1.Build.steps)
  return &steps_;
}
const ::google::protobuf::RepeatedPtrField< ::google::devtools::cloudbuild::v1::BuildStep >&
Build::steps() const {
  // @@protoc_insertion_point(field_list:google.devtools.cloudbuild.v1.Build.steps)
  return steps_;
}

// .google.devtools.cloudbuild.v1.Results results = 10;
bool Build::has_results() const {
  return this != internal_default_instance() && results_ != NULL;
}
void Build::clear_results() {
  if (GetArenaNoVirtual() == NULL && results_ != NULL) delete results_;
  results_ = NULL;
}
const ::google::devtools::cloudbuild::v1::Results& Build::results() const {
  // @@protoc_insertion_point(field_get:google.devtools.cloudbuild.v1.Build.results)
  return results_ != NULL ? *results_
                         : *::google::devtools::cloudbuild::v1::Results::internal_default_instance();
}
::google::devtools::cloudbuild::v1::Results* Build::mutable_results() {
  
  if (results_ == NULL) {
    results_ = new ::google::devtools::cloudbuild::v1::Results;
  }
  // @@protoc_insertion_point(field_mutable:google.devtools.cloudbuild.v1.Build.results)
  return results_;
}
::google::devtools::cloudbuild::v1::Results* Build::release_results() {
  // @@protoc_insertion_point(field_release:google.devtools.cloudbuild.v1.Build.results)
  
  ::google::devtools::cloudbuild::v1::Results* temp = results_;
  results_ = NULL;
  return temp;
}
void Build::set_allocated_results(::google::devtools::cloudbuild::v1::Results* results) {
  delete results_;
  results_ = results;
  if (results) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.devtools.cloudbuild.v1.Build.results)
}

// .google.protobuf.Timestamp create_time = 6;
bool Build::has_create_time() const {
  return this != internal_default_instance() && create_time_ != NULL;
}
void Build::clear_create_time() {
  if (GetArenaNoVirtual() == NULL && create_time_ != NULL) delete create_time_;
  create_time_ = NULL;
}
const ::google::protobuf::Timestamp& Build::create_time() const {
  // @@protoc_insertion_point(field_get:google.devtools.cloudbuild.v1.Build.create_time)
  return create_time_ != NULL ? *create_time_
                         : *::google::protobuf::Timestamp::internal_default_instance();
}
::google::protobuf::Timestamp* Build::mutable_create_time() {
  
  if (create_time_ == NULL) {
    create_time_ = new ::google::protobuf::Timestamp;
  }
  // @@protoc_insertion_point(field_mutable:google.devtools.cloudbuild.v1.Build.create_time)
  return create_time_;
}
::google::protobuf::Timestamp* Build::release_create_time() {
  // @@protoc_insertion_point(field_release:google.devtools.cloudbuild.v1.Build.create_time)
  
  ::google::protobuf::Timestamp* temp = create_time_;
  create_time_ = NULL;
  return temp;
}
void Build::set_allocated_create_time(::google::protobuf::Timestamp* create_time) {
  delete create_time_;
  if (create_time != NULL && create_time->GetArena() != NULL) {
    ::google::protobuf::Timestamp* new_create_time = new ::google::protobuf::Timestamp;
    new_create_time->CopyFrom(*create_time);
    create_time = new_create_time;
  }
  create_time_ = create_time;
  if (create_time) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.devtools.cloudbuild.v1.Build.create_time)
}

// .google.protobuf.Timestamp start_time = 7;
bool Build::has_start_time() const {
  return this != internal_default_instance() && start_time_ != NULL;
}
void Build::clear_start_time() {
  if (GetArenaNoVirtual() == NULL && start_time_ != NULL) delete start_time_;
  start_time_ = NULL;
}
const ::google::protobuf::Timestamp& Build::start_time() const {
  // @@protoc_insertion_point(field_get:google.devtools.cloudbuild.v1.Build.start_time)
  return start_time_ != NULL ? *start_time_
                         : *::google::protobuf::Timestamp::internal_default_instance();
}
::google::protobuf::Timestamp* Build::mutable_start_time() {
  
  if (start_time_ == NULL) {
    start_time_ = new ::google::protobuf::Timestamp;
  }
  // @@protoc_insertion_point(field_mutable:google.devtools.cloudbuild.v1.Build.start_time)
  return start_time_;
}
::google::protobuf::Timestamp* Build::release_start_time() {
  // @@protoc_insertion_point(field_release:google.devtools.cloudbuild.v1.Build.start_time)
  
  ::google::protobuf::Timestamp* temp = start_time_;
  start_time_ = NULL;
  return temp;
}
void Build::set_allocated_start_time(::google::protobuf::Timestamp* start_time) {
  delete start_time_;
  if (start_time != NULL && start_time->GetArena() != NULL) {
    ::google::protobuf::Timestamp* new_start_time = new ::google::protobuf::Timestamp;
    new_start_time->CopyFrom(*start_time);
    start_time = new_start_time;
  }
  start_time_ = start_time;
  if (start_time) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.devtools.cloudbuild.v1.Build.start_time)
}

// .google.protobuf.Timestamp finish_time = 8;
bool Build::has_finish_time() const {
  return this != internal_default_instance() && finish_time_ != NULL;
}
void Build::clear_finish_time() {
  if (GetArenaNoVirtual() == NULL && finish_time_ != NULL) delete finish_time_;
  finish_time_ = NULL;
}
const ::google::protobuf::Timestamp& Build::finish_time() const {
  // @@protoc_insertion_point(field_get:google.devtools.cloudbuild.v1.Build.finish_time)
  return finish_time_ != NULL ? *finish_time_
                         : *::google::protobuf::Timestamp::internal_default_instance();
}
::google::protobuf::Timestamp* Build::mutable_finish_time() {
  
  if (finish_time_ == NULL) {
    finish_time_ = new ::google::protobuf::Timestamp;
  }
  // @@protoc_insertion_point(field_mutable:google.devtools.cloudbuild.v1.Build.finish_time)
  return finish_time_;
}
::google::protobuf::Timestamp* Build::release_finish_time() {
  // @@protoc_insertion_point(field_release:google.devtools.cloudbuild.v1.Build.finish_time)
  
  ::google::protobuf::Timestamp* temp = finish_time_;
  finish_time_ = NULL;
  return temp;
}
void Build::set_allocated_finish_time(::google::protobuf::Timestamp* finish_time) {
  delete finish_time_;
  if (finish_time != NULL && finish_time->GetArena() != NULL) {
    ::google::protobuf::Timestamp* new_finish_time = new ::google::protobuf::Timestamp;
    new_finish_time->CopyFrom(*finish_time);
    finish_time = new_finish_time;
  }
  finish_time_ = finish_time;
  if (finish_time) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.devtools.cloudbuild.v1.Build.finish_time)
}

// .google.protobuf.Duration timeout = 12;
bool Build::has_timeout() const {
  return this != internal_default_instance() && timeout_ != NULL;
}
void Build::clear_timeout() {
  if (GetArenaNoVirtual() == NULL && timeout_ != NULL) delete timeout_;
  timeout_ = NULL;
}
const ::google::protobuf::Duration& Build::timeout() const {
  // @@protoc_insertion_point(field_get:google.devtools.cloudbuild.v1.Build.timeout)
  return timeout_ != NULL ? *timeout_
                         : *::google::protobuf::Duration::internal_default_instance();
}
::google::protobuf::Duration* Build::mutable_timeout() {
  
  if (timeout_ == NULL) {
    timeout_ = new ::google::protobuf::Duration;
  }
  // @@protoc_insertion_point(field_mutable:google.devtools.cloudbuild.v1.Build.timeout)
  return timeout_;
}
::google::protobuf::Duration* Build::release_timeout() {
  // @@protoc_insertion_point(field_release:google.devtools.cloudbuild.v1.Build.timeout)
  
  ::google::protobuf::Duration* temp = timeout_;
  timeout_ = NULL;
  return temp;
}
void Build::set_allocated_timeout(::google::protobuf::Duration* timeout) {
  delete timeout_;
  if (timeout != NULL && timeout->GetArena() != NULL) {
    ::google::protobuf::Duration* new_timeout = new ::google::protobuf::Duration;
    new_timeout->CopyFrom(*timeout);
    timeout = new_timeout;
  }
  timeout_ = timeout;
  if (timeout) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.devtools.cloudbuild.v1.Build.timeout)
}

// repeated string images = 13;
int Build::images_size() const {
  return images_.size();
}
void Build::clear_images() {
  images_.Clear();
}
const ::std::string& Build::images(int index) const {
  // @@protoc_insertion_point(field_get:google.devtools.cloudbuild.v1.Build.images)
  return images_.Get(index);
}
::std::string* Build::mutable_images(int index) {
  // @@protoc_insertion_point(field_mutable:google.devtools.cloudbuild.v1.Build.images)
  return images_.Mutable(index);
}
void Build::set_images(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:google.devtools.cloudbuild.v1.Build.images)
  images_.Mutable(index)->assign(value);
}
#if LANG_CXX11
void Build::set_images(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:google.devtools.cloudbuild.v1.Build.images)
  images_.Mutable(index)->assign(std::move(value));
}
#endif
void Build::set_images(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  images_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:google.devtools.cloudbuild.v1.Build.images)
}
void Build::set_images(int index, const char* value, size_t size) {
  images_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:google.devtools.cloudbuild.v1.Build.images)
}
::std::string* Build::add_images() {
  // @@protoc_insertion_point(field_add_mutable:google.devtools.cloudbuild.v1.Build.images)
  return images_.Add();
}
void Build::add_images(const ::std::string& value) {
  images_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:google.devtools.cloudbuild.v1.Build.images)
}
#if LANG_CXX11
void Build::add_images(::std::string&& value) {
  images_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:google.devtools.cloudbuild.v1.Build.images)
}
#endif
void Build::add_images(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  images_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:google.devtools.cloudbuild.v1.Build.images)
}
void Build::add_images(const char* value, size_t size) {
  images_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:google.devtools.cloudbuild.v1.Build.images)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
Build::images() const {
  // @@protoc_insertion_point(field_list:google.devtools.cloudbuild.v1.Build.images)
  return images_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
Build::mutable_images() {
  // @@protoc_insertion_point(field_mutable_list:google.devtools.cloudbuild.v1.Build.images)
  return &images_;
}

// string logs_bucket = 19;
void Build::clear_logs_bucket() {
  logs_bucket_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Build::logs_bucket() const {
  // @@protoc_insertion_point(field_get:google.devtools.cloudbuild.v1.Build.logs_bucket)
  return logs_bucket_.GetNoArena();
}
void Build::set_logs_bucket(const ::std::string& value) {
  
  logs_bucket_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.cloudbuild.v1.Build.logs_bucket)
}
#if LANG_CXX11
void Build::set_logs_bucket(::std::string&& value) {
  
  logs_bucket_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.devtools.cloudbuild.v1.Build.logs_bucket)
}
#endif
void Build::set_logs_bucket(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  logs_bucket_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.cloudbuild.v1.Build.logs_bucket)
}
void Build::set_logs_bucket(const char* value, size_t size) {
  
  logs_bucket_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.cloudbuild.v1.Build.logs_bucket)
}
::std::string* Build::mutable_logs_bucket() {
  
  // @@protoc_insertion_point(field_mutable:google.devtools.cloudbuild.v1.Build.logs_bucket)
  return logs_bucket_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Build::release_logs_bucket() {
  // @@protoc_insertion_point(field_release:google.devtools.cloudbuild.v1.Build.logs_bucket)
  
  return logs_bucket_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Build::set_allocated_logs_bucket(::std::string* logs_bucket) {
  if (logs_bucket != NULL) {
    
  } else {
    
  }
  logs_bucket_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), logs_bucket);
  // @@protoc_insertion_point(field_set_allocated:google.devtools.cloudbuild.v1.Build.logs_bucket)
}

// .google.devtools.cloudbuild.v1.SourceProvenance source_provenance = 21;
bool Build::has_source_provenance() const {
  return this != internal_default_instance() && source_provenance_ != NULL;
}
void Build::clear_source_provenance() {
  if (GetArenaNoVirtual() == NULL && source_provenance_ != NULL) delete source_provenance_;
  source_provenance_ = NULL;
}
const ::google::devtools::cloudbuild::v1::SourceProvenance& Build::source_provenance() const {
  // @@protoc_insertion_point(field_get:google.devtools.cloudbuild.v1.Build.source_provenance)
  return source_provenance_ != NULL ? *source_provenance_
                         : *::google::devtools::cloudbuild::v1::SourceProvenance::internal_default_instance();
}
::google::devtools::cloudbuild::v1::SourceProvenance* Build::mutable_source_provenance() {
  
  if (source_provenance_ == NULL) {
    source_provenance_ = new ::google::devtools::cloudbuild::v1::SourceProvenance;
  }
  // @@protoc_insertion_point(field_mutable:google.devtools.cloudbuild.v1.Build.source_provenance)
  return source_provenance_;
}
::google::devtools::cloudbuild::v1::SourceProvenance* Build::release_source_provenance() {
  // @@protoc_insertion_point(field_release:google.devtools.cloudbuild.v1.Build.source_provenance)
  
  ::google::devtools::cloudbuild::v1::SourceProvenance* temp = source_provenance_;
  source_provenance_ = NULL;
  return temp;
}
void Build::set_allocated_source_provenance(::google::devtools::cloudbuild::v1::SourceProvenance* source_provenance) {
  delete source_provenance_;
  source_provenance_ = source_provenance;
  if (source_provenance) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.devtools.cloudbuild.v1.Build.source_provenance)
}

// string build_trigger_id = 22;
void Build::clear_build_trigger_id() {
  build_trigger_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Build::build_trigger_id() const {
  // @@protoc_insertion_point(field_get:google.devtools.cloudbuild.v1.Build.build_trigger_id)
  return build_trigger_id_.GetNoArena();
}
void Build::set_build_trigger_id(const ::std::string& value) {
  
  build_trigger_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.cloudbuild.v1.Build.build_trigger_id)
}
#if LANG_CXX11
void Build::set_build_trigger_id(::std::string&& value) {
  
  build_trigger_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.devtools.cloudbuild.v1.Build.build_trigger_id)
}
#endif
void Build::set_build_trigger_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  build_trigger_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.cloudbuild.v1.Build.build_trigger_id)
}
void Build::set_build_trigger_id(const char* value, size_t size) {
  
  build_trigger_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.cloudbuild.v1.Build.build_trigger_id)
}
::std::string* Build::mutable_build_trigger_id() {
  
  // @@protoc_insertion_point(field_mutable:google.devtools.cloudbuild.v1.Build.build_trigger_id)
  return build_trigger_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Build::release_build_trigger_id() {
  // @@protoc_insertion_point(field_release:google.devtools.cloudbuild.v1.Build.build_trigger_id)
  
  return build_trigger_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Build::set_allocated_build_trigger_id(::std::string* build_trigger_id) {
  if (build_trigger_id != NULL) {
    
  } else {
    
  }
  build_trigger_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), build_trigger_id);
  // @@protoc_insertion_point(field_set_allocated:google.devtools.cloudbuild.v1.Build.build_trigger_id)
}

// .google.devtools.cloudbuild.v1.BuildOptions options = 23;
bool Build::has_options() const {
  return this != internal_default_instance() && options_ != NULL;
}
void Build::clear_options() {
  if (GetArenaNoVirtual() == NULL && options_ != NULL) delete options_;
  options_ = NULL;
}
const ::google::devtools::cloudbuild::v1::BuildOptions& Build::options() const {
  // @@protoc_insertion_point(field_get:google.devtools.cloudbuild.v1.Build.options)
  return options_ != NULL ? *options_
                         : *::google::devtools::cloudbuild::v1::BuildOptions::internal_default_instance();
}
::google::devtools::cloudbuild::v1::BuildOptions* Build::mutable_options() {
  
  if (options_ == NULL) {
    options_ = new ::google::devtools::cloudbuild::v1::BuildOptions;
  }
  // @@protoc_insertion_point(field_mutable:google.devtools.cloudbuild.v1.Build.options)
  return options_;
}
::google::devtools::cloudbuild::v1::BuildOptions* Build::release_options() {
  // @@protoc_insertion_point(field_release:google.devtools.cloudbuild.v1.Build.options)
  
  ::google::devtools::cloudbuild::v1::BuildOptions* temp = options_;
  options_ = NULL;
  return temp;
}
void Build::set_allocated_options(::google::devtools::cloudbuild::v1::BuildOptions* options) {
  delete options_;
  options_ = options;
  if (options) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.devtools.cloudbuild.v1.Build.options)
}

// string log_url = 25;
void Build::clear_log_url() {
  log_url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Build::log_url() const {
  // @@protoc_insertion_point(field_get:google.devtools.cloudbuild.v1.Build.log_url)
  return log_url_.GetNoArena();
}
void Build::set_log_url(const ::std::string& value) {
  
  log_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.cloudbuild.v1.Build.log_url)
}
#if LANG_CXX11
void Build::set_log_url(::std::string&& value) {
  
  log_url_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.devtools.cloudbuild.v1.Build.log_url)
}
#endif
void Build::set_log_url(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  log_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.cloudbuild.v1.Build.log_url)
}
void Build::set_log_url(const char* value, size_t size) {
  
  log_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.cloudbuild.v1.Build.log_url)
}
::std::string* Build::mutable_log_url() {
  
  // @@protoc_insertion_point(field_mutable:google.devtools.cloudbuild.v1.Build.log_url)
  return log_url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Build::release_log_url() {
  // @@protoc_insertion_point(field_release:google.devtools.cloudbuild.v1.Build.log_url)
  
  return log_url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Build::set_allocated_log_url(::std::string* log_url) {
  if (log_url != NULL) {
    
  } else {
    
  }
  log_url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), log_url);
  // @@protoc_insertion_point(field_set_allocated:google.devtools.cloudbuild.v1.Build.log_url)
}

// map<string, string> substitutions = 29;
int Build::substitutions_size() const {
  return substitutions_.size();
}
void Build::clear_substitutions() {
  substitutions_.Clear();
}
 const ::google::protobuf::Map< ::std::string, ::std::string >&
Build::substitutions() const {
  // @@protoc_insertion_point(field_map:google.devtools.cloudbuild.v1.Build.substitutions)
  return substitutions_.GetMap();
}
 ::google::protobuf::Map< ::std::string, ::std::string >*
Build::mutable_substitutions() {
  // @@protoc_insertion_point(field_mutable_map:google.devtools.cloudbuild.v1.Build.substitutions)
  return substitutions_.MutableMap();
}

// repeated string tags = 31;
int Build::tags_size() const {
  return tags_.size();
}
void Build::clear_tags() {
  tags_.Clear();
}
const ::std::string& Build::tags(int index) const {
  // @@protoc_insertion_point(field_get:google.devtools.cloudbuild.v1.Build.tags)
  return tags_.Get(index);
}
::std::string* Build::mutable_tags(int index) {
  // @@protoc_insertion_point(field_mutable:google.devtools.cloudbuild.v1.Build.tags)
  return tags_.Mutable(index);
}
void Build::set_tags(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:google.devtools.cloudbuild.v1.Build.tags)
  tags_.Mutable(index)->assign(value);
}
#if LANG_CXX11
void Build::set_tags(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:google.devtools.cloudbuild.v1.Build.tags)
  tags_.Mutable(index)->assign(std::move(value));
}
#endif
void Build::set_tags(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  tags_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:google.devtools.cloudbuild.v1.Build.tags)
}
void Build::set_tags(int index, const char* value, size_t size) {
  tags_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:google.devtools.cloudbuild.v1.Build.tags)
}
::std::string* Build::add_tags() {
  // @@protoc_insertion_point(field_add_mutable:google.devtools.cloudbuild.v1.Build.tags)
  return tags_.Add();
}
void Build::add_tags(const ::std::string& value) {
  tags_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:google.devtools.cloudbuild.v1.Build.tags)
}
#if LANG_CXX11
void Build::add_tags(::std::string&& value) {
  tags_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:google.devtools.cloudbuild.v1.Build.tags)
}
#endif
void Build::add_tags(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  tags_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:google.devtools.cloudbuild.v1.Build.tags)
}
void Build::add_tags(const char* value, size_t size) {
  tags_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:google.devtools.cloudbuild.v1.Build.tags)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
Build::tags() const {
  // @@protoc_insertion_point(field_list:google.devtools.cloudbuild.v1.Build.tags)
  return tags_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
Build::mutable_tags() {
  // @@protoc_insertion_point(field_mutable_list:google.devtools.cloudbuild.v1.Build.tags)
  return &tags_;
}

// repeated .google.devtools.cloudbuild.v1.Secret secrets = 32;
int Build::secrets_size() const {
  return secrets_.size();
}
void Build::clear_secrets() {
  secrets_.Clear();
}
const ::google::devtools::cloudbuild::v1::Secret& Build::secrets(int index) const {
  // @@protoc_insertion_point(field_get:google.devtools.cloudbuild.v1.Build.secrets)
  return secrets_.Get(index);
}
::google::devtools::cloudbuild::v1::Secret* Build::mutable_secrets(int index) {
  // @@protoc_insertion_point(field_mutable:google.devtools.cloudbuild.v1.Build.secrets)
  return secrets_.Mutable(index);
}
::google::devtools::cloudbuild::v1::Secret* Build::add_secrets() {
  // @@protoc_insertion_point(field_add:google.devtools.cloudbuild.v1.Build.secrets)
  return secrets_.Add();
}
::google::protobuf::RepeatedPtrField< ::google::devtools::cloudbuild::v1::Secret >*
Build::mutable_secrets() {
  // @@protoc_insertion_point(field_mutable_list:google.devtools.cloudbuild.v1.Build.secrets)
  return &secrets_;
}
const ::google::protobuf::RepeatedPtrField< ::google::devtools::cloudbuild::v1::Secret >&
Build::secrets() const {
  // @@protoc_insertion_point(field_list:google.devtools.cloudbuild.v1.Build.secrets)
  return secrets_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BuildOperationMetadata::kBuildFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BuildOperationMetadata::BuildOperationMetadata()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_google_2fdevtools_2fcloudbuild_2fv1_2fcloudbuild_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.devtools.cloudbuild.v1.BuildOperationMetadata)
}
BuildOperationMetadata::BuildOperationMetadata(const BuildOperationMetadata& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_build()) {
    build_ = new ::google::devtools::cloudbuild::v1::Build(*from.build_);
  } else {
    build_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.devtools.cloudbuild.v1.BuildOperationMetadata)
}

void BuildOperationMetadata::SharedCtor() {
  build_ = NULL;
  _cached_size_ = 0;
}

BuildOperationMetadata::~BuildOperationMetadata() {
  // @@protoc_insertion_point(destructor:google.devtools.cloudbuild.v1.BuildOperationMetadata)
  SharedDtor();
}

void BuildOperationMetadata::SharedDtor() {
  if (this != internal_default_instance()) {
    delete build_;
  }
}

void BuildOperationMetadata::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BuildOperationMetadata::descriptor() {
  protobuf_google_2fdevtools_2fcloudbuild_2fv1_2fcloudbuild_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fdevtools_2fcloudbuild_2fv1_2fcloudbuild_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BuildOperationMetadata& BuildOperationMetadata::default_instance() {
  protobuf_google_2fdevtools_2fcloudbuild_2fv1_2fcloudbuild_2eproto::InitDefaults();
  return *internal_default_instance();
}

BuildOperationMetadata* BuildOperationMetadata::New(::google::protobuf::Arena* arena) const {
  BuildOperationMetadata* n = new BuildOperationMetadata;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BuildOperationMetadata::Clear() {
// @@protoc_insertion_point(message_clear_start:google.devtools.cloudbuild.v1.BuildOperationMetadata)
  if (GetArenaNoVirtual() == NULL && build_ != NULL) {
    delete build_;
  }
  build_ = NULL;
}

bool BuildOperationMetadata::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.devtools.cloudbuild.v1.BuildOperationMetadata)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.devtools.cloudbuild.v1.Build build = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_build()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.devtools.cloudbuild.v1.BuildOperationMetadata)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.devtools.cloudbuild.v1.BuildOperationMetadata)
  return false;
#undef DO_
}

void BuildOperationMetadata::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.devtools.cloudbuild.v1.BuildOperationMetadata)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.devtools.cloudbuild.v1.Build build = 1;
  if (this->has_build()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->build_, output);
  }

  // @@protoc_insertion_point(serialize_end:google.devtools.cloudbuild.v1.BuildOperationMetadata)
}

::google::protobuf::uint8* BuildOperationMetadata::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.devtools.cloudbuild.v1.BuildOperationMetadata)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.devtools.cloudbuild.v1.Build build = 1;
  if (this->has_build()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->build_, deterministic, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.devtools.cloudbuild.v1.BuildOperationMetadata)
  return target;
}

size_t BuildOperationMetadata::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.devtools.cloudbuild.v1.BuildOperationMetadata)
  size_t total_size = 0;

  // .google.devtools.cloudbuild.v1.Build build = 1;
  if (this->has_build()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->build_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BuildOperationMetadata::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.devtools.cloudbuild.v1.BuildOperationMetadata)
  GOOGLE_DCHECK_NE(&from, this);
  const BuildOperationMetadata* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BuildOperationMetadata>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.devtools.cloudbuild.v1.BuildOperationMetadata)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.devtools.cloudbuild.v1.BuildOperationMetadata)
    MergeFrom(*source);
  }
}

void BuildOperationMetadata::MergeFrom(const BuildOperationMetadata& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.devtools.cloudbuild.v1.BuildOperationMetadata)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_build()) {
    mutable_build()->::google::devtools::cloudbuild::v1::Build::MergeFrom(from.build());
  }
}

void BuildOperationMetadata::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.devtools.cloudbuild.v1.BuildOperationMetadata)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BuildOperationMetadata::CopyFrom(const BuildOperationMetadata& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.devtools.cloudbuild.v1.BuildOperationMetadata)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BuildOperationMetadata::IsInitialized() const {
  return true;
}

void BuildOperationMetadata::Swap(BuildOperationMetadata* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BuildOperationMetadata::InternalSwap(BuildOperationMetadata* other) {
  std::swap(build_, other->build_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BuildOperationMetadata::GetMetadata() const {
  protobuf_google_2fdevtools_2fcloudbuild_2fv1_2fcloudbuild_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fdevtools_2fcloudbuild_2fv1_2fcloudbuild_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BuildOperationMetadata

// .google.devtools.cloudbuild.v1.Build build = 1;
bool BuildOperationMetadata::has_build() const {
  return this != internal_default_instance() && build_ != NULL;
}
void BuildOperationMetadata::clear_build() {
  if (GetArenaNoVirtual() == NULL && build_ != NULL) delete build_;
  build_ = NULL;
}
const ::google::devtools::cloudbuild::v1::Build& BuildOperationMetadata::build() const {
  // @@protoc_insertion_point(field_get:google.devtools.cloudbuild.v1.BuildOperationMetadata.build)
  return build_ != NULL ? *build_
                         : *::google::devtools::cloudbuild::v1::Build::internal_default_instance();
}
::google::devtools::cloudbuild::v1::Build* BuildOperationMetadata::mutable_build() {
  
  if (build_ == NULL) {
    build_ = new ::google::devtools::cloudbuild::v1::Build;
  }
  // @@protoc_insertion_point(field_mutable:google.devtools.cloudbuild.v1.BuildOperationMetadata.build)
  return build_;
}
::google::devtools::cloudbuild::v1::Build* BuildOperationMetadata::release_build() {
  // @@protoc_insertion_point(field_release:google.devtools.cloudbuild.v1.BuildOperationMetadata.build)
  
  ::google::devtools::cloudbuild::v1::Build* temp = build_;
  build_ = NULL;
  return temp;
}
void BuildOperationMetadata::set_allocated_build(::google::devtools::cloudbuild::v1::Build* build) {
  delete build_;
  build_ = build;
  if (build) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.devtools.cloudbuild.v1.BuildOperationMetadata.build)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

SourceProvenance::SourceProvenance_FileHashesEntry::SourceProvenance_FileHashesEntry() {}
SourceProvenance::SourceProvenance_FileHashesEntry::SourceProvenance_FileHashesEntry(::google::protobuf::Arena* arena) : SuperType(arena) {}
::google::protobuf::Metadata SourceProvenance::SourceProvenance_FileHashesEntry::GetMetadata() const {
  protobuf_google_2fdevtools_2fcloudbuild_2fv1_2fcloudbuild_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fdevtools_2fcloudbuild_2fv1_2fcloudbuild_2eproto::file_level_metadata[10];
}
void SourceProvenance::SourceProvenance_FileHashesEntry::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}
void SourceProvenance::SourceProvenance_FileHashesEntry::MergeFrom(const SourceProvenance_FileHashesEntry& other) {
  MergeFromInternal(other);
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SourceProvenance::kResolvedStorageSourceFieldNumber;
const int SourceProvenance::kResolvedRepoSourceFieldNumber;
const int SourceProvenance::kFileHashesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SourceProvenance::SourceProvenance()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_google_2fdevtools_2fcloudbuild_2fv1_2fcloudbuild_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.devtools.cloudbuild.v1.SourceProvenance)
}
SourceProvenance::SourceProvenance(const SourceProvenance& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  file_hashes_.MergeFrom(from.file_hashes_);
  if (from.has_resolved_storage_source()) {
    resolved_storage_source_ = new ::google::devtools::cloudbuild::v1::StorageSource(*from.resolved_storage_source_);
  } else {
    resolved_storage_source_ = NULL;
  }
  if (from.has_resolved_repo_source()) {
    resolved_repo_source_ = new ::google::devtools::cloudbuild::v1::RepoSource(*from.resolved_repo_source_);
  } else {
    resolved_repo_source_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.devtools.cloudbuild.v1.SourceProvenance)
}

void SourceProvenance::SharedCtor() {
  ::memset(&resolved_storage_source_, 0, reinterpret_cast<char*>(&resolved_repo_source_) -
    reinterpret_cast<char*>(&resolved_storage_source_) + sizeof(resolved_repo_source_));
  _cached_size_ = 0;
}

SourceProvenance::~SourceProvenance() {
  // @@protoc_insertion_point(destructor:google.devtools.cloudbuild.v1.SourceProvenance)
  SharedDtor();
}

void SourceProvenance::SharedDtor() {
  if (this != internal_default_instance()) {
    delete resolved_storage_source_;
  }
  if (this != internal_default_instance()) {
    delete resolved_repo_source_;
  }
}

void SourceProvenance::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SourceProvenance::descriptor() {
  protobuf_google_2fdevtools_2fcloudbuild_2fv1_2fcloudbuild_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fdevtools_2fcloudbuild_2fv1_2fcloudbuild_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SourceProvenance& SourceProvenance::default_instance() {
  protobuf_google_2fdevtools_2fcloudbuild_2fv1_2fcloudbuild_2eproto::InitDefaults();
  return *internal_default_instance();
}

SourceProvenance* SourceProvenance::New(::google::protobuf::Arena* arena) const {
  SourceProvenance* n = new SourceProvenance;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SourceProvenance::Clear() {
// @@protoc_insertion_point(message_clear_start:google.devtools.cloudbuild.v1.SourceProvenance)
  file_hashes_.Clear();
  if (GetArenaNoVirtual() == NULL && resolved_storage_source_ != NULL) {
    delete resolved_storage_source_;
  }
  resolved_storage_source_ = NULL;
  if (GetArenaNoVirtual() == NULL && resolved_repo_source_ != NULL) {
    delete resolved_repo_source_;
  }
  resolved_repo_source_ = NULL;
}

bool SourceProvenance::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.devtools.cloudbuild.v1.SourceProvenance)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.devtools.cloudbuild.v1.StorageSource resolved_storage_source = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_resolved_storage_source()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, .google.devtools.cloudbuild.v1.FileHashes> file_hashes = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          SourceProvenance_FileHashesEntry::Parser< ::google::protobuf::internal::MapField<
              SourceProvenance_FileHashesEntry,
              ::std::string, ::google::devtools::cloudbuild::v1::FileHashes,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
              0 >,
            ::google::protobuf::Map< ::std::string, ::google::devtools::cloudbuild::v1::FileHashes > > parser(&file_hashes_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), parser.key().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.cloudbuild.v1.SourceProvenance.FileHashesEntry.key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.devtools.cloudbuild.v1.RepoSource resolved_repo_source = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_resolved_repo_source()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.devtools.cloudbuild.v1.SourceProvenance)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.devtools.cloudbuild.v1.SourceProvenance)
  return false;
#undef DO_
}

void SourceProvenance::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.devtools.cloudbuild.v1.SourceProvenance)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.devtools.cloudbuild.v1.StorageSource resolved_storage_source = 3;
  if (this->has_resolved_storage_source()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->resolved_storage_source_, output);
  }

  // map<string, .google.devtools.cloudbuild.v1.FileHashes> file_hashes = 4;
  if (!this->file_hashes().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::google::devtools::cloudbuild::v1::FileHashes >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), p->first.length(),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.devtools.cloudbuild.v1.SourceProvenance.FileHashesEntry.key");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->file_hashes().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->file_hashes().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::google::devtools::cloudbuild::v1::FileHashes >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::google::devtools::cloudbuild::v1::FileHashes >::const_iterator
          it = this->file_hashes().begin();
          it != this->file_hashes().end(); ++it, ++n) {
        items[n] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[n], Less());
      ::google::protobuf::scoped_ptr<SourceProvenance_FileHashesEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(file_hashes_.NewEntryWrapper(
            items[i]->first, items[i]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            4, *entry, output);
        Utf8Check::Check(items[i]);
      }
    } else {
      ::google::protobuf::scoped_ptr<SourceProvenance_FileHashesEntry> entry;
      for (::google::protobuf::Map< ::std::string, ::google::devtools::cloudbuild::v1::FileHashes >::const_iterator
          it = this->file_hashes().begin();
          it != this->file_hashes().end(); ++it) {
        entry.reset(file_hashes_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            4, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  // .google.devtools.cloudbuild.v1.RepoSource resolved_repo_source = 6;
  if (this->has_resolved_repo_source()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, *this->resolved_repo_source_, output);
  }

  // @@protoc_insertion_point(serialize_end:google.devtools.cloudbuild.v1.SourceProvenance)
}

::google::protobuf::uint8* SourceProvenance::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.devtools.cloudbuild.v1.SourceProvenance)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.devtools.cloudbuild.v1.StorageSource resolved_storage_source = 3;
  if (this->has_resolved_storage_source()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->resolved_storage_source_, deterministic, target);
  }

  // map<string, .google.devtools.cloudbuild.v1.FileHashes> file_hashes = 4;
  if (!this->file_hashes().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::google::devtools::cloudbuild::v1::FileHashes >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), p->first.length(),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.devtools.cloudbuild.v1.SourceProvenance.FileHashesEntry.key");
      }
    };

    if (deterministic &&
        this->file_hashes().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->file_hashes().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::google::devtools::cloudbuild::v1::FileHashes >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::google::devtools::cloudbuild::v1::FileHashes >::const_iterator
          it = this->file_hashes().begin();
          it != this->file_hashes().end(); ++it, ++n) {
        items[n] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[n], Less());
      ::google::protobuf::scoped_ptr<SourceProvenance_FileHashesEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(file_hashes_.NewEntryWrapper(
            items[i]->first, items[i]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       4, *entry, deterministic, target);
;
        Utf8Check::Check(items[i]);
      }
    } else {
      ::google::protobuf::scoped_ptr<SourceProvenance_FileHashesEntry> entry;
      for (::google::protobuf::Map< ::std::string, ::google::devtools::cloudbuild::v1::FileHashes >::const_iterator
          it = this->file_hashes().begin();
          it != this->file_hashes().end(); ++it) {
        entry.reset(file_hashes_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       4, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  // .google.devtools.cloudbuild.v1.RepoSource resolved_repo_source = 6;
  if (this->has_resolved_repo_source()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        6, *this->resolved_repo_source_, deterministic, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.devtools.cloudbuild.v1.SourceProvenance)
  return target;
}

size_t SourceProvenance::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.devtools.cloudbuild.v1.SourceProvenance)
  size_t total_size = 0;

  // map<string, .google.devtools.cloudbuild.v1.FileHashes> file_hashes = 4;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->file_hashes_size());
  {
    ::google::protobuf::scoped_ptr<SourceProvenance_FileHashesEntry> entry;
    for (::google::protobuf::Map< ::std::string, ::google::devtools::cloudbuild::v1::FileHashes >::const_iterator
        it = this->file_hashes().begin();
        it != this->file_hashes().end(); ++it) {
      entry.reset(file_hashes_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // .google.devtools.cloudbuild.v1.StorageSource resolved_storage_source = 3;
  if (this->has_resolved_storage_source()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->resolved_storage_source_);
  }

  // .google.devtools.cloudbuild.v1.RepoSource resolved_repo_source = 6;
  if (this->has_resolved_repo_source()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->resolved_repo_source_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SourceProvenance::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.devtools.cloudbuild.v1.SourceProvenance)
  GOOGLE_DCHECK_NE(&from, this);
  const SourceProvenance* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SourceProvenance>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.devtools.cloudbuild.v1.SourceProvenance)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.devtools.cloudbuild.v1.SourceProvenance)
    MergeFrom(*source);
  }
}

void SourceProvenance::MergeFrom(const SourceProvenance& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.devtools.cloudbuild.v1.SourceProvenance)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  file_hashes_.MergeFrom(from.file_hashes_);
  if (from.has_resolved_storage_source()) {
    mutable_resolved_storage_source()->::google::devtools::cloudbuild::v1::StorageSource::MergeFrom(from.resolved_storage_source());
  }
  if (from.has_resolved_repo_source()) {
    mutable_resolved_repo_source()->::google::devtools::cloudbuild::v1::RepoSource::MergeFrom(from.resolved_repo_source());
  }
}

void SourceProvenance::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.devtools.cloudbuild.v1.SourceProvenance)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SourceProvenance::CopyFrom(const SourceProvenance& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.devtools.cloudbuild.v1.SourceProvenance)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SourceProvenance::IsInitialized() const {
  return true;
}

void SourceProvenance::Swap(SourceProvenance* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SourceProvenance::InternalSwap(SourceProvenance* other) {
  file_hashes_.Swap(&other->file_hashes_);
  std::swap(resolved_storage_source_, other->resolved_storage_source_);
  std::swap(resolved_repo_source_, other->resolved_repo_source_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SourceProvenance::GetMetadata() const {
  protobuf_google_2fdevtools_2fcloudbuild_2fv1_2fcloudbuild_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fdevtools_2fcloudbuild_2fv1_2fcloudbuild_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SourceProvenance

// .google.devtools.cloudbuild.v1.StorageSource resolved_storage_source = 3;
bool SourceProvenance::has_resolved_storage_source() const {
  return this != internal_default_instance() && resolved_storage_source_ != NULL;
}
void SourceProvenance::clear_resolved_storage_source() {
  if (GetArenaNoVirtual() == NULL && resolved_storage_source_ != NULL) delete resolved_storage_source_;
  resolved_storage_source_ = NULL;
}
const ::google::devtools::cloudbuild::v1::StorageSource& SourceProvenance::resolved_storage_source() const {
  // @@protoc_insertion_point(field_get:google.devtools.cloudbuild.v1.SourceProvenance.resolved_storage_source)
  return resolved_storage_source_ != NULL ? *resolved_storage_source_
                         : *::google::devtools::cloudbuild::v1::StorageSource::internal_default_instance();
}
::google::devtools::cloudbuild::v1::StorageSource* SourceProvenance::mutable_resolved_storage_source() {
  
  if (resolved_storage_source_ == NULL) {
    resolved_storage_source_ = new ::google::devtools::cloudbuild::v1::StorageSource;
  }
  // @@protoc_insertion_point(field_mutable:google.devtools.cloudbuild.v1.SourceProvenance.resolved_storage_source)
  return resolved_storage_source_;
}
::google::devtools::cloudbuild::v1::StorageSource* SourceProvenance::release_resolved_storage_source() {
  // @@protoc_insertion_point(field_release:google.devtools.cloudbuild.v1.SourceProvenance.resolved_storage_source)
  
  ::google::devtools::cloudbuild::v1::StorageSource* temp = resolved_storage_source_;
  resolved_storage_source_ = NULL;
  return temp;
}
void SourceProvenance::set_allocated_resolved_storage_source(::google::devtools::cloudbuild::v1::StorageSource* resolved_storage_source) {
  delete resolved_storage_source_;
  resolved_storage_source_ = resolved_storage_source;
  if (resolved_storage_source) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.devtools.cloudbuild.v1.SourceProvenance.resolved_storage_source)
}

// .google.devtools.cloudbuild.v1.RepoSource resolved_repo_source = 6;
bool SourceProvenance::has_resolved_repo_source() const {
  return this != internal_default_instance() && resolved_repo_source_ != NULL;
}
void SourceProvenance::clear_resolved_repo_source() {
  if (GetArenaNoVirtual() == NULL && resolved_repo_source_ != NULL) delete resolved_repo_source_;
  resolved_repo_source_ = NULL;
}
const ::google::devtools::cloudbuild::v1::RepoSource& SourceProvenance::resolved_repo_source() const {
  // @@protoc_insertion_point(field_get:google.devtools.cloudbuild.v1.SourceProvenance.resolved_repo_source)
  return resolved_repo_source_ != NULL ? *resolved_repo_source_
                         : *::google::devtools::cloudbuild::v1::RepoSource::internal_default_instance();
}
::google::devtools::cloudbuild::v1::RepoSource* SourceProvenance::mutable_resolved_repo_source() {
  
  if (resolved_repo_source_ == NULL) {
    resolved_repo_source_ = new ::google::devtools::cloudbuild::v1::RepoSource;
  }
  // @@protoc_insertion_point(field_mutable:google.devtools.cloudbuild.v1.SourceProvenance.resolved_repo_source)
  return resolved_repo_source_;
}
::google::devtools::cloudbuild::v1::RepoSource* SourceProvenance::release_resolved_repo_source() {
  // @@protoc_insertion_point(field_release:google.devtools.cloudbuild.v1.SourceProvenance.resolved_repo_source)
  
  ::google::devtools::cloudbuild::v1::RepoSource* temp = resolved_repo_source_;
  resolved_repo_source_ = NULL;
  return temp;
}
void SourceProvenance::set_allocated_resolved_repo_source(::google::devtools::cloudbuild::v1::RepoSource* resolved_repo_source) {
  delete resolved_repo_source_;
  resolved_repo_source_ = resolved_repo_source;
  if (resolved_repo_source) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.devtools.cloudbuild.v1.SourceProvenance.resolved_repo_source)
}

// map<string, .google.devtools.cloudbuild.v1.FileHashes> file_hashes = 4;
int SourceProvenance::file_hashes_size() const {
  return file_hashes_.size();
}
void SourceProvenance::clear_file_hashes() {
  file_hashes_.Clear();
}
 const ::google::protobuf::Map< ::std::string, ::google::devtools::cloudbuild::v1::FileHashes >&
SourceProvenance::file_hashes() const {
  // @@protoc_insertion_point(field_map:google.devtools.cloudbuild.v1.SourceProvenance.file_hashes)
  return file_hashes_.GetMap();
}
 ::google::protobuf::Map< ::std::string, ::google::devtools::cloudbuild::v1::FileHashes >*
SourceProvenance::mutable_file_hashes() {
  // @@protoc_insertion_point(field_mutable_map:google.devtools.cloudbuild.v1.SourceProvenance.file_hashes)
  return file_hashes_.MutableMap();
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FileHashes::kFileHashFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FileHashes::FileHashes()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_google_2fdevtools_2fcloudbuild_2fv1_2fcloudbuild_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.devtools.cloudbuild.v1.FileHashes)
}
FileHashes::FileHashes(const FileHashes& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      file_hash_(from.file_hash_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:google.devtools.cloudbuild.v1.FileHashes)
}

void FileHashes::SharedCtor() {
  _cached_size_ = 0;
}

FileHashes::~FileHashes() {
  // @@protoc_insertion_point(destructor:google.devtools.cloudbuild.v1.FileHashes)
  SharedDtor();
}

void FileHashes::SharedDtor() {
}

void FileHashes::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FileHashes::descriptor() {
  protobuf_google_2fdevtools_2fcloudbuild_2fv1_2fcloudbuild_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fdevtools_2fcloudbuild_2fv1_2fcloudbuild_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const FileHashes& FileHashes::default_instance() {
  protobuf_google_2fdevtools_2fcloudbuild_2fv1_2fcloudbuild_2eproto::InitDefaults();
  return *internal_default_instance();
}

FileHashes* FileHashes::New(::google::protobuf::Arena* arena) const {
  FileHashes* n = new FileHashes;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void FileHashes::Clear() {
// @@protoc_insertion_point(message_clear_start:google.devtools.cloudbuild.v1.FileHashes)
  file_hash_.Clear();
}

bool FileHashes::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.devtools.cloudbuild.v1.FileHashes)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .google.devtools.cloudbuild.v1.Hash file_hash = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_file_hash()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.devtools.cloudbuild.v1.FileHashes)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.devtools.cloudbuild.v1.FileHashes)
  return false;
#undef DO_
}

void FileHashes::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.devtools.cloudbuild.v1.FileHashes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.devtools.cloudbuild.v1.Hash file_hash = 1;
  for (unsigned int i = 0, n = this->file_hash_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->file_hash(i), output);
  }

  // @@protoc_insertion_point(serialize_end:google.devtools.cloudbuild.v1.FileHashes)
}

::google::protobuf::uint8* FileHashes::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.devtools.cloudbuild.v1.FileHashes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.devtools.cloudbuild.v1.Hash file_hash = 1;
  for (unsigned int i = 0, n = this->file_hash_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->file_hash(i), deterministic, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.devtools.cloudbuild.v1.FileHashes)
  return target;
}

size_t FileHashes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.devtools.cloudbuild.v1.FileHashes)
  size_t total_size = 0;

  // repeated .google.devtools.cloudbuild.v1.Hash file_hash = 1;
  {
    unsigned int count = this->file_hash_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->file_hash(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FileHashes::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.devtools.cloudbuild.v1.FileHashes)
  GOOGLE_DCHECK_NE(&from, this);
  const FileHashes* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FileHashes>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.devtools.cloudbuild.v1.FileHashes)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.devtools.cloudbuild.v1.FileHashes)
    MergeFrom(*source);
  }
}

void FileHashes::MergeFrom(const FileHashes& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.devtools.cloudbuild.v1.FileHashes)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  file_hash_.MergeFrom(from.file_hash_);
}

void FileHashes::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.devtools.cloudbuild.v1.FileHashes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FileHashes::CopyFrom(const FileHashes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.devtools.cloudbuild.v1.FileHashes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FileHashes::IsInitialized() const {
  return true;
}

void FileHashes::Swap(FileHashes* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FileHashes::InternalSwap(FileHashes* other) {
  file_hash_.InternalSwap(&other->file_hash_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata FileHashes::GetMetadata() const {
  protobuf_google_2fdevtools_2fcloudbuild_2fv1_2fcloudbuild_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fdevtools_2fcloudbuild_2fv1_2fcloudbuild_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// FileHashes

// repeated .google.devtools.cloudbuild.v1.Hash file_hash = 1;
int FileHashes::file_hash_size() const {
  return file_hash_.size();
}
void FileHashes::clear_file_hash() {
  file_hash_.Clear();
}
const ::google::devtools::cloudbuild::v1::Hash& FileHashes::file_hash(int index) const {
  // @@protoc_insertion_point(field_get:google.devtools.cloudbuild.v1.FileHashes.file_hash)
  return file_hash_.Get(index);
}
::google::devtools::cloudbuild::v1::Hash* FileHashes::mutable_file_hash(int index) {
  // @@protoc_insertion_point(field_mutable:google.devtools.cloudbuild.v1.FileHashes.file_hash)
  return file_hash_.Mutable(index);
}
::google::devtools::cloudbuild::v1::Hash* FileHashes::add_file_hash() {
  // @@protoc_insertion_point(field_add:google.devtools.cloudbuild.v1.FileHashes.file_hash)
  return file_hash_.Add();
}
::google::protobuf::RepeatedPtrField< ::google::devtools::cloudbuild::v1::Hash >*
FileHashes::mutable_file_hash() {
  // @@protoc_insertion_point(field_mutable_list:google.devtools.cloudbuild.v1.FileHashes.file_hash)
  return &file_hash_;
}
const ::google::protobuf::RepeatedPtrField< ::google::devtools::cloudbuild::v1::Hash >&
FileHashes::file_hash() const {
  // @@protoc_insertion_point(field_list:google.devtools.cloudbuild.v1.FileHashes.file_hash)
  return file_hash_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Hash::kTypeFieldNumber;
const int Hash::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Hash::Hash()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_google_2fdevtools_2fcloudbuild_2fv1_2fcloudbuild_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.devtools.cloudbuild.v1.Hash)
}
Hash::Hash(const Hash& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.value().size() > 0) {
    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  type_ = from.type_;
  // @@protoc_insertion_point(copy_constructor:google.devtools.cloudbuild.v1.Hash)
}

void Hash::SharedCtor() {
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_ = 0;
  _cached_size_ = 0;
}

Hash::~Hash() {
  // @@protoc_insertion_point(destructor:google.devtools.cloudbuild.v1.Hash)
  SharedDtor();
}

void Hash::SharedDtor() {
  value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Hash::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Hash::descriptor() {
  protobuf_google_2fdevtools_2fcloudbuild_2fv1_2fcloudbuild_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fdevtools_2fcloudbuild_2fv1_2fcloudbuild_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Hash& Hash::default_instance() {
  protobuf_google_2fdevtools_2fcloudbuild_2fv1_2fcloudbuild_2eproto::InitDefaults();
  return *internal_default_instance();
}

Hash* Hash::New(::google::protobuf::Arena* arena) const {
  Hash* n = new Hash;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Hash::Clear() {
// @@protoc_insertion_point(message_clear_start:google.devtools.cloudbuild.v1.Hash)
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_ = 0;
}

bool Hash::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.devtools.cloudbuild.v1.Hash)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.devtools.cloudbuild.v1.Hash.HashType type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_type(static_cast< ::google::devtools::cloudbuild::v1::Hash_HashType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes value = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.devtools.cloudbuild.v1.Hash)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.devtools.cloudbuild.v1.Hash)
  return false;
#undef DO_
}

void Hash::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.devtools.cloudbuild.v1.Hash)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.devtools.cloudbuild.v1.Hash.HashType type = 1;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->type(), output);
  }

  // bytes value = 2;
  if (this->value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->value(), output);
  }

  // @@protoc_insertion_point(serialize_end:google.devtools.cloudbuild.v1.Hash)
}

::google::protobuf::uint8* Hash::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.devtools.cloudbuild.v1.Hash)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.devtools.cloudbuild.v1.Hash.HashType type = 1;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->type(), target);
  }

  // bytes value = 2;
  if (this->value().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->value(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.devtools.cloudbuild.v1.Hash)
  return target;
}

size_t Hash::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.devtools.cloudbuild.v1.Hash)
  size_t total_size = 0;

  // bytes value = 2;
  if (this->value().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->value());
  }

  // .google.devtools.cloudbuild.v1.Hash.HashType type = 1;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Hash::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.devtools.cloudbuild.v1.Hash)
  GOOGLE_DCHECK_NE(&from, this);
  const Hash* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Hash>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.devtools.cloudbuild.v1.Hash)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.devtools.cloudbuild.v1.Hash)
    MergeFrom(*source);
  }
}

void Hash::MergeFrom(const Hash& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.devtools.cloudbuild.v1.Hash)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.value().size() > 0) {

    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
}

void Hash::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.devtools.cloudbuild.v1.Hash)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Hash::CopyFrom(const Hash& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.devtools.cloudbuild.v1.Hash)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Hash::IsInitialized() const {
  return true;
}

void Hash::Swap(Hash* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Hash::InternalSwap(Hash* other) {
  value_.Swap(&other->value_);
  std::swap(type_, other->type_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Hash::GetMetadata() const {
  protobuf_google_2fdevtools_2fcloudbuild_2fv1_2fcloudbuild_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fdevtools_2fcloudbuild_2fv1_2fcloudbuild_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Hash

// .google.devtools.cloudbuild.v1.Hash.HashType type = 1;
void Hash::clear_type() {
  type_ = 0;
}
::google::devtools::cloudbuild::v1::Hash_HashType Hash::type() const {
  // @@protoc_insertion_point(field_get:google.devtools.cloudbuild.v1.Hash.type)
  return static_cast< ::google::devtools::cloudbuild::v1::Hash_HashType >(type_);
}
void Hash::set_type(::google::devtools::cloudbuild::v1::Hash_HashType value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:google.devtools.cloudbuild.v1.Hash.type)
}

// bytes value = 2;
void Hash::clear_value() {
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Hash::value() const {
  // @@protoc_insertion_point(field_get:google.devtools.cloudbuild.v1.Hash.value)
  return value_.GetNoArena();
}
void Hash::set_value(const ::std::string& value) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.cloudbuild.v1.Hash.value)
}
#if LANG_CXX11
void Hash::set_value(::std::string&& value) {
  
  value_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.devtools.cloudbuild.v1.Hash.value)
}
#endif
void Hash::set_value(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.cloudbuild.v1.Hash.value)
}
void Hash::set_value(const void* value, size_t size) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.cloudbuild.v1.Hash.value)
}
::std::string* Hash::mutable_value() {
  
  // @@protoc_insertion_point(field_mutable:google.devtools.cloudbuild.v1.Hash.value)
  return value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Hash::release_value() {
  // @@protoc_insertion_point(field_release:google.devtools.cloudbuild.v1.Hash.value)
  
  return value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Hash::set_allocated_value(::std::string* value) {
  if (value != NULL) {
    
  } else {
    
  }
  value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set_allocated:google.devtools.cloudbuild.v1.Hash.value)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

Secret::Secret_SecretEnvEntry::Secret_SecretEnvEntry() {}
Secret::Secret_SecretEnvEntry::Secret_SecretEnvEntry(::google::protobuf::Arena* arena) : SuperType(arena) {}
::google::protobuf::Metadata Secret::Secret_SecretEnvEntry::GetMetadata() const {
  protobuf_google_2fdevtools_2fcloudbuild_2fv1_2fcloudbuild_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fdevtools_2fcloudbuild_2fv1_2fcloudbuild_2eproto::file_level_metadata[14];
}
void Secret::Secret_SecretEnvEntry::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}
void Secret::Secret_SecretEnvEntry::MergeFrom(const Secret_SecretEnvEntry& other) {
  MergeFromInternal(other);
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Secret::kKmsKeyNameFieldNumber;
const int Secret::kSecretEnvFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Secret::Secret()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_google_2fdevtools_2fcloudbuild_2fv1_2fcloudbuild_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.devtools.cloudbuild.v1.Secret)
}
Secret::Secret(const Secret& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  secret_env_.MergeFrom(from.secret_env_);
  kms_key_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.kms_key_name().size() > 0) {
    kms_key_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.kms_key_name_);
  }
  // @@protoc_insertion_point(copy_constructor:google.devtools.cloudbuild.v1.Secret)
}

void Secret::SharedCtor() {
  kms_key_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

Secret::~Secret() {
  // @@protoc_insertion_point(destructor:google.devtools.cloudbuild.v1.Secret)
  SharedDtor();
}

void Secret::SharedDtor() {
  kms_key_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Secret::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Secret::descriptor() {
  protobuf_google_2fdevtools_2fcloudbuild_2fv1_2fcloudbuild_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fdevtools_2fcloudbuild_2fv1_2fcloudbuild_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Secret& Secret::default_instance() {
  protobuf_google_2fdevtools_2fcloudbuild_2fv1_2fcloudbuild_2eproto::InitDefaults();
  return *internal_default_instance();
}

Secret* Secret::New(::google::protobuf::Arena* arena) const {
  Secret* n = new Secret;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Secret::Clear() {
// @@protoc_insertion_point(message_clear_start:google.devtools.cloudbuild.v1.Secret)
  secret_env_.Clear();
  kms_key_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool Secret::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.devtools.cloudbuild.v1.Secret)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string kms_key_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_kms_key_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->kms_key_name().data(), this->kms_key_name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.cloudbuild.v1.Secret.kms_key_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, bytes> secret_env = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          Secret_SecretEnvEntry::Parser< ::google::protobuf::internal::MapField<
              Secret_SecretEnvEntry,
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_BYTES,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&secret_env_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), parser.key().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.cloudbuild.v1.Secret.SecretEnvEntry.key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.devtools.cloudbuild.v1.Secret)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.devtools.cloudbuild.v1.Secret)
  return false;
#undef DO_
}

void Secret::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.devtools.cloudbuild.v1.Secret)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string kms_key_name = 1;
  if (this->kms_key_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->kms_key_name().data(), this->kms_key_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.cloudbuild.v1.Secret.kms_key_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->kms_key_name(), output);
  }

  // map<string, bytes> secret_env = 3;
  if (!this->secret_env().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), p->first.length(),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.devtools.cloudbuild.v1.Secret.SecretEnvEntry.key");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->secret_env().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->secret_env().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->secret_env().begin();
          it != this->secret_env().end(); ++it, ++n) {
        items[n] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[n], Less());
      ::google::protobuf::scoped_ptr<Secret_SecretEnvEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(secret_env_.NewEntryWrapper(
            items[i]->first, items[i]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            3, *entry, output);
        Utf8Check::Check(items[i]);
      }
    } else {
      ::google::protobuf::scoped_ptr<Secret_SecretEnvEntry> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->secret_env().begin();
          it != this->secret_env().end(); ++it) {
        entry.reset(secret_env_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            3, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  // @@protoc_insertion_point(serialize_end:google.devtools.cloudbuild.v1.Secret)
}

::google::protobuf::uint8* Secret::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.devtools.cloudbuild.v1.Secret)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string kms_key_name = 1;
  if (this->kms_key_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->kms_key_name().data(), this->kms_key_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.cloudbuild.v1.Secret.kms_key_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->kms_key_name(), target);
  }

  // map<string, bytes> secret_env = 3;
  if (!this->secret_env().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), p->first.length(),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.devtools.cloudbuild.v1.Secret.SecretEnvEntry.key");
      }
    };

    if (deterministic &&
        this->secret_env().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->secret_env().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->secret_env().begin();
          it != this->secret_env().end(); ++it, ++n) {
        items[n] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[n], Less());
      ::google::protobuf::scoped_ptr<Secret_SecretEnvEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(secret_env_.NewEntryWrapper(
            items[i]->first, items[i]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       3, *entry, deterministic, target);
;
        Utf8Check::Check(items[i]);
      }
    } else {
      ::google::protobuf::scoped_ptr<Secret_SecretEnvEntry> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->secret_env().begin();
          it != this->secret_env().end(); ++it) {
        entry.reset(secret_env_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       3, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.devtools.cloudbuild.v1.Secret)
  return target;
}

size_t Secret::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.devtools.cloudbuild.v1.Secret)
  size_t total_size = 0;

  // map<string, bytes> secret_env = 3;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->secret_env_size());
  {
    ::google::protobuf::scoped_ptr<Secret_SecretEnvEntry> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->secret_env().begin();
        it != this->secret_env().end(); ++it) {
      entry.reset(secret_env_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // string kms_key_name = 1;
  if (this->kms_key_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->kms_key_name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Secret::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.devtools.cloudbuild.v1.Secret)
  GOOGLE_DCHECK_NE(&from, this);
  const Secret* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Secret>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.devtools.cloudbuild.v1.Secret)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.devtools.cloudbuild.v1.Secret)
    MergeFrom(*source);
  }
}

void Secret::MergeFrom(const Secret& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.devtools.cloudbuild.v1.Secret)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  secret_env_.MergeFrom(from.secret_env_);
  if (from.kms_key_name().size() > 0) {

    kms_key_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.kms_key_name_);
  }
}

void Secret::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.devtools.cloudbuild.v1.Secret)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Secret::CopyFrom(const Secret& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.devtools.cloudbuild.v1.Secret)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Secret::IsInitialized() const {
  return true;
}

void Secret::Swap(Secret* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Secret::InternalSwap(Secret* other) {
  secret_env_.Swap(&other->secret_env_);
  kms_key_name_.Swap(&other->kms_key_name_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Secret::GetMetadata() const {
  protobuf_google_2fdevtools_2fcloudbuild_2fv1_2fcloudbuild_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fdevtools_2fcloudbuild_2fv1_2fcloudbuild_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Secret

// string kms_key_name = 1;
void Secret::clear_kms_key_name() {
  kms_key_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Secret::kms_key_name() const {
  // @@protoc_insertion_point(field_get:google.devtools.cloudbuild.v1.Secret.kms_key_name)
  return kms_key_name_.GetNoArena();
}
void Secret::set_kms_key_name(const ::std::string& value) {
  
  kms_key_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.cloudbuild.v1.Secret.kms_key_name)
}
#if LANG_CXX11
void Secret::set_kms_key_name(::std::string&& value) {
  
  kms_key_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.devtools.cloudbuild.v1.Secret.kms_key_name)
}
#endif
void Secret::set_kms_key_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  kms_key_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.cloudbuild.v1.Secret.kms_key_name)
}
void Secret::set_kms_key_name(const char* value, size_t size) {
  
  kms_key_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.cloudbuild.v1.Secret.kms_key_name)
}
::std::string* Secret::mutable_kms_key_name() {
  
  // @@protoc_insertion_point(field_mutable:google.devtools.cloudbuild.v1.Secret.kms_key_name)
  return kms_key_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Secret::release_kms_key_name() {
  // @@protoc_insertion_point(field_release:google.devtools.cloudbuild.v1.Secret.kms_key_name)
  
  return kms_key_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Secret::set_allocated_kms_key_name(::std::string* kms_key_name) {
  if (kms_key_name != NULL) {
    
  } else {
    
  }
  kms_key_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), kms_key_name);
  // @@protoc_insertion_point(field_set_allocated:google.devtools.cloudbuild.v1.Secret.kms_key_name)
}

// map<string, bytes> secret_env = 3;
int Secret::secret_env_size() const {
  return secret_env_.size();
}
void Secret::clear_secret_env() {
  secret_env_.Clear();
}
 const ::google::protobuf::Map< ::std::string, ::std::string >&
Secret::secret_env() const {
  // @@protoc_insertion_point(field_map:google.devtools.cloudbuild.v1.Secret.secret_env)
  return secret_env_.GetMap();
}
 ::google::protobuf::Map< ::std::string, ::std::string >*
Secret::mutable_secret_env() {
  // @@protoc_insertion_point(field_mutable_map:google.devtools.cloudbuild.v1.Secret.secret_env)
  return secret_env_.MutableMap();
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CreateBuildRequest::kProjectIdFieldNumber;
const int CreateBuildRequest::kBuildFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CreateBuildRequest::CreateBuildRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_google_2fdevtools_2fcloudbuild_2fv1_2fcloudbuild_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.devtools.cloudbuild.v1.CreateBuildRequest)
}
CreateBuildRequest::CreateBuildRequest(const CreateBuildRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.project_id().size() > 0) {
    project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
  }
  if (from.has_build()) {
    build_ = new ::google::devtools::cloudbuild::v1::Build(*from.build_);
  } else {
    build_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.devtools.cloudbuild.v1.CreateBuildRequest)
}

void CreateBuildRequest::SharedCtor() {
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  build_ = NULL;
  _cached_size_ = 0;
}

CreateBuildRequest::~CreateBuildRequest() {
  // @@protoc_insertion_point(destructor:google.devtools.cloudbuild.v1.CreateBuildRequest)
  SharedDtor();
}

void CreateBuildRequest::SharedDtor() {
  project_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete build_;
  }
}

void CreateBuildRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CreateBuildRequest::descriptor() {
  protobuf_google_2fdevtools_2fcloudbuild_2fv1_2fcloudbuild_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fdevtools_2fcloudbuild_2fv1_2fcloudbuild_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CreateBuildRequest& CreateBuildRequest::default_instance() {
  protobuf_google_2fdevtools_2fcloudbuild_2fv1_2fcloudbuild_2eproto::InitDefaults();
  return *internal_default_instance();
}

CreateBuildRequest* CreateBuildRequest::New(::google::protobuf::Arena* arena) const {
  CreateBuildRequest* n = new CreateBuildRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CreateBuildRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.devtools.cloudbuild.v1.CreateBuildRequest)
  project_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && build_ != NULL) {
    delete build_;
  }
  build_ = NULL;
}

bool CreateBuildRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.devtools.cloudbuild.v1.CreateBuildRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string project_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_project_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->project_id().data(), this->project_id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.cloudbuild.v1.CreateBuildRequest.project_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.devtools.cloudbuild.v1.Build build = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_build()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.devtools.cloudbuild.v1.CreateBuildRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.devtools.cloudbuild.v1.CreateBuildRequest)
  return false;
#undef DO_
}

void CreateBuildRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.devtools.cloudbuild.v1.CreateBuildRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string project_id = 1;
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), this->project_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.cloudbuild.v1.CreateBuildRequest.project_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->project_id(), output);
  }

  // .google.devtools.cloudbuild.v1.Build build = 2;
  if (this->has_build()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->build_, output);
  }

  // @@protoc_insertion_point(serialize_end:google.devtools.cloudbuild.v1.CreateBuildRequest)
}

::google::protobuf::uint8* CreateBuildRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.devtools.cloudbuild.v1.CreateBuildRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string project_id = 1;
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), this->project_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.cloudbuild.v1.CreateBuildRequest.project_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->project_id(), target);
  }

  // .google.devtools.cloudbuild.v1.Build build = 2;
  if (this->has_build()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->build_, deterministic, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.devtools.cloudbuild.v1.CreateBuildRequest)
  return target;
}

size_t CreateBuildRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.devtools.cloudbuild.v1.CreateBuildRequest)
  size_t total_size = 0;

  // string project_id = 1;
  if (this->project_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->project_id());
  }

  // .google.devtools.cloudbuild.v1.Build build = 2;
  if (this->has_build()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->build_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CreateBuildRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.devtools.cloudbuild.v1.CreateBuildRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateBuildRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CreateBuildRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.devtools.cloudbuild.v1.CreateBuildRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.devtools.cloudbuild.v1.CreateBuildRequest)
    MergeFrom(*source);
  }
}

void CreateBuildRequest::MergeFrom(const CreateBuildRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.devtools.cloudbuild.v1.CreateBuildRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.project_id().size() > 0) {

    project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
  }
  if (from.has_build()) {
    mutable_build()->::google::devtools::cloudbuild::v1::Build::MergeFrom(from.build());
  }
}

void CreateBuildRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.devtools.cloudbuild.v1.CreateBuildRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateBuildRequest::CopyFrom(const CreateBuildRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.devtools.cloudbuild.v1.CreateBuildRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateBuildRequest::IsInitialized() const {
  return true;
}

void CreateBuildRequest::Swap(CreateBuildRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CreateBuildRequest::InternalSwap(CreateBuildRequest* other) {
  project_id_.Swap(&other->project_id_);
  std::swap(build_, other->build_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CreateBuildRequest::GetMetadata() const {
  protobuf_google_2fdevtools_2fcloudbuild_2fv1_2fcloudbuild_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fdevtools_2fcloudbuild_2fv1_2fcloudbuild_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CreateBuildRequest

// string project_id = 1;
void CreateBuildRequest::clear_project_id() {
  project_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& CreateBuildRequest::project_id() const {
  // @@protoc_insertion_point(field_get:google.devtools.cloudbuild.v1.CreateBuildRequest.project_id)
  return project_id_.GetNoArena();
}
void CreateBuildRequest::set_project_id(const ::std::string& value) {
  
  project_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.cloudbuild.v1.CreateBuildRequest.project_id)
}
#if LANG_CXX11
void CreateBuildRequest::set_project_id(::std::string&& value) {
  
  project_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.devtools.cloudbuild.v1.CreateBuildRequest.project_id)
}
#endif
void CreateBuildRequest::set_project_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  project_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.cloudbuild.v1.CreateBuildRequest.project_id)
}
void CreateBuildRequest::set_project_id(const char* value, size_t size) {
  
  project_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.cloudbuild.v1.CreateBuildRequest.project_id)
}
::std::string* CreateBuildRequest::mutable_project_id() {
  
  // @@protoc_insertion_point(field_mutable:google.devtools.cloudbuild.v1.CreateBuildRequest.project_id)
  return project_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CreateBuildRequest::release_project_id() {
  // @@protoc_insertion_point(field_release:google.devtools.cloudbuild.v1.CreateBuildRequest.project_id)
  
  return project_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CreateBuildRequest::set_allocated_project_id(::std::string* project_id) {
  if (project_id != NULL) {
    
  } else {
    
  }
  project_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), project_id);
  // @@protoc_insertion_point(field_set_allocated:google.devtools.cloudbuild.v1.CreateBuildRequest.project_id)
}

// .google.devtools.cloudbuild.v1.Build build = 2;
bool CreateBuildRequest::has_build() const {
  return this != internal_default_instance() && build_ != NULL;
}
void CreateBuildRequest::clear_build() {
  if (GetArenaNoVirtual() == NULL && build_ != NULL) delete build_;
  build_ = NULL;
}
const ::google::devtools::cloudbuild::v1::Build& CreateBuildRequest::build() const {
  // @@protoc_insertion_point(field_get:google.devtools.cloudbuild.v1.CreateBuildRequest.build)
  return build_ != NULL ? *build_
                         : *::google::devtools::cloudbuild::v1::Build::internal_default_instance();
}
::google::devtools::cloudbuild::v1::Build* CreateBuildRequest::mutable_build() {
  
  if (build_ == NULL) {
    build_ = new ::google::devtools::cloudbuild::v1::Build;
  }
  // @@protoc_insertion_point(field_mutable:google.devtools.cloudbuild.v1.CreateBuildRequest.build)
  return build_;
}
::google::devtools::cloudbuild::v1::Build* CreateBuildRequest::release_build() {
  // @@protoc_insertion_point(field_release:google.devtools.cloudbuild.v1.CreateBuildRequest.build)
  
  ::google::devtools::cloudbuild::v1::Build* temp = build_;
  build_ = NULL;
  return temp;
}
void CreateBuildRequest::set_allocated_build(::google::devtools::cloudbuild::v1::Build* build) {
  delete build_;
  build_ = build;
  if (build) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.devtools.cloudbuild.v1.CreateBuildRequest.build)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetBuildRequest::kProjectIdFieldNumber;
const int GetBuildRequest::kIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetBuildRequest::GetBuildRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_google_2fdevtools_2fcloudbuild_2fv1_2fcloudbuild_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.devtools.cloudbuild.v1.GetBuildRequest)
}
GetBuildRequest::GetBuildRequest(const GetBuildRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.project_id().size() > 0) {
    project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
  }
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.id().size() > 0) {
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  // @@protoc_insertion_point(copy_constructor:google.devtools.cloudbuild.v1.GetBuildRequest)
}

void GetBuildRequest::SharedCtor() {
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

GetBuildRequest::~GetBuildRequest() {
  // @@protoc_insertion_point(destructor:google.devtools.cloudbuild.v1.GetBuildRequest)
  SharedDtor();
}

void GetBuildRequest::SharedDtor() {
  project_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GetBuildRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetBuildRequest::descriptor() {
  protobuf_google_2fdevtools_2fcloudbuild_2fv1_2fcloudbuild_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fdevtools_2fcloudbuild_2fv1_2fcloudbuild_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetBuildRequest& GetBuildRequest::default_instance() {
  protobuf_google_2fdevtools_2fcloudbuild_2fv1_2fcloudbuild_2eproto::InitDefaults();
  return *internal_default_instance();
}

GetBuildRequest* GetBuildRequest::New(::google::protobuf::Arena* arena) const {
  GetBuildRequest* n = new GetBuildRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetBuildRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.devtools.cloudbuild.v1.GetBuildRequest)
  project_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool GetBuildRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.devtools.cloudbuild.v1.GetBuildRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string project_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_project_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->project_id().data(), this->project_id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.cloudbuild.v1.GetBuildRequest.project_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->id().data(), this->id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.cloudbuild.v1.GetBuildRequest.id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.devtools.cloudbuild.v1.GetBuildRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.devtools.cloudbuild.v1.GetBuildRequest)
  return false;
#undef DO_
}

void GetBuildRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.devtools.cloudbuild.v1.GetBuildRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string project_id = 1;
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), this->project_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.cloudbuild.v1.GetBuildRequest.project_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->project_id(), output);
  }

  // string id = 2;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.cloudbuild.v1.GetBuildRequest.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->id(), output);
  }

  // @@protoc_insertion_point(serialize_end:google.devtools.cloudbuild.v1.GetBuildRequest)
}

::google::protobuf::uint8* GetBuildRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.devtools.cloudbuild.v1.GetBuildRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string project_id = 1;
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), this->project_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.cloudbuild.v1.GetBuildRequest.project_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->project_id(), target);
  }

  // string id = 2;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.cloudbuild.v1.GetBuildRequest.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->id(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.devtools.cloudbuild.v1.GetBuildRequest)
  return target;
}

size_t GetBuildRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.devtools.cloudbuild.v1.GetBuildRequest)
  size_t total_size = 0;

  // string project_id = 1;
  if (this->project_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->project_id());
  }

  // string id = 2;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetBuildRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.devtools.cloudbuild.v1.GetBuildRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetBuildRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetBuildRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.devtools.cloudbuild.v1.GetBuildRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.devtools.cloudbuild.v1.GetBuildRequest)
    MergeFrom(*source);
  }
}

void GetBuildRequest::MergeFrom(const GetBuildRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.devtools.cloudbuild.v1.GetBuildRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.project_id().size() > 0) {

    project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
  }
  if (from.id().size() > 0) {

    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
}

void GetBuildRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.devtools.cloudbuild.v1.GetBuildRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetBuildRequest::CopyFrom(const GetBuildRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.devtools.cloudbuild.v1.GetBuildRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetBuildRequest::IsInitialized() const {
  return true;
}

void GetBuildRequest::Swap(GetBuildRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetBuildRequest::InternalSwap(GetBuildRequest* other) {
  project_id_.Swap(&other->project_id_);
  id_.Swap(&other->id_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetBuildRequest::GetMetadata() const {
  protobuf_google_2fdevtools_2fcloudbuild_2fv1_2fcloudbuild_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fdevtools_2fcloudbuild_2fv1_2fcloudbuild_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetBuildRequest

// string project_id = 1;
void GetBuildRequest::clear_project_id() {
  project_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& GetBuildRequest::project_id() const {
  // @@protoc_insertion_point(field_get:google.devtools.cloudbuild.v1.GetBuildRequest.project_id)
  return project_id_.GetNoArena();
}
void GetBuildRequest::set_project_id(const ::std::string& value) {
  
  project_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.cloudbuild.v1.GetBuildRequest.project_id)
}
#if LANG_CXX11
void GetBuildRequest::set_project_id(::std::string&& value) {
  
  project_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.devtools.cloudbuild.v1.GetBuildRequest.project_id)
}
#endif
void GetBuildRequest::set_project_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  project_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.cloudbuild.v1.GetBuildRequest.project_id)
}
void GetBuildRequest::set_project_id(const char* value, size_t size) {
  
  project_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.cloudbuild.v1.GetBuildRequest.project_id)
}
::std::string* GetBuildRequest::mutable_project_id() {
  
  // @@protoc_insertion_point(field_mutable:google.devtools.cloudbuild.v1.GetBuildRequest.project_id)
  return project_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GetBuildRequest::release_project_id() {
  // @@protoc_insertion_point(field_release:google.devtools.cloudbuild.v1.GetBuildRequest.project_id)
  
  return project_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GetBuildRequest::set_allocated_project_id(::std::string* project_id) {
  if (project_id != NULL) {
    
  } else {
    
  }
  project_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), project_id);
  // @@protoc_insertion_point(field_set_allocated:google.devtools.cloudbuild.v1.GetBuildRequest.project_id)
}

// string id = 2;
void GetBuildRequest::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& GetBuildRequest::id() const {
  // @@protoc_insertion_point(field_get:google.devtools.cloudbuild.v1.GetBuildRequest.id)
  return id_.GetNoArena();
}
void GetBuildRequest::set_id(const ::std::string& value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.cloudbuild.v1.GetBuildRequest.id)
}
#if LANG_CXX11
void GetBuildRequest::set_id(::std::string&& value) {
  
  id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.devtools.cloudbuild.v1.GetBuildRequest.id)
}
#endif
void GetBuildRequest::set_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.cloudbuild.v1.GetBuildRequest.id)
}
void GetBuildRequest::set_id(const char* value, size_t size) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.cloudbuild.v1.GetBuildRequest.id)
}
::std::string* GetBuildRequest::mutable_id() {
  
  // @@protoc_insertion_point(field_mutable:google.devtools.cloudbuild.v1.GetBuildRequest.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GetBuildRequest::release_id() {
  // @@protoc_insertion_point(field_release:google.devtools.cloudbuild.v1.GetBuildRequest.id)
  
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GetBuildRequest::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    
  } else {
    
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:google.devtools.cloudbuild.v1.GetBuildRequest.id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListBuildsRequest::kProjectIdFieldNumber;
const int ListBuildsRequest::kPageSizeFieldNumber;
const int ListBuildsRequest::kPageTokenFieldNumber;
const int ListBuildsRequest::kFilterFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListBuildsRequest::ListBuildsRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_google_2fdevtools_2fcloudbuild_2fv1_2fcloudbuild_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.devtools.cloudbuild.v1.ListBuildsRequest)
}
ListBuildsRequest::ListBuildsRequest(const ListBuildsRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.project_id().size() > 0) {
    project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
  }
  page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.page_token().size() > 0) {
    page_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.page_token_);
  }
  filter_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.filter().size() > 0) {
    filter_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filter_);
  }
  page_size_ = from.page_size_;
  // @@protoc_insertion_point(copy_constructor:google.devtools.cloudbuild.v1.ListBuildsRequest)
}

void ListBuildsRequest::SharedCtor() {
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  filter_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_size_ = 0;
  _cached_size_ = 0;
}

ListBuildsRequest::~ListBuildsRequest() {
  // @@protoc_insertion_point(destructor:google.devtools.cloudbuild.v1.ListBuildsRequest)
  SharedDtor();
}

void ListBuildsRequest::SharedDtor() {
  project_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  filter_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ListBuildsRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ListBuildsRequest::descriptor() {
  protobuf_google_2fdevtools_2fcloudbuild_2fv1_2fcloudbuild_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fdevtools_2fcloudbuild_2fv1_2fcloudbuild_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListBuildsRequest& ListBuildsRequest::default_instance() {
  protobuf_google_2fdevtools_2fcloudbuild_2fv1_2fcloudbuild_2eproto::InitDefaults();
  return *internal_default_instance();
}

ListBuildsRequest* ListBuildsRequest::New(::google::protobuf::Arena* arena) const {
  ListBuildsRequest* n = new ListBuildsRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ListBuildsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.devtools.cloudbuild.v1.ListBuildsRequest)
  project_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  filter_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_size_ = 0;
}

bool ListBuildsRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.devtools.cloudbuild.v1.ListBuildsRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string project_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_project_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->project_id().data(), this->project_id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.cloudbuild.v1.ListBuildsRequest.project_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 page_size = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &page_size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string page_token = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_page_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->page_token().data(), this->page_token().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.cloudbuild.v1.ListBuildsRequest.page_token"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string filter = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_filter()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->filter().data(), this->filter().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.cloudbuild.v1.ListBuildsRequest.filter"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.devtools.cloudbuild.v1.ListBuildsRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.devtools.cloudbuild.v1.ListBuildsRequest)
  return false;
#undef DO_
}

void ListBuildsRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.devtools.cloudbuild.v1.ListBuildsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string project_id = 1;
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), this->project_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.cloudbuild.v1.ListBuildsRequest.project_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->project_id(), output);
  }

  // int32 page_size = 2;
  if (this->page_size() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->page_size(), output);
  }

  // string page_token = 3;
  if (this->page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->page_token().data(), this->page_token().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.cloudbuild.v1.ListBuildsRequest.page_token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->page_token(), output);
  }

  // string filter = 8;
  if (this->filter().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->filter().data(), this->filter().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.cloudbuild.v1.ListBuildsRequest.filter");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->filter(), output);
  }

  // @@protoc_insertion_point(serialize_end:google.devtools.cloudbuild.v1.ListBuildsRequest)
}

::google::protobuf::uint8* ListBuildsRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.devtools.cloudbuild.v1.ListBuildsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string project_id = 1;
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), this->project_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.cloudbuild.v1.ListBuildsRequest.project_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->project_id(), target);
  }

  // int32 page_size = 2;
  if (this->page_size() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->page_size(), target);
  }

  // string page_token = 3;
  if (this->page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->page_token().data(), this->page_token().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.cloudbuild.v1.ListBuildsRequest.page_token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->page_token(), target);
  }

  // string filter = 8;
  if (this->filter().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->filter().data(), this->filter().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.cloudbuild.v1.ListBuildsRequest.filter");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->filter(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.devtools.cloudbuild.v1.ListBuildsRequest)
  return target;
}

size_t ListBuildsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.devtools.cloudbuild.v1.ListBuildsRequest)
  size_t total_size = 0;

  // string project_id = 1;
  if (this->project_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->project_id());
  }

  // string page_token = 3;
  if (this->page_token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->page_token());
  }

  // string filter = 8;
  if (this->filter().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->filter());
  }

  // int32 page_size = 2;
  if (this->page_size() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->page_size());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ListBuildsRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.devtools.cloudbuild.v1.ListBuildsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ListBuildsRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListBuildsRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.devtools.cloudbuild.v1.ListBuildsRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.devtools.cloudbuild.v1.ListBuildsRequest)
    MergeFrom(*source);
  }
}

void ListBuildsRequest::MergeFrom(const ListBuildsRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.devtools.cloudbuild.v1.ListBuildsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.project_id().size() > 0) {

    project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
  }
  if (from.page_token().size() > 0) {

    page_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.page_token_);
  }
  if (from.filter().size() > 0) {

    filter_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filter_);
  }
  if (from.page_size() != 0) {
    set_page_size(from.page_size());
  }
}

void ListBuildsRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.devtools.cloudbuild.v1.ListBuildsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListBuildsRequest::CopyFrom(const ListBuildsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.devtools.cloudbuild.v1.ListBuildsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListBuildsRequest::IsInitialized() const {
  return true;
}

void ListBuildsRequest::Swap(ListBuildsRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListBuildsRequest::InternalSwap(ListBuildsRequest* other) {
  project_id_.Swap(&other->project_id_);
  page_token_.Swap(&other->page_token_);
  filter_.Swap(&other->filter_);
  std::swap(page_size_, other->page_size_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ListBuildsRequest::GetMetadata() const {
  protobuf_google_2fdevtools_2fcloudbuild_2fv1_2fcloudbuild_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fdevtools_2fcloudbuild_2fv1_2fcloudbuild_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ListBuildsRequest

// string project_id = 1;
void ListBuildsRequest::clear_project_id() {
  project_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ListBuildsRequest::project_id() const {
  // @@protoc_insertion_point(field_get:google.devtools.cloudbuild.v1.ListBuildsRequest.project_id)
  return project_id_.GetNoArena();
}
void ListBuildsRequest::set_project_id(const ::std::string& value) {
  
  project_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.cloudbuild.v1.ListBuildsRequest.project_id)
}
#if LANG_CXX11
void ListBuildsRequest::set_project_id(::std::string&& value) {
  
  project_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.devtools.cloudbuild.v1.ListBuildsRequest.project_id)
}
#endif
void ListBuildsRequest::set_project_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  project_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.cloudbuild.v1.ListBuildsRequest.project_id)
}
void ListBuildsRequest::set_project_id(const char* value, size_t size) {
  
  project_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.cloudbuild.v1.ListBuildsRequest.project_id)
}
::std::string* ListBuildsRequest::mutable_project_id() {
  
  // @@protoc_insertion_point(field_mutable:google.devtools.cloudbuild.v1.ListBuildsRequest.project_id)
  return project_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ListBuildsRequest::release_project_id() {
  // @@protoc_insertion_point(field_release:google.devtools.cloudbuild.v1.ListBuildsRequest.project_id)
  
  return project_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ListBuildsRequest::set_allocated_project_id(::std::string* project_id) {
  if (project_id != NULL) {
    
  } else {
    
  }
  project_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), project_id);
  // @@protoc_insertion_point(field_set_allocated:google.devtools.cloudbuild.v1.ListBuildsRequest.project_id)
}

// int32 page_size = 2;
void ListBuildsRequest::clear_page_size() {
  page_size_ = 0;
}
::google::protobuf::int32 ListBuildsRequest::page_size() const {
  // @@protoc_insertion_point(field_get:google.devtools.cloudbuild.v1.ListBuildsRequest.page_size)
  return page_size_;
}
void ListBuildsRequest::set_page_size(::google::protobuf::int32 value) {
  
  page_size_ = value;
  // @@protoc_insertion_point(field_set:google.devtools.cloudbuild.v1.ListBuildsRequest.page_size)
}

// string page_token = 3;
void ListBuildsRequest::clear_page_token() {
  page_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ListBuildsRequest::page_token() const {
  // @@protoc_insertion_point(field_get:google.devtools.cloudbuild.v1.ListBuildsRequest.page_token)
  return page_token_.GetNoArena();
}
void ListBuildsRequest::set_page_token(const ::std::string& value) {
  
  page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.cloudbuild.v1.ListBuildsRequest.page_token)
}
#if LANG_CXX11
void ListBuildsRequest::set_page_token(::std::string&& value) {
  
  page_token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.devtools.cloudbuild.v1.ListBuildsRequest.page_token)
}
#endif
void ListBuildsRequest::set_page_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.cloudbuild.v1.ListBuildsRequest.page_token)
}
void ListBuildsRequest::set_page_token(const char* value, size_t size) {
  
  page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.cloudbuild.v1.ListBuildsRequest.page_token)
}
::std::string* ListBuildsRequest::mutable_page_token() {
  
  // @@protoc_insertion_point(field_mutable:google.devtools.cloudbuild.v1.ListBuildsRequest.page_token)
  return page_token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ListBuildsRequest::release_page_token() {
  // @@protoc_insertion_point(field_release:google.devtools.cloudbuild.v1.ListBuildsRequest.page_token)
  
  return page_token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ListBuildsRequest::set_allocated_page_token(::std::string* page_token) {
  if (page_token != NULL) {
    
  } else {
    
  }
  page_token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), page_token);
  // @@protoc_insertion_point(field_set_allocated:google.devtools.cloudbuild.v1.ListBuildsRequest.page_token)
}

// string filter = 8;
void ListBuildsRequest::clear_filter() {
  filter_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ListBuildsRequest::filter() const {
  // @@protoc_insertion_point(field_get:google.devtools.cloudbuild.v1.ListBuildsRequest.filter)
  return filter_.GetNoArena();
}
void ListBuildsRequest::set_filter(const ::std::string& value) {
  
  filter_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.cloudbuild.v1.ListBuildsRequest.filter)
}
#if LANG_CXX11
void ListBuildsRequest::set_filter(::std::string&& value) {
  
  filter_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.devtools.cloudbuild.v1.ListBuildsRequest.filter)
}
#endif
void ListBuildsRequest::set_filter(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  filter_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.cloudbuild.v1.ListBuildsRequest.filter)
}
void ListBuildsRequest::set_filter(const char* value, size_t size) {
  
  filter_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.cloudbuild.v1.ListBuildsRequest.filter)
}
::std::string* ListBuildsRequest::mutable_filter() {
  
  // @@protoc_insertion_point(field_mutable:google.devtools.cloudbuild.v1.ListBuildsRequest.filter)
  return filter_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ListBuildsRequest::release_filter() {
  // @@protoc_insertion_point(field_release:google.devtools.cloudbuild.v1.ListBuildsRequest.filter)
  
  return filter_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ListBuildsRequest::set_allocated_filter(::std::string* filter) {
  if (filter != NULL) {
    
  } else {
    
  }
  filter_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), filter);
  // @@protoc_insertion_point(field_set_allocated:google.devtools.cloudbuild.v1.ListBuildsRequest.filter)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListBuildsResponse::kBuildsFieldNumber;
const int ListBuildsResponse::kNextPageTokenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListBuildsResponse::ListBuildsResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_google_2fdevtools_2fcloudbuild_2fv1_2fcloudbuild_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.devtools.cloudbuild.v1.ListBuildsResponse)
}
ListBuildsResponse::ListBuildsResponse(const ListBuildsResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      builds_(from.builds_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  next_page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.next_page_token().size() > 0) {
    next_page_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.next_page_token_);
  }
  // @@protoc_insertion_point(copy_constructor:google.devtools.cloudbuild.v1.ListBuildsResponse)
}

void ListBuildsResponse::SharedCtor() {
  next_page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

ListBuildsResponse::~ListBuildsResponse() {
  // @@protoc_insertion_point(destructor:google.devtools.cloudbuild.v1.ListBuildsResponse)
  SharedDtor();
}

void ListBuildsResponse::SharedDtor() {
  next_page_token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ListBuildsResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ListBuildsResponse::descriptor() {
  protobuf_google_2fdevtools_2fcloudbuild_2fv1_2fcloudbuild_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fdevtools_2fcloudbuild_2fv1_2fcloudbuild_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListBuildsResponse& ListBuildsResponse::default_instance() {
  protobuf_google_2fdevtools_2fcloudbuild_2fv1_2fcloudbuild_2eproto::InitDefaults();
  return *internal_default_instance();
}

ListBuildsResponse* ListBuildsResponse::New(::google::protobuf::Arena* arena) const {
  ListBuildsResponse* n = new ListBuildsResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ListBuildsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:google.devtools.cloudbuild.v1.ListBuildsResponse)
  builds_.Clear();
  next_page_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool ListBuildsResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.devtools.cloudbuild.v1.ListBuildsResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .google.devtools.cloudbuild.v1.Build builds = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_builds()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string next_page_token = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_next_page_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->next_page_token().data(), this->next_page_token().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.cloudbuild.v1.ListBuildsResponse.next_page_token"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.devtools.cloudbuild.v1.ListBuildsResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.devtools.cloudbuild.v1.ListBuildsResponse)
  return false;
#undef DO_
}

void ListBuildsResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.devtools.cloudbuild.v1.ListBuildsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.devtools.cloudbuild.v1.Build builds = 1;
  for (unsigned int i = 0, n = this->builds_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->builds(i), output);
  }

  // string next_page_token = 2;
  if (this->next_page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->next_page_token().data(), this->next_page_token().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.cloudbuild.v1.ListBuildsResponse.next_page_token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->next_page_token(), output);
  }

  // @@protoc_insertion_point(serialize_end:google.devtools.cloudbuild.v1.ListBuildsResponse)
}

::google::protobuf::uint8* ListBuildsResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.devtools.cloudbuild.v1.ListBuildsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.devtools.cloudbuild.v1.Build builds = 1;
  for (unsigned int i = 0, n = this->builds_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->builds(i), deterministic, target);
  }

  // string next_page_token = 2;
  if (this->next_page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->next_page_token().data(), this->next_page_token().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.cloudbuild.v1.ListBuildsResponse.next_page_token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->next_page_token(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.devtools.cloudbuild.v1.ListBuildsResponse)
  return target;
}

size_t ListBuildsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.devtools.cloudbuild.v1.ListBuildsResponse)
  size_t total_size = 0;

  // repeated .google.devtools.cloudbuild.v1.Build builds = 1;
  {
    unsigned int count = this->builds_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->builds(i));
    }
  }

  // string next_page_token = 2;
  if (this->next_page_token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->next_page_token());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ListBuildsResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.devtools.cloudbuild.v1.ListBuildsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ListBuildsResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListBuildsResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.devtools.cloudbuild.v1.ListBuildsResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.devtools.cloudbuild.v1.ListBuildsResponse)
    MergeFrom(*source);
  }
}

void ListBuildsResponse::MergeFrom(const ListBuildsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.devtools.cloudbuild.v1.ListBuildsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  builds_.MergeFrom(from.builds_);
  if (from.next_page_token().size() > 0) {

    next_page_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.next_page_token_);
  }
}

void ListBuildsResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.devtools.cloudbuild.v1.ListBuildsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListBuildsResponse::CopyFrom(const ListBuildsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.devtools.cloudbuild.v1.ListBuildsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListBuildsResponse::IsInitialized() const {
  return true;
}

void ListBuildsResponse::Swap(ListBuildsResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListBuildsResponse::InternalSwap(ListBuildsResponse* other) {
  builds_.InternalSwap(&other->builds_);
  next_page_token_.Swap(&other->next_page_token_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ListBuildsResponse::GetMetadata() const {
  protobuf_google_2fdevtools_2fcloudbuild_2fv1_2fcloudbuild_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fdevtools_2fcloudbuild_2fv1_2fcloudbuild_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ListBuildsResponse

// repeated .google.devtools.cloudbuild.v1.Build builds = 1;
int ListBuildsResponse::builds_size() const {
  return builds_.size();
}
void ListBuildsResponse::clear_builds() {
  builds_.Clear();
}
const ::google::devtools::cloudbuild::v1::Build& ListBuildsResponse::builds(int index) const {
  // @@protoc_insertion_point(field_get:google.devtools.cloudbuild.v1.ListBuildsResponse.builds)
  return builds_.Get(index);
}
::google::devtools::cloudbuild::v1::Build* ListBuildsResponse::mutable_builds(int index) {
  // @@protoc_insertion_point(field_mutable:google.devtools.cloudbuild.v1.ListBuildsResponse.builds)
  return builds_.Mutable(index);
}
::google::devtools::cloudbuild::v1::Build* ListBuildsResponse::add_builds() {
  // @@protoc_insertion_point(field_add:google.devtools.cloudbuild.v1.ListBuildsResponse.builds)
  return builds_.Add();
}
::google::protobuf::RepeatedPtrField< ::google::devtools::cloudbuild::v1::Build >*
ListBuildsResponse::mutable_builds() {
  // @@protoc_insertion_point(field_mutable_list:google.devtools.cloudbuild.v1.ListBuildsResponse.builds)
  return &builds_;
}
const ::google::protobuf::RepeatedPtrField< ::google::devtools::cloudbuild::v1::Build >&
ListBuildsResponse::builds() const {
  // @@protoc_insertion_point(field_list:google.devtools.cloudbuild.v1.ListBuildsResponse.builds)
  return builds_;
}

// string next_page_token = 2;
void ListBuildsResponse::clear_next_page_token() {
  next_page_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ListBuildsResponse::next_page_token() const {
  // @@protoc_insertion_point(field_get:google.devtools.cloudbuild.v1.ListBuildsResponse.next_page_token)
  return next_page_token_.GetNoArena();
}
void ListBuildsResponse::set_next_page_token(const ::std::string& value) {
  
  next_page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.cloudbuild.v1.ListBuildsResponse.next_page_token)
}
#if LANG_CXX11
void ListBuildsResponse::set_next_page_token(::std::string&& value) {
  
  next_page_token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.devtools.cloudbuild.v1.ListBuildsResponse.next_page_token)
}
#endif
void ListBuildsResponse::set_next_page_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  next_page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.cloudbuild.v1.ListBuildsResponse.next_page_token)
}
void ListBuildsResponse::set_next_page_token(const char* value, size_t size) {
  
  next_page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.cloudbuild.v1.ListBuildsResponse.next_page_token)
}
::std::string* ListBuildsResponse::mutable_next_page_token() {
  
  // @@protoc_insertion_point(field_mutable:google.devtools.cloudbuild.v1.ListBuildsResponse.next_page_token)
  return next_page_token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ListBuildsResponse::release_next_page_token() {
  // @@protoc_insertion_point(field_release:google.devtools.cloudbuild.v1.ListBuildsResponse.next_page_token)
  
  return next_page_token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ListBuildsResponse::set_allocated_next_page_token(::std::string* next_page_token) {
  if (next_page_token != NULL) {
    
  } else {
    
  }
  next_page_token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), next_page_token);
  // @@protoc_insertion_point(field_set_allocated:google.devtools.cloudbuild.v1.ListBuildsResponse.next_page_token)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CancelBuildRequest::kProjectIdFieldNumber;
const int CancelBuildRequest::kIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CancelBuildRequest::CancelBuildRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_google_2fdevtools_2fcloudbuild_2fv1_2fcloudbuild_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.devtools.cloudbuild.v1.CancelBuildRequest)
}
CancelBuildRequest::CancelBuildRequest(const CancelBuildRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.project_id().size() > 0) {
    project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
  }
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.id().size() > 0) {
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  // @@protoc_insertion_point(copy_constructor:google.devtools.cloudbuild.v1.CancelBuildRequest)
}

void CancelBuildRequest::SharedCtor() {
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

CancelBuildRequest::~CancelBuildRequest() {
  // @@protoc_insertion_point(destructor:google.devtools.cloudbuild.v1.CancelBuildRequest)
  SharedDtor();
}

void CancelBuildRequest::SharedDtor() {
  project_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CancelBuildRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CancelBuildRequest::descriptor() {
  protobuf_google_2fdevtools_2fcloudbuild_2fv1_2fcloudbuild_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fdevtools_2fcloudbuild_2fv1_2fcloudbuild_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CancelBuildRequest& CancelBuildRequest::default_instance() {
  protobuf_google_2fdevtools_2fcloudbuild_2fv1_2fcloudbuild_2eproto::InitDefaults();
  return *internal_default_instance();
}

CancelBuildRequest* CancelBuildRequest::New(::google::protobuf::Arena* arena) const {
  CancelBuildRequest* n = new CancelBuildRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CancelBuildRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.devtools.cloudbuild.v1.CancelBuildRequest)
  project_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool CancelBuildRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.devtools.cloudbuild.v1.CancelBuildRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string project_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_project_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->project_id().data(), this->project_id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.cloudbuild.v1.CancelBuildRequest.project_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->id().data(), this->id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.cloudbuild.v1.CancelBuildRequest.id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.devtools.cloudbuild.v1.CancelBuildRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.devtools.cloudbuild.v1.CancelBuildRequest)
  return false;
#undef DO_
}

void CancelBuildRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.devtools.cloudbuild.v1.CancelBuildRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string project_id = 1;
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), this->project_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.cloudbuild.v1.CancelBuildRequest.project_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->project_id(), output);
  }

  // string id = 2;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.cloudbuild.v1.CancelBuildRequest.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->id(), output);
  }

  // @@protoc_insertion_point(serialize_end:google.devtools.cloudbuild.v1.CancelBuildRequest)
}

::google::protobuf::uint8* CancelBuildRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.devtools.cloudbuild.v1.CancelBuildRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string project_id = 1;
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), this->project_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.cloudbuild.v1.CancelBuildRequest.project_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->project_id(), target);
  }

  // string id = 2;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.cloudbuild.v1.CancelBuildRequest.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->id(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.devtools.cloudbuild.v1.CancelBuildRequest)
  return target;
}

size_t CancelBuildRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.devtools.cloudbuild.v1.CancelBuildRequest)
  size_t total_size = 0;

  // string project_id = 1;
  if (this->project_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->project_id());
  }

  // string id = 2;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CancelBuildRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.devtools.cloudbuild.v1.CancelBuildRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CancelBuildRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CancelBuildRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.devtools.cloudbuild.v1.CancelBuildRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.devtools.cloudbuild.v1.CancelBuildRequest)
    MergeFrom(*source);
  }
}

void CancelBuildRequest::MergeFrom(const CancelBuildRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.devtools.cloudbuild.v1.CancelBuildRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.project_id().size() > 0) {

    project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
  }
  if (from.id().size() > 0) {

    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
}

void CancelBuildRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.devtools.cloudbuild.v1.CancelBuildRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CancelBuildRequest::CopyFrom(const CancelBuildRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.devtools.cloudbuild.v1.CancelBuildRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CancelBuildRequest::IsInitialized() const {
  return true;
}

void CancelBuildRequest::Swap(CancelBuildRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CancelBuildRequest::InternalSwap(CancelBuildRequest* other) {
  project_id_.Swap(&other->project_id_);
  id_.Swap(&other->id_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CancelBuildRequest::GetMetadata() const {
  protobuf_google_2fdevtools_2fcloudbuild_2fv1_2fcloudbuild_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fdevtools_2fcloudbuild_2fv1_2fcloudbuild_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CancelBuildRequest

// string project_id = 1;
void CancelBuildRequest::clear_project_id() {
  project_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& CancelBuildRequest::project_id() const {
  // @@protoc_insertion_point(field_get:google.devtools.cloudbuild.v1.CancelBuildRequest.project_id)
  return project_id_.GetNoArena();
}
void CancelBuildRequest::set_project_id(const ::std::string& value) {
  
  project_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.cloudbuild.v1.CancelBuildRequest.project_id)
}
#if LANG_CXX11
void CancelBuildRequest::set_project_id(::std::string&& value) {
  
  project_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.devtools.cloudbuild.v1.CancelBuildRequest.project_id)
}
#endif
void CancelBuildRequest::set_project_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  project_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.cloudbuild.v1.CancelBuildRequest.project_id)
}
void CancelBuildRequest::set_project_id(const char* value, size_t size) {
  
  project_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.cloudbuild.v1.CancelBuildRequest.project_id)
}
::std::string* CancelBuildRequest::mutable_project_id() {
  
  // @@protoc_insertion_point(field_mutable:google.devtools.cloudbuild.v1.CancelBuildRequest.project_id)
  return project_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CancelBuildRequest::release_project_id() {
  // @@protoc_insertion_point(field_release:google.devtools.cloudbuild.v1.CancelBuildRequest.project_id)
  
  return project_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CancelBuildRequest::set_allocated_project_id(::std::string* project_id) {
  if (project_id != NULL) {
    
  } else {
    
  }
  project_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), project_id);
  // @@protoc_insertion_point(field_set_allocated:google.devtools.cloudbuild.v1.CancelBuildRequest.project_id)
}

// string id = 2;
void CancelBuildRequest::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& CancelBuildRequest::id() const {
  // @@protoc_insertion_point(field_get:google.devtools.cloudbuild.v1.CancelBuildRequest.id)
  return id_.GetNoArena();
}
void CancelBuildRequest::set_id(const ::std::string& value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.cloudbuild.v1.CancelBuildRequest.id)
}
#if LANG_CXX11
void CancelBuildRequest::set_id(::std::string&& value) {
  
  id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.devtools.cloudbuild.v1.CancelBuildRequest.id)
}
#endif
void CancelBuildRequest::set_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.cloudbuild.v1.CancelBuildRequest.id)
}
void CancelBuildRequest::set_id(const char* value, size_t size) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.cloudbuild.v1.CancelBuildRequest.id)
}
::std::string* CancelBuildRequest::mutable_id() {
  
  // @@protoc_insertion_point(field_mutable:google.devtools.cloudbuild.v1.CancelBuildRequest.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CancelBuildRequest::release_id() {
  // @@protoc_insertion_point(field_release:google.devtools.cloudbuild.v1.CancelBuildRequest.id)
  
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CancelBuildRequest::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    
  } else {
    
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:google.devtools.cloudbuild.v1.CancelBuildRequest.id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

BuildTrigger::BuildTrigger_SubstitutionsEntry::BuildTrigger_SubstitutionsEntry() {}
BuildTrigger::BuildTrigger_SubstitutionsEntry::BuildTrigger_SubstitutionsEntry(::google::protobuf::Arena* arena) : SuperType(arena) {}
::google::protobuf::Metadata BuildTrigger::BuildTrigger_SubstitutionsEntry::GetMetadata() const {
  protobuf_google_2fdevtools_2fcloudbuild_2fv1_2fcloudbuild_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fdevtools_2fcloudbuild_2fv1_2fcloudbuild_2eproto::file_level_metadata[21];
}
void BuildTrigger::BuildTrigger_SubstitutionsEntry::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}
void BuildTrigger::BuildTrigger_SubstitutionsEntry::MergeFrom(const BuildTrigger_SubstitutionsEntry& other) {
  MergeFromInternal(other);
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BuildTrigger::kIdFieldNumber;
const int BuildTrigger::kDescriptionFieldNumber;
const int BuildTrigger::kTriggerTemplateFieldNumber;
const int BuildTrigger::kBuildFieldNumber;
const int BuildTrigger::kFilenameFieldNumber;
const int BuildTrigger::kCreateTimeFieldNumber;
const int BuildTrigger::kDisabledFieldNumber;
const int BuildTrigger::kSubstitutionsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BuildTrigger::BuildTrigger()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_google_2fdevtools_2fcloudbuild_2fv1_2fcloudbuild_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.devtools.cloudbuild.v1.BuildTrigger)
}
BuildTrigger::BuildTrigger(const BuildTrigger& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  substitutions_.MergeFrom(from.substitutions_);
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.id().size() > 0) {
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.description().size() > 0) {
    description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.description_);
  }
  if (from.has_create_time()) {
    create_time_ = new ::google::protobuf::Timestamp(*from.create_time_);
  } else {
    create_time_ = NULL;
  }
  if (from.has_trigger_template()) {
    trigger_template_ = new ::google::devtools::cloudbuild::v1::RepoSource(*from.trigger_template_);
  } else {
    trigger_template_ = NULL;
  }
  disabled_ = from.disabled_;
  clear_has_build_template();
  switch (from.build_template_case()) {
    case kBuild: {
      mutable_build()->::google::devtools::cloudbuild::v1::Build::MergeFrom(from.build());
      break;
    }
    case kFilename: {
      set_filename(from.filename());
      break;
    }
    case BUILD_TEMPLATE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:google.devtools.cloudbuild.v1.BuildTrigger)
}

void BuildTrigger::SharedCtor() {
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&create_time_, 0, reinterpret_cast<char*>(&disabled_) -
    reinterpret_cast<char*>(&create_time_) + sizeof(disabled_));
  clear_has_build_template();
  _cached_size_ = 0;
}

BuildTrigger::~BuildTrigger() {
  // @@protoc_insertion_point(destructor:google.devtools.cloudbuild.v1.BuildTrigger)
  SharedDtor();
}

void BuildTrigger::SharedDtor() {
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete create_time_;
  }
  if (this != internal_default_instance()) {
    delete trigger_template_;
  }
  if (has_build_template()) {
    clear_build_template();
  }
}

void BuildTrigger::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BuildTrigger::descriptor() {
  protobuf_google_2fdevtools_2fcloudbuild_2fv1_2fcloudbuild_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fdevtools_2fcloudbuild_2fv1_2fcloudbuild_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BuildTrigger& BuildTrigger::default_instance() {
  protobuf_google_2fdevtools_2fcloudbuild_2fv1_2fcloudbuild_2eproto::InitDefaults();
  return *internal_default_instance();
}

BuildTrigger* BuildTrigger::New(::google::protobuf::Arena* arena) const {
  BuildTrigger* n = new BuildTrigger;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BuildTrigger::clear_build_template() {
// @@protoc_insertion_point(one_of_clear_start:google.devtools.cloudbuild.v1.BuildTrigger)
  switch (build_template_case()) {
    case kBuild: {
      delete build_template_.build_;
      break;
    }
    case kFilename: {
      build_template_.filename_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case BUILD_TEMPLATE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = BUILD_TEMPLATE_NOT_SET;
}


void BuildTrigger::Clear() {
// @@protoc_insertion_point(message_clear_start:google.devtools.cloudbuild.v1.BuildTrigger)
  substitutions_.Clear();
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && create_time_ != NULL) {
    delete create_time_;
  }
  create_time_ = NULL;
  if (GetArenaNoVirtual() == NULL && trigger_template_ != NULL) {
    delete trigger_template_;
  }
  trigger_template_ = NULL;
  disabled_ = false;
  clear_build_template();
}

bool BuildTrigger::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.devtools.cloudbuild.v1.BuildTrigger)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->id().data(), this->id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.cloudbuild.v1.BuildTrigger.id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.devtools.cloudbuild.v1.Build build = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_build()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Timestamp create_time = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_create_time()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.devtools.cloudbuild.v1.RepoSource trigger_template = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_trigger_template()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string filename = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_filename()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->filename().data(), this->filename().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.cloudbuild.v1.BuildTrigger.filename"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool disabled = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &disabled_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string description = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_description()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->description().data(), this->description().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.cloudbuild.v1.BuildTrigger.description"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, string> substitutions = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u)) {
          BuildTrigger_SubstitutionsEntry::Parser< ::google::protobuf::internal::MapField<
              BuildTrigger_SubstitutionsEntry,
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&substitutions_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), parser.key().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.cloudbuild.v1.BuildTrigger.SubstitutionsEntry.key"));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.value().data(), parser.value().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.cloudbuild.v1.BuildTrigger.SubstitutionsEntry.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.devtools.cloudbuild.v1.BuildTrigger)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.devtools.cloudbuild.v1.BuildTrigger)
  return false;
#undef DO_
}

void BuildTrigger::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.devtools.cloudbuild.v1.BuildTrigger)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.cloudbuild.v1.BuildTrigger.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->id(), output);
  }

  // .google.devtools.cloudbuild.v1.Build build = 4;
  if (has_build()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *build_template_.build_, output);
  }

  // .google.protobuf.Timestamp create_time = 5;
  if (this->has_create_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *this->create_time_, output);
  }

  // .google.devtools.cloudbuild.v1.RepoSource trigger_template = 7;
  if (this->has_trigger_template()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, *this->trigger_template_, output);
  }

  // string filename = 8;
  if (has_filename()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->filename().data(), this->filename().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.cloudbuild.v1.BuildTrigger.filename");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->filename(), output);
  }

  // bool disabled = 9;
  if (this->disabled() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(9, this->disabled(), output);
  }

  // string description = 10;
  if (this->description().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->description().data(), this->description().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.cloudbuild.v1.BuildTrigger.description");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->description(), output);
  }

  // map<string, string> substitutions = 11;
  if (!this->substitutions().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), p->first.length(),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.devtools.cloudbuild.v1.BuildTrigger.SubstitutionsEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), p->second.length(),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.devtools.cloudbuild.v1.BuildTrigger.SubstitutionsEntry.value");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->substitutions().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->substitutions().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->substitutions().begin();
          it != this->substitutions().end(); ++it, ++n) {
        items[n] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[n], Less());
      ::google::protobuf::scoped_ptr<BuildTrigger_SubstitutionsEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(substitutions_.NewEntryWrapper(
            items[i]->first, items[i]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            11, *entry, output);
        Utf8Check::Check(items[i]);
      }
    } else {
      ::google::protobuf::scoped_ptr<BuildTrigger_SubstitutionsEntry> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->substitutions().begin();
          it != this->substitutions().end(); ++it) {
        entry.reset(substitutions_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            11, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  // @@protoc_insertion_point(serialize_end:google.devtools.cloudbuild.v1.BuildTrigger)
}

::google::protobuf::uint8* BuildTrigger::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.devtools.cloudbuild.v1.BuildTrigger)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.cloudbuild.v1.BuildTrigger.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->id(), target);
  }

  // .google.devtools.cloudbuild.v1.Build build = 4;
  if (has_build()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, *build_template_.build_, deterministic, target);
  }

  // .google.protobuf.Timestamp create_time = 5;
  if (this->has_create_time()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, *this->create_time_, deterministic, target);
  }

  // .google.devtools.cloudbuild.v1.RepoSource trigger_template = 7;
  if (this->has_trigger_template()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        7, *this->trigger_template_, deterministic, target);
  }

  // string filename = 8;
  if (has_filename()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->filename().data(), this->filename().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.cloudbuild.v1.BuildTrigger.filename");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->filename(), target);
  }

  // bool disabled = 9;
  if (this->disabled() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(9, this->disabled(), target);
  }

  // string description = 10;
  if (this->description().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->description().data(), this->description().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.cloudbuild.v1.BuildTrigger.description");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->description(), target);
  }

  // map<string, string> substitutions = 11;
  if (!this->substitutions().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), p->first.length(),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.devtools.cloudbuild.v1.BuildTrigger.SubstitutionsEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), p->second.length(),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.devtools.cloudbuild.v1.BuildTrigger.SubstitutionsEntry.value");
      }
    };

    if (deterministic &&
        this->substitutions().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->substitutions().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->substitutions().begin();
          it != this->substitutions().end(); ++it, ++n) {
        items[n] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[n], Less());
      ::google::protobuf::scoped_ptr<BuildTrigger_SubstitutionsEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(substitutions_.NewEntryWrapper(
            items[i]->first, items[i]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       11, *entry, deterministic, target);
;
        Utf8Check::Check(items[i]);
      }
    } else {
      ::google::protobuf::scoped_ptr<BuildTrigger_SubstitutionsEntry> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->substitutions().begin();
          it != this->substitutions().end(); ++it) {
        entry.reset(substitutions_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       11, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.devtools.cloudbuild.v1.BuildTrigger)
  return target;
}

size_t BuildTrigger::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.devtools.cloudbuild.v1.BuildTrigger)
  size_t total_size = 0;

  // map<string, string> substitutions = 11;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->substitutions_size());
  {
    ::google::protobuf::scoped_ptr<BuildTrigger_SubstitutionsEntry> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->substitutions().begin();
        it != this->substitutions().end(); ++it) {
      entry.reset(substitutions_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // string id = 1;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  // string description = 10;
  if (this->description().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->description());
  }

  // .google.protobuf.Timestamp create_time = 5;
  if (this->has_create_time()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->create_time_);
  }

  // .google.devtools.cloudbuild.v1.RepoSource trigger_template = 7;
  if (this->has_trigger_template()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->trigger_template_);
  }

  // bool disabled = 9;
  if (this->disabled() != 0) {
    total_size += 1 + 1;
  }

  switch (build_template_case()) {
    // .google.devtools.cloudbuild.v1.Build build = 4;
    case kBuild: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *build_template_.build_);
      break;
    }
    // string filename = 8;
    case kFilename: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->filename());
      break;
    }
    case BUILD_TEMPLATE_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BuildTrigger::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.devtools.cloudbuild.v1.BuildTrigger)
  GOOGLE_DCHECK_NE(&from, this);
  const BuildTrigger* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BuildTrigger>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.devtools.cloudbuild.v1.BuildTrigger)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.devtools.cloudbuild.v1.BuildTrigger)
    MergeFrom(*source);
  }
}

void BuildTrigger::MergeFrom(const BuildTrigger& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.devtools.cloudbuild.v1.BuildTrigger)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  substitutions_.MergeFrom(from.substitutions_);
  if (from.id().size() > 0) {

    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  if (from.description().size() > 0) {

    description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.description_);
  }
  if (from.has_create_time()) {
    mutable_create_time()->::google::protobuf::Timestamp::MergeFrom(from.create_time());
  }
  if (from.has_trigger_template()) {
    mutable_trigger_template()->::google::devtools::cloudbuild::v1::RepoSource::MergeFrom(from.trigger_template());
  }
  if (from.disabled() != 0) {
    set_disabled(from.disabled());
  }
  switch (from.build_template_case()) {
    case kBuild: {
      mutable_build()->::google::devtools::cloudbuild::v1::Build::MergeFrom(from.build());
      break;
    }
    case kFilename: {
      set_filename(from.filename());
      break;
    }
    case BUILD_TEMPLATE_NOT_SET: {
      break;
    }
  }
}

void BuildTrigger::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.devtools.cloudbuild.v1.BuildTrigger)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BuildTrigger::CopyFrom(const BuildTrigger& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.devtools.cloudbuild.v1.BuildTrigger)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BuildTrigger::IsInitialized() const {
  return true;
}

void BuildTrigger::Swap(BuildTrigger* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BuildTrigger::InternalSwap(BuildTrigger* other) {
  substitutions_.Swap(&other->substitutions_);
  id_.Swap(&other->id_);
  description_.Swap(&other->description_);
  std::swap(create_time_, other->create_time_);
  std::swap(trigger_template_, other->trigger_template_);
  std::swap(disabled_, other->disabled_);
  std::swap(build_template_, other->build_template_);
  std::swap(_oneof_case_[0], other->_oneof_case_[0]);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BuildTrigger::GetMetadata() const {
  protobuf_google_2fdevtools_2fcloudbuild_2fv1_2fcloudbuild_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fdevtools_2fcloudbuild_2fv1_2fcloudbuild_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BuildTrigger

// string id = 1;
void BuildTrigger::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& BuildTrigger::id() const {
  // @@protoc_insertion_point(field_get:google.devtools.cloudbuild.v1.BuildTrigger.id)
  return id_.GetNoArena();
}
void BuildTrigger::set_id(const ::std::string& value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.cloudbuild.v1.BuildTrigger.id)
}
#if LANG_CXX11
void BuildTrigger::set_id(::std::string&& value) {
  
  id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.devtools.cloudbuild.v1.BuildTrigger.id)
}
#endif
void BuildTrigger::set_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.cloudbuild.v1.BuildTrigger.id)
}
void BuildTrigger::set_id(const char* value, size_t size) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.cloudbuild.v1.BuildTrigger.id)
}
::std::string* BuildTrigger::mutable_id() {
  
  // @@protoc_insertion_point(field_mutable:google.devtools.cloudbuild.v1.BuildTrigger.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* BuildTrigger::release_id() {
  // @@protoc_insertion_point(field_release:google.devtools.cloudbuild.v1.BuildTrigger.id)
  
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void BuildTrigger::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    
  } else {
    
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:google.devtools.cloudbuild.v1.BuildTrigger.id)
}

// string description = 10;
void BuildTrigger::clear_description() {
  description_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& BuildTrigger::description() const {
  // @@protoc_insertion_point(field_get:google.devtools.cloudbuild.v1.BuildTrigger.description)
  return description_.GetNoArena();
}
void BuildTrigger::set_description(const ::std::string& value) {
  
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.cloudbuild.v1.BuildTrigger.description)
}
#if LANG_CXX11
void BuildTrigger::set_description(::std::string&& value) {
  
  description_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.devtools.cloudbuild.v1.BuildTrigger.description)
}
#endif
void BuildTrigger::set_description(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.cloudbuild.v1.BuildTrigger.description)
}
void BuildTrigger::set_description(const char* value, size_t size) {
  
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.cloudbuild.v1.BuildTrigger.description)
}
::std::string* BuildTrigger::mutable_description() {
  
  // @@protoc_insertion_point(field_mutable:google.devtools.cloudbuild.v1.BuildTrigger.description)
  return description_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* BuildTrigger::release_description() {
  // @@protoc_insertion_point(field_release:google.devtools.cloudbuild.v1.BuildTrigger.description)
  
  return description_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void BuildTrigger::set_allocated_description(::std::string* description) {
  if (description != NULL) {
    
  } else {
    
  }
  description_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), description);
  // @@protoc_insertion_point(field_set_allocated:google.devtools.cloudbuild.v1.BuildTrigger.description)
}

// .google.devtools.cloudbuild.v1.RepoSource trigger_template = 7;
bool BuildTrigger::has_trigger_template() const {
  return this != internal_default_instance() && trigger_template_ != NULL;
}
void BuildTrigger::clear_trigger_template() {
  if (GetArenaNoVirtual() == NULL && trigger_template_ != NULL) delete trigger_template_;
  trigger_template_ = NULL;
}
const ::google::devtools::cloudbuild::v1::RepoSource& BuildTrigger::trigger_template() const {
  // @@protoc_insertion_point(field_get:google.devtools.cloudbuild.v1.BuildTrigger.trigger_template)
  return trigger_template_ != NULL ? *trigger_template_
                         : *::google::devtools::cloudbuild::v1::RepoSource::internal_default_instance();
}
::google::devtools::cloudbuild::v1::RepoSource* BuildTrigger::mutable_trigger_template() {
  
  if (trigger_template_ == NULL) {
    trigger_template_ = new ::google::devtools::cloudbuild::v1::RepoSource;
  }
  // @@protoc_insertion_point(field_mutable:google.devtools.cloudbuild.v1.BuildTrigger.trigger_template)
  return trigger_template_;
}
::google::devtools::cloudbuild::v1::RepoSource* BuildTrigger::release_trigger_template() {
  // @@protoc_insertion_point(field_release:google.devtools.cloudbuild.v1.BuildTrigger.trigger_template)
  
  ::google::devtools::cloudbuild::v1::RepoSource* temp = trigger_template_;
  trigger_template_ = NULL;
  return temp;
}
void BuildTrigger::set_allocated_trigger_template(::google::devtools::cloudbuild::v1::RepoSource* trigger_template) {
  delete trigger_template_;
  trigger_template_ = trigger_template;
  if (trigger_template) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.devtools.cloudbuild.v1.BuildTrigger.trigger_template)
}

// .google.devtools.cloudbuild.v1.Build build = 4;
bool BuildTrigger::has_build() const {
  return build_template_case() == kBuild;
}
void BuildTrigger::set_has_build() {
  _oneof_case_[0] = kBuild;
}
void BuildTrigger::clear_build() {
  if (has_build()) {
    delete build_template_.build_;
    clear_has_build_template();
  }
}
 const ::google::devtools::cloudbuild::v1::Build& BuildTrigger::build() const {
  // @@protoc_insertion_point(field_get:google.devtools.cloudbuild.v1.BuildTrigger.build)
  return has_build()
      ? *build_template_.build_
      : ::google::devtools::cloudbuild::v1::Build::default_instance();
}
::google::devtools::cloudbuild::v1::Build* BuildTrigger::mutable_build() {
  if (!has_build()) {
    clear_build_template();
    set_has_build();
    build_template_.build_ = new ::google::devtools::cloudbuild::v1::Build;
  }
  // @@protoc_insertion_point(field_mutable:google.devtools.cloudbuild.v1.BuildTrigger.build)
  return build_template_.build_;
}
::google::devtools::cloudbuild::v1::Build* BuildTrigger::release_build() {
  // @@protoc_insertion_point(field_release:google.devtools.cloudbuild.v1.BuildTrigger.build)
  if (has_build()) {
    clear_has_build_template();
    ::google::devtools::cloudbuild::v1::Build* temp = build_template_.build_;
    build_template_.build_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void BuildTrigger::set_allocated_build(::google::devtools::cloudbuild::v1::Build* build) {
  clear_build_template();
  if (build) {
    set_has_build();
    build_template_.build_ = build;
  }
  // @@protoc_insertion_point(field_set_allocated:google.devtools.cloudbuild.v1.BuildTrigger.build)
}

// string filename = 8;
bool BuildTrigger::has_filename() const {
  return build_template_case() == kFilename;
}
void BuildTrigger::set_has_filename() {
  _oneof_case_[0] = kFilename;
}
void BuildTrigger::clear_filename() {
  if (has_filename()) {
    build_template_.filename_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_build_template();
  }
}
const ::std::string& BuildTrigger::filename() const {
  // @@protoc_insertion_point(field_get:google.devtools.cloudbuild.v1.BuildTrigger.filename)
  if (has_filename()) {
    return build_template_.filename_.GetNoArena();
  }
  return *&::google::protobuf::internal::GetEmptyStringAlreadyInited();
}
void BuildTrigger::set_filename(const ::std::string& value) {
  // @@protoc_insertion_point(field_set:google.devtools.cloudbuild.v1.BuildTrigger.filename)
  if (!has_filename()) {
    clear_build_template();
    set_has_filename();
    build_template_.filename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  build_template_.filename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.cloudbuild.v1.BuildTrigger.filename)
}
#if LANG_CXX11
void BuildTrigger::set_filename(::std::string&& value) {
  // @@protoc_insertion_point(field_set:google.devtools.cloudbuild.v1.BuildTrigger.filename)
  if (!has_filename()) {
    clear_build_template();
    set_has_filename();
    build_template_.filename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  build_template_.filename_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.devtools.cloudbuild.v1.BuildTrigger.filename)
}
#endif
void BuildTrigger::set_filename(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  if (!has_filename()) {
    clear_build_template();
    set_has_filename();
    build_template_.filename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  build_template_.filename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.cloudbuild.v1.BuildTrigger.filename)
}
void BuildTrigger::set_filename(const char* value, size_t size) {
  if (!has_filename()) {
    clear_build_template();
    set_has_filename();
    build_template_.filename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  build_template_.filename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.cloudbuild.v1.BuildTrigger.filename)
}
::std::string* BuildTrigger::mutable_filename() {
  if (!has_filename()) {
    clear_build_template();
    set_has_filename();
    build_template_.filename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_mutable:google.devtools.cloudbuild.v1.BuildTrigger.filename)
  return build_template_.filename_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* BuildTrigger::release_filename() {
  // @@protoc_insertion_point(field_release:google.devtools.cloudbuild.v1.BuildTrigger.filename)
  if (has_filename()) {
    clear_has_build_template();
    return build_template_.filename_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  } else {
    return NULL;
  }
}
void BuildTrigger::set_allocated_filename(::std::string* filename) {
  if (!has_filename()) {
    build_template_.filename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  clear_build_template();
  if (filename != NULL) {
    set_has_filename();
    build_template_.filename_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        filename);
  }
  // @@protoc_insertion_point(field_set_allocated:google.devtools.cloudbuild.v1.BuildTrigger.filename)
}

// .google.protobuf.Timestamp create_time = 5;
bool BuildTrigger::has_create_time() const {
  return this != internal_default_instance() && create_time_ != NULL;
}
void BuildTrigger::clear_create_time() {
  if (GetArenaNoVirtual() == NULL && create_time_ != NULL) delete create_time_;
  create_time_ = NULL;
}
const ::google::protobuf::Timestamp& BuildTrigger::create_time() const {
  // @@protoc_insertion_point(field_get:google.devtools.cloudbuild.v1.BuildTrigger.create_time)
  return create_time_ != NULL ? *create_time_
                         : *::google::protobuf::Timestamp::internal_default_instance();
}
::google::protobuf::Timestamp* BuildTrigger::mutable_create_time() {
  
  if (create_time_ == NULL) {
    create_time_ = new ::google::protobuf::Timestamp;
  }
  // @@protoc_insertion_point(field_mutable:google.devtools.cloudbuild.v1.BuildTrigger.create_time)
  return create_time_;
}
::google::protobuf::Timestamp* BuildTrigger::release_create_time() {
  // @@protoc_insertion_point(field_release:google.devtools.cloudbuild.v1.BuildTrigger.create_time)
  
  ::google::protobuf::Timestamp* temp = create_time_;
  create_time_ = NULL;
  return temp;
}
void BuildTrigger::set_allocated_create_time(::google::protobuf::Timestamp* create_time) {
  delete create_time_;
  if (create_time != NULL && create_time->GetArena() != NULL) {
    ::google::protobuf::Timestamp* new_create_time = new ::google::protobuf::Timestamp;
    new_create_time->CopyFrom(*create_time);
    create_time = new_create_time;
  }
  create_time_ = create_time;
  if (create_time) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.devtools.cloudbuild.v1.BuildTrigger.create_time)
}

// bool disabled = 9;
void BuildTrigger::clear_disabled() {
  disabled_ = false;
}
bool BuildTrigger::disabled() const {
  // @@protoc_insertion_point(field_get:google.devtools.cloudbuild.v1.BuildTrigger.disabled)
  return disabled_;
}
void BuildTrigger::set_disabled(bool value) {
  
  disabled_ = value;
  // @@protoc_insertion_point(field_set:google.devtools.cloudbuild.v1.BuildTrigger.disabled)
}

// map<string, string> substitutions = 11;
int BuildTrigger::substitutions_size() const {
  return substitutions_.size();
}
void BuildTrigger::clear_substitutions() {
  substitutions_.Clear();
}
 const ::google::protobuf::Map< ::std::string, ::std::string >&
BuildTrigger::substitutions() const {
  // @@protoc_insertion_point(field_map:google.devtools.cloudbuild.v1.BuildTrigger.substitutions)
  return substitutions_.GetMap();
}
 ::google::protobuf::Map< ::std::string, ::std::string >*
BuildTrigger::mutable_substitutions() {
  // @@protoc_insertion_point(field_mutable_map:google.devtools.cloudbuild.v1.BuildTrigger.substitutions)
  return substitutions_.MutableMap();
}

bool BuildTrigger::has_build_template() const {
  return build_template_case() != BUILD_TEMPLATE_NOT_SET;
}
void BuildTrigger::clear_has_build_template() {
  _oneof_case_[0] = BUILD_TEMPLATE_NOT_SET;
}
BuildTrigger::BuildTemplateCase BuildTrigger::build_template_case() const {
  return BuildTrigger::BuildTemplateCase(_oneof_case_[0]);
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CreateBuildTriggerRequest::kProjectIdFieldNumber;
const int CreateBuildTriggerRequest::kTriggerFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CreateBuildTriggerRequest::CreateBuildTriggerRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_google_2fdevtools_2fcloudbuild_2fv1_2fcloudbuild_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.devtools.cloudbuild.v1.CreateBuildTriggerRequest)
}
CreateBuildTriggerRequest::CreateBuildTriggerRequest(const CreateBuildTriggerRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.project_id().size() > 0) {
    project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
  }
  if (from.has_trigger()) {
    trigger_ = new ::google::devtools::cloudbuild::v1::BuildTrigger(*from.trigger_);
  } else {
    trigger_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.devtools.cloudbuild.v1.CreateBuildTriggerRequest)
}

void CreateBuildTriggerRequest::SharedCtor() {
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  trigger_ = NULL;
  _cached_size_ = 0;
}

CreateBuildTriggerRequest::~CreateBuildTriggerRequest() {
  // @@protoc_insertion_point(destructor:google.devtools.cloudbuild.v1.CreateBuildTriggerRequest)
  SharedDtor();
}

void CreateBuildTriggerRequest::SharedDtor() {
  project_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete trigger_;
  }
}

void CreateBuildTriggerRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CreateBuildTriggerRequest::descriptor() {
  protobuf_google_2fdevtools_2fcloudbuild_2fv1_2fcloudbuild_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fdevtools_2fcloudbuild_2fv1_2fcloudbuild_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CreateBuildTriggerRequest& CreateBuildTriggerRequest::default_instance() {
  protobuf_google_2fdevtools_2fcloudbuild_2fv1_2fcloudbuild_2eproto::InitDefaults();
  return *internal_default_instance();
}

CreateBuildTriggerRequest* CreateBuildTriggerRequest::New(::google::protobuf::Arena* arena) const {
  CreateBuildTriggerRequest* n = new CreateBuildTriggerRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CreateBuildTriggerRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.devtools.cloudbuild.v1.CreateBuildTriggerRequest)
  project_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && trigger_ != NULL) {
    delete trigger_;
  }
  trigger_ = NULL;
}

bool CreateBuildTriggerRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.devtools.cloudbuild.v1.CreateBuildTriggerRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string project_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_project_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->project_id().data(), this->project_id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.cloudbuild.v1.CreateBuildTriggerRequest.project_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.devtools.cloudbuild.v1.BuildTrigger trigger = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_trigger()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.devtools.cloudbuild.v1.CreateBuildTriggerRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.devtools.cloudbuild.v1.CreateBuildTriggerRequest)
  return false;
#undef DO_
}

void CreateBuildTriggerRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.devtools.cloudbuild.v1.CreateBuildTriggerRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string project_id = 1;
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), this->project_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.cloudbuild.v1.CreateBuildTriggerRequest.project_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->project_id(), output);
  }

  // .google.devtools.cloudbuild.v1.BuildTrigger trigger = 2;
  if (this->has_trigger()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->trigger_, output);
  }

  // @@protoc_insertion_point(serialize_end:google.devtools.cloudbuild.v1.CreateBuildTriggerRequest)
}

::google::protobuf::uint8* CreateBuildTriggerRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.devtools.cloudbuild.v1.CreateBuildTriggerRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string project_id = 1;
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), this->project_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.cloudbuild.v1.CreateBuildTriggerRequest.project_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->project_id(), target);
  }

  // .google.devtools.cloudbuild.v1.BuildTrigger trigger = 2;
  if (this->has_trigger()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->trigger_, deterministic, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.devtools.cloudbuild.v1.CreateBuildTriggerRequest)
  return target;
}

size_t CreateBuildTriggerRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.devtools.cloudbuild.v1.CreateBuildTriggerRequest)
  size_t total_size = 0;

  // string project_id = 1;
  if (this->project_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->project_id());
  }

  // .google.devtools.cloudbuild.v1.BuildTrigger trigger = 2;
  if (this->has_trigger()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->trigger_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CreateBuildTriggerRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.devtools.cloudbuild.v1.CreateBuildTriggerRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateBuildTriggerRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CreateBuildTriggerRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.devtools.cloudbuild.v1.CreateBuildTriggerRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.devtools.cloudbuild.v1.CreateBuildTriggerRequest)
    MergeFrom(*source);
  }
}

void CreateBuildTriggerRequest::MergeFrom(const CreateBuildTriggerRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.devtools.cloudbuild.v1.CreateBuildTriggerRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.project_id().size() > 0) {

    project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
  }
  if (from.has_trigger()) {
    mutable_trigger()->::google::devtools::cloudbuild::v1::BuildTrigger::MergeFrom(from.trigger());
  }
}

void CreateBuildTriggerRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.devtools.cloudbuild.v1.CreateBuildTriggerRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateBuildTriggerRequest::CopyFrom(const CreateBuildTriggerRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.devtools.cloudbuild.v1.CreateBuildTriggerRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateBuildTriggerRequest::IsInitialized() const {
  return true;
}

void CreateBuildTriggerRequest::Swap(CreateBuildTriggerRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CreateBuildTriggerRequest::InternalSwap(CreateBuildTriggerRequest* other) {
  project_id_.Swap(&other->project_id_);
  std::swap(trigger_, other->trigger_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CreateBuildTriggerRequest::GetMetadata() const {
  protobuf_google_2fdevtools_2fcloudbuild_2fv1_2fcloudbuild_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fdevtools_2fcloudbuild_2fv1_2fcloudbuild_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CreateBuildTriggerRequest

// string project_id = 1;
void CreateBuildTriggerRequest::clear_project_id() {
  project_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& CreateBuildTriggerRequest::project_id() const {
  // @@protoc_insertion_point(field_get:google.devtools.cloudbuild.v1.CreateBuildTriggerRequest.project_id)
  return project_id_.GetNoArena();
}
void CreateBuildTriggerRequest::set_project_id(const ::std::string& value) {
  
  project_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.cloudbuild.v1.CreateBuildTriggerRequest.project_id)
}
#if LANG_CXX11
void CreateBuildTriggerRequest::set_project_id(::std::string&& value) {
  
  project_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.devtools.cloudbuild.v1.CreateBuildTriggerRequest.project_id)
}
#endif
void CreateBuildTriggerRequest::set_project_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  project_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.cloudbuild.v1.CreateBuildTriggerRequest.project_id)
}
void CreateBuildTriggerRequest::set_project_id(const char* value, size_t size) {
  
  project_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.cloudbuild.v1.CreateBuildTriggerRequest.project_id)
}
::std::string* CreateBuildTriggerRequest::mutable_project_id() {
  
  // @@protoc_insertion_point(field_mutable:google.devtools.cloudbuild.v1.CreateBuildTriggerRequest.project_id)
  return project_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CreateBuildTriggerRequest::release_project_id() {
  // @@protoc_insertion_point(field_release:google.devtools.cloudbuild.v1.CreateBuildTriggerRequest.project_id)
  
  return project_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CreateBuildTriggerRequest::set_allocated_project_id(::std::string* project_id) {
  if (project_id != NULL) {
    
  } else {
    
  }
  project_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), project_id);
  // @@protoc_insertion_point(field_set_allocated:google.devtools.cloudbuild.v1.CreateBuildTriggerRequest.project_id)
}

// .google.devtools.cloudbuild.v1.BuildTrigger trigger = 2;
bool CreateBuildTriggerRequest::has_trigger() const {
  return this != internal_default_instance() && trigger_ != NULL;
}
void CreateBuildTriggerRequest::clear_trigger() {
  if (GetArenaNoVirtual() == NULL && trigger_ != NULL) delete trigger_;
  trigger_ = NULL;
}
const ::google::devtools::cloudbuild::v1::BuildTrigger& CreateBuildTriggerRequest::trigger() const {
  // @@protoc_insertion_point(field_get:google.devtools.cloudbuild.v1.CreateBuildTriggerRequest.trigger)
  return trigger_ != NULL ? *trigger_
                         : *::google::devtools::cloudbuild::v1::BuildTrigger::internal_default_instance();
}
::google::devtools::cloudbuild::v1::BuildTrigger* CreateBuildTriggerRequest::mutable_trigger() {
  
  if (trigger_ == NULL) {
    trigger_ = new ::google::devtools::cloudbuild::v1::BuildTrigger;
  }
  // @@protoc_insertion_point(field_mutable:google.devtools.cloudbuild.v1.CreateBuildTriggerRequest.trigger)
  return trigger_;
}
::google::devtools::cloudbuild::v1::BuildTrigger* CreateBuildTriggerRequest::release_trigger() {
  // @@protoc_insertion_point(field_release:google.devtools.cloudbuild.v1.CreateBuildTriggerRequest.trigger)
  
  ::google::devtools::cloudbuild::v1::BuildTrigger* temp = trigger_;
  trigger_ = NULL;
  return temp;
}
void CreateBuildTriggerRequest::set_allocated_trigger(::google::devtools::cloudbuild::v1::BuildTrigger* trigger) {
  delete trigger_;
  trigger_ = trigger;
  if (trigger) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.devtools.cloudbuild.v1.CreateBuildTriggerRequest.trigger)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetBuildTriggerRequest::kProjectIdFieldNumber;
const int GetBuildTriggerRequest::kTriggerIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetBuildTriggerRequest::GetBuildTriggerRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_google_2fdevtools_2fcloudbuild_2fv1_2fcloudbuild_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.devtools.cloudbuild.v1.GetBuildTriggerRequest)
}
GetBuildTriggerRequest::GetBuildTriggerRequest(const GetBuildTriggerRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.project_id().size() > 0) {
    project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
  }
  trigger_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.trigger_id().size() > 0) {
    trigger_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.trigger_id_);
  }
  // @@protoc_insertion_point(copy_constructor:google.devtools.cloudbuild.v1.GetBuildTriggerRequest)
}

void GetBuildTriggerRequest::SharedCtor() {
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  trigger_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

GetBuildTriggerRequest::~GetBuildTriggerRequest() {
  // @@protoc_insertion_point(destructor:google.devtools.cloudbuild.v1.GetBuildTriggerRequest)
  SharedDtor();
}

void GetBuildTriggerRequest::SharedDtor() {
  project_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  trigger_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GetBuildTriggerRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetBuildTriggerRequest::descriptor() {
  protobuf_google_2fdevtools_2fcloudbuild_2fv1_2fcloudbuild_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fdevtools_2fcloudbuild_2fv1_2fcloudbuild_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetBuildTriggerRequest& GetBuildTriggerRequest::default_instance() {
  protobuf_google_2fdevtools_2fcloudbuild_2fv1_2fcloudbuild_2eproto::InitDefaults();
  return *internal_default_instance();
}

GetBuildTriggerRequest* GetBuildTriggerRequest::New(::google::protobuf::Arena* arena) const {
  GetBuildTriggerRequest* n = new GetBuildTriggerRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetBuildTriggerRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.devtools.cloudbuild.v1.GetBuildTriggerRequest)
  project_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  trigger_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool GetBuildTriggerRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.devtools.cloudbuild.v1.GetBuildTriggerRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string project_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_project_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->project_id().data(), this->project_id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.cloudbuild.v1.GetBuildTriggerRequest.project_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string trigger_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_trigger_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->trigger_id().data(), this->trigger_id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.cloudbuild.v1.GetBuildTriggerRequest.trigger_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.devtools.cloudbuild.v1.GetBuildTriggerRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.devtools.cloudbuild.v1.GetBuildTriggerRequest)
  return false;
#undef DO_
}

void GetBuildTriggerRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.devtools.cloudbuild.v1.GetBuildTriggerRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string project_id = 1;
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), this->project_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.cloudbuild.v1.GetBuildTriggerRequest.project_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->project_id(), output);
  }

  // string trigger_id = 2;
  if (this->trigger_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->trigger_id().data(), this->trigger_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.cloudbuild.v1.GetBuildTriggerRequest.trigger_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->trigger_id(), output);
  }

  // @@protoc_insertion_point(serialize_end:google.devtools.cloudbuild.v1.GetBuildTriggerRequest)
}

::google::protobuf::uint8* GetBuildTriggerRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.devtools.cloudbuild.v1.GetBuildTriggerRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string project_id = 1;
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), this->project_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.cloudbuild.v1.GetBuildTriggerRequest.project_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->project_id(), target);
  }

  // string trigger_id = 2;
  if (this->trigger_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->trigger_id().data(), this->trigger_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.cloudbuild.v1.GetBuildTriggerRequest.trigger_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->trigger_id(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.devtools.cloudbuild.v1.GetBuildTriggerRequest)
  return target;
}

size_t GetBuildTriggerRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.devtools.cloudbuild.v1.GetBuildTriggerRequest)
  size_t total_size = 0;

  // string project_id = 1;
  if (this->project_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->project_id());
  }

  // string trigger_id = 2;
  if (this->trigger_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->trigger_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetBuildTriggerRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.devtools.cloudbuild.v1.GetBuildTriggerRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetBuildTriggerRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetBuildTriggerRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.devtools.cloudbuild.v1.GetBuildTriggerRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.devtools.cloudbuild.v1.GetBuildTriggerRequest)
    MergeFrom(*source);
  }
}

void GetBuildTriggerRequest::MergeFrom(const GetBuildTriggerRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.devtools.cloudbuild.v1.GetBuildTriggerRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.project_id().size() > 0) {

    project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
  }
  if (from.trigger_id().size() > 0) {

    trigger_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.trigger_id_);
  }
}

void GetBuildTriggerRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.devtools.cloudbuild.v1.GetBuildTriggerRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetBuildTriggerRequest::CopyFrom(const GetBuildTriggerRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.devtools.cloudbuild.v1.GetBuildTriggerRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetBuildTriggerRequest::IsInitialized() const {
  return true;
}

void GetBuildTriggerRequest::Swap(GetBuildTriggerRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetBuildTriggerRequest::InternalSwap(GetBuildTriggerRequest* other) {
  project_id_.Swap(&other->project_id_);
  trigger_id_.Swap(&other->trigger_id_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetBuildTriggerRequest::GetMetadata() const {
  protobuf_google_2fdevtools_2fcloudbuild_2fv1_2fcloudbuild_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fdevtools_2fcloudbuild_2fv1_2fcloudbuild_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetBuildTriggerRequest

// string project_id = 1;
void GetBuildTriggerRequest::clear_project_id() {
  project_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& GetBuildTriggerRequest::project_id() const {
  // @@protoc_insertion_point(field_get:google.devtools.cloudbuild.v1.GetBuildTriggerRequest.project_id)
  return project_id_.GetNoArena();
}
void GetBuildTriggerRequest::set_project_id(const ::std::string& value) {
  
  project_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.cloudbuild.v1.GetBuildTriggerRequest.project_id)
}
#if LANG_CXX11
void GetBuildTriggerRequest::set_project_id(::std::string&& value) {
  
  project_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.devtools.cloudbuild.v1.GetBuildTriggerRequest.project_id)
}
#endif
void GetBuildTriggerRequest::set_project_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  project_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.cloudbuild.v1.GetBuildTriggerRequest.project_id)
}
void GetBuildTriggerRequest::set_project_id(const char* value, size_t size) {
  
  project_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.cloudbuild.v1.GetBuildTriggerRequest.project_id)
}
::std::string* GetBuildTriggerRequest::mutable_project_id() {
  
  // @@protoc_insertion_point(field_mutable:google.devtools.cloudbuild.v1.GetBuildTriggerRequest.project_id)
  return project_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GetBuildTriggerRequest::release_project_id() {
  // @@protoc_insertion_point(field_release:google.devtools.cloudbuild.v1.GetBuildTriggerRequest.project_id)
  
  return project_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GetBuildTriggerRequest::set_allocated_project_id(::std::string* project_id) {
  if (project_id != NULL) {
    
  } else {
    
  }
  project_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), project_id);
  // @@protoc_insertion_point(field_set_allocated:google.devtools.cloudbuild.v1.GetBuildTriggerRequest.project_id)
}

// string trigger_id = 2;
void GetBuildTriggerRequest::clear_trigger_id() {
  trigger_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& GetBuildTriggerRequest::trigger_id() const {
  // @@protoc_insertion_point(field_get:google.devtools.cloudbuild.v1.GetBuildTriggerRequest.trigger_id)
  return trigger_id_.GetNoArena();
}
void GetBuildTriggerRequest::set_trigger_id(const ::std::string& value) {
  
  trigger_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.cloudbuild.v1.GetBuildTriggerRequest.trigger_id)
}
#if LANG_CXX11
void GetBuildTriggerRequest::set_trigger_id(::std::string&& value) {
  
  trigger_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.devtools.cloudbuild.v1.GetBuildTriggerRequest.trigger_id)
}
#endif
void GetBuildTriggerRequest::set_trigger_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  trigger_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.cloudbuild.v1.GetBuildTriggerRequest.trigger_id)
}
void GetBuildTriggerRequest::set_trigger_id(const char* value, size_t size) {
  
  trigger_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.cloudbuild.v1.GetBuildTriggerRequest.trigger_id)
}
::std::string* GetBuildTriggerRequest::mutable_trigger_id() {
  
  // @@protoc_insertion_point(field_mutable:google.devtools.cloudbuild.v1.GetBuildTriggerRequest.trigger_id)
  return trigger_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GetBuildTriggerRequest::release_trigger_id() {
  // @@protoc_insertion_point(field_release:google.devtools.cloudbuild.v1.GetBuildTriggerRequest.trigger_id)
  
  return trigger_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GetBuildTriggerRequest::set_allocated_trigger_id(::std::string* trigger_id) {
  if (trigger_id != NULL) {
    
  } else {
    
  }
  trigger_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), trigger_id);
  // @@protoc_insertion_point(field_set_allocated:google.devtools.cloudbuild.v1.GetBuildTriggerRequest.trigger_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListBuildTriggersRequest::kProjectIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListBuildTriggersRequest::ListBuildTriggersRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_google_2fdevtools_2fcloudbuild_2fv1_2fcloudbuild_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.devtools.cloudbuild.v1.ListBuildTriggersRequest)
}
ListBuildTriggersRequest::ListBuildTriggersRequest(const ListBuildTriggersRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.project_id().size() > 0) {
    project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
  }
  // @@protoc_insertion_point(copy_constructor:google.devtools.cloudbuild.v1.ListBuildTriggersRequest)
}

void ListBuildTriggersRequest::SharedCtor() {
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

ListBuildTriggersRequest::~ListBuildTriggersRequest() {
  // @@protoc_insertion_point(destructor:google.devtools.cloudbuild.v1.ListBuildTriggersRequest)
  SharedDtor();
}

void ListBuildTriggersRequest::SharedDtor() {
  project_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ListBuildTriggersRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ListBuildTriggersRequest::descriptor() {
  protobuf_google_2fdevtools_2fcloudbuild_2fv1_2fcloudbuild_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fdevtools_2fcloudbuild_2fv1_2fcloudbuild_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListBuildTriggersRequest& ListBuildTriggersRequest::default_instance() {
  protobuf_google_2fdevtools_2fcloudbuild_2fv1_2fcloudbuild_2eproto::InitDefaults();
  return *internal_default_instance();
}

ListBuildTriggersRequest* ListBuildTriggersRequest::New(::google::protobuf::Arena* arena) const {
  ListBuildTriggersRequest* n = new ListBuildTriggersRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ListBuildTriggersRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.devtools.cloudbuild.v1.ListBuildTriggersRequest)
  project_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool ListBuildTriggersRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.devtools.cloudbuild.v1.ListBuildTriggersRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string project_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_project_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->project_id().data(), this->project_id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.cloudbuild.v1.ListBuildTriggersRequest.project_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.devtools.cloudbuild.v1.ListBuildTriggersRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.devtools.cloudbuild.v1.ListBuildTriggersRequest)
  return false;
#undef DO_
}

void ListBuildTriggersRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.devtools.cloudbuild.v1.ListBuildTriggersRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string project_id = 1;
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), this->project_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.cloudbuild.v1.ListBuildTriggersRequest.project_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->project_id(), output);
  }

  // @@protoc_insertion_point(serialize_end:google.devtools.cloudbuild.v1.ListBuildTriggersRequest)
}

::google::protobuf::uint8* ListBuildTriggersRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.devtools.cloudbuild.v1.ListBuildTriggersRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string project_id = 1;
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), this->project_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.cloudbuild.v1.ListBuildTriggersRequest.project_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->project_id(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.devtools.cloudbuild.v1.ListBuildTriggersRequest)
  return target;
}

size_t ListBuildTriggersRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.devtools.cloudbuild.v1.ListBuildTriggersRequest)
  size_t total_size = 0;

  // string project_id = 1;
  if (this->project_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->project_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ListBuildTriggersRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.devtools.cloudbuild.v1.ListBuildTriggersRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ListBuildTriggersRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListBuildTriggersRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.devtools.cloudbuild.v1.ListBuildTriggersRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.devtools.cloudbuild.v1.ListBuildTriggersRequest)
    MergeFrom(*source);
  }
}

void ListBuildTriggersRequest::MergeFrom(const ListBuildTriggersRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.devtools.cloudbuild.v1.ListBuildTriggersRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.project_id().size() > 0) {

    project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
  }
}

void ListBuildTriggersRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.devtools.cloudbuild.v1.ListBuildTriggersRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListBuildTriggersRequest::CopyFrom(const ListBuildTriggersRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.devtools.cloudbuild.v1.ListBuildTriggersRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListBuildTriggersRequest::IsInitialized() const {
  return true;
}

void ListBuildTriggersRequest::Swap(ListBuildTriggersRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListBuildTriggersRequest::InternalSwap(ListBuildTriggersRequest* other) {
  project_id_.Swap(&other->project_id_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ListBuildTriggersRequest::GetMetadata() const {
  protobuf_google_2fdevtools_2fcloudbuild_2fv1_2fcloudbuild_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fdevtools_2fcloudbuild_2fv1_2fcloudbuild_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ListBuildTriggersRequest

// string project_id = 1;
void ListBuildTriggersRequest::clear_project_id() {
  project_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ListBuildTriggersRequest::project_id() const {
  // @@protoc_insertion_point(field_get:google.devtools.cloudbuild.v1.ListBuildTriggersRequest.project_id)
  return project_id_.GetNoArena();
}
void ListBuildTriggersRequest::set_project_id(const ::std::string& value) {
  
  project_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.cloudbuild.v1.ListBuildTriggersRequest.project_id)
}
#if LANG_CXX11
void ListBuildTriggersRequest::set_project_id(::std::string&& value) {
  
  project_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.devtools.cloudbuild.v1.ListBuildTriggersRequest.project_id)
}
#endif
void ListBuildTriggersRequest::set_project_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  project_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.cloudbuild.v1.ListBuildTriggersRequest.project_id)
}
void ListBuildTriggersRequest::set_project_id(const char* value, size_t size) {
  
  project_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.cloudbuild.v1.ListBuildTriggersRequest.project_id)
}
::std::string* ListBuildTriggersRequest::mutable_project_id() {
  
  // @@protoc_insertion_point(field_mutable:google.devtools.cloudbuild.v1.ListBuildTriggersRequest.project_id)
  return project_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ListBuildTriggersRequest::release_project_id() {
  // @@protoc_insertion_point(field_release:google.devtools.cloudbuild.v1.ListBuildTriggersRequest.project_id)
  
  return project_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ListBuildTriggersRequest::set_allocated_project_id(::std::string* project_id) {
  if (project_id != NULL) {
    
  } else {
    
  }
  project_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), project_id);
  // @@protoc_insertion_point(field_set_allocated:google.devtools.cloudbuild.v1.ListBuildTriggersRequest.project_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListBuildTriggersResponse::kTriggersFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListBuildTriggersResponse::ListBuildTriggersResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_google_2fdevtools_2fcloudbuild_2fv1_2fcloudbuild_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.devtools.cloudbuild.v1.ListBuildTriggersResponse)
}
ListBuildTriggersResponse::ListBuildTriggersResponse(const ListBuildTriggersResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      triggers_(from.triggers_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:google.devtools.cloudbuild.v1.ListBuildTriggersResponse)
}

void ListBuildTriggersResponse::SharedCtor() {
  _cached_size_ = 0;
}

ListBuildTriggersResponse::~ListBuildTriggersResponse() {
  // @@protoc_insertion_point(destructor:google.devtools.cloudbuild.v1.ListBuildTriggersResponse)
  SharedDtor();
}

void ListBuildTriggersResponse::SharedDtor() {
}

void ListBuildTriggersResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ListBuildTriggersResponse::descriptor() {
  protobuf_google_2fdevtools_2fcloudbuild_2fv1_2fcloudbuild_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fdevtools_2fcloudbuild_2fv1_2fcloudbuild_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListBuildTriggersResponse& ListBuildTriggersResponse::default_instance() {
  protobuf_google_2fdevtools_2fcloudbuild_2fv1_2fcloudbuild_2eproto::InitDefaults();
  return *internal_default_instance();
}

ListBuildTriggersResponse* ListBuildTriggersResponse::New(::google::protobuf::Arena* arena) const {
  ListBuildTriggersResponse* n = new ListBuildTriggersResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ListBuildTriggersResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:google.devtools.cloudbuild.v1.ListBuildTriggersResponse)
  triggers_.Clear();
}

bool ListBuildTriggersResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.devtools.cloudbuild.v1.ListBuildTriggersResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .google.devtools.cloudbuild.v1.BuildTrigger triggers = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_triggers()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.devtools.cloudbuild.v1.ListBuildTriggersResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.devtools.cloudbuild.v1.ListBuildTriggersResponse)
  return false;
#undef DO_
}

void ListBuildTriggersResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.devtools.cloudbuild.v1.ListBuildTriggersResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.devtools.cloudbuild.v1.BuildTrigger triggers = 1;
  for (unsigned int i = 0, n = this->triggers_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->triggers(i), output);
  }

  // @@protoc_insertion_point(serialize_end:google.devtools.cloudbuild.v1.ListBuildTriggersResponse)
}

::google::protobuf::uint8* ListBuildTriggersResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.devtools.cloudbuild.v1.ListBuildTriggersResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.devtools.cloudbuild.v1.BuildTrigger triggers = 1;
  for (unsigned int i = 0, n = this->triggers_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->triggers(i), deterministic, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.devtools.cloudbuild.v1.ListBuildTriggersResponse)
  return target;
}

size_t ListBuildTriggersResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.devtools.cloudbuild.v1.ListBuildTriggersResponse)
  size_t total_size = 0;

  // repeated .google.devtools.cloudbuild.v1.BuildTrigger triggers = 1;
  {
    unsigned int count = this->triggers_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->triggers(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ListBuildTriggersResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.devtools.cloudbuild.v1.ListBuildTriggersResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ListBuildTriggersResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListBuildTriggersResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.devtools.cloudbuild.v1.ListBuildTriggersResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.devtools.cloudbuild.v1.ListBuildTriggersResponse)
    MergeFrom(*source);
  }
}

void ListBuildTriggersResponse::MergeFrom(const ListBuildTriggersResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.devtools.cloudbuild.v1.ListBuildTriggersResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  triggers_.MergeFrom(from.triggers_);
}

void ListBuildTriggersResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.devtools.cloudbuild.v1.ListBuildTriggersResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListBuildTriggersResponse::CopyFrom(const ListBuildTriggersResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.devtools.cloudbuild.v1.ListBuildTriggersResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListBuildTriggersResponse::IsInitialized() const {
  return true;
}

void ListBuildTriggersResponse::Swap(ListBuildTriggersResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListBuildTriggersResponse::InternalSwap(ListBuildTriggersResponse* other) {
  triggers_.InternalSwap(&other->triggers_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ListBuildTriggersResponse::GetMetadata() const {
  protobuf_google_2fdevtools_2fcloudbuild_2fv1_2fcloudbuild_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fdevtools_2fcloudbuild_2fv1_2fcloudbuild_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ListBuildTriggersResponse

// repeated .google.devtools.cloudbuild.v1.BuildTrigger triggers = 1;
int ListBuildTriggersResponse::triggers_size() const {
  return triggers_.size();
}
void ListBuildTriggersResponse::clear_triggers() {
  triggers_.Clear();
}
const ::google::devtools::cloudbuild::v1::BuildTrigger& ListBuildTriggersResponse::triggers(int index) const {
  // @@protoc_insertion_point(field_get:google.devtools.cloudbuild.v1.ListBuildTriggersResponse.triggers)
  return triggers_.Get(index);
}
::google::devtools::cloudbuild::v1::BuildTrigger* ListBuildTriggersResponse::mutable_triggers(int index) {
  // @@protoc_insertion_point(field_mutable:google.devtools.cloudbuild.v1.ListBuildTriggersResponse.triggers)
  return triggers_.Mutable(index);
}
::google::devtools::cloudbuild::v1::BuildTrigger* ListBuildTriggersResponse::add_triggers() {
  // @@protoc_insertion_point(field_add:google.devtools.cloudbuild.v1.ListBuildTriggersResponse.triggers)
  return triggers_.Add();
}
::google::protobuf::RepeatedPtrField< ::google::devtools::cloudbuild::v1::BuildTrigger >*
ListBuildTriggersResponse::mutable_triggers() {
  // @@protoc_insertion_point(field_mutable_list:google.devtools.cloudbuild.v1.ListBuildTriggersResponse.triggers)
  return &triggers_;
}
const ::google::protobuf::RepeatedPtrField< ::google::devtools::cloudbuild::v1::BuildTrigger >&
ListBuildTriggersResponse::triggers() const {
  // @@protoc_insertion_point(field_list:google.devtools.cloudbuild.v1.ListBuildTriggersResponse.triggers)
  return triggers_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DeleteBuildTriggerRequest::kProjectIdFieldNumber;
const int DeleteBuildTriggerRequest::kTriggerIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DeleteBuildTriggerRequest::DeleteBuildTriggerRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_google_2fdevtools_2fcloudbuild_2fv1_2fcloudbuild_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.devtools.cloudbuild.v1.DeleteBuildTriggerRequest)
}
DeleteBuildTriggerRequest::DeleteBuildTriggerRequest(const DeleteBuildTriggerRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.project_id().size() > 0) {
    project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
  }
  trigger_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.trigger_id().size() > 0) {
    trigger_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.trigger_id_);
  }
  // @@protoc_insertion_point(copy_constructor:google.devtools.cloudbuild.v1.DeleteBuildTriggerRequest)
}

void DeleteBuildTriggerRequest::SharedCtor() {
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  trigger_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

DeleteBuildTriggerRequest::~DeleteBuildTriggerRequest() {
  // @@protoc_insertion_point(destructor:google.devtools.cloudbuild.v1.DeleteBuildTriggerRequest)
  SharedDtor();
}

void DeleteBuildTriggerRequest::SharedDtor() {
  project_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  trigger_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DeleteBuildTriggerRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DeleteBuildTriggerRequest::descriptor() {
  protobuf_google_2fdevtools_2fcloudbuild_2fv1_2fcloudbuild_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fdevtools_2fcloudbuild_2fv1_2fcloudbuild_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DeleteBuildTriggerRequest& DeleteBuildTriggerRequest::default_instance() {
  protobuf_google_2fdevtools_2fcloudbuild_2fv1_2fcloudbuild_2eproto::InitDefaults();
  return *internal_default_instance();
}

DeleteBuildTriggerRequest* DeleteBuildTriggerRequest::New(::google::protobuf::Arena* arena) const {
  DeleteBuildTriggerRequest* n = new DeleteBuildTriggerRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DeleteBuildTriggerRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.devtools.cloudbuild.v1.DeleteBuildTriggerRequest)
  project_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  trigger_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool DeleteBuildTriggerRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.devtools.cloudbuild.v1.DeleteBuildTriggerRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string project_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_project_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->project_id().data(), this->project_id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.cloudbuild.v1.DeleteBuildTriggerRequest.project_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string trigger_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_trigger_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->trigger_id().data(), this->trigger_id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.cloudbuild.v1.DeleteBuildTriggerRequest.trigger_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.devtools.cloudbuild.v1.DeleteBuildTriggerRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.devtools.cloudbuild.v1.DeleteBuildTriggerRequest)
  return false;
#undef DO_
}

void DeleteBuildTriggerRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.devtools.cloudbuild.v1.DeleteBuildTriggerRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string project_id = 1;
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), this->project_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.cloudbuild.v1.DeleteBuildTriggerRequest.project_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->project_id(), output);
  }

  // string trigger_id = 2;
  if (this->trigger_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->trigger_id().data(), this->trigger_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.cloudbuild.v1.DeleteBuildTriggerRequest.trigger_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->trigger_id(), output);
  }

  // @@protoc_insertion_point(serialize_end:google.devtools.cloudbuild.v1.DeleteBuildTriggerRequest)
}

::google::protobuf::uint8* DeleteBuildTriggerRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.devtools.cloudbuild.v1.DeleteBuildTriggerRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string project_id = 1;
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), this->project_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.cloudbuild.v1.DeleteBuildTriggerRequest.project_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->project_id(), target);
  }

  // string trigger_id = 2;
  if (this->trigger_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->trigger_id().data(), this->trigger_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.cloudbuild.v1.DeleteBuildTriggerRequest.trigger_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->trigger_id(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.devtools.cloudbuild.v1.DeleteBuildTriggerRequest)
  return target;
}

size_t DeleteBuildTriggerRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.devtools.cloudbuild.v1.DeleteBuildTriggerRequest)
  size_t total_size = 0;

  // string project_id = 1;
  if (this->project_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->project_id());
  }

  // string trigger_id = 2;
  if (this->trigger_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->trigger_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DeleteBuildTriggerRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.devtools.cloudbuild.v1.DeleteBuildTriggerRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteBuildTriggerRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DeleteBuildTriggerRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.devtools.cloudbuild.v1.DeleteBuildTriggerRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.devtools.cloudbuild.v1.DeleteBuildTriggerRequest)
    MergeFrom(*source);
  }
}

void DeleteBuildTriggerRequest::MergeFrom(const DeleteBuildTriggerRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.devtools.cloudbuild.v1.DeleteBuildTriggerRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.project_id().size() > 0) {

    project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
  }
  if (from.trigger_id().size() > 0) {

    trigger_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.trigger_id_);
  }
}

void DeleteBuildTriggerRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.devtools.cloudbuild.v1.DeleteBuildTriggerRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteBuildTriggerRequest::CopyFrom(const DeleteBuildTriggerRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.devtools.cloudbuild.v1.DeleteBuildTriggerRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteBuildTriggerRequest::IsInitialized() const {
  return true;
}

void DeleteBuildTriggerRequest::Swap(DeleteBuildTriggerRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DeleteBuildTriggerRequest::InternalSwap(DeleteBuildTriggerRequest* other) {
  project_id_.Swap(&other->project_id_);
  trigger_id_.Swap(&other->trigger_id_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DeleteBuildTriggerRequest::GetMetadata() const {
  protobuf_google_2fdevtools_2fcloudbuild_2fv1_2fcloudbuild_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fdevtools_2fcloudbuild_2fv1_2fcloudbuild_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DeleteBuildTriggerRequest

// string project_id = 1;
void DeleteBuildTriggerRequest::clear_project_id() {
  project_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& DeleteBuildTriggerRequest::project_id() const {
  // @@protoc_insertion_point(field_get:google.devtools.cloudbuild.v1.DeleteBuildTriggerRequest.project_id)
  return project_id_.GetNoArena();
}
void DeleteBuildTriggerRequest::set_project_id(const ::std::string& value) {
  
  project_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.cloudbuild.v1.DeleteBuildTriggerRequest.project_id)
}
#if LANG_CXX11
void DeleteBuildTriggerRequest::set_project_id(::std::string&& value) {
  
  project_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.devtools.cloudbuild.v1.DeleteBuildTriggerRequest.project_id)
}
#endif
void DeleteBuildTriggerRequest::set_project_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  project_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.cloudbuild.v1.DeleteBuildTriggerRequest.project_id)
}
void DeleteBuildTriggerRequest::set_project_id(const char* value, size_t size) {
  
  project_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.cloudbuild.v1.DeleteBuildTriggerRequest.project_id)
}
::std::string* DeleteBuildTriggerRequest::mutable_project_id() {
  
  // @@protoc_insertion_point(field_mutable:google.devtools.cloudbuild.v1.DeleteBuildTriggerRequest.project_id)
  return project_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* DeleteBuildTriggerRequest::release_project_id() {
  // @@protoc_insertion_point(field_release:google.devtools.cloudbuild.v1.DeleteBuildTriggerRequest.project_id)
  
  return project_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void DeleteBuildTriggerRequest::set_allocated_project_id(::std::string* project_id) {
  if (project_id != NULL) {
    
  } else {
    
  }
  project_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), project_id);
  // @@protoc_insertion_point(field_set_allocated:google.devtools.cloudbuild.v1.DeleteBuildTriggerRequest.project_id)
}

// string trigger_id = 2;
void DeleteBuildTriggerRequest::clear_trigger_id() {
  trigger_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& DeleteBuildTriggerRequest::trigger_id() const {
  // @@protoc_insertion_point(field_get:google.devtools.cloudbuild.v1.DeleteBuildTriggerRequest.trigger_id)
  return trigger_id_.GetNoArena();
}
void DeleteBuildTriggerRequest::set_trigger_id(const ::std::string& value) {
  
  trigger_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.cloudbuild.v1.DeleteBuildTriggerRequest.trigger_id)
}
#if LANG_CXX11
void DeleteBuildTriggerRequest::set_trigger_id(::std::string&& value) {
  
  trigger_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.devtools.cloudbuild.v1.DeleteBuildTriggerRequest.trigger_id)
}
#endif
void DeleteBuildTriggerRequest::set_trigger_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  trigger_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.cloudbuild.v1.DeleteBuildTriggerRequest.trigger_id)
}
void DeleteBuildTriggerRequest::set_trigger_id(const char* value, size_t size) {
  
  trigger_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.cloudbuild.v1.DeleteBuildTriggerRequest.trigger_id)
}
::std::string* DeleteBuildTriggerRequest::mutable_trigger_id() {
  
  // @@protoc_insertion_point(field_mutable:google.devtools.cloudbuild.v1.DeleteBuildTriggerRequest.trigger_id)
  return trigger_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* DeleteBuildTriggerRequest::release_trigger_id() {
  // @@protoc_insertion_point(field_release:google.devtools.cloudbuild.v1.DeleteBuildTriggerRequest.trigger_id)
  
  return trigger_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void DeleteBuildTriggerRequest::set_allocated_trigger_id(::std::string* trigger_id) {
  if (trigger_id != NULL) {
    
  } else {
    
  }
  trigger_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), trigger_id);
  // @@protoc_insertion_point(field_set_allocated:google.devtools.cloudbuild.v1.DeleteBuildTriggerRequest.trigger_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UpdateBuildTriggerRequest::kProjectIdFieldNumber;
const int UpdateBuildTriggerRequest::kTriggerIdFieldNumber;
const int UpdateBuildTriggerRequest::kTriggerFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UpdateBuildTriggerRequest::UpdateBuildTriggerRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_google_2fdevtools_2fcloudbuild_2fv1_2fcloudbuild_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.devtools.cloudbuild.v1.UpdateBuildTriggerRequest)
}
UpdateBuildTriggerRequest::UpdateBuildTriggerRequest(const UpdateBuildTriggerRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.project_id().size() > 0) {
    project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
  }
  trigger_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.trigger_id().size() > 0) {
    trigger_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.trigger_id_);
  }
  if (from.has_trigger()) {
    trigger_ = new ::google::devtools::cloudbuild::v1::BuildTrigger(*from.trigger_);
  } else {
    trigger_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.devtools.cloudbuild.v1.UpdateBuildTriggerRequest)
}

void UpdateBuildTriggerRequest::SharedCtor() {
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  trigger_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  trigger_ = NULL;
  _cached_size_ = 0;
}

UpdateBuildTriggerRequest::~UpdateBuildTriggerRequest() {
  // @@protoc_insertion_point(destructor:google.devtools.cloudbuild.v1.UpdateBuildTriggerRequest)
  SharedDtor();
}

void UpdateBuildTriggerRequest::SharedDtor() {
  project_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  trigger_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete trigger_;
  }
}

void UpdateBuildTriggerRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UpdateBuildTriggerRequest::descriptor() {
  protobuf_google_2fdevtools_2fcloudbuild_2fv1_2fcloudbuild_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fdevtools_2fcloudbuild_2fv1_2fcloudbuild_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UpdateBuildTriggerRequest& UpdateBuildTriggerRequest::default_instance() {
  protobuf_google_2fdevtools_2fcloudbuild_2fv1_2fcloudbuild_2eproto::InitDefaults();
  return *internal_default_instance();
}

UpdateBuildTriggerRequest* UpdateBuildTriggerRequest::New(::google::protobuf::Arena* arena) const {
  UpdateBuildTriggerRequest* n = new UpdateBuildTriggerRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UpdateBuildTriggerRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.devtools.cloudbuild.v1.UpdateBuildTriggerRequest)
  project_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  trigger_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && trigger_ != NULL) {
    delete trigger_;
  }
  trigger_ = NULL;
}

bool UpdateBuildTriggerRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.devtools.cloudbuild.v1.UpdateBuildTriggerRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string project_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_project_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->project_id().data(), this->project_id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.cloudbuild.v1.UpdateBuildTriggerRequest.project_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string trigger_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_trigger_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->trigger_id().data(), this->trigger_id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.cloudbuild.v1.UpdateBuildTriggerRequest.trigger_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.devtools.cloudbuild.v1.BuildTrigger trigger = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_trigger()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.devtools.cloudbuild.v1.UpdateBuildTriggerRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.devtools.cloudbuild.v1.UpdateBuildTriggerRequest)
  return false;
#undef DO_
}

void UpdateBuildTriggerRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.devtools.cloudbuild.v1.UpdateBuildTriggerRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string project_id = 1;
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), this->project_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.cloudbuild.v1.UpdateBuildTriggerRequest.project_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->project_id(), output);
  }

  // string trigger_id = 2;
  if (this->trigger_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->trigger_id().data(), this->trigger_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.cloudbuild.v1.UpdateBuildTriggerRequest.trigger_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->trigger_id(), output);
  }

  // .google.devtools.cloudbuild.v1.BuildTrigger trigger = 3;
  if (this->has_trigger()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->trigger_, output);
  }

  // @@protoc_insertion_point(serialize_end:google.devtools.cloudbuild.v1.UpdateBuildTriggerRequest)
}

::google::protobuf::uint8* UpdateBuildTriggerRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.devtools.cloudbuild.v1.UpdateBuildTriggerRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string project_id = 1;
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), this->project_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.cloudbuild.v1.UpdateBuildTriggerRequest.project_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->project_id(), target);
  }

  // string trigger_id = 2;
  if (this->trigger_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->trigger_id().data(), this->trigger_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.cloudbuild.v1.UpdateBuildTriggerRequest.trigger_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->trigger_id(), target);
  }

  // .google.devtools.cloudbuild.v1.BuildTrigger trigger = 3;
  if (this->has_trigger()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->trigger_, deterministic, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.devtools.cloudbuild.v1.UpdateBuildTriggerRequest)
  return target;
}

size_t UpdateBuildTriggerRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.devtools.cloudbuild.v1.UpdateBuildTriggerRequest)
  size_t total_size = 0;

  // string project_id = 1;
  if (this->project_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->project_id());
  }

  // string trigger_id = 2;
  if (this->trigger_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->trigger_id());
  }

  // .google.devtools.cloudbuild.v1.BuildTrigger trigger = 3;
  if (this->has_trigger()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->trigger_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UpdateBuildTriggerRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.devtools.cloudbuild.v1.UpdateBuildTriggerRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const UpdateBuildTriggerRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UpdateBuildTriggerRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.devtools.cloudbuild.v1.UpdateBuildTriggerRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.devtools.cloudbuild.v1.UpdateBuildTriggerRequest)
    MergeFrom(*source);
  }
}

void UpdateBuildTriggerRequest::MergeFrom(const UpdateBuildTriggerRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.devtools.cloudbuild.v1.UpdateBuildTriggerRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.project_id().size() > 0) {

    project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
  }
  if (from.trigger_id().size() > 0) {

    trigger_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.trigger_id_);
  }
  if (from.has_trigger()) {
    mutable_trigger()->::google::devtools::cloudbuild::v1::BuildTrigger::MergeFrom(from.trigger());
  }
}

void UpdateBuildTriggerRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.devtools.cloudbuild.v1.UpdateBuildTriggerRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateBuildTriggerRequest::CopyFrom(const UpdateBuildTriggerRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.devtools.cloudbuild.v1.UpdateBuildTriggerRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateBuildTriggerRequest::IsInitialized() const {
  return true;
}

void UpdateBuildTriggerRequest::Swap(UpdateBuildTriggerRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UpdateBuildTriggerRequest::InternalSwap(UpdateBuildTriggerRequest* other) {
  project_id_.Swap(&other->project_id_);
  trigger_id_.Swap(&other->trigger_id_);
  std::swap(trigger_, other->trigger_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UpdateBuildTriggerRequest::GetMetadata() const {
  protobuf_google_2fdevtools_2fcloudbuild_2fv1_2fcloudbuild_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fdevtools_2fcloudbuild_2fv1_2fcloudbuild_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// UpdateBuildTriggerRequest

// string project_id = 1;
void UpdateBuildTriggerRequest::clear_project_id() {
  project_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& UpdateBuildTriggerRequest::project_id() const {
  // @@protoc_insertion_point(field_get:google.devtools.cloudbuild.v1.UpdateBuildTriggerRequest.project_id)
  return project_id_.GetNoArena();
}
void UpdateBuildTriggerRequest::set_project_id(const ::std::string& value) {
  
  project_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.cloudbuild.v1.UpdateBuildTriggerRequest.project_id)
}
#if LANG_CXX11
void UpdateBuildTriggerRequest::set_project_id(::std::string&& value) {
  
  project_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.devtools.cloudbuild.v1.UpdateBuildTriggerRequest.project_id)
}
#endif
void UpdateBuildTriggerRequest::set_project_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  project_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.cloudbuild.v1.UpdateBuildTriggerRequest.project_id)
}
void UpdateBuildTriggerRequest::set_project_id(const char* value, size_t size) {
  
  project_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.cloudbuild.v1.UpdateBuildTriggerRequest.project_id)
}
::std::string* UpdateBuildTriggerRequest::mutable_project_id() {
  
  // @@protoc_insertion_point(field_mutable:google.devtools.cloudbuild.v1.UpdateBuildTriggerRequest.project_id)
  return project_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* UpdateBuildTriggerRequest::release_project_id() {
  // @@protoc_insertion_point(field_release:google.devtools.cloudbuild.v1.UpdateBuildTriggerRequest.project_id)
  
  return project_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void UpdateBuildTriggerRequest::set_allocated_project_id(::std::string* project_id) {
  if (project_id != NULL) {
    
  } else {
    
  }
  project_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), project_id);
  // @@protoc_insertion_point(field_set_allocated:google.devtools.cloudbuild.v1.UpdateBuildTriggerRequest.project_id)
}

// string trigger_id = 2;
void UpdateBuildTriggerRequest::clear_trigger_id() {
  trigger_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& UpdateBuildTriggerRequest::trigger_id() const {
  // @@protoc_insertion_point(field_get:google.devtools.cloudbuild.v1.UpdateBuildTriggerRequest.trigger_id)
  return trigger_id_.GetNoArena();
}
void UpdateBuildTriggerRequest::set_trigger_id(const ::std::string& value) {
  
  trigger_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.cloudbuild.v1.UpdateBuildTriggerRequest.trigger_id)
}
#if LANG_CXX11
void UpdateBuildTriggerRequest::set_trigger_id(::std::string&& value) {
  
  trigger_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.devtools.cloudbuild.v1.UpdateBuildTriggerRequest.trigger_id)
}
#endif
void UpdateBuildTriggerRequest::set_trigger_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  trigger_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.cloudbuild.v1.UpdateBuildTriggerRequest.trigger_id)
}
void UpdateBuildTriggerRequest::set_trigger_id(const char* value, size_t size) {
  
  trigger_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.cloudbuild.v1.UpdateBuildTriggerRequest.trigger_id)
}
::std::string* UpdateBuildTriggerRequest::mutable_trigger_id() {
  
  // @@protoc_insertion_point(field_mutable:google.devtools.cloudbuild.v1.UpdateBuildTriggerRequest.trigger_id)
  return trigger_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* UpdateBuildTriggerRequest::release_trigger_id() {
  // @@protoc_insertion_point(field_release:google.devtools.cloudbuild.v1.UpdateBuildTriggerRequest.trigger_id)
  
  return trigger_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void UpdateBuildTriggerRequest::set_allocated_trigger_id(::std::string* trigger_id) {
  if (trigger_id != NULL) {
    
  } else {
    
  }
  trigger_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), trigger_id);
  // @@protoc_insertion_point(field_set_allocated:google.devtools.cloudbuild.v1.UpdateBuildTriggerRequest.trigger_id)
}

// .google.devtools.cloudbuild.v1.BuildTrigger trigger = 3;
bool UpdateBuildTriggerRequest::has_trigger() const {
  return this != internal_default_instance() && trigger_ != NULL;
}
void UpdateBuildTriggerRequest::clear_trigger() {
  if (GetArenaNoVirtual() == NULL && trigger_ != NULL) delete trigger_;
  trigger_ = NULL;
}
const ::google::devtools::cloudbuild::v1::BuildTrigger& UpdateBuildTriggerRequest::trigger() const {
  // @@protoc_insertion_point(field_get:google.devtools.cloudbuild.v1.UpdateBuildTriggerRequest.trigger)
  return trigger_ != NULL ? *trigger_
                         : *::google::devtools::cloudbuild::v1::BuildTrigger::internal_default_instance();
}
::google::devtools::cloudbuild::v1::BuildTrigger* UpdateBuildTriggerRequest::mutable_trigger() {
  
  if (trigger_ == NULL) {
    trigger_ = new ::google::devtools::cloudbuild::v1::BuildTrigger;
  }
  // @@protoc_insertion_point(field_mutable:google.devtools.cloudbuild.v1.UpdateBuildTriggerRequest.trigger)
  return trigger_;
}
::google::devtools::cloudbuild::v1::BuildTrigger* UpdateBuildTriggerRequest::release_trigger() {
  // @@protoc_insertion_point(field_release:google.devtools.cloudbuild.v1.UpdateBuildTriggerRequest.trigger)
  
  ::google::devtools::cloudbuild::v1::BuildTrigger* temp = trigger_;
  trigger_ = NULL;
  return temp;
}
void UpdateBuildTriggerRequest::set_allocated_trigger(::google::devtools::cloudbuild::v1::BuildTrigger* trigger) {
  delete trigger_;
  trigger_ = trigger;
  if (trigger) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.devtools.cloudbuild.v1.UpdateBuildTriggerRequest.trigger)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BuildOptions::kSourceProvenanceHashFieldNumber;
const int BuildOptions::kRequestedVerifyOptionFieldNumber;
const int BuildOptions::kSubstitutionOptionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BuildOptions::BuildOptions()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_google_2fdevtools_2fcloudbuild_2fv1_2fcloudbuild_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.devtools.cloudbuild.v1.BuildOptions)
}
BuildOptions::BuildOptions(const BuildOptions& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      source_provenance_hash_(from.source_provenance_hash_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&requested_verify_option_, &from.requested_verify_option_,
    reinterpret_cast<char*>(&substitution_option_) -
    reinterpret_cast<char*>(&requested_verify_option_) + sizeof(substitution_option_));
  // @@protoc_insertion_point(copy_constructor:google.devtools.cloudbuild.v1.BuildOptions)
}

void BuildOptions::SharedCtor() {
  ::memset(&requested_verify_option_, 0, reinterpret_cast<char*>(&substitution_option_) -
    reinterpret_cast<char*>(&requested_verify_option_) + sizeof(substitution_option_));
  _cached_size_ = 0;
}

BuildOptions::~BuildOptions() {
  // @@protoc_insertion_point(destructor:google.devtools.cloudbuild.v1.BuildOptions)
  SharedDtor();
}

void BuildOptions::SharedDtor() {
}

void BuildOptions::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BuildOptions::descriptor() {
  protobuf_google_2fdevtools_2fcloudbuild_2fv1_2fcloudbuild_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fdevtools_2fcloudbuild_2fv1_2fcloudbuild_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BuildOptions& BuildOptions::default_instance() {
  protobuf_google_2fdevtools_2fcloudbuild_2fv1_2fcloudbuild_2eproto::InitDefaults();
  return *internal_default_instance();
}

BuildOptions* BuildOptions::New(::google::protobuf::Arena* arena) const {
  BuildOptions* n = new BuildOptions;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BuildOptions::Clear() {
// @@protoc_insertion_point(message_clear_start:google.devtools.cloudbuild.v1.BuildOptions)
  source_provenance_hash_.Clear();
  ::memset(&requested_verify_option_, 0, reinterpret_cast<char*>(&substitution_option_) -
    reinterpret_cast<char*>(&requested_verify_option_) + sizeof(substitution_option_));
}

bool BuildOptions::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.devtools.cloudbuild.v1.BuildOptions)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .google.devtools.cloudbuild.v1.Hash.HashType source_provenance_hash = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          ::google::protobuf::uint32 length;
          DO_(input->ReadVarint32(&length));
          ::google::protobuf::io::CodedInputStream::Limit limit = input->PushLimit(length);
          while (input->BytesUntilLimit() > 0) {
            int value;
            DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
            add_source_provenance_hash(static_cast< ::google::devtools::cloudbuild::v1::Hash_HashType >(value));
          }
          input->PopLimit(limit);
        } else if (static_cast< ::google::protobuf::uint8>(tag) ==
                   static_cast< ::google::protobuf::uint8>(8u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          add_source_provenance_hash(static_cast< ::google::devtools::cloudbuild::v1::Hash_HashType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.devtools.cloudbuild.v1.BuildOptions.VerifyOption requested_verify_option = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_requested_verify_option(static_cast< ::google::devtools::cloudbuild::v1::BuildOptions_VerifyOption >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.devtools.cloudbuild.v1.BuildOptions.SubstitutionOption substitution_option = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_substitution_option(static_cast< ::google::devtools::cloudbuild::v1::BuildOptions_SubstitutionOption >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.devtools.cloudbuild.v1.BuildOptions)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.devtools.cloudbuild.v1.BuildOptions)
  return false;
#undef DO_
}

void BuildOptions::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.devtools.cloudbuild.v1.BuildOptions)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.devtools.cloudbuild.v1.Hash.HashType source_provenance_hash = 1;
  if (this->source_provenance_hash_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      output);
    output->WriteVarint32(_source_provenance_hash_cached_byte_size_);
  }
  for (int i = 0, n = this->source_provenance_hash_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteEnumNoTag(
      this->source_provenance_hash(i), output);
  }

  // .google.devtools.cloudbuild.v1.BuildOptions.VerifyOption requested_verify_option = 2;
  if (this->requested_verify_option() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->requested_verify_option(), output);
  }

  // .google.devtools.cloudbuild.v1.BuildOptions.SubstitutionOption substitution_option = 4;
  if (this->substitution_option() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->substitution_option(), output);
  }

  // @@protoc_insertion_point(serialize_end:google.devtools.cloudbuild.v1.BuildOptions)
}

::google::protobuf::uint8* BuildOptions::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.devtools.cloudbuild.v1.BuildOptions)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.devtools.cloudbuild.v1.Hash.HashType source_provenance_hash = 1;
  if (this->source_provenance_hash_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(    _source_provenance_hash_cached_byte_size_, target);
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumNoTagToArray(
      this->source_provenance_hash_, target);
  }

  // .google.devtools.cloudbuild.v1.BuildOptions.VerifyOption requested_verify_option = 2;
  if (this->requested_verify_option() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->requested_verify_option(), target);
  }

  // .google.devtools.cloudbuild.v1.BuildOptions.SubstitutionOption substitution_option = 4;
  if (this->substitution_option() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->substitution_option(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.devtools.cloudbuild.v1.BuildOptions)
  return target;
}

size_t BuildOptions::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.devtools.cloudbuild.v1.BuildOptions)
  size_t total_size = 0;

  // repeated .google.devtools.cloudbuild.v1.Hash.HashType source_provenance_hash = 1;
  {
    size_t data_size = 0;
    unsigned int count = this->source_provenance_hash_size();for (unsigned int i = 0; i < count; i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::EnumSize(
        this->source_provenance_hash(i));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _source_provenance_hash_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // .google.devtools.cloudbuild.v1.BuildOptions.VerifyOption requested_verify_option = 2;
  if (this->requested_verify_option() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->requested_verify_option());
  }

  // .google.devtools.cloudbuild.v1.BuildOptions.SubstitutionOption substitution_option = 4;
  if (this->substitution_option() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->substitution_option());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BuildOptions::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.devtools.cloudbuild.v1.BuildOptions)
  GOOGLE_DCHECK_NE(&from, this);
  const BuildOptions* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BuildOptions>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.devtools.cloudbuild.v1.BuildOptions)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.devtools.cloudbuild.v1.BuildOptions)
    MergeFrom(*source);
  }
}

void BuildOptions::MergeFrom(const BuildOptions& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.devtools.cloudbuild.v1.BuildOptions)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  source_provenance_hash_.MergeFrom(from.source_provenance_hash_);
  if (from.requested_verify_option() != 0) {
    set_requested_verify_option(from.requested_verify_option());
  }
  if (from.substitution_option() != 0) {
    set_substitution_option(from.substitution_option());
  }
}

void BuildOptions::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.devtools.cloudbuild.v1.BuildOptions)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BuildOptions::CopyFrom(const BuildOptions& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.devtools.cloudbuild.v1.BuildOptions)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BuildOptions::IsInitialized() const {
  return true;
}

void BuildOptions::Swap(BuildOptions* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BuildOptions::InternalSwap(BuildOptions* other) {
  source_provenance_hash_.InternalSwap(&other->source_provenance_hash_);
  std::swap(requested_verify_option_, other->requested_verify_option_);
  std::swap(substitution_option_, other->substitution_option_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BuildOptions::GetMetadata() const {
  protobuf_google_2fdevtools_2fcloudbuild_2fv1_2fcloudbuild_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fdevtools_2fcloudbuild_2fv1_2fcloudbuild_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BuildOptions

// repeated .google.devtools.cloudbuild.v1.Hash.HashType source_provenance_hash = 1;
int BuildOptions::source_provenance_hash_size() const {
  return source_provenance_hash_.size();
}
void BuildOptions::clear_source_provenance_hash() {
  source_provenance_hash_.Clear();
}
::google::devtools::cloudbuild::v1::Hash_HashType BuildOptions::source_provenance_hash(int index) const {
  // @@protoc_insertion_point(field_get:google.devtools.cloudbuild.v1.BuildOptions.source_provenance_hash)
  return static_cast< ::google::devtools::cloudbuild::v1::Hash_HashType >(source_provenance_hash_.Get(index));
}
void BuildOptions::set_source_provenance_hash(int index, ::google::devtools::cloudbuild::v1::Hash_HashType value) {
  source_provenance_hash_.Set(index, value);
  // @@protoc_insertion_point(field_set:google.devtools.cloudbuild.v1.BuildOptions.source_provenance_hash)
}
void BuildOptions::add_source_provenance_hash(::google::devtools::cloudbuild::v1::Hash_HashType value) {
  source_provenance_hash_.Add(value);
  // @@protoc_insertion_point(field_add:google.devtools.cloudbuild.v1.BuildOptions.source_provenance_hash)
}
const ::google::protobuf::RepeatedField<int>&
BuildOptions::source_provenance_hash() const {
  // @@protoc_insertion_point(field_list:google.devtools.cloudbuild.v1.BuildOptions.source_provenance_hash)
  return source_provenance_hash_;
}
::google::protobuf::RepeatedField<int>*
BuildOptions::mutable_source_provenance_hash() {
  // @@protoc_insertion_point(field_mutable_list:google.devtools.cloudbuild.v1.BuildOptions.source_provenance_hash)
  return &source_provenance_hash_;
}

// .google.devtools.cloudbuild.v1.BuildOptions.VerifyOption requested_verify_option = 2;
void BuildOptions::clear_requested_verify_option() {
  requested_verify_option_ = 0;
}
::google::devtools::cloudbuild::v1::BuildOptions_VerifyOption BuildOptions::requested_verify_option() const {
  // @@protoc_insertion_point(field_get:google.devtools.cloudbuild.v1.BuildOptions.requested_verify_option)
  return static_cast< ::google::devtools::cloudbuild::v1::BuildOptions_VerifyOption >(requested_verify_option_);
}
void BuildOptions::set_requested_verify_option(::google::devtools::cloudbuild::v1::BuildOptions_VerifyOption value) {
  
  requested_verify_option_ = value;
  // @@protoc_insertion_point(field_set:google.devtools.cloudbuild.v1.BuildOptions.requested_verify_option)
}

// .google.devtools.cloudbuild.v1.BuildOptions.SubstitutionOption substitution_option = 4;
void BuildOptions::clear_substitution_option() {
  substitution_option_ = 0;
}
::google::devtools::cloudbuild::v1::BuildOptions_SubstitutionOption BuildOptions::substitution_option() const {
  // @@protoc_insertion_point(field_get:google.devtools.cloudbuild.v1.BuildOptions.substitution_option)
  return static_cast< ::google::devtools::cloudbuild::v1::BuildOptions_SubstitutionOption >(substitution_option_);
}
void BuildOptions::set_substitution_option(::google::devtools::cloudbuild::v1::BuildOptions_SubstitutionOption value) {
  
  substitution_option_ = value;
  // @@protoc_insertion_point(field_set:google.devtools.cloudbuild.v1.BuildOptions.substitution_option)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace v1
}  // namespace cloudbuild
}  // namespace devtools
}  // namespace google

// @@protoc_insertion_point(global_scope)
