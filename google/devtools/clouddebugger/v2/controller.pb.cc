// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/devtools/clouddebugger/v2/controller.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "google/devtools/clouddebugger/v2/controller.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace google {
namespace devtools {
namespace clouddebugger {
namespace v2 {
class RegisterDebuggeeRequestDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<RegisterDebuggeeRequest> {
} _RegisterDebuggeeRequest_default_instance_;
class RegisterDebuggeeResponseDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<RegisterDebuggeeResponse> {
} _RegisterDebuggeeResponse_default_instance_;
class ListActiveBreakpointsRequestDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ListActiveBreakpointsRequest> {
} _ListActiveBreakpointsRequest_default_instance_;
class ListActiveBreakpointsResponseDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ListActiveBreakpointsResponse> {
} _ListActiveBreakpointsResponse_default_instance_;
class UpdateActiveBreakpointRequestDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<UpdateActiveBreakpointRequest> {
} _UpdateActiveBreakpointRequest_default_instance_;
class UpdateActiveBreakpointResponseDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<UpdateActiveBreakpointResponse> {
} _UpdateActiveBreakpointResponse_default_instance_;

namespace protobuf_google_2fdevtools_2fclouddebugger_2fv2_2fcontroller_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[6];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] = {
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RegisterDebuggeeRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RegisterDebuggeeRequest, debuggee_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RegisterDebuggeeResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RegisterDebuggeeResponse, debuggee_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListActiveBreakpointsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListActiveBreakpointsRequest, debuggee_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListActiveBreakpointsRequest, wait_token_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListActiveBreakpointsRequest, success_on_timeout_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListActiveBreakpointsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListActiveBreakpointsResponse, breakpoints_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListActiveBreakpointsResponse, next_wait_token_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListActiveBreakpointsResponse, wait_expired_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateActiveBreakpointRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateActiveBreakpointRequest, debuggee_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateActiveBreakpointRequest, breakpoint_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateActiveBreakpointResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
};

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, -1, sizeof(RegisterDebuggeeRequest)},
  { 6, -1, sizeof(RegisterDebuggeeResponse)},
  { 12, -1, sizeof(ListActiveBreakpointsRequest)},
  { 20, -1, sizeof(ListActiveBreakpointsResponse)},
  { 28, -1, sizeof(UpdateActiveBreakpointRequest)},
  { 35, -1, sizeof(UpdateActiveBreakpointResponse)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_RegisterDebuggeeRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_RegisterDebuggeeResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ListActiveBreakpointsRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ListActiveBreakpointsResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_UpdateActiveBreakpointRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_UpdateActiveBreakpointResponse_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "google/devtools/clouddebugger/v2/controller.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 6);
}

}  // namespace

void TableStruct::Shutdown() {
  _RegisterDebuggeeRequest_default_instance_.Shutdown();
  delete file_level_metadata[0].reflection;
  _RegisterDebuggeeResponse_default_instance_.Shutdown();
  delete file_level_metadata[1].reflection;
  _ListActiveBreakpointsRequest_default_instance_.Shutdown();
  delete file_level_metadata[2].reflection;
  _ListActiveBreakpointsResponse_default_instance_.Shutdown();
  delete file_level_metadata[3].reflection;
  _UpdateActiveBreakpointRequest_default_instance_.Shutdown();
  delete file_level_metadata[4].reflection;
  _UpdateActiveBreakpointResponse_default_instance_.Shutdown();
  delete file_level_metadata[5].reflection;
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  ::google::api::protobuf_google_2fapi_2fannotations_2eproto::InitDefaults();
  ::google::devtools::clouddebugger::v2::protobuf_google_2fdevtools_2fclouddebugger_2fv2_2fdata_2eproto::InitDefaults();
  ::google::protobuf::protobuf_google_2fprotobuf_2fempty_2eproto::InitDefaults();
  _RegisterDebuggeeRequest_default_instance_.DefaultConstruct();
  _RegisterDebuggeeResponse_default_instance_.DefaultConstruct();
  _ListActiveBreakpointsRequest_default_instance_.DefaultConstruct();
  _ListActiveBreakpointsResponse_default_instance_.DefaultConstruct();
  _UpdateActiveBreakpointRequest_default_instance_.DefaultConstruct();
  _UpdateActiveBreakpointResponse_default_instance_.DefaultConstruct();
  _RegisterDebuggeeRequest_default_instance_.get_mutable()->debuggee_ = const_cast< ::google::devtools::clouddebugger::v2::Debuggee*>(
      ::google::devtools::clouddebugger::v2::Debuggee::internal_default_instance());
  _RegisterDebuggeeResponse_default_instance_.get_mutable()->debuggee_ = const_cast< ::google::devtools::clouddebugger::v2::Debuggee*>(
      ::google::devtools::clouddebugger::v2::Debuggee::internal_default_instance());
  _UpdateActiveBreakpointRequest_default_instance_.get_mutable()->breakpoint_ = const_cast< ::google::devtools::clouddebugger::v2::Breakpoint*>(
      ::google::devtools::clouddebugger::v2::Breakpoint::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n1google/devtools/clouddebugger/v2/contr"
      "oller.proto\022 google.devtools.clouddebugg"
      "er.v2\032\034google/api/annotations.proto\032+goo"
      "gle/devtools/clouddebugger/v2/data.proto"
      "\032\033google/protobuf/empty.proto\"W\n\027Registe"
      "rDebuggeeRequest\022<\n\010debuggee\030\001 \001(\0132*.goo"
      "gle.devtools.clouddebugger.v2.Debuggee\"X"
      "\n\030RegisterDebuggeeResponse\022<\n\010debuggee\030\001"
      " \001(\0132*.google.devtools.clouddebugger.v2."
      "Debuggee\"c\n\034ListActiveBreakpointsRequest"
      "\022\023\n\013debuggee_id\030\001 \001(\t\022\022\n\nwait_token\030\002 \001("
      "\t\022\032\n\022success_on_timeout\030\003 \001(\010\"\221\001\n\035ListAc"
      "tiveBreakpointsResponse\022A\n\013breakpoints\030\001"
      " \003(\0132,.google.devtools.clouddebugger.v2."
      "Breakpoint\022\027\n\017next_wait_token\030\002 \001(\t\022\024\n\014w"
      "ait_expired\030\003 \001(\010\"v\n\035UpdateActiveBreakpo"
      "intRequest\022\023\n\013debuggee_id\030\001 \001(\t\022@\n\nbreak"
      "point\030\002 \001(\0132,.google.devtools.clouddebug"
      "ger.v2.Breakpoint\" \n\036UpdateActiveBreakpo"
      "intResponse2\213\005\n\013Controller2\022\267\001\n\020Register"
      "Debuggee\0229.google.devtools.clouddebugger"
      ".v2.RegisterDebuggeeRequest\032:.google.dev"
      "tools.clouddebugger.v2.RegisterDebuggeeR"
      "esponse\",\202\323\344\223\002&\"!/v2/controller/debuggee"
      "s/register:\001*\022\324\001\n\025ListActiveBreakpoints\022"
      ">.google.devtools.clouddebugger.v2.ListA"
      "ctiveBreakpointsRequest\032\?.google.devtool"
      "s.clouddebugger.v2.ListActiveBreakpoints"
      "Response\":\202\323\344\223\0024\0222/v2/controller/debugge"
      "es/{debuggee_id}/breakpoints\022\352\001\n\026UpdateA"
      "ctiveBreakpoint\022\?.google.devtools.cloudd"
      "ebugger.v2.UpdateActiveBreakpointRequest"
      "\032@.google.devtools.clouddebugger.v2.Upda"
      "teActiveBreakpointResponse\"M\202\323\344\223\002G\032B/v2/"
      "controller/debuggees/{debuggee_id}/break"
      "points/{breakpoint.id}:\001*B\243\001\n$com.google"
      ".devtools.clouddebugger.v2B\017ControllerPr"
      "otoP\001ZMgoogle.golang.org/genproto/google"
      "apis/devtools/clouddebugger/v2;clouddebu"
      "gger\252\002\030Google.Cloud.Debugger.V2b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1599);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "google/devtools/clouddebugger/v2/controller.proto", &protobuf_RegisterTypes);
  ::google::api::protobuf_google_2fapi_2fannotations_2eproto::AddDescriptors();
  ::google::devtools::clouddebugger::v2::protobuf_google_2fdevtools_2fclouddebugger_2fv2_2fdata_2eproto::AddDescriptors();
  ::google::protobuf::protobuf_google_2fprotobuf_2fempty_2eproto::AddDescriptors();
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_google_2fdevtools_2fclouddebugger_2fv2_2fcontroller_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RegisterDebuggeeRequest::kDebuggeeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RegisterDebuggeeRequest::RegisterDebuggeeRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_google_2fdevtools_2fclouddebugger_2fv2_2fcontroller_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.devtools.clouddebugger.v2.RegisterDebuggeeRequest)
}
RegisterDebuggeeRequest::RegisterDebuggeeRequest(const RegisterDebuggeeRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_debuggee()) {
    debuggee_ = new ::google::devtools::clouddebugger::v2::Debuggee(*from.debuggee_);
  } else {
    debuggee_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.devtools.clouddebugger.v2.RegisterDebuggeeRequest)
}

void RegisterDebuggeeRequest::SharedCtor() {
  debuggee_ = NULL;
  _cached_size_ = 0;
}

RegisterDebuggeeRequest::~RegisterDebuggeeRequest() {
  // @@protoc_insertion_point(destructor:google.devtools.clouddebugger.v2.RegisterDebuggeeRequest)
  SharedDtor();
}

void RegisterDebuggeeRequest::SharedDtor() {
  if (this != internal_default_instance()) {
    delete debuggee_;
  }
}

void RegisterDebuggeeRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RegisterDebuggeeRequest::descriptor() {
  protobuf_google_2fdevtools_2fclouddebugger_2fv2_2fcontroller_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fdevtools_2fclouddebugger_2fv2_2fcontroller_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RegisterDebuggeeRequest& RegisterDebuggeeRequest::default_instance() {
  protobuf_google_2fdevtools_2fclouddebugger_2fv2_2fcontroller_2eproto::InitDefaults();
  return *internal_default_instance();
}

RegisterDebuggeeRequest* RegisterDebuggeeRequest::New(::google::protobuf::Arena* arena) const {
  RegisterDebuggeeRequest* n = new RegisterDebuggeeRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RegisterDebuggeeRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.devtools.clouddebugger.v2.RegisterDebuggeeRequest)
  if (GetArenaNoVirtual() == NULL && debuggee_ != NULL) {
    delete debuggee_;
  }
  debuggee_ = NULL;
}

bool RegisterDebuggeeRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.devtools.clouddebugger.v2.RegisterDebuggeeRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.devtools.clouddebugger.v2.Debuggee debuggee = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_debuggee()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.devtools.clouddebugger.v2.RegisterDebuggeeRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.devtools.clouddebugger.v2.RegisterDebuggeeRequest)
  return false;
#undef DO_
}

void RegisterDebuggeeRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.devtools.clouddebugger.v2.RegisterDebuggeeRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.devtools.clouddebugger.v2.Debuggee debuggee = 1;
  if (this->has_debuggee()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->debuggee_, output);
  }

  // @@protoc_insertion_point(serialize_end:google.devtools.clouddebugger.v2.RegisterDebuggeeRequest)
}

::google::protobuf::uint8* RegisterDebuggeeRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.devtools.clouddebugger.v2.RegisterDebuggeeRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.devtools.clouddebugger.v2.Debuggee debuggee = 1;
  if (this->has_debuggee()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->debuggee_, deterministic, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.devtools.clouddebugger.v2.RegisterDebuggeeRequest)
  return target;
}

size_t RegisterDebuggeeRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.devtools.clouddebugger.v2.RegisterDebuggeeRequest)
  size_t total_size = 0;

  // .google.devtools.clouddebugger.v2.Debuggee debuggee = 1;
  if (this->has_debuggee()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->debuggee_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RegisterDebuggeeRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.devtools.clouddebugger.v2.RegisterDebuggeeRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const RegisterDebuggeeRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RegisterDebuggeeRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.devtools.clouddebugger.v2.RegisterDebuggeeRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.devtools.clouddebugger.v2.RegisterDebuggeeRequest)
    MergeFrom(*source);
  }
}

void RegisterDebuggeeRequest::MergeFrom(const RegisterDebuggeeRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.devtools.clouddebugger.v2.RegisterDebuggeeRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_debuggee()) {
    mutable_debuggee()->::google::devtools::clouddebugger::v2::Debuggee::MergeFrom(from.debuggee());
  }
}

void RegisterDebuggeeRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.devtools.clouddebugger.v2.RegisterDebuggeeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RegisterDebuggeeRequest::CopyFrom(const RegisterDebuggeeRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.devtools.clouddebugger.v2.RegisterDebuggeeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RegisterDebuggeeRequest::IsInitialized() const {
  return true;
}

void RegisterDebuggeeRequest::Swap(RegisterDebuggeeRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RegisterDebuggeeRequest::InternalSwap(RegisterDebuggeeRequest* other) {
  std::swap(debuggee_, other->debuggee_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RegisterDebuggeeRequest::GetMetadata() const {
  protobuf_google_2fdevtools_2fclouddebugger_2fv2_2fcontroller_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fdevtools_2fclouddebugger_2fv2_2fcontroller_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RegisterDebuggeeRequest

// .google.devtools.clouddebugger.v2.Debuggee debuggee = 1;
bool RegisterDebuggeeRequest::has_debuggee() const {
  return this != internal_default_instance() && debuggee_ != NULL;
}
void RegisterDebuggeeRequest::clear_debuggee() {
  if (GetArenaNoVirtual() == NULL && debuggee_ != NULL) delete debuggee_;
  debuggee_ = NULL;
}
const ::google::devtools::clouddebugger::v2::Debuggee& RegisterDebuggeeRequest::debuggee() const {
  // @@protoc_insertion_point(field_get:google.devtools.clouddebugger.v2.RegisterDebuggeeRequest.debuggee)
  return debuggee_ != NULL ? *debuggee_
                         : *::google::devtools::clouddebugger::v2::Debuggee::internal_default_instance();
}
::google::devtools::clouddebugger::v2::Debuggee* RegisterDebuggeeRequest::mutable_debuggee() {
  
  if (debuggee_ == NULL) {
    debuggee_ = new ::google::devtools::clouddebugger::v2::Debuggee;
  }
  // @@protoc_insertion_point(field_mutable:google.devtools.clouddebugger.v2.RegisterDebuggeeRequest.debuggee)
  return debuggee_;
}
::google::devtools::clouddebugger::v2::Debuggee* RegisterDebuggeeRequest::release_debuggee() {
  // @@protoc_insertion_point(field_release:google.devtools.clouddebugger.v2.RegisterDebuggeeRequest.debuggee)
  
  ::google::devtools::clouddebugger::v2::Debuggee* temp = debuggee_;
  debuggee_ = NULL;
  return temp;
}
void RegisterDebuggeeRequest::set_allocated_debuggee(::google::devtools::clouddebugger::v2::Debuggee* debuggee) {
  delete debuggee_;
  debuggee_ = debuggee;
  if (debuggee) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.devtools.clouddebugger.v2.RegisterDebuggeeRequest.debuggee)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RegisterDebuggeeResponse::kDebuggeeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RegisterDebuggeeResponse::RegisterDebuggeeResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_google_2fdevtools_2fclouddebugger_2fv2_2fcontroller_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.devtools.clouddebugger.v2.RegisterDebuggeeResponse)
}
RegisterDebuggeeResponse::RegisterDebuggeeResponse(const RegisterDebuggeeResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_debuggee()) {
    debuggee_ = new ::google::devtools::clouddebugger::v2::Debuggee(*from.debuggee_);
  } else {
    debuggee_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.devtools.clouddebugger.v2.RegisterDebuggeeResponse)
}

void RegisterDebuggeeResponse::SharedCtor() {
  debuggee_ = NULL;
  _cached_size_ = 0;
}

RegisterDebuggeeResponse::~RegisterDebuggeeResponse() {
  // @@protoc_insertion_point(destructor:google.devtools.clouddebugger.v2.RegisterDebuggeeResponse)
  SharedDtor();
}

void RegisterDebuggeeResponse::SharedDtor() {
  if (this != internal_default_instance()) {
    delete debuggee_;
  }
}

void RegisterDebuggeeResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RegisterDebuggeeResponse::descriptor() {
  protobuf_google_2fdevtools_2fclouddebugger_2fv2_2fcontroller_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fdevtools_2fclouddebugger_2fv2_2fcontroller_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RegisterDebuggeeResponse& RegisterDebuggeeResponse::default_instance() {
  protobuf_google_2fdevtools_2fclouddebugger_2fv2_2fcontroller_2eproto::InitDefaults();
  return *internal_default_instance();
}

RegisterDebuggeeResponse* RegisterDebuggeeResponse::New(::google::protobuf::Arena* arena) const {
  RegisterDebuggeeResponse* n = new RegisterDebuggeeResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RegisterDebuggeeResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:google.devtools.clouddebugger.v2.RegisterDebuggeeResponse)
  if (GetArenaNoVirtual() == NULL && debuggee_ != NULL) {
    delete debuggee_;
  }
  debuggee_ = NULL;
}

bool RegisterDebuggeeResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.devtools.clouddebugger.v2.RegisterDebuggeeResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.devtools.clouddebugger.v2.Debuggee debuggee = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_debuggee()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.devtools.clouddebugger.v2.RegisterDebuggeeResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.devtools.clouddebugger.v2.RegisterDebuggeeResponse)
  return false;
#undef DO_
}

void RegisterDebuggeeResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.devtools.clouddebugger.v2.RegisterDebuggeeResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.devtools.clouddebugger.v2.Debuggee debuggee = 1;
  if (this->has_debuggee()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->debuggee_, output);
  }

  // @@protoc_insertion_point(serialize_end:google.devtools.clouddebugger.v2.RegisterDebuggeeResponse)
}

::google::protobuf::uint8* RegisterDebuggeeResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.devtools.clouddebugger.v2.RegisterDebuggeeResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.devtools.clouddebugger.v2.Debuggee debuggee = 1;
  if (this->has_debuggee()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->debuggee_, deterministic, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.devtools.clouddebugger.v2.RegisterDebuggeeResponse)
  return target;
}

size_t RegisterDebuggeeResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.devtools.clouddebugger.v2.RegisterDebuggeeResponse)
  size_t total_size = 0;

  // .google.devtools.clouddebugger.v2.Debuggee debuggee = 1;
  if (this->has_debuggee()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->debuggee_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RegisterDebuggeeResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.devtools.clouddebugger.v2.RegisterDebuggeeResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const RegisterDebuggeeResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RegisterDebuggeeResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.devtools.clouddebugger.v2.RegisterDebuggeeResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.devtools.clouddebugger.v2.RegisterDebuggeeResponse)
    MergeFrom(*source);
  }
}

void RegisterDebuggeeResponse::MergeFrom(const RegisterDebuggeeResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.devtools.clouddebugger.v2.RegisterDebuggeeResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_debuggee()) {
    mutable_debuggee()->::google::devtools::clouddebugger::v2::Debuggee::MergeFrom(from.debuggee());
  }
}

void RegisterDebuggeeResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.devtools.clouddebugger.v2.RegisterDebuggeeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RegisterDebuggeeResponse::CopyFrom(const RegisterDebuggeeResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.devtools.clouddebugger.v2.RegisterDebuggeeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RegisterDebuggeeResponse::IsInitialized() const {
  return true;
}

void RegisterDebuggeeResponse::Swap(RegisterDebuggeeResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RegisterDebuggeeResponse::InternalSwap(RegisterDebuggeeResponse* other) {
  std::swap(debuggee_, other->debuggee_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RegisterDebuggeeResponse::GetMetadata() const {
  protobuf_google_2fdevtools_2fclouddebugger_2fv2_2fcontroller_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fdevtools_2fclouddebugger_2fv2_2fcontroller_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RegisterDebuggeeResponse

// .google.devtools.clouddebugger.v2.Debuggee debuggee = 1;
bool RegisterDebuggeeResponse::has_debuggee() const {
  return this != internal_default_instance() && debuggee_ != NULL;
}
void RegisterDebuggeeResponse::clear_debuggee() {
  if (GetArenaNoVirtual() == NULL && debuggee_ != NULL) delete debuggee_;
  debuggee_ = NULL;
}
const ::google::devtools::clouddebugger::v2::Debuggee& RegisterDebuggeeResponse::debuggee() const {
  // @@protoc_insertion_point(field_get:google.devtools.clouddebugger.v2.RegisterDebuggeeResponse.debuggee)
  return debuggee_ != NULL ? *debuggee_
                         : *::google::devtools::clouddebugger::v2::Debuggee::internal_default_instance();
}
::google::devtools::clouddebugger::v2::Debuggee* RegisterDebuggeeResponse::mutable_debuggee() {
  
  if (debuggee_ == NULL) {
    debuggee_ = new ::google::devtools::clouddebugger::v2::Debuggee;
  }
  // @@protoc_insertion_point(field_mutable:google.devtools.clouddebugger.v2.RegisterDebuggeeResponse.debuggee)
  return debuggee_;
}
::google::devtools::clouddebugger::v2::Debuggee* RegisterDebuggeeResponse::release_debuggee() {
  // @@protoc_insertion_point(field_release:google.devtools.clouddebugger.v2.RegisterDebuggeeResponse.debuggee)
  
  ::google::devtools::clouddebugger::v2::Debuggee* temp = debuggee_;
  debuggee_ = NULL;
  return temp;
}
void RegisterDebuggeeResponse::set_allocated_debuggee(::google::devtools::clouddebugger::v2::Debuggee* debuggee) {
  delete debuggee_;
  debuggee_ = debuggee;
  if (debuggee) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.devtools.clouddebugger.v2.RegisterDebuggeeResponse.debuggee)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListActiveBreakpointsRequest::kDebuggeeIdFieldNumber;
const int ListActiveBreakpointsRequest::kWaitTokenFieldNumber;
const int ListActiveBreakpointsRequest::kSuccessOnTimeoutFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListActiveBreakpointsRequest::ListActiveBreakpointsRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_google_2fdevtools_2fclouddebugger_2fv2_2fcontroller_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.devtools.clouddebugger.v2.ListActiveBreakpointsRequest)
}
ListActiveBreakpointsRequest::ListActiveBreakpointsRequest(const ListActiveBreakpointsRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  debuggee_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.debuggee_id().size() > 0) {
    debuggee_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.debuggee_id_);
  }
  wait_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.wait_token().size() > 0) {
    wait_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.wait_token_);
  }
  success_on_timeout_ = from.success_on_timeout_;
  // @@protoc_insertion_point(copy_constructor:google.devtools.clouddebugger.v2.ListActiveBreakpointsRequest)
}

void ListActiveBreakpointsRequest::SharedCtor() {
  debuggee_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  wait_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  success_on_timeout_ = false;
  _cached_size_ = 0;
}

ListActiveBreakpointsRequest::~ListActiveBreakpointsRequest() {
  // @@protoc_insertion_point(destructor:google.devtools.clouddebugger.v2.ListActiveBreakpointsRequest)
  SharedDtor();
}

void ListActiveBreakpointsRequest::SharedDtor() {
  debuggee_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  wait_token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ListActiveBreakpointsRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ListActiveBreakpointsRequest::descriptor() {
  protobuf_google_2fdevtools_2fclouddebugger_2fv2_2fcontroller_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fdevtools_2fclouddebugger_2fv2_2fcontroller_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListActiveBreakpointsRequest& ListActiveBreakpointsRequest::default_instance() {
  protobuf_google_2fdevtools_2fclouddebugger_2fv2_2fcontroller_2eproto::InitDefaults();
  return *internal_default_instance();
}

ListActiveBreakpointsRequest* ListActiveBreakpointsRequest::New(::google::protobuf::Arena* arena) const {
  ListActiveBreakpointsRequest* n = new ListActiveBreakpointsRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ListActiveBreakpointsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.devtools.clouddebugger.v2.ListActiveBreakpointsRequest)
  debuggee_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  wait_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  success_on_timeout_ = false;
}

bool ListActiveBreakpointsRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.devtools.clouddebugger.v2.ListActiveBreakpointsRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string debuggee_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_debuggee_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->debuggee_id().data(), this->debuggee_id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.clouddebugger.v2.ListActiveBreakpointsRequest.debuggee_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string wait_token = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_wait_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->wait_token().data(), this->wait_token().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.clouddebugger.v2.ListActiveBreakpointsRequest.wait_token"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool success_on_timeout = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &success_on_timeout_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.devtools.clouddebugger.v2.ListActiveBreakpointsRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.devtools.clouddebugger.v2.ListActiveBreakpointsRequest)
  return false;
#undef DO_
}

void ListActiveBreakpointsRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.devtools.clouddebugger.v2.ListActiveBreakpointsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string debuggee_id = 1;
  if (this->debuggee_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->debuggee_id().data(), this->debuggee_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.clouddebugger.v2.ListActiveBreakpointsRequest.debuggee_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->debuggee_id(), output);
  }

  // string wait_token = 2;
  if (this->wait_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->wait_token().data(), this->wait_token().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.clouddebugger.v2.ListActiveBreakpointsRequest.wait_token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->wait_token(), output);
  }

  // bool success_on_timeout = 3;
  if (this->success_on_timeout() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->success_on_timeout(), output);
  }

  // @@protoc_insertion_point(serialize_end:google.devtools.clouddebugger.v2.ListActiveBreakpointsRequest)
}

::google::protobuf::uint8* ListActiveBreakpointsRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.devtools.clouddebugger.v2.ListActiveBreakpointsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string debuggee_id = 1;
  if (this->debuggee_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->debuggee_id().data(), this->debuggee_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.clouddebugger.v2.ListActiveBreakpointsRequest.debuggee_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->debuggee_id(), target);
  }

  // string wait_token = 2;
  if (this->wait_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->wait_token().data(), this->wait_token().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.clouddebugger.v2.ListActiveBreakpointsRequest.wait_token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->wait_token(), target);
  }

  // bool success_on_timeout = 3;
  if (this->success_on_timeout() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->success_on_timeout(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.devtools.clouddebugger.v2.ListActiveBreakpointsRequest)
  return target;
}

size_t ListActiveBreakpointsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.devtools.clouddebugger.v2.ListActiveBreakpointsRequest)
  size_t total_size = 0;

  // string debuggee_id = 1;
  if (this->debuggee_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->debuggee_id());
  }

  // string wait_token = 2;
  if (this->wait_token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->wait_token());
  }

  // bool success_on_timeout = 3;
  if (this->success_on_timeout() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ListActiveBreakpointsRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.devtools.clouddebugger.v2.ListActiveBreakpointsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ListActiveBreakpointsRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListActiveBreakpointsRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.devtools.clouddebugger.v2.ListActiveBreakpointsRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.devtools.clouddebugger.v2.ListActiveBreakpointsRequest)
    MergeFrom(*source);
  }
}

void ListActiveBreakpointsRequest::MergeFrom(const ListActiveBreakpointsRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.devtools.clouddebugger.v2.ListActiveBreakpointsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.debuggee_id().size() > 0) {

    debuggee_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.debuggee_id_);
  }
  if (from.wait_token().size() > 0) {

    wait_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.wait_token_);
  }
  if (from.success_on_timeout() != 0) {
    set_success_on_timeout(from.success_on_timeout());
  }
}

void ListActiveBreakpointsRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.devtools.clouddebugger.v2.ListActiveBreakpointsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListActiveBreakpointsRequest::CopyFrom(const ListActiveBreakpointsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.devtools.clouddebugger.v2.ListActiveBreakpointsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListActiveBreakpointsRequest::IsInitialized() const {
  return true;
}

void ListActiveBreakpointsRequest::Swap(ListActiveBreakpointsRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListActiveBreakpointsRequest::InternalSwap(ListActiveBreakpointsRequest* other) {
  debuggee_id_.Swap(&other->debuggee_id_);
  wait_token_.Swap(&other->wait_token_);
  std::swap(success_on_timeout_, other->success_on_timeout_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ListActiveBreakpointsRequest::GetMetadata() const {
  protobuf_google_2fdevtools_2fclouddebugger_2fv2_2fcontroller_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fdevtools_2fclouddebugger_2fv2_2fcontroller_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ListActiveBreakpointsRequest

// string debuggee_id = 1;
void ListActiveBreakpointsRequest::clear_debuggee_id() {
  debuggee_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ListActiveBreakpointsRequest::debuggee_id() const {
  // @@protoc_insertion_point(field_get:google.devtools.clouddebugger.v2.ListActiveBreakpointsRequest.debuggee_id)
  return debuggee_id_.GetNoArena();
}
void ListActiveBreakpointsRequest::set_debuggee_id(const ::std::string& value) {
  
  debuggee_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.clouddebugger.v2.ListActiveBreakpointsRequest.debuggee_id)
}
#if LANG_CXX11
void ListActiveBreakpointsRequest::set_debuggee_id(::std::string&& value) {
  
  debuggee_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.devtools.clouddebugger.v2.ListActiveBreakpointsRequest.debuggee_id)
}
#endif
void ListActiveBreakpointsRequest::set_debuggee_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  debuggee_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.clouddebugger.v2.ListActiveBreakpointsRequest.debuggee_id)
}
void ListActiveBreakpointsRequest::set_debuggee_id(const char* value, size_t size) {
  
  debuggee_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.clouddebugger.v2.ListActiveBreakpointsRequest.debuggee_id)
}
::std::string* ListActiveBreakpointsRequest::mutable_debuggee_id() {
  
  // @@protoc_insertion_point(field_mutable:google.devtools.clouddebugger.v2.ListActiveBreakpointsRequest.debuggee_id)
  return debuggee_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ListActiveBreakpointsRequest::release_debuggee_id() {
  // @@protoc_insertion_point(field_release:google.devtools.clouddebugger.v2.ListActiveBreakpointsRequest.debuggee_id)
  
  return debuggee_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ListActiveBreakpointsRequest::set_allocated_debuggee_id(::std::string* debuggee_id) {
  if (debuggee_id != NULL) {
    
  } else {
    
  }
  debuggee_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), debuggee_id);
  // @@protoc_insertion_point(field_set_allocated:google.devtools.clouddebugger.v2.ListActiveBreakpointsRequest.debuggee_id)
}

// string wait_token = 2;
void ListActiveBreakpointsRequest::clear_wait_token() {
  wait_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ListActiveBreakpointsRequest::wait_token() const {
  // @@protoc_insertion_point(field_get:google.devtools.clouddebugger.v2.ListActiveBreakpointsRequest.wait_token)
  return wait_token_.GetNoArena();
}
void ListActiveBreakpointsRequest::set_wait_token(const ::std::string& value) {
  
  wait_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.clouddebugger.v2.ListActiveBreakpointsRequest.wait_token)
}
#if LANG_CXX11
void ListActiveBreakpointsRequest::set_wait_token(::std::string&& value) {
  
  wait_token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.devtools.clouddebugger.v2.ListActiveBreakpointsRequest.wait_token)
}
#endif
void ListActiveBreakpointsRequest::set_wait_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  wait_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.clouddebugger.v2.ListActiveBreakpointsRequest.wait_token)
}
void ListActiveBreakpointsRequest::set_wait_token(const char* value, size_t size) {
  
  wait_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.clouddebugger.v2.ListActiveBreakpointsRequest.wait_token)
}
::std::string* ListActiveBreakpointsRequest::mutable_wait_token() {
  
  // @@protoc_insertion_point(field_mutable:google.devtools.clouddebugger.v2.ListActiveBreakpointsRequest.wait_token)
  return wait_token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ListActiveBreakpointsRequest::release_wait_token() {
  // @@protoc_insertion_point(field_release:google.devtools.clouddebugger.v2.ListActiveBreakpointsRequest.wait_token)
  
  return wait_token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ListActiveBreakpointsRequest::set_allocated_wait_token(::std::string* wait_token) {
  if (wait_token != NULL) {
    
  } else {
    
  }
  wait_token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), wait_token);
  // @@protoc_insertion_point(field_set_allocated:google.devtools.clouddebugger.v2.ListActiveBreakpointsRequest.wait_token)
}

// bool success_on_timeout = 3;
void ListActiveBreakpointsRequest::clear_success_on_timeout() {
  success_on_timeout_ = false;
}
bool ListActiveBreakpointsRequest::success_on_timeout() const {
  // @@protoc_insertion_point(field_get:google.devtools.clouddebugger.v2.ListActiveBreakpointsRequest.success_on_timeout)
  return success_on_timeout_;
}
void ListActiveBreakpointsRequest::set_success_on_timeout(bool value) {
  
  success_on_timeout_ = value;
  // @@protoc_insertion_point(field_set:google.devtools.clouddebugger.v2.ListActiveBreakpointsRequest.success_on_timeout)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListActiveBreakpointsResponse::kBreakpointsFieldNumber;
const int ListActiveBreakpointsResponse::kNextWaitTokenFieldNumber;
const int ListActiveBreakpointsResponse::kWaitExpiredFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListActiveBreakpointsResponse::ListActiveBreakpointsResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_google_2fdevtools_2fclouddebugger_2fv2_2fcontroller_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.devtools.clouddebugger.v2.ListActiveBreakpointsResponse)
}
ListActiveBreakpointsResponse::ListActiveBreakpointsResponse(const ListActiveBreakpointsResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      breakpoints_(from.breakpoints_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  next_wait_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.next_wait_token().size() > 0) {
    next_wait_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.next_wait_token_);
  }
  wait_expired_ = from.wait_expired_;
  // @@protoc_insertion_point(copy_constructor:google.devtools.clouddebugger.v2.ListActiveBreakpointsResponse)
}

void ListActiveBreakpointsResponse::SharedCtor() {
  next_wait_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  wait_expired_ = false;
  _cached_size_ = 0;
}

ListActiveBreakpointsResponse::~ListActiveBreakpointsResponse() {
  // @@protoc_insertion_point(destructor:google.devtools.clouddebugger.v2.ListActiveBreakpointsResponse)
  SharedDtor();
}

void ListActiveBreakpointsResponse::SharedDtor() {
  next_wait_token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ListActiveBreakpointsResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ListActiveBreakpointsResponse::descriptor() {
  protobuf_google_2fdevtools_2fclouddebugger_2fv2_2fcontroller_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fdevtools_2fclouddebugger_2fv2_2fcontroller_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListActiveBreakpointsResponse& ListActiveBreakpointsResponse::default_instance() {
  protobuf_google_2fdevtools_2fclouddebugger_2fv2_2fcontroller_2eproto::InitDefaults();
  return *internal_default_instance();
}

ListActiveBreakpointsResponse* ListActiveBreakpointsResponse::New(::google::protobuf::Arena* arena) const {
  ListActiveBreakpointsResponse* n = new ListActiveBreakpointsResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ListActiveBreakpointsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:google.devtools.clouddebugger.v2.ListActiveBreakpointsResponse)
  breakpoints_.Clear();
  next_wait_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  wait_expired_ = false;
}

bool ListActiveBreakpointsResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.devtools.clouddebugger.v2.ListActiveBreakpointsResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .google.devtools.clouddebugger.v2.Breakpoint breakpoints = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_breakpoints()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string next_wait_token = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_next_wait_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->next_wait_token().data(), this->next_wait_token().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.clouddebugger.v2.ListActiveBreakpointsResponse.next_wait_token"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool wait_expired = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &wait_expired_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.devtools.clouddebugger.v2.ListActiveBreakpointsResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.devtools.clouddebugger.v2.ListActiveBreakpointsResponse)
  return false;
#undef DO_
}

void ListActiveBreakpointsResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.devtools.clouddebugger.v2.ListActiveBreakpointsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.devtools.clouddebugger.v2.Breakpoint breakpoints = 1;
  for (unsigned int i = 0, n = this->breakpoints_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->breakpoints(i), output);
  }

  // string next_wait_token = 2;
  if (this->next_wait_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->next_wait_token().data(), this->next_wait_token().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.clouddebugger.v2.ListActiveBreakpointsResponse.next_wait_token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->next_wait_token(), output);
  }

  // bool wait_expired = 3;
  if (this->wait_expired() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->wait_expired(), output);
  }

  // @@protoc_insertion_point(serialize_end:google.devtools.clouddebugger.v2.ListActiveBreakpointsResponse)
}

::google::protobuf::uint8* ListActiveBreakpointsResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.devtools.clouddebugger.v2.ListActiveBreakpointsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.devtools.clouddebugger.v2.Breakpoint breakpoints = 1;
  for (unsigned int i = 0, n = this->breakpoints_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->breakpoints(i), deterministic, target);
  }

  // string next_wait_token = 2;
  if (this->next_wait_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->next_wait_token().data(), this->next_wait_token().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.clouddebugger.v2.ListActiveBreakpointsResponse.next_wait_token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->next_wait_token(), target);
  }

  // bool wait_expired = 3;
  if (this->wait_expired() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->wait_expired(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.devtools.clouddebugger.v2.ListActiveBreakpointsResponse)
  return target;
}

size_t ListActiveBreakpointsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.devtools.clouddebugger.v2.ListActiveBreakpointsResponse)
  size_t total_size = 0;

  // repeated .google.devtools.clouddebugger.v2.Breakpoint breakpoints = 1;
  {
    unsigned int count = this->breakpoints_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->breakpoints(i));
    }
  }

  // string next_wait_token = 2;
  if (this->next_wait_token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->next_wait_token());
  }

  // bool wait_expired = 3;
  if (this->wait_expired() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ListActiveBreakpointsResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.devtools.clouddebugger.v2.ListActiveBreakpointsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ListActiveBreakpointsResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListActiveBreakpointsResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.devtools.clouddebugger.v2.ListActiveBreakpointsResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.devtools.clouddebugger.v2.ListActiveBreakpointsResponse)
    MergeFrom(*source);
  }
}

void ListActiveBreakpointsResponse::MergeFrom(const ListActiveBreakpointsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.devtools.clouddebugger.v2.ListActiveBreakpointsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  breakpoints_.MergeFrom(from.breakpoints_);
  if (from.next_wait_token().size() > 0) {

    next_wait_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.next_wait_token_);
  }
  if (from.wait_expired() != 0) {
    set_wait_expired(from.wait_expired());
  }
}

void ListActiveBreakpointsResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.devtools.clouddebugger.v2.ListActiveBreakpointsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListActiveBreakpointsResponse::CopyFrom(const ListActiveBreakpointsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.devtools.clouddebugger.v2.ListActiveBreakpointsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListActiveBreakpointsResponse::IsInitialized() const {
  return true;
}

void ListActiveBreakpointsResponse::Swap(ListActiveBreakpointsResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListActiveBreakpointsResponse::InternalSwap(ListActiveBreakpointsResponse* other) {
  breakpoints_.InternalSwap(&other->breakpoints_);
  next_wait_token_.Swap(&other->next_wait_token_);
  std::swap(wait_expired_, other->wait_expired_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ListActiveBreakpointsResponse::GetMetadata() const {
  protobuf_google_2fdevtools_2fclouddebugger_2fv2_2fcontroller_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fdevtools_2fclouddebugger_2fv2_2fcontroller_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ListActiveBreakpointsResponse

// repeated .google.devtools.clouddebugger.v2.Breakpoint breakpoints = 1;
int ListActiveBreakpointsResponse::breakpoints_size() const {
  return breakpoints_.size();
}
void ListActiveBreakpointsResponse::clear_breakpoints() {
  breakpoints_.Clear();
}
const ::google::devtools::clouddebugger::v2::Breakpoint& ListActiveBreakpointsResponse::breakpoints(int index) const {
  // @@protoc_insertion_point(field_get:google.devtools.clouddebugger.v2.ListActiveBreakpointsResponse.breakpoints)
  return breakpoints_.Get(index);
}
::google::devtools::clouddebugger::v2::Breakpoint* ListActiveBreakpointsResponse::mutable_breakpoints(int index) {
  // @@protoc_insertion_point(field_mutable:google.devtools.clouddebugger.v2.ListActiveBreakpointsResponse.breakpoints)
  return breakpoints_.Mutable(index);
}
::google::devtools::clouddebugger::v2::Breakpoint* ListActiveBreakpointsResponse::add_breakpoints() {
  // @@protoc_insertion_point(field_add:google.devtools.clouddebugger.v2.ListActiveBreakpointsResponse.breakpoints)
  return breakpoints_.Add();
}
::google::protobuf::RepeatedPtrField< ::google::devtools::clouddebugger::v2::Breakpoint >*
ListActiveBreakpointsResponse::mutable_breakpoints() {
  // @@protoc_insertion_point(field_mutable_list:google.devtools.clouddebugger.v2.ListActiveBreakpointsResponse.breakpoints)
  return &breakpoints_;
}
const ::google::protobuf::RepeatedPtrField< ::google::devtools::clouddebugger::v2::Breakpoint >&
ListActiveBreakpointsResponse::breakpoints() const {
  // @@protoc_insertion_point(field_list:google.devtools.clouddebugger.v2.ListActiveBreakpointsResponse.breakpoints)
  return breakpoints_;
}

// string next_wait_token = 2;
void ListActiveBreakpointsResponse::clear_next_wait_token() {
  next_wait_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ListActiveBreakpointsResponse::next_wait_token() const {
  // @@protoc_insertion_point(field_get:google.devtools.clouddebugger.v2.ListActiveBreakpointsResponse.next_wait_token)
  return next_wait_token_.GetNoArena();
}
void ListActiveBreakpointsResponse::set_next_wait_token(const ::std::string& value) {
  
  next_wait_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.clouddebugger.v2.ListActiveBreakpointsResponse.next_wait_token)
}
#if LANG_CXX11
void ListActiveBreakpointsResponse::set_next_wait_token(::std::string&& value) {
  
  next_wait_token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.devtools.clouddebugger.v2.ListActiveBreakpointsResponse.next_wait_token)
}
#endif
void ListActiveBreakpointsResponse::set_next_wait_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  next_wait_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.clouddebugger.v2.ListActiveBreakpointsResponse.next_wait_token)
}
void ListActiveBreakpointsResponse::set_next_wait_token(const char* value, size_t size) {
  
  next_wait_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.clouddebugger.v2.ListActiveBreakpointsResponse.next_wait_token)
}
::std::string* ListActiveBreakpointsResponse::mutable_next_wait_token() {
  
  // @@protoc_insertion_point(field_mutable:google.devtools.clouddebugger.v2.ListActiveBreakpointsResponse.next_wait_token)
  return next_wait_token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ListActiveBreakpointsResponse::release_next_wait_token() {
  // @@protoc_insertion_point(field_release:google.devtools.clouddebugger.v2.ListActiveBreakpointsResponse.next_wait_token)
  
  return next_wait_token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ListActiveBreakpointsResponse::set_allocated_next_wait_token(::std::string* next_wait_token) {
  if (next_wait_token != NULL) {
    
  } else {
    
  }
  next_wait_token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), next_wait_token);
  // @@protoc_insertion_point(field_set_allocated:google.devtools.clouddebugger.v2.ListActiveBreakpointsResponse.next_wait_token)
}

// bool wait_expired = 3;
void ListActiveBreakpointsResponse::clear_wait_expired() {
  wait_expired_ = false;
}
bool ListActiveBreakpointsResponse::wait_expired() const {
  // @@protoc_insertion_point(field_get:google.devtools.clouddebugger.v2.ListActiveBreakpointsResponse.wait_expired)
  return wait_expired_;
}
void ListActiveBreakpointsResponse::set_wait_expired(bool value) {
  
  wait_expired_ = value;
  // @@protoc_insertion_point(field_set:google.devtools.clouddebugger.v2.ListActiveBreakpointsResponse.wait_expired)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UpdateActiveBreakpointRequest::kDebuggeeIdFieldNumber;
const int UpdateActiveBreakpointRequest::kBreakpointFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UpdateActiveBreakpointRequest::UpdateActiveBreakpointRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_google_2fdevtools_2fclouddebugger_2fv2_2fcontroller_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.devtools.clouddebugger.v2.UpdateActiveBreakpointRequest)
}
UpdateActiveBreakpointRequest::UpdateActiveBreakpointRequest(const UpdateActiveBreakpointRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  debuggee_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.debuggee_id().size() > 0) {
    debuggee_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.debuggee_id_);
  }
  if (from.has_breakpoint()) {
    breakpoint_ = new ::google::devtools::clouddebugger::v2::Breakpoint(*from.breakpoint_);
  } else {
    breakpoint_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.devtools.clouddebugger.v2.UpdateActiveBreakpointRequest)
}

void UpdateActiveBreakpointRequest::SharedCtor() {
  debuggee_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  breakpoint_ = NULL;
  _cached_size_ = 0;
}

UpdateActiveBreakpointRequest::~UpdateActiveBreakpointRequest() {
  // @@protoc_insertion_point(destructor:google.devtools.clouddebugger.v2.UpdateActiveBreakpointRequest)
  SharedDtor();
}

void UpdateActiveBreakpointRequest::SharedDtor() {
  debuggee_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete breakpoint_;
  }
}

void UpdateActiveBreakpointRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UpdateActiveBreakpointRequest::descriptor() {
  protobuf_google_2fdevtools_2fclouddebugger_2fv2_2fcontroller_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fdevtools_2fclouddebugger_2fv2_2fcontroller_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UpdateActiveBreakpointRequest& UpdateActiveBreakpointRequest::default_instance() {
  protobuf_google_2fdevtools_2fclouddebugger_2fv2_2fcontroller_2eproto::InitDefaults();
  return *internal_default_instance();
}

UpdateActiveBreakpointRequest* UpdateActiveBreakpointRequest::New(::google::protobuf::Arena* arena) const {
  UpdateActiveBreakpointRequest* n = new UpdateActiveBreakpointRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UpdateActiveBreakpointRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.devtools.clouddebugger.v2.UpdateActiveBreakpointRequest)
  debuggee_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && breakpoint_ != NULL) {
    delete breakpoint_;
  }
  breakpoint_ = NULL;
}

bool UpdateActiveBreakpointRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.devtools.clouddebugger.v2.UpdateActiveBreakpointRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string debuggee_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_debuggee_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->debuggee_id().data(), this->debuggee_id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.clouddebugger.v2.UpdateActiveBreakpointRequest.debuggee_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.devtools.clouddebugger.v2.Breakpoint breakpoint = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_breakpoint()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.devtools.clouddebugger.v2.UpdateActiveBreakpointRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.devtools.clouddebugger.v2.UpdateActiveBreakpointRequest)
  return false;
#undef DO_
}

void UpdateActiveBreakpointRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.devtools.clouddebugger.v2.UpdateActiveBreakpointRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string debuggee_id = 1;
  if (this->debuggee_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->debuggee_id().data(), this->debuggee_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.clouddebugger.v2.UpdateActiveBreakpointRequest.debuggee_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->debuggee_id(), output);
  }

  // .google.devtools.clouddebugger.v2.Breakpoint breakpoint = 2;
  if (this->has_breakpoint()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->breakpoint_, output);
  }

  // @@protoc_insertion_point(serialize_end:google.devtools.clouddebugger.v2.UpdateActiveBreakpointRequest)
}

::google::protobuf::uint8* UpdateActiveBreakpointRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.devtools.clouddebugger.v2.UpdateActiveBreakpointRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string debuggee_id = 1;
  if (this->debuggee_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->debuggee_id().data(), this->debuggee_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.clouddebugger.v2.UpdateActiveBreakpointRequest.debuggee_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->debuggee_id(), target);
  }

  // .google.devtools.clouddebugger.v2.Breakpoint breakpoint = 2;
  if (this->has_breakpoint()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->breakpoint_, deterministic, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.devtools.clouddebugger.v2.UpdateActiveBreakpointRequest)
  return target;
}

size_t UpdateActiveBreakpointRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.devtools.clouddebugger.v2.UpdateActiveBreakpointRequest)
  size_t total_size = 0;

  // string debuggee_id = 1;
  if (this->debuggee_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->debuggee_id());
  }

  // .google.devtools.clouddebugger.v2.Breakpoint breakpoint = 2;
  if (this->has_breakpoint()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->breakpoint_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UpdateActiveBreakpointRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.devtools.clouddebugger.v2.UpdateActiveBreakpointRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const UpdateActiveBreakpointRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UpdateActiveBreakpointRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.devtools.clouddebugger.v2.UpdateActiveBreakpointRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.devtools.clouddebugger.v2.UpdateActiveBreakpointRequest)
    MergeFrom(*source);
  }
}

void UpdateActiveBreakpointRequest::MergeFrom(const UpdateActiveBreakpointRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.devtools.clouddebugger.v2.UpdateActiveBreakpointRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.debuggee_id().size() > 0) {

    debuggee_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.debuggee_id_);
  }
  if (from.has_breakpoint()) {
    mutable_breakpoint()->::google::devtools::clouddebugger::v2::Breakpoint::MergeFrom(from.breakpoint());
  }
}

void UpdateActiveBreakpointRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.devtools.clouddebugger.v2.UpdateActiveBreakpointRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateActiveBreakpointRequest::CopyFrom(const UpdateActiveBreakpointRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.devtools.clouddebugger.v2.UpdateActiveBreakpointRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateActiveBreakpointRequest::IsInitialized() const {
  return true;
}

void UpdateActiveBreakpointRequest::Swap(UpdateActiveBreakpointRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UpdateActiveBreakpointRequest::InternalSwap(UpdateActiveBreakpointRequest* other) {
  debuggee_id_.Swap(&other->debuggee_id_);
  std::swap(breakpoint_, other->breakpoint_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UpdateActiveBreakpointRequest::GetMetadata() const {
  protobuf_google_2fdevtools_2fclouddebugger_2fv2_2fcontroller_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fdevtools_2fclouddebugger_2fv2_2fcontroller_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// UpdateActiveBreakpointRequest

// string debuggee_id = 1;
void UpdateActiveBreakpointRequest::clear_debuggee_id() {
  debuggee_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& UpdateActiveBreakpointRequest::debuggee_id() const {
  // @@protoc_insertion_point(field_get:google.devtools.clouddebugger.v2.UpdateActiveBreakpointRequest.debuggee_id)
  return debuggee_id_.GetNoArena();
}
void UpdateActiveBreakpointRequest::set_debuggee_id(const ::std::string& value) {
  
  debuggee_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.clouddebugger.v2.UpdateActiveBreakpointRequest.debuggee_id)
}
#if LANG_CXX11
void UpdateActiveBreakpointRequest::set_debuggee_id(::std::string&& value) {
  
  debuggee_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.devtools.clouddebugger.v2.UpdateActiveBreakpointRequest.debuggee_id)
}
#endif
void UpdateActiveBreakpointRequest::set_debuggee_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  debuggee_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.clouddebugger.v2.UpdateActiveBreakpointRequest.debuggee_id)
}
void UpdateActiveBreakpointRequest::set_debuggee_id(const char* value, size_t size) {
  
  debuggee_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.clouddebugger.v2.UpdateActiveBreakpointRequest.debuggee_id)
}
::std::string* UpdateActiveBreakpointRequest::mutable_debuggee_id() {
  
  // @@protoc_insertion_point(field_mutable:google.devtools.clouddebugger.v2.UpdateActiveBreakpointRequest.debuggee_id)
  return debuggee_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* UpdateActiveBreakpointRequest::release_debuggee_id() {
  // @@protoc_insertion_point(field_release:google.devtools.clouddebugger.v2.UpdateActiveBreakpointRequest.debuggee_id)
  
  return debuggee_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void UpdateActiveBreakpointRequest::set_allocated_debuggee_id(::std::string* debuggee_id) {
  if (debuggee_id != NULL) {
    
  } else {
    
  }
  debuggee_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), debuggee_id);
  // @@protoc_insertion_point(field_set_allocated:google.devtools.clouddebugger.v2.UpdateActiveBreakpointRequest.debuggee_id)
}

// .google.devtools.clouddebugger.v2.Breakpoint breakpoint = 2;
bool UpdateActiveBreakpointRequest::has_breakpoint() const {
  return this != internal_default_instance() && breakpoint_ != NULL;
}
void UpdateActiveBreakpointRequest::clear_breakpoint() {
  if (GetArenaNoVirtual() == NULL && breakpoint_ != NULL) delete breakpoint_;
  breakpoint_ = NULL;
}
const ::google::devtools::clouddebugger::v2::Breakpoint& UpdateActiveBreakpointRequest::breakpoint() const {
  // @@protoc_insertion_point(field_get:google.devtools.clouddebugger.v2.UpdateActiveBreakpointRequest.breakpoint)
  return breakpoint_ != NULL ? *breakpoint_
                         : *::google::devtools::clouddebugger::v2::Breakpoint::internal_default_instance();
}
::google::devtools::clouddebugger::v2::Breakpoint* UpdateActiveBreakpointRequest::mutable_breakpoint() {
  
  if (breakpoint_ == NULL) {
    breakpoint_ = new ::google::devtools::clouddebugger::v2::Breakpoint;
  }
  // @@protoc_insertion_point(field_mutable:google.devtools.clouddebugger.v2.UpdateActiveBreakpointRequest.breakpoint)
  return breakpoint_;
}
::google::devtools::clouddebugger::v2::Breakpoint* UpdateActiveBreakpointRequest::release_breakpoint() {
  // @@protoc_insertion_point(field_release:google.devtools.clouddebugger.v2.UpdateActiveBreakpointRequest.breakpoint)
  
  ::google::devtools::clouddebugger::v2::Breakpoint* temp = breakpoint_;
  breakpoint_ = NULL;
  return temp;
}
void UpdateActiveBreakpointRequest::set_allocated_breakpoint(::google::devtools::clouddebugger::v2::Breakpoint* breakpoint) {
  delete breakpoint_;
  breakpoint_ = breakpoint;
  if (breakpoint) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.devtools.clouddebugger.v2.UpdateActiveBreakpointRequest.breakpoint)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UpdateActiveBreakpointResponse::UpdateActiveBreakpointResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_google_2fdevtools_2fclouddebugger_2fv2_2fcontroller_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.devtools.clouddebugger.v2.UpdateActiveBreakpointResponse)
}
UpdateActiveBreakpointResponse::UpdateActiveBreakpointResponse(const UpdateActiveBreakpointResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:google.devtools.clouddebugger.v2.UpdateActiveBreakpointResponse)
}

void UpdateActiveBreakpointResponse::SharedCtor() {
  _cached_size_ = 0;
}

UpdateActiveBreakpointResponse::~UpdateActiveBreakpointResponse() {
  // @@protoc_insertion_point(destructor:google.devtools.clouddebugger.v2.UpdateActiveBreakpointResponse)
  SharedDtor();
}

void UpdateActiveBreakpointResponse::SharedDtor() {
}

void UpdateActiveBreakpointResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UpdateActiveBreakpointResponse::descriptor() {
  protobuf_google_2fdevtools_2fclouddebugger_2fv2_2fcontroller_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fdevtools_2fclouddebugger_2fv2_2fcontroller_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UpdateActiveBreakpointResponse& UpdateActiveBreakpointResponse::default_instance() {
  protobuf_google_2fdevtools_2fclouddebugger_2fv2_2fcontroller_2eproto::InitDefaults();
  return *internal_default_instance();
}

UpdateActiveBreakpointResponse* UpdateActiveBreakpointResponse::New(::google::protobuf::Arena* arena) const {
  UpdateActiveBreakpointResponse* n = new UpdateActiveBreakpointResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UpdateActiveBreakpointResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:google.devtools.clouddebugger.v2.UpdateActiveBreakpointResponse)
}

bool UpdateActiveBreakpointResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.devtools.clouddebugger.v2.UpdateActiveBreakpointResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
  }
success:
  // @@protoc_insertion_point(parse_success:google.devtools.clouddebugger.v2.UpdateActiveBreakpointResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.devtools.clouddebugger.v2.UpdateActiveBreakpointResponse)
  return false;
#undef DO_
}

void UpdateActiveBreakpointResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.devtools.clouddebugger.v2.UpdateActiveBreakpointResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // @@protoc_insertion_point(serialize_end:google.devtools.clouddebugger.v2.UpdateActiveBreakpointResponse)
}

::google::protobuf::uint8* UpdateActiveBreakpointResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.devtools.clouddebugger.v2.UpdateActiveBreakpointResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // @@protoc_insertion_point(serialize_to_array_end:google.devtools.clouddebugger.v2.UpdateActiveBreakpointResponse)
  return target;
}

size_t UpdateActiveBreakpointResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.devtools.clouddebugger.v2.UpdateActiveBreakpointResponse)
  size_t total_size = 0;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UpdateActiveBreakpointResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.devtools.clouddebugger.v2.UpdateActiveBreakpointResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const UpdateActiveBreakpointResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UpdateActiveBreakpointResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.devtools.clouddebugger.v2.UpdateActiveBreakpointResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.devtools.clouddebugger.v2.UpdateActiveBreakpointResponse)
    MergeFrom(*source);
  }
}

void UpdateActiveBreakpointResponse::MergeFrom(const UpdateActiveBreakpointResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.devtools.clouddebugger.v2.UpdateActiveBreakpointResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void UpdateActiveBreakpointResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.devtools.clouddebugger.v2.UpdateActiveBreakpointResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateActiveBreakpointResponse::CopyFrom(const UpdateActiveBreakpointResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.devtools.clouddebugger.v2.UpdateActiveBreakpointResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateActiveBreakpointResponse::IsInitialized() const {
  return true;
}

void UpdateActiveBreakpointResponse::Swap(UpdateActiveBreakpointResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UpdateActiveBreakpointResponse::InternalSwap(UpdateActiveBreakpointResponse* other) {
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UpdateActiveBreakpointResponse::GetMetadata() const {
  protobuf_google_2fdevtools_2fclouddebugger_2fv2_2fcontroller_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fdevtools_2fclouddebugger_2fv2_2fcontroller_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// UpdateActiveBreakpointResponse

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace v2
}  // namespace clouddebugger
}  // namespace devtools
}  // namespace google

// @@protoc_insertion_point(global_scope)
