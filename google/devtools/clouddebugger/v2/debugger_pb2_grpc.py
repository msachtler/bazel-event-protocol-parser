# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from google.devtools.clouddebugger.v2 import debugger_pb2 as google_dot_devtools_dot_clouddebugger_dot_v2_dot_debugger__pb2
from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2


class Debugger2Stub(object):
  """The Debugger service provides the API that allows users to collect run-time
  information from a running application, without stopping or slowing it down
  and without modifying its state.  An application may include one or
  more replicated processes performing the same work.

  A debugged application is represented using the Debuggee concept. The
  Debugger service provides a way to query for available debuggees, but does
  not provide a way to create one.  A debuggee is created using the Controller
  service, usually by running a debugger agent with the application.

  The Debugger service enables the client to set one or more Breakpoints on a
  Debuggee and collect the results of the set Breakpoints.
  """

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.SetBreakpoint = channel.unary_unary(
        '/google.devtools.clouddebugger.v2.Debugger2/SetBreakpoint',
        request_serializer=google_dot_devtools_dot_clouddebugger_dot_v2_dot_debugger__pb2.SetBreakpointRequest.SerializeToString,
        response_deserializer=google_dot_devtools_dot_clouddebugger_dot_v2_dot_debugger__pb2.SetBreakpointResponse.FromString,
        )
    self.GetBreakpoint = channel.unary_unary(
        '/google.devtools.clouddebugger.v2.Debugger2/GetBreakpoint',
        request_serializer=google_dot_devtools_dot_clouddebugger_dot_v2_dot_debugger__pb2.GetBreakpointRequest.SerializeToString,
        response_deserializer=google_dot_devtools_dot_clouddebugger_dot_v2_dot_debugger__pb2.GetBreakpointResponse.FromString,
        )
    self.DeleteBreakpoint = channel.unary_unary(
        '/google.devtools.clouddebugger.v2.Debugger2/DeleteBreakpoint',
        request_serializer=google_dot_devtools_dot_clouddebugger_dot_v2_dot_debugger__pb2.DeleteBreakpointRequest.SerializeToString,
        response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
        )
    self.ListBreakpoints = channel.unary_unary(
        '/google.devtools.clouddebugger.v2.Debugger2/ListBreakpoints',
        request_serializer=google_dot_devtools_dot_clouddebugger_dot_v2_dot_debugger__pb2.ListBreakpointsRequest.SerializeToString,
        response_deserializer=google_dot_devtools_dot_clouddebugger_dot_v2_dot_debugger__pb2.ListBreakpointsResponse.FromString,
        )
    self.ListDebuggees = channel.unary_unary(
        '/google.devtools.clouddebugger.v2.Debugger2/ListDebuggees',
        request_serializer=google_dot_devtools_dot_clouddebugger_dot_v2_dot_debugger__pb2.ListDebuggeesRequest.SerializeToString,
        response_deserializer=google_dot_devtools_dot_clouddebugger_dot_v2_dot_debugger__pb2.ListDebuggeesResponse.FromString,
        )


class Debugger2Servicer(object):
  """The Debugger service provides the API that allows users to collect run-time
  information from a running application, without stopping or slowing it down
  and without modifying its state.  An application may include one or
  more replicated processes performing the same work.

  A debugged application is represented using the Debuggee concept. The
  Debugger service provides a way to query for available debuggees, but does
  not provide a way to create one.  A debuggee is created using the Controller
  service, usually by running a debugger agent with the application.

  The Debugger service enables the client to set one or more Breakpoints on a
  Debuggee and collect the results of the set Breakpoints.
  """

  def SetBreakpoint(self, request, context):
    """Sets the breakpoint to the debuggee.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetBreakpoint(self, request, context):
    """Gets breakpoint information.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def DeleteBreakpoint(self, request, context):
    """Deletes the breakpoint from the debuggee.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def ListBreakpoints(self, request, context):
    """Lists all breakpoints for the debuggee.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def ListDebuggees(self, request, context):
    """Lists all the debuggees that the user has access to.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_Debugger2Servicer_to_server(servicer, server):
  rpc_method_handlers = {
      'SetBreakpoint': grpc.unary_unary_rpc_method_handler(
          servicer.SetBreakpoint,
          request_deserializer=google_dot_devtools_dot_clouddebugger_dot_v2_dot_debugger__pb2.SetBreakpointRequest.FromString,
          response_serializer=google_dot_devtools_dot_clouddebugger_dot_v2_dot_debugger__pb2.SetBreakpointResponse.SerializeToString,
      ),
      'GetBreakpoint': grpc.unary_unary_rpc_method_handler(
          servicer.GetBreakpoint,
          request_deserializer=google_dot_devtools_dot_clouddebugger_dot_v2_dot_debugger__pb2.GetBreakpointRequest.FromString,
          response_serializer=google_dot_devtools_dot_clouddebugger_dot_v2_dot_debugger__pb2.GetBreakpointResponse.SerializeToString,
      ),
      'DeleteBreakpoint': grpc.unary_unary_rpc_method_handler(
          servicer.DeleteBreakpoint,
          request_deserializer=google_dot_devtools_dot_clouddebugger_dot_v2_dot_debugger__pb2.DeleteBreakpointRequest.FromString,
          response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
      ),
      'ListBreakpoints': grpc.unary_unary_rpc_method_handler(
          servicer.ListBreakpoints,
          request_deserializer=google_dot_devtools_dot_clouddebugger_dot_v2_dot_debugger__pb2.ListBreakpointsRequest.FromString,
          response_serializer=google_dot_devtools_dot_clouddebugger_dot_v2_dot_debugger__pb2.ListBreakpointsResponse.SerializeToString,
      ),
      'ListDebuggees': grpc.unary_unary_rpc_method_handler(
          servicer.ListDebuggees,
          request_deserializer=google_dot_devtools_dot_clouddebugger_dot_v2_dot_debugger__pb2.ListDebuggeesRequest.FromString,
          response_serializer=google_dot_devtools_dot_clouddebugger_dot_v2_dot_debugger__pb2.ListDebuggeesResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'google.devtools.clouddebugger.v2.Debugger2', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
