// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/devtools/cloudprofiler/v2/profiler.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "google/devtools/cloudprofiler/v2/profiler.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace google {
namespace devtools {
namespace cloudprofiler {
namespace v2 {
class CreateProfileRequestDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CreateProfileRequest> {
} _CreateProfileRequest_default_instance_;
class UpdateProfileRequestDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<UpdateProfileRequest> {
} _UpdateProfileRequest_default_instance_;
class Profile_LabelsEntryDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Profile::Profile_LabelsEntry> {
} _Profile_LabelsEntry_default_instance_;
class ProfileDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Profile> {
} _Profile_default_instance_;
class Deployment_LabelsEntryDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Deployment::Deployment_LabelsEntry> {
} _Deployment_LabelsEntry_default_instance_;
class DeploymentDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Deployment> {
} _Deployment_default_instance_;

namespace protobuf_google_2fdevtools_2fcloudprofiler_2fv2_2fprofiler_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[6];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] = {
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateProfileRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateProfileRequest, deployment_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateProfileRequest, profile_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateProfileRequest, profile_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateProfileRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateProfileRequest, profile_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Profile, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Profile, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Profile, profile_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Profile, deployment_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Profile, duration_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Profile, profile_bytes_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Profile, labels_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Deployment, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Deployment, project_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Deployment, target_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Deployment, labels_),
};

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, -1, sizeof(CreateProfileRequest)},
  { 8, -1, sizeof(UpdateProfileRequest)},
  { 14, -1, sizeof(Profile)},
  { 25, -1, sizeof(Deployment)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_CreateProfileRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_UpdateProfileRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Profile_LabelsEntry_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Profile_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Deployment_LabelsEntry_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Deployment_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "google/devtools/cloudprofiler/v2/profiler.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
file_level_metadata[2].reflection = Profile::Profile_LabelsEntry::CreateReflection(file_level_metadata[2].descriptor, _Profile_LabelsEntry_default_instance_.get_mutable());
file_level_metadata[4].reflection = Deployment::Deployment_LabelsEntry::CreateReflection(file_level_metadata[4].descriptor, _Deployment_LabelsEntry_default_instance_.get_mutable());
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 6);
}

}  // namespace

void TableStruct::Shutdown() {
  _CreateProfileRequest_default_instance_.Shutdown();
  delete file_level_metadata[0].reflection;
  _UpdateProfileRequest_default_instance_.Shutdown();
  delete file_level_metadata[1].reflection;
  _Profile_default_instance_.Shutdown();
  delete file_level_metadata[3].reflection;
  _Deployment_default_instance_.Shutdown();
  delete file_level_metadata[5].reflection;
  delete file_level_metadata[2].reflection;
  delete file_level_metadata[4].reflection;
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  ::google::api::protobuf_google_2fapi_2fannotations_2eproto::InitDefaults();
  ::google::protobuf::protobuf_google_2fprotobuf_2fduration_2eproto::InitDefaults();
  ::google::protobuf::protobuf_google_2fprotobuf_2ftimestamp_2eproto::InitDefaults();
  _CreateProfileRequest_default_instance_.DefaultConstruct();
  _UpdateProfileRequest_default_instance_.DefaultConstruct();
  _Profile_LabelsEntry_default_instance_.DefaultConstruct();
  _Profile_default_instance_.DefaultConstruct();
  _Deployment_LabelsEntry_default_instance_.DefaultConstruct();
  _Deployment_default_instance_.DefaultConstruct();
  _CreateProfileRequest_default_instance_.get_mutable()->deployment_ = const_cast< ::google::devtools::cloudprofiler::v2::Deployment*>(
      ::google::devtools::cloudprofiler::v2::Deployment::internal_default_instance());
  _CreateProfileRequest_default_instance_.get_mutable()->profile_ = const_cast< ::google::devtools::cloudprofiler::v2::Profile*>(
      ::google::devtools::cloudprofiler::v2::Profile::internal_default_instance());
  _UpdateProfileRequest_default_instance_.get_mutable()->profile_ = const_cast< ::google::devtools::cloudprofiler::v2::Profile*>(
      ::google::devtools::cloudprofiler::v2::Profile::internal_default_instance());
  _Profile_LabelsEntry_default_instance_.get_mutable()->set_default_instance(_Profile_LabelsEntry_default_instance_.get_mutable());
  _Profile_LabelsEntry_default_instance_.get_mutable()->InitAsDefaultInstance();
  _Profile_default_instance_.get_mutable()->deployment_ = const_cast< ::google::devtools::cloudprofiler::v2::Deployment*>(
      ::google::devtools::cloudprofiler::v2::Deployment::internal_default_instance());
  _Profile_default_instance_.get_mutable()->duration_ = const_cast< ::google::protobuf::Duration*>(
      ::google::protobuf::Duration::internal_default_instance());
  _Deployment_LabelsEntry_default_instance_.get_mutable()->set_default_instance(_Deployment_LabelsEntry_default_instance_.get_mutable());
  _Deployment_LabelsEntry_default_instance_.get_mutable()->InitAsDefaultInstance();
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n/google/devtools/cloudprofiler/v2/profi"
      "ler.proto\022 google.devtools.cloudprofiler"
      ".v2\032\034google/api/annotations.proto\032\036googl"
      "e/protobuf/duration.proto\032\037google/protob"
      "uf/timestamp.proto\"\331\001\n\024CreateProfileRequ"
      "est\022@\n\ndeployment\030\001 \001(\0132,.google.devtool"
      "s.cloudprofiler.v2.Deployment\022C\n\014profile"
      "_type\030\002 \003(\0162-.google.devtools.cloudprofi"
      "ler.v2.ProfileType\022:\n\007profile\030\003 \001(\0132).go"
      "ogle.devtools.cloudprofiler.v2.Profile\"R"
      "\n\024UpdateProfileRequest\022:\n\007profile\030\001 \001(\0132"
      ").google.devtools.cloudprofiler.v2.Profi"
      "le\"\330\002\n\007Profile\022\014\n\004name\030\001 \001(\t\022C\n\014profile_"
      "type\030\002 \001(\0162-.google.devtools.cloudprofil"
      "er.v2.ProfileType\022@\n\ndeployment\030\003 \001(\0132,."
      "google.devtools.cloudprofiler.v2.Deploym"
      "ent\022+\n\010duration\030\004 \001(\0132\031.google.protobuf."
      "Duration\022\025\n\rprofile_bytes\030\005 \001(\014\022E\n\006label"
      "s\030\006 \003(\01325.google.devtools.cloudprofiler."
      "v2.Profile.LabelsEntry\032-\n\013LabelsEntry\022\013\n"
      "\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\"\251\001\n\nDeploy"
      "ment\022\022\n\nproject_id\030\001 \001(\t\022\016\n\006target\030\002 \001(\t"
      "\022H\n\006labels\030\003 \003(\01328.google.devtools.cloud"
      "profiler.v2.Deployment.LabelsEntry\032-\n\013La"
      "belsEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028"
      "\001*e\n\013ProfileType\022\034\n\030PROFILE_TYPE_UNSPECI"
      "FIED\020\000\022\007\n\003CPU\020\001\022\010\n\004WALL\020\002\022\010\n\004HEAP\020\003\022\013\n\007T"
      "HREADS\020\004\022\016\n\nCONTENTION\020\0052\360\002\n\017ProfilerSer"
      "vice\022\254\001\n\rCreateProfile\0226.google.devtools"
      ".cloudprofiler.v2.CreateProfileRequest\032)"
      ".google.devtools.cloudprofiler.v2.Profil"
      "e\"8\202\323\344\223\0022\"-/v2/projects/{deployment.proj"
      "ect_id}/profiles:\001*\022\255\001\n\rUpdateProfile\0226."
      "google.devtools.cloudprofiler.v2.UpdateP"
      "rofileRequest\032).google.devtools.cloudpro"
      "filer.v2.Profile\"9\202\323\344\223\00232(/v2/{profile.n"
      "ame=projects/*/profiles/*}:\007profileBOZMg"
      "oogle.golang.org/genproto/googleapis/dev"
      "tools/cloudprofiler/v2;cloudprofilerb\006pr"
      "oto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1564);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "google/devtools/cloudprofiler/v2/profiler.proto", &protobuf_RegisterTypes);
  ::google::api::protobuf_google_2fapi_2fannotations_2eproto::AddDescriptors();
  ::google::protobuf::protobuf_google_2fprotobuf_2fduration_2eproto::AddDescriptors();
  ::google::protobuf::protobuf_google_2fprotobuf_2ftimestamp_2eproto::AddDescriptors();
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_google_2fdevtools_2fcloudprofiler_2fv2_2fprofiler_2eproto

const ::google::protobuf::EnumDescriptor* ProfileType_descriptor() {
  protobuf_google_2fdevtools_2fcloudprofiler_2fv2_2fprofiler_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fdevtools_2fcloudprofiler_2fv2_2fprofiler_2eproto::file_level_enum_descriptors[0];
}
bool ProfileType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CreateProfileRequest::kDeploymentFieldNumber;
const int CreateProfileRequest::kProfileTypeFieldNumber;
const int CreateProfileRequest::kProfileFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CreateProfileRequest::CreateProfileRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_google_2fdevtools_2fcloudprofiler_2fv2_2fprofiler_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.devtools.cloudprofiler.v2.CreateProfileRequest)
}
CreateProfileRequest::CreateProfileRequest(const CreateProfileRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      profile_type_(from.profile_type_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_deployment()) {
    deployment_ = new ::google::devtools::cloudprofiler::v2::Deployment(*from.deployment_);
  } else {
    deployment_ = NULL;
  }
  if (from.has_profile()) {
    profile_ = new ::google::devtools::cloudprofiler::v2::Profile(*from.profile_);
  } else {
    profile_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.devtools.cloudprofiler.v2.CreateProfileRequest)
}

void CreateProfileRequest::SharedCtor() {
  ::memset(&deployment_, 0, reinterpret_cast<char*>(&profile_) -
    reinterpret_cast<char*>(&deployment_) + sizeof(profile_));
  _cached_size_ = 0;
}

CreateProfileRequest::~CreateProfileRequest() {
  // @@protoc_insertion_point(destructor:google.devtools.cloudprofiler.v2.CreateProfileRequest)
  SharedDtor();
}

void CreateProfileRequest::SharedDtor() {
  if (this != internal_default_instance()) {
    delete deployment_;
  }
  if (this != internal_default_instance()) {
    delete profile_;
  }
}

void CreateProfileRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CreateProfileRequest::descriptor() {
  protobuf_google_2fdevtools_2fcloudprofiler_2fv2_2fprofiler_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fdevtools_2fcloudprofiler_2fv2_2fprofiler_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CreateProfileRequest& CreateProfileRequest::default_instance() {
  protobuf_google_2fdevtools_2fcloudprofiler_2fv2_2fprofiler_2eproto::InitDefaults();
  return *internal_default_instance();
}

CreateProfileRequest* CreateProfileRequest::New(::google::protobuf::Arena* arena) const {
  CreateProfileRequest* n = new CreateProfileRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CreateProfileRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.devtools.cloudprofiler.v2.CreateProfileRequest)
  profile_type_.Clear();
  if (GetArenaNoVirtual() == NULL && deployment_ != NULL) {
    delete deployment_;
  }
  deployment_ = NULL;
  if (GetArenaNoVirtual() == NULL && profile_ != NULL) {
    delete profile_;
  }
  profile_ = NULL;
}

bool CreateProfileRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.devtools.cloudprofiler.v2.CreateProfileRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.devtools.cloudprofiler.v2.Deployment deployment = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_deployment()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.devtools.cloudprofiler.v2.ProfileType profile_type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          ::google::protobuf::uint32 length;
          DO_(input->ReadVarint32(&length));
          ::google::protobuf::io::CodedInputStream::Limit limit = input->PushLimit(length);
          while (input->BytesUntilLimit() > 0) {
            int value;
            DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
            add_profile_type(static_cast< ::google::devtools::cloudprofiler::v2::ProfileType >(value));
          }
          input->PopLimit(limit);
        } else if (static_cast< ::google::protobuf::uint8>(tag) ==
                   static_cast< ::google::protobuf::uint8>(16u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          add_profile_type(static_cast< ::google::devtools::cloudprofiler::v2::ProfileType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.devtools.cloudprofiler.v2.Profile profile = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_profile()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.devtools.cloudprofiler.v2.CreateProfileRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.devtools.cloudprofiler.v2.CreateProfileRequest)
  return false;
#undef DO_
}

void CreateProfileRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.devtools.cloudprofiler.v2.CreateProfileRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.devtools.cloudprofiler.v2.Deployment deployment = 1;
  if (this->has_deployment()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->deployment_, output);
  }

  // repeated .google.devtools.cloudprofiler.v2.ProfileType profile_type = 2;
  if (this->profile_type_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      output);
    output->WriteVarint32(_profile_type_cached_byte_size_);
  }
  for (int i = 0, n = this->profile_type_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteEnumNoTag(
      this->profile_type(i), output);
  }

  // .google.devtools.cloudprofiler.v2.Profile profile = 3;
  if (this->has_profile()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->profile_, output);
  }

  // @@protoc_insertion_point(serialize_end:google.devtools.cloudprofiler.v2.CreateProfileRequest)
}

::google::protobuf::uint8* CreateProfileRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.devtools.cloudprofiler.v2.CreateProfileRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.devtools.cloudprofiler.v2.Deployment deployment = 1;
  if (this->has_deployment()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->deployment_, deterministic, target);
  }

  // repeated .google.devtools.cloudprofiler.v2.ProfileType profile_type = 2;
  if (this->profile_type_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(    _profile_type_cached_byte_size_, target);
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumNoTagToArray(
      this->profile_type_, target);
  }

  // .google.devtools.cloudprofiler.v2.Profile profile = 3;
  if (this->has_profile()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->profile_, deterministic, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.devtools.cloudprofiler.v2.CreateProfileRequest)
  return target;
}

size_t CreateProfileRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.devtools.cloudprofiler.v2.CreateProfileRequest)
  size_t total_size = 0;

  // repeated .google.devtools.cloudprofiler.v2.ProfileType profile_type = 2;
  {
    size_t data_size = 0;
    unsigned int count = this->profile_type_size();for (unsigned int i = 0; i < count; i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::EnumSize(
        this->profile_type(i));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _profile_type_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // .google.devtools.cloudprofiler.v2.Deployment deployment = 1;
  if (this->has_deployment()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->deployment_);
  }

  // .google.devtools.cloudprofiler.v2.Profile profile = 3;
  if (this->has_profile()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->profile_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CreateProfileRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.devtools.cloudprofiler.v2.CreateProfileRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateProfileRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CreateProfileRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.devtools.cloudprofiler.v2.CreateProfileRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.devtools.cloudprofiler.v2.CreateProfileRequest)
    MergeFrom(*source);
  }
}

void CreateProfileRequest::MergeFrom(const CreateProfileRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.devtools.cloudprofiler.v2.CreateProfileRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  profile_type_.MergeFrom(from.profile_type_);
  if (from.has_deployment()) {
    mutable_deployment()->::google::devtools::cloudprofiler::v2::Deployment::MergeFrom(from.deployment());
  }
  if (from.has_profile()) {
    mutable_profile()->::google::devtools::cloudprofiler::v2::Profile::MergeFrom(from.profile());
  }
}

void CreateProfileRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.devtools.cloudprofiler.v2.CreateProfileRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateProfileRequest::CopyFrom(const CreateProfileRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.devtools.cloudprofiler.v2.CreateProfileRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateProfileRequest::IsInitialized() const {
  return true;
}

void CreateProfileRequest::Swap(CreateProfileRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CreateProfileRequest::InternalSwap(CreateProfileRequest* other) {
  profile_type_.InternalSwap(&other->profile_type_);
  std::swap(deployment_, other->deployment_);
  std::swap(profile_, other->profile_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CreateProfileRequest::GetMetadata() const {
  protobuf_google_2fdevtools_2fcloudprofiler_2fv2_2fprofiler_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fdevtools_2fcloudprofiler_2fv2_2fprofiler_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CreateProfileRequest

// .google.devtools.cloudprofiler.v2.Deployment deployment = 1;
bool CreateProfileRequest::has_deployment() const {
  return this != internal_default_instance() && deployment_ != NULL;
}
void CreateProfileRequest::clear_deployment() {
  if (GetArenaNoVirtual() == NULL && deployment_ != NULL) delete deployment_;
  deployment_ = NULL;
}
const ::google::devtools::cloudprofiler::v2::Deployment& CreateProfileRequest::deployment() const {
  // @@protoc_insertion_point(field_get:google.devtools.cloudprofiler.v2.CreateProfileRequest.deployment)
  return deployment_ != NULL ? *deployment_
                         : *::google::devtools::cloudprofiler::v2::Deployment::internal_default_instance();
}
::google::devtools::cloudprofiler::v2::Deployment* CreateProfileRequest::mutable_deployment() {
  
  if (deployment_ == NULL) {
    deployment_ = new ::google::devtools::cloudprofiler::v2::Deployment;
  }
  // @@protoc_insertion_point(field_mutable:google.devtools.cloudprofiler.v2.CreateProfileRequest.deployment)
  return deployment_;
}
::google::devtools::cloudprofiler::v2::Deployment* CreateProfileRequest::release_deployment() {
  // @@protoc_insertion_point(field_release:google.devtools.cloudprofiler.v2.CreateProfileRequest.deployment)
  
  ::google::devtools::cloudprofiler::v2::Deployment* temp = deployment_;
  deployment_ = NULL;
  return temp;
}
void CreateProfileRequest::set_allocated_deployment(::google::devtools::cloudprofiler::v2::Deployment* deployment) {
  delete deployment_;
  deployment_ = deployment;
  if (deployment) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.devtools.cloudprofiler.v2.CreateProfileRequest.deployment)
}

// repeated .google.devtools.cloudprofiler.v2.ProfileType profile_type = 2;
int CreateProfileRequest::profile_type_size() const {
  return profile_type_.size();
}
void CreateProfileRequest::clear_profile_type() {
  profile_type_.Clear();
}
::google::devtools::cloudprofiler::v2::ProfileType CreateProfileRequest::profile_type(int index) const {
  // @@protoc_insertion_point(field_get:google.devtools.cloudprofiler.v2.CreateProfileRequest.profile_type)
  return static_cast< ::google::devtools::cloudprofiler::v2::ProfileType >(profile_type_.Get(index));
}
void CreateProfileRequest::set_profile_type(int index, ::google::devtools::cloudprofiler::v2::ProfileType value) {
  profile_type_.Set(index, value);
  // @@protoc_insertion_point(field_set:google.devtools.cloudprofiler.v2.CreateProfileRequest.profile_type)
}
void CreateProfileRequest::add_profile_type(::google::devtools::cloudprofiler::v2::ProfileType value) {
  profile_type_.Add(value);
  // @@protoc_insertion_point(field_add:google.devtools.cloudprofiler.v2.CreateProfileRequest.profile_type)
}
const ::google::protobuf::RepeatedField<int>&
CreateProfileRequest::profile_type() const {
  // @@protoc_insertion_point(field_list:google.devtools.cloudprofiler.v2.CreateProfileRequest.profile_type)
  return profile_type_;
}
::google::protobuf::RepeatedField<int>*
CreateProfileRequest::mutable_profile_type() {
  // @@protoc_insertion_point(field_mutable_list:google.devtools.cloudprofiler.v2.CreateProfileRequest.profile_type)
  return &profile_type_;
}

// .google.devtools.cloudprofiler.v2.Profile profile = 3;
bool CreateProfileRequest::has_profile() const {
  return this != internal_default_instance() && profile_ != NULL;
}
void CreateProfileRequest::clear_profile() {
  if (GetArenaNoVirtual() == NULL && profile_ != NULL) delete profile_;
  profile_ = NULL;
}
const ::google::devtools::cloudprofiler::v2::Profile& CreateProfileRequest::profile() const {
  // @@protoc_insertion_point(field_get:google.devtools.cloudprofiler.v2.CreateProfileRequest.profile)
  return profile_ != NULL ? *profile_
                         : *::google::devtools::cloudprofiler::v2::Profile::internal_default_instance();
}
::google::devtools::cloudprofiler::v2::Profile* CreateProfileRequest::mutable_profile() {
  
  if (profile_ == NULL) {
    profile_ = new ::google::devtools::cloudprofiler::v2::Profile;
  }
  // @@protoc_insertion_point(field_mutable:google.devtools.cloudprofiler.v2.CreateProfileRequest.profile)
  return profile_;
}
::google::devtools::cloudprofiler::v2::Profile* CreateProfileRequest::release_profile() {
  // @@protoc_insertion_point(field_release:google.devtools.cloudprofiler.v2.CreateProfileRequest.profile)
  
  ::google::devtools::cloudprofiler::v2::Profile* temp = profile_;
  profile_ = NULL;
  return temp;
}
void CreateProfileRequest::set_allocated_profile(::google::devtools::cloudprofiler::v2::Profile* profile) {
  delete profile_;
  profile_ = profile;
  if (profile) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.devtools.cloudprofiler.v2.CreateProfileRequest.profile)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UpdateProfileRequest::kProfileFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UpdateProfileRequest::UpdateProfileRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_google_2fdevtools_2fcloudprofiler_2fv2_2fprofiler_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.devtools.cloudprofiler.v2.UpdateProfileRequest)
}
UpdateProfileRequest::UpdateProfileRequest(const UpdateProfileRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_profile()) {
    profile_ = new ::google::devtools::cloudprofiler::v2::Profile(*from.profile_);
  } else {
    profile_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.devtools.cloudprofiler.v2.UpdateProfileRequest)
}

void UpdateProfileRequest::SharedCtor() {
  profile_ = NULL;
  _cached_size_ = 0;
}

UpdateProfileRequest::~UpdateProfileRequest() {
  // @@protoc_insertion_point(destructor:google.devtools.cloudprofiler.v2.UpdateProfileRequest)
  SharedDtor();
}

void UpdateProfileRequest::SharedDtor() {
  if (this != internal_default_instance()) {
    delete profile_;
  }
}

void UpdateProfileRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UpdateProfileRequest::descriptor() {
  protobuf_google_2fdevtools_2fcloudprofiler_2fv2_2fprofiler_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fdevtools_2fcloudprofiler_2fv2_2fprofiler_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UpdateProfileRequest& UpdateProfileRequest::default_instance() {
  protobuf_google_2fdevtools_2fcloudprofiler_2fv2_2fprofiler_2eproto::InitDefaults();
  return *internal_default_instance();
}

UpdateProfileRequest* UpdateProfileRequest::New(::google::protobuf::Arena* arena) const {
  UpdateProfileRequest* n = new UpdateProfileRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UpdateProfileRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.devtools.cloudprofiler.v2.UpdateProfileRequest)
  if (GetArenaNoVirtual() == NULL && profile_ != NULL) {
    delete profile_;
  }
  profile_ = NULL;
}

bool UpdateProfileRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.devtools.cloudprofiler.v2.UpdateProfileRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.devtools.cloudprofiler.v2.Profile profile = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_profile()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.devtools.cloudprofiler.v2.UpdateProfileRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.devtools.cloudprofiler.v2.UpdateProfileRequest)
  return false;
#undef DO_
}

void UpdateProfileRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.devtools.cloudprofiler.v2.UpdateProfileRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.devtools.cloudprofiler.v2.Profile profile = 1;
  if (this->has_profile()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->profile_, output);
  }

  // @@protoc_insertion_point(serialize_end:google.devtools.cloudprofiler.v2.UpdateProfileRequest)
}

::google::protobuf::uint8* UpdateProfileRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.devtools.cloudprofiler.v2.UpdateProfileRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.devtools.cloudprofiler.v2.Profile profile = 1;
  if (this->has_profile()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->profile_, deterministic, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.devtools.cloudprofiler.v2.UpdateProfileRequest)
  return target;
}

size_t UpdateProfileRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.devtools.cloudprofiler.v2.UpdateProfileRequest)
  size_t total_size = 0;

  // .google.devtools.cloudprofiler.v2.Profile profile = 1;
  if (this->has_profile()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->profile_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UpdateProfileRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.devtools.cloudprofiler.v2.UpdateProfileRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const UpdateProfileRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UpdateProfileRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.devtools.cloudprofiler.v2.UpdateProfileRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.devtools.cloudprofiler.v2.UpdateProfileRequest)
    MergeFrom(*source);
  }
}

void UpdateProfileRequest::MergeFrom(const UpdateProfileRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.devtools.cloudprofiler.v2.UpdateProfileRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_profile()) {
    mutable_profile()->::google::devtools::cloudprofiler::v2::Profile::MergeFrom(from.profile());
  }
}

void UpdateProfileRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.devtools.cloudprofiler.v2.UpdateProfileRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateProfileRequest::CopyFrom(const UpdateProfileRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.devtools.cloudprofiler.v2.UpdateProfileRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateProfileRequest::IsInitialized() const {
  return true;
}

void UpdateProfileRequest::Swap(UpdateProfileRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UpdateProfileRequest::InternalSwap(UpdateProfileRequest* other) {
  std::swap(profile_, other->profile_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UpdateProfileRequest::GetMetadata() const {
  protobuf_google_2fdevtools_2fcloudprofiler_2fv2_2fprofiler_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fdevtools_2fcloudprofiler_2fv2_2fprofiler_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// UpdateProfileRequest

// .google.devtools.cloudprofiler.v2.Profile profile = 1;
bool UpdateProfileRequest::has_profile() const {
  return this != internal_default_instance() && profile_ != NULL;
}
void UpdateProfileRequest::clear_profile() {
  if (GetArenaNoVirtual() == NULL && profile_ != NULL) delete profile_;
  profile_ = NULL;
}
const ::google::devtools::cloudprofiler::v2::Profile& UpdateProfileRequest::profile() const {
  // @@protoc_insertion_point(field_get:google.devtools.cloudprofiler.v2.UpdateProfileRequest.profile)
  return profile_ != NULL ? *profile_
                         : *::google::devtools::cloudprofiler::v2::Profile::internal_default_instance();
}
::google::devtools::cloudprofiler::v2::Profile* UpdateProfileRequest::mutable_profile() {
  
  if (profile_ == NULL) {
    profile_ = new ::google::devtools::cloudprofiler::v2::Profile;
  }
  // @@protoc_insertion_point(field_mutable:google.devtools.cloudprofiler.v2.UpdateProfileRequest.profile)
  return profile_;
}
::google::devtools::cloudprofiler::v2::Profile* UpdateProfileRequest::release_profile() {
  // @@protoc_insertion_point(field_release:google.devtools.cloudprofiler.v2.UpdateProfileRequest.profile)
  
  ::google::devtools::cloudprofiler::v2::Profile* temp = profile_;
  profile_ = NULL;
  return temp;
}
void UpdateProfileRequest::set_allocated_profile(::google::devtools::cloudprofiler::v2::Profile* profile) {
  delete profile_;
  profile_ = profile;
  if (profile) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.devtools.cloudprofiler.v2.UpdateProfileRequest.profile)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

Profile::Profile_LabelsEntry::Profile_LabelsEntry() {}
Profile::Profile_LabelsEntry::Profile_LabelsEntry(::google::protobuf::Arena* arena) : SuperType(arena) {}
::google::protobuf::Metadata Profile::Profile_LabelsEntry::GetMetadata() const {
  protobuf_google_2fdevtools_2fcloudprofiler_2fv2_2fprofiler_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fdevtools_2fcloudprofiler_2fv2_2fprofiler_2eproto::file_level_metadata[2];
}
void Profile::Profile_LabelsEntry::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}
void Profile::Profile_LabelsEntry::MergeFrom(const Profile_LabelsEntry& other) {
  MergeFromInternal(other);
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Profile::kNameFieldNumber;
const int Profile::kProfileTypeFieldNumber;
const int Profile::kDeploymentFieldNumber;
const int Profile::kDurationFieldNumber;
const int Profile::kProfileBytesFieldNumber;
const int Profile::kLabelsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Profile::Profile()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_google_2fdevtools_2fcloudprofiler_2fv2_2fprofiler_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.devtools.cloudprofiler.v2.Profile)
}
Profile::Profile(const Profile& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  labels_.MergeFrom(from.labels_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  profile_bytes_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.profile_bytes().size() > 0) {
    profile_bytes_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.profile_bytes_);
  }
  if (from.has_deployment()) {
    deployment_ = new ::google::devtools::cloudprofiler::v2::Deployment(*from.deployment_);
  } else {
    deployment_ = NULL;
  }
  if (from.has_duration()) {
    duration_ = new ::google::protobuf::Duration(*from.duration_);
  } else {
    duration_ = NULL;
  }
  profile_type_ = from.profile_type_;
  // @@protoc_insertion_point(copy_constructor:google.devtools.cloudprofiler.v2.Profile)
}

void Profile::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  profile_bytes_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&deployment_, 0, reinterpret_cast<char*>(&profile_type_) -
    reinterpret_cast<char*>(&deployment_) + sizeof(profile_type_));
  _cached_size_ = 0;
}

Profile::~Profile() {
  // @@protoc_insertion_point(destructor:google.devtools.cloudprofiler.v2.Profile)
  SharedDtor();
}

void Profile::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  profile_bytes_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete deployment_;
  }
  if (this != internal_default_instance()) {
    delete duration_;
  }
}

void Profile::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Profile::descriptor() {
  protobuf_google_2fdevtools_2fcloudprofiler_2fv2_2fprofiler_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fdevtools_2fcloudprofiler_2fv2_2fprofiler_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Profile& Profile::default_instance() {
  protobuf_google_2fdevtools_2fcloudprofiler_2fv2_2fprofiler_2eproto::InitDefaults();
  return *internal_default_instance();
}

Profile* Profile::New(::google::protobuf::Arena* arena) const {
  Profile* n = new Profile;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Profile::Clear() {
// @@protoc_insertion_point(message_clear_start:google.devtools.cloudprofiler.v2.Profile)
  labels_.Clear();
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  profile_bytes_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && deployment_ != NULL) {
    delete deployment_;
  }
  deployment_ = NULL;
  if (GetArenaNoVirtual() == NULL && duration_ != NULL) {
    delete duration_;
  }
  duration_ = NULL;
  profile_type_ = 0;
}

bool Profile::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.devtools.cloudprofiler.v2.Profile)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.cloudprofiler.v2.Profile.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.devtools.cloudprofiler.v2.ProfileType profile_type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_profile_type(static_cast< ::google::devtools::cloudprofiler::v2::ProfileType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.devtools.cloudprofiler.v2.Deployment deployment = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_deployment()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Duration duration = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_duration()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes profile_bytes = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_profile_bytes()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, string> labels = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u)) {
          Profile_LabelsEntry::Parser< ::google::protobuf::internal::MapField<
              Profile_LabelsEntry,
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&labels_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), parser.key().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.cloudprofiler.v2.Profile.LabelsEntry.key"));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.value().data(), parser.value().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.cloudprofiler.v2.Profile.LabelsEntry.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.devtools.cloudprofiler.v2.Profile)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.devtools.cloudprofiler.v2.Profile)
  return false;
#undef DO_
}

void Profile::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.devtools.cloudprofiler.v2.Profile)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.cloudprofiler.v2.Profile.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // .google.devtools.cloudprofiler.v2.ProfileType profile_type = 2;
  if (this->profile_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->profile_type(), output);
  }

  // .google.devtools.cloudprofiler.v2.Deployment deployment = 3;
  if (this->has_deployment()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->deployment_, output);
  }

  // .google.protobuf.Duration duration = 4;
  if (this->has_duration()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->duration_, output);
  }

  // bytes profile_bytes = 5;
  if (this->profile_bytes().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      5, this->profile_bytes(), output);
  }

  // map<string, string> labels = 6;
  if (!this->labels().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), p->first.length(),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.devtools.cloudprofiler.v2.Profile.LabelsEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), p->second.length(),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.devtools.cloudprofiler.v2.Profile.LabelsEntry.value");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->labels().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->labels().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->labels().begin();
          it != this->labels().end(); ++it, ++n) {
        items[n] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[n], Less());
      ::google::protobuf::scoped_ptr<Profile_LabelsEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(labels_.NewEntryWrapper(
            items[i]->first, items[i]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            6, *entry, output);
        Utf8Check::Check(items[i]);
      }
    } else {
      ::google::protobuf::scoped_ptr<Profile_LabelsEntry> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->labels().begin();
          it != this->labels().end(); ++it) {
        entry.reset(labels_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            6, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  // @@protoc_insertion_point(serialize_end:google.devtools.cloudprofiler.v2.Profile)
}

::google::protobuf::uint8* Profile::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.devtools.cloudprofiler.v2.Profile)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.cloudprofiler.v2.Profile.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // .google.devtools.cloudprofiler.v2.ProfileType profile_type = 2;
  if (this->profile_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->profile_type(), target);
  }

  // .google.devtools.cloudprofiler.v2.Deployment deployment = 3;
  if (this->has_deployment()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->deployment_, deterministic, target);
  }

  // .google.protobuf.Duration duration = 4;
  if (this->has_duration()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, *this->duration_, deterministic, target);
  }

  // bytes profile_bytes = 5;
  if (this->profile_bytes().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        5, this->profile_bytes(), target);
  }

  // map<string, string> labels = 6;
  if (!this->labels().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), p->first.length(),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.devtools.cloudprofiler.v2.Profile.LabelsEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), p->second.length(),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.devtools.cloudprofiler.v2.Profile.LabelsEntry.value");
      }
    };

    if (deterministic &&
        this->labels().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->labels().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->labels().begin();
          it != this->labels().end(); ++it, ++n) {
        items[n] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[n], Less());
      ::google::protobuf::scoped_ptr<Profile_LabelsEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(labels_.NewEntryWrapper(
            items[i]->first, items[i]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       6, *entry, deterministic, target);
;
        Utf8Check::Check(items[i]);
      }
    } else {
      ::google::protobuf::scoped_ptr<Profile_LabelsEntry> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->labels().begin();
          it != this->labels().end(); ++it) {
        entry.reset(labels_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       6, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.devtools.cloudprofiler.v2.Profile)
  return target;
}

size_t Profile::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.devtools.cloudprofiler.v2.Profile)
  size_t total_size = 0;

  // map<string, string> labels = 6;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->labels_size());
  {
    ::google::protobuf::scoped_ptr<Profile_LabelsEntry> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->labels().begin();
        it != this->labels().end(); ++it) {
      entry.reset(labels_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // bytes profile_bytes = 5;
  if (this->profile_bytes().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->profile_bytes());
  }

  // .google.devtools.cloudprofiler.v2.Deployment deployment = 3;
  if (this->has_deployment()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->deployment_);
  }

  // .google.protobuf.Duration duration = 4;
  if (this->has_duration()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->duration_);
  }

  // .google.devtools.cloudprofiler.v2.ProfileType profile_type = 2;
  if (this->profile_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->profile_type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Profile::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.devtools.cloudprofiler.v2.Profile)
  GOOGLE_DCHECK_NE(&from, this);
  const Profile* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Profile>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.devtools.cloudprofiler.v2.Profile)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.devtools.cloudprofiler.v2.Profile)
    MergeFrom(*source);
  }
}

void Profile::MergeFrom(const Profile& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.devtools.cloudprofiler.v2.Profile)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  labels_.MergeFrom(from.labels_);
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.profile_bytes().size() > 0) {

    profile_bytes_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.profile_bytes_);
  }
  if (from.has_deployment()) {
    mutable_deployment()->::google::devtools::cloudprofiler::v2::Deployment::MergeFrom(from.deployment());
  }
  if (from.has_duration()) {
    mutable_duration()->::google::protobuf::Duration::MergeFrom(from.duration());
  }
  if (from.profile_type() != 0) {
    set_profile_type(from.profile_type());
  }
}

void Profile::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.devtools.cloudprofiler.v2.Profile)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Profile::CopyFrom(const Profile& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.devtools.cloudprofiler.v2.Profile)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Profile::IsInitialized() const {
  return true;
}

void Profile::Swap(Profile* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Profile::InternalSwap(Profile* other) {
  labels_.Swap(&other->labels_);
  name_.Swap(&other->name_);
  profile_bytes_.Swap(&other->profile_bytes_);
  std::swap(deployment_, other->deployment_);
  std::swap(duration_, other->duration_);
  std::swap(profile_type_, other->profile_type_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Profile::GetMetadata() const {
  protobuf_google_2fdevtools_2fcloudprofiler_2fv2_2fprofiler_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fdevtools_2fcloudprofiler_2fv2_2fprofiler_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Profile

// string name = 1;
void Profile::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Profile::name() const {
  // @@protoc_insertion_point(field_get:google.devtools.cloudprofiler.v2.Profile.name)
  return name_.GetNoArena();
}
void Profile::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.cloudprofiler.v2.Profile.name)
}
#if LANG_CXX11
void Profile::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.devtools.cloudprofiler.v2.Profile.name)
}
#endif
void Profile::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.cloudprofiler.v2.Profile.name)
}
void Profile::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.cloudprofiler.v2.Profile.name)
}
::std::string* Profile::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:google.devtools.cloudprofiler.v2.Profile.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Profile::release_name() {
  // @@protoc_insertion_point(field_release:google.devtools.cloudprofiler.v2.Profile.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Profile::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:google.devtools.cloudprofiler.v2.Profile.name)
}

// .google.devtools.cloudprofiler.v2.ProfileType profile_type = 2;
void Profile::clear_profile_type() {
  profile_type_ = 0;
}
::google::devtools::cloudprofiler::v2::ProfileType Profile::profile_type() const {
  // @@protoc_insertion_point(field_get:google.devtools.cloudprofiler.v2.Profile.profile_type)
  return static_cast< ::google::devtools::cloudprofiler::v2::ProfileType >(profile_type_);
}
void Profile::set_profile_type(::google::devtools::cloudprofiler::v2::ProfileType value) {
  
  profile_type_ = value;
  // @@protoc_insertion_point(field_set:google.devtools.cloudprofiler.v2.Profile.profile_type)
}

// .google.devtools.cloudprofiler.v2.Deployment deployment = 3;
bool Profile::has_deployment() const {
  return this != internal_default_instance() && deployment_ != NULL;
}
void Profile::clear_deployment() {
  if (GetArenaNoVirtual() == NULL && deployment_ != NULL) delete deployment_;
  deployment_ = NULL;
}
const ::google::devtools::cloudprofiler::v2::Deployment& Profile::deployment() const {
  // @@protoc_insertion_point(field_get:google.devtools.cloudprofiler.v2.Profile.deployment)
  return deployment_ != NULL ? *deployment_
                         : *::google::devtools::cloudprofiler::v2::Deployment::internal_default_instance();
}
::google::devtools::cloudprofiler::v2::Deployment* Profile::mutable_deployment() {
  
  if (deployment_ == NULL) {
    deployment_ = new ::google::devtools::cloudprofiler::v2::Deployment;
  }
  // @@protoc_insertion_point(field_mutable:google.devtools.cloudprofiler.v2.Profile.deployment)
  return deployment_;
}
::google::devtools::cloudprofiler::v2::Deployment* Profile::release_deployment() {
  // @@protoc_insertion_point(field_release:google.devtools.cloudprofiler.v2.Profile.deployment)
  
  ::google::devtools::cloudprofiler::v2::Deployment* temp = deployment_;
  deployment_ = NULL;
  return temp;
}
void Profile::set_allocated_deployment(::google::devtools::cloudprofiler::v2::Deployment* deployment) {
  delete deployment_;
  deployment_ = deployment;
  if (deployment) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.devtools.cloudprofiler.v2.Profile.deployment)
}

// .google.protobuf.Duration duration = 4;
bool Profile::has_duration() const {
  return this != internal_default_instance() && duration_ != NULL;
}
void Profile::clear_duration() {
  if (GetArenaNoVirtual() == NULL && duration_ != NULL) delete duration_;
  duration_ = NULL;
}
const ::google::protobuf::Duration& Profile::duration() const {
  // @@protoc_insertion_point(field_get:google.devtools.cloudprofiler.v2.Profile.duration)
  return duration_ != NULL ? *duration_
                         : *::google::protobuf::Duration::internal_default_instance();
}
::google::protobuf::Duration* Profile::mutable_duration() {
  
  if (duration_ == NULL) {
    duration_ = new ::google::protobuf::Duration;
  }
  // @@protoc_insertion_point(field_mutable:google.devtools.cloudprofiler.v2.Profile.duration)
  return duration_;
}
::google::protobuf::Duration* Profile::release_duration() {
  // @@protoc_insertion_point(field_release:google.devtools.cloudprofiler.v2.Profile.duration)
  
  ::google::protobuf::Duration* temp = duration_;
  duration_ = NULL;
  return temp;
}
void Profile::set_allocated_duration(::google::protobuf::Duration* duration) {
  delete duration_;
  if (duration != NULL && duration->GetArena() != NULL) {
    ::google::protobuf::Duration* new_duration = new ::google::protobuf::Duration;
    new_duration->CopyFrom(*duration);
    duration = new_duration;
  }
  duration_ = duration;
  if (duration) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.devtools.cloudprofiler.v2.Profile.duration)
}

// bytes profile_bytes = 5;
void Profile::clear_profile_bytes() {
  profile_bytes_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Profile::profile_bytes() const {
  // @@protoc_insertion_point(field_get:google.devtools.cloudprofiler.v2.Profile.profile_bytes)
  return profile_bytes_.GetNoArena();
}
void Profile::set_profile_bytes(const ::std::string& value) {
  
  profile_bytes_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.cloudprofiler.v2.Profile.profile_bytes)
}
#if LANG_CXX11
void Profile::set_profile_bytes(::std::string&& value) {
  
  profile_bytes_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.devtools.cloudprofiler.v2.Profile.profile_bytes)
}
#endif
void Profile::set_profile_bytes(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  profile_bytes_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.cloudprofiler.v2.Profile.profile_bytes)
}
void Profile::set_profile_bytes(const void* value, size_t size) {
  
  profile_bytes_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.cloudprofiler.v2.Profile.profile_bytes)
}
::std::string* Profile::mutable_profile_bytes() {
  
  // @@protoc_insertion_point(field_mutable:google.devtools.cloudprofiler.v2.Profile.profile_bytes)
  return profile_bytes_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Profile::release_profile_bytes() {
  // @@protoc_insertion_point(field_release:google.devtools.cloudprofiler.v2.Profile.profile_bytes)
  
  return profile_bytes_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Profile::set_allocated_profile_bytes(::std::string* profile_bytes) {
  if (profile_bytes != NULL) {
    
  } else {
    
  }
  profile_bytes_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), profile_bytes);
  // @@protoc_insertion_point(field_set_allocated:google.devtools.cloudprofiler.v2.Profile.profile_bytes)
}

// map<string, string> labels = 6;
int Profile::labels_size() const {
  return labels_.size();
}
void Profile::clear_labels() {
  labels_.Clear();
}
 const ::google::protobuf::Map< ::std::string, ::std::string >&
Profile::labels() const {
  // @@protoc_insertion_point(field_map:google.devtools.cloudprofiler.v2.Profile.labels)
  return labels_.GetMap();
}
 ::google::protobuf::Map< ::std::string, ::std::string >*
Profile::mutable_labels() {
  // @@protoc_insertion_point(field_mutable_map:google.devtools.cloudprofiler.v2.Profile.labels)
  return labels_.MutableMap();
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

Deployment::Deployment_LabelsEntry::Deployment_LabelsEntry() {}
Deployment::Deployment_LabelsEntry::Deployment_LabelsEntry(::google::protobuf::Arena* arena) : SuperType(arena) {}
::google::protobuf::Metadata Deployment::Deployment_LabelsEntry::GetMetadata() const {
  protobuf_google_2fdevtools_2fcloudprofiler_2fv2_2fprofiler_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fdevtools_2fcloudprofiler_2fv2_2fprofiler_2eproto::file_level_metadata[4];
}
void Deployment::Deployment_LabelsEntry::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}
void Deployment::Deployment_LabelsEntry::MergeFrom(const Deployment_LabelsEntry& other) {
  MergeFromInternal(other);
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Deployment::kProjectIdFieldNumber;
const int Deployment::kTargetFieldNumber;
const int Deployment::kLabelsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Deployment::Deployment()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_google_2fdevtools_2fcloudprofiler_2fv2_2fprofiler_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.devtools.cloudprofiler.v2.Deployment)
}
Deployment::Deployment(const Deployment& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  labels_.MergeFrom(from.labels_);
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.project_id().size() > 0) {
    project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
  }
  target_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.target().size() > 0) {
    target_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.target_);
  }
  // @@protoc_insertion_point(copy_constructor:google.devtools.cloudprofiler.v2.Deployment)
}

void Deployment::SharedCtor() {
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  target_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

Deployment::~Deployment() {
  // @@protoc_insertion_point(destructor:google.devtools.cloudprofiler.v2.Deployment)
  SharedDtor();
}

void Deployment::SharedDtor() {
  project_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  target_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Deployment::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Deployment::descriptor() {
  protobuf_google_2fdevtools_2fcloudprofiler_2fv2_2fprofiler_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fdevtools_2fcloudprofiler_2fv2_2fprofiler_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Deployment& Deployment::default_instance() {
  protobuf_google_2fdevtools_2fcloudprofiler_2fv2_2fprofiler_2eproto::InitDefaults();
  return *internal_default_instance();
}

Deployment* Deployment::New(::google::protobuf::Arena* arena) const {
  Deployment* n = new Deployment;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Deployment::Clear() {
// @@protoc_insertion_point(message_clear_start:google.devtools.cloudprofiler.v2.Deployment)
  labels_.Clear();
  project_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  target_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool Deployment::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.devtools.cloudprofiler.v2.Deployment)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string project_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_project_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->project_id().data(), this->project_id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.cloudprofiler.v2.Deployment.project_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string target = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_target()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->target().data(), this->target().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.cloudprofiler.v2.Deployment.target"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, string> labels = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          Deployment_LabelsEntry::Parser< ::google::protobuf::internal::MapField<
              Deployment_LabelsEntry,
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&labels_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), parser.key().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.cloudprofiler.v2.Deployment.LabelsEntry.key"));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.value().data(), parser.value().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.cloudprofiler.v2.Deployment.LabelsEntry.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.devtools.cloudprofiler.v2.Deployment)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.devtools.cloudprofiler.v2.Deployment)
  return false;
#undef DO_
}

void Deployment::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.devtools.cloudprofiler.v2.Deployment)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string project_id = 1;
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), this->project_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.cloudprofiler.v2.Deployment.project_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->project_id(), output);
  }

  // string target = 2;
  if (this->target().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->target().data(), this->target().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.cloudprofiler.v2.Deployment.target");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->target(), output);
  }

  // map<string, string> labels = 3;
  if (!this->labels().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), p->first.length(),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.devtools.cloudprofiler.v2.Deployment.LabelsEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), p->second.length(),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.devtools.cloudprofiler.v2.Deployment.LabelsEntry.value");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->labels().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->labels().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->labels().begin();
          it != this->labels().end(); ++it, ++n) {
        items[n] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[n], Less());
      ::google::protobuf::scoped_ptr<Deployment_LabelsEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(labels_.NewEntryWrapper(
            items[i]->first, items[i]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            3, *entry, output);
        Utf8Check::Check(items[i]);
      }
    } else {
      ::google::protobuf::scoped_ptr<Deployment_LabelsEntry> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->labels().begin();
          it != this->labels().end(); ++it) {
        entry.reset(labels_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            3, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  // @@protoc_insertion_point(serialize_end:google.devtools.cloudprofiler.v2.Deployment)
}

::google::protobuf::uint8* Deployment::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.devtools.cloudprofiler.v2.Deployment)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string project_id = 1;
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), this->project_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.cloudprofiler.v2.Deployment.project_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->project_id(), target);
  }

  // string target = 2;
  if (this->target().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->target().data(), this->target().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.cloudprofiler.v2.Deployment.target");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->target(), target);
  }

  // map<string, string> labels = 3;
  if (!this->labels().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), p->first.length(),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.devtools.cloudprofiler.v2.Deployment.LabelsEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), p->second.length(),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.devtools.cloudprofiler.v2.Deployment.LabelsEntry.value");
      }
    };

    if (deterministic &&
        this->labels().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->labels().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->labels().begin();
          it != this->labels().end(); ++it, ++n) {
        items[n] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[n], Less());
      ::google::protobuf::scoped_ptr<Deployment_LabelsEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(labels_.NewEntryWrapper(
            items[i]->first, items[i]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       3, *entry, deterministic, target);
;
        Utf8Check::Check(items[i]);
      }
    } else {
      ::google::protobuf::scoped_ptr<Deployment_LabelsEntry> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->labels().begin();
          it != this->labels().end(); ++it) {
        entry.reset(labels_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       3, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.devtools.cloudprofiler.v2.Deployment)
  return target;
}

size_t Deployment::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.devtools.cloudprofiler.v2.Deployment)
  size_t total_size = 0;

  // map<string, string> labels = 3;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->labels_size());
  {
    ::google::protobuf::scoped_ptr<Deployment_LabelsEntry> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->labels().begin();
        it != this->labels().end(); ++it) {
      entry.reset(labels_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // string project_id = 1;
  if (this->project_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->project_id());
  }

  // string target = 2;
  if (this->target().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->target());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Deployment::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.devtools.cloudprofiler.v2.Deployment)
  GOOGLE_DCHECK_NE(&from, this);
  const Deployment* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Deployment>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.devtools.cloudprofiler.v2.Deployment)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.devtools.cloudprofiler.v2.Deployment)
    MergeFrom(*source);
  }
}

void Deployment::MergeFrom(const Deployment& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.devtools.cloudprofiler.v2.Deployment)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  labels_.MergeFrom(from.labels_);
  if (from.project_id().size() > 0) {

    project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
  }
  if (from.target().size() > 0) {

    target_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.target_);
  }
}

void Deployment::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.devtools.cloudprofiler.v2.Deployment)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Deployment::CopyFrom(const Deployment& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.devtools.cloudprofiler.v2.Deployment)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Deployment::IsInitialized() const {
  return true;
}

void Deployment::Swap(Deployment* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Deployment::InternalSwap(Deployment* other) {
  labels_.Swap(&other->labels_);
  project_id_.Swap(&other->project_id_);
  target_.Swap(&other->target_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Deployment::GetMetadata() const {
  protobuf_google_2fdevtools_2fcloudprofiler_2fv2_2fprofiler_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fdevtools_2fcloudprofiler_2fv2_2fprofiler_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Deployment

// string project_id = 1;
void Deployment::clear_project_id() {
  project_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Deployment::project_id() const {
  // @@protoc_insertion_point(field_get:google.devtools.cloudprofiler.v2.Deployment.project_id)
  return project_id_.GetNoArena();
}
void Deployment::set_project_id(const ::std::string& value) {
  
  project_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.cloudprofiler.v2.Deployment.project_id)
}
#if LANG_CXX11
void Deployment::set_project_id(::std::string&& value) {
  
  project_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.devtools.cloudprofiler.v2.Deployment.project_id)
}
#endif
void Deployment::set_project_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  project_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.cloudprofiler.v2.Deployment.project_id)
}
void Deployment::set_project_id(const char* value, size_t size) {
  
  project_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.cloudprofiler.v2.Deployment.project_id)
}
::std::string* Deployment::mutable_project_id() {
  
  // @@protoc_insertion_point(field_mutable:google.devtools.cloudprofiler.v2.Deployment.project_id)
  return project_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Deployment::release_project_id() {
  // @@protoc_insertion_point(field_release:google.devtools.cloudprofiler.v2.Deployment.project_id)
  
  return project_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Deployment::set_allocated_project_id(::std::string* project_id) {
  if (project_id != NULL) {
    
  } else {
    
  }
  project_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), project_id);
  // @@protoc_insertion_point(field_set_allocated:google.devtools.cloudprofiler.v2.Deployment.project_id)
}

// string target = 2;
void Deployment::clear_target() {
  target_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Deployment::target() const {
  // @@protoc_insertion_point(field_get:google.devtools.cloudprofiler.v2.Deployment.target)
  return target_.GetNoArena();
}
void Deployment::set_target(const ::std::string& value) {
  
  target_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.cloudprofiler.v2.Deployment.target)
}
#if LANG_CXX11
void Deployment::set_target(::std::string&& value) {
  
  target_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.devtools.cloudprofiler.v2.Deployment.target)
}
#endif
void Deployment::set_target(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  target_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.cloudprofiler.v2.Deployment.target)
}
void Deployment::set_target(const char* value, size_t size) {
  
  target_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.cloudprofiler.v2.Deployment.target)
}
::std::string* Deployment::mutable_target() {
  
  // @@protoc_insertion_point(field_mutable:google.devtools.cloudprofiler.v2.Deployment.target)
  return target_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Deployment::release_target() {
  // @@protoc_insertion_point(field_release:google.devtools.cloudprofiler.v2.Deployment.target)
  
  return target_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Deployment::set_allocated_target(::std::string* target) {
  if (target != NULL) {
    
  } else {
    
  }
  target_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), target);
  // @@protoc_insertion_point(field_set_allocated:google.devtools.cloudprofiler.v2.Deployment.target)
}

// map<string, string> labels = 3;
int Deployment::labels_size() const {
  return labels_.size();
}
void Deployment::clear_labels() {
  labels_.Clear();
}
 const ::google::protobuf::Map< ::std::string, ::std::string >&
Deployment::labels() const {
  // @@protoc_insertion_point(field_map:google.devtools.cloudprofiler.v2.Deployment.labels)
  return labels_.GetMap();
}
 ::google::protobuf::Map< ::std::string, ::std::string >*
Deployment::mutable_labels() {
  // @@protoc_insertion_point(field_mutable_map:google.devtools.cloudprofiler.v2.Deployment.labels)
  return labels_.MutableMap();
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace v2
}  // namespace cloudprofiler
}  // namespace devtools
}  // namespace google

// @@protoc_insertion_point(global_scope)
