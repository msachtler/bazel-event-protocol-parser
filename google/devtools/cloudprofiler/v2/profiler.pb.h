// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/devtools/cloudprofiler/v2/profiler.proto

#ifndef PROTOBUF_google_2fdevtools_2fcloudprofiler_2fv2_2fprofiler_2eproto__INCLUDED
#define PROTOBUF_google_2fdevtools_2fcloudprofiler_2fv2_2fprofiler_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3003000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3003002 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/map.h>  // IWYU pragma: export
#include <google/protobuf/map_field_inl.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "google/api/annotations.pb.h"
#include <google/protobuf/duration.pb.h>
#include <google/protobuf/timestamp.pb.h>
// @@protoc_insertion_point(includes)
namespace google {
namespace api {
}  // namespace api
namespace devtools {
namespace cloudprofiler {
namespace v2 {
class CreateProfileRequest;
class CreateProfileRequestDefaultTypeInternal;
extern CreateProfileRequestDefaultTypeInternal _CreateProfileRequest_default_instance_;
class Deployment;
class DeploymentDefaultTypeInternal;
extern DeploymentDefaultTypeInternal _Deployment_default_instance_;
class Deployment_LabelsEntry;
class Deployment_LabelsEntryDefaultTypeInternal;
extern Deployment_LabelsEntryDefaultTypeInternal _Deployment_LabelsEntry_default_instance_;
class Profile;
class ProfileDefaultTypeInternal;
extern ProfileDefaultTypeInternal _Profile_default_instance_;
class Profile_LabelsEntry;
class Profile_LabelsEntryDefaultTypeInternal;
extern Profile_LabelsEntryDefaultTypeInternal _Profile_LabelsEntry_default_instance_;
class UpdateProfileRequest;
class UpdateProfileRequestDefaultTypeInternal;
extern UpdateProfileRequestDefaultTypeInternal _UpdateProfileRequest_default_instance_;
}  // namespace v2
}  // namespace cloudprofiler
}  // namespace devtools
namespace protobuf {
class Duration;
class DurationDefaultTypeInternal;
extern DurationDefaultTypeInternal _Duration_default_instance_;
class Timestamp;
class TimestampDefaultTypeInternal;
extern TimestampDefaultTypeInternal _Timestamp_default_instance_;
}  // namespace protobuf
}  // namespace google

namespace google {
namespace devtools {
namespace cloudprofiler {
namespace v2 {

namespace protobuf_google_2fdevtools_2fcloudprofiler_2fv2_2fprofiler_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_google_2fdevtools_2fcloudprofiler_2fv2_2fprofiler_2eproto

enum ProfileType {
  PROFILE_TYPE_UNSPECIFIED = 0,
  CPU = 1,
  WALL = 2,
  HEAP = 3,
  THREADS = 4,
  CONTENTION = 5,
  ProfileType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ProfileType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ProfileType_IsValid(int value);
const ProfileType ProfileType_MIN = PROFILE_TYPE_UNSPECIFIED;
const ProfileType ProfileType_MAX = CONTENTION;
const int ProfileType_ARRAYSIZE = ProfileType_MAX + 1;

const ::google::protobuf::EnumDescriptor* ProfileType_descriptor();
inline const ::std::string& ProfileType_Name(ProfileType value) {
  return ::google::protobuf::internal::NameOfEnum(
    ProfileType_descriptor(), value);
}
inline bool ProfileType_Parse(
    const ::std::string& name, ProfileType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ProfileType>(
    ProfileType_descriptor(), name, value);
}
// ===================================================================

class CreateProfileRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.devtools.cloudprofiler.v2.CreateProfileRequest) */ {
 public:
  CreateProfileRequest();
  virtual ~CreateProfileRequest();

  CreateProfileRequest(const CreateProfileRequest& from);

  inline CreateProfileRequest& operator=(const CreateProfileRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CreateProfileRequest& default_instance();

  static inline const CreateProfileRequest* internal_default_instance() {
    return reinterpret_cast<const CreateProfileRequest*>(
               &_CreateProfileRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(CreateProfileRequest* other);

  // implements Message ----------------------------------------------

  inline CreateProfileRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  CreateProfileRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CreateProfileRequest& from);
  void MergeFrom(const CreateProfileRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CreateProfileRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .google.devtools.cloudprofiler.v2.ProfileType profile_type = 2;
  int profile_type_size() const;
  void clear_profile_type();
  static const int kProfileTypeFieldNumber = 2;
  ::google::devtools::cloudprofiler::v2::ProfileType profile_type(int index) const;
  void set_profile_type(int index, ::google::devtools::cloudprofiler::v2::ProfileType value);
  void add_profile_type(::google::devtools::cloudprofiler::v2::ProfileType value);
  const ::google::protobuf::RepeatedField<int>& profile_type() const;
  ::google::protobuf::RepeatedField<int>* mutable_profile_type();

  // .google.devtools.cloudprofiler.v2.Deployment deployment = 1;
  bool has_deployment() const;
  void clear_deployment();
  static const int kDeploymentFieldNumber = 1;
  const ::google::devtools::cloudprofiler::v2::Deployment& deployment() const;
  ::google::devtools::cloudprofiler::v2::Deployment* mutable_deployment();
  ::google::devtools::cloudprofiler::v2::Deployment* release_deployment();
  void set_allocated_deployment(::google::devtools::cloudprofiler::v2::Deployment* deployment);

  // .google.devtools.cloudprofiler.v2.Profile profile = 3;
  bool has_profile() const;
  void clear_profile();
  static const int kProfileFieldNumber = 3;
  const ::google::devtools::cloudprofiler::v2::Profile& profile() const;
  ::google::devtools::cloudprofiler::v2::Profile* mutable_profile();
  ::google::devtools::cloudprofiler::v2::Profile* release_profile();
  void set_allocated_profile(::google::devtools::cloudprofiler::v2::Profile* profile);

  // @@protoc_insertion_point(class_scope:google.devtools.cloudprofiler.v2.CreateProfileRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField<int> profile_type_;
  mutable int _profile_type_cached_byte_size_;
  ::google::devtools::cloudprofiler::v2::Deployment* deployment_;
  ::google::devtools::cloudprofiler::v2::Profile* profile_;
  mutable int _cached_size_;
  friend struct protobuf_google_2fdevtools_2fcloudprofiler_2fv2_2fprofiler_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UpdateProfileRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.devtools.cloudprofiler.v2.UpdateProfileRequest) */ {
 public:
  UpdateProfileRequest();
  virtual ~UpdateProfileRequest();

  UpdateProfileRequest(const UpdateProfileRequest& from);

  inline UpdateProfileRequest& operator=(const UpdateProfileRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UpdateProfileRequest& default_instance();

  static inline const UpdateProfileRequest* internal_default_instance() {
    return reinterpret_cast<const UpdateProfileRequest*>(
               &_UpdateProfileRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(UpdateProfileRequest* other);

  // implements Message ----------------------------------------------

  inline UpdateProfileRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  UpdateProfileRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const UpdateProfileRequest& from);
  void MergeFrom(const UpdateProfileRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(UpdateProfileRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .google.devtools.cloudprofiler.v2.Profile profile = 1;
  bool has_profile() const;
  void clear_profile();
  static const int kProfileFieldNumber = 1;
  const ::google::devtools::cloudprofiler::v2::Profile& profile() const;
  ::google::devtools::cloudprofiler::v2::Profile* mutable_profile();
  ::google::devtools::cloudprofiler::v2::Profile* release_profile();
  void set_allocated_profile(::google::devtools::cloudprofiler::v2::Profile* profile);

  // @@protoc_insertion_point(class_scope:google.devtools.cloudprofiler.v2.UpdateProfileRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::devtools::cloudprofiler::v2::Profile* profile_;
  mutable int _cached_size_;
  friend struct protobuf_google_2fdevtools_2fcloudprofiler_2fv2_2fprofiler_2eproto::TableStruct;
};
// -------------------------------------------------------------------


// -------------------------------------------------------------------

class Profile : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.devtools.cloudprofiler.v2.Profile) */ {
 public:
  Profile();
  virtual ~Profile();

  Profile(const Profile& from);

  inline Profile& operator=(const Profile& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Profile& default_instance();

  static inline const Profile* internal_default_instance() {
    return reinterpret_cast<const Profile*>(
               &_Profile_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(Profile* other);

  // implements Message ----------------------------------------------

  inline Profile* New() const PROTOBUF_FINAL { return New(NULL); }

  Profile* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Profile& from);
  void MergeFrom(const Profile& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Profile* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<string, string> labels = 6;
  int labels_size() const;
  void clear_labels();
  static const int kLabelsFieldNumber = 6;
  const ::google::protobuf::Map< ::std::string, ::std::string >&
      labels() const;
  ::google::protobuf::Map< ::std::string, ::std::string >*
      mutable_labels();

  // string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // bytes profile_bytes = 5;
  void clear_profile_bytes();
  static const int kProfileBytesFieldNumber = 5;
  const ::std::string& profile_bytes() const;
  void set_profile_bytes(const ::std::string& value);
  #if LANG_CXX11
  void set_profile_bytes(::std::string&& value);
  #endif
  void set_profile_bytes(const char* value);
  void set_profile_bytes(const void* value, size_t size);
  ::std::string* mutable_profile_bytes();
  ::std::string* release_profile_bytes();
  void set_allocated_profile_bytes(::std::string* profile_bytes);

  // .google.devtools.cloudprofiler.v2.Deployment deployment = 3;
  bool has_deployment() const;
  void clear_deployment();
  static const int kDeploymentFieldNumber = 3;
  const ::google::devtools::cloudprofiler::v2::Deployment& deployment() const;
  ::google::devtools::cloudprofiler::v2::Deployment* mutable_deployment();
  ::google::devtools::cloudprofiler::v2::Deployment* release_deployment();
  void set_allocated_deployment(::google::devtools::cloudprofiler::v2::Deployment* deployment);

  // .google.protobuf.Duration duration = 4;
  bool has_duration() const;
  void clear_duration();
  static const int kDurationFieldNumber = 4;
  const ::google::protobuf::Duration& duration() const;
  ::google::protobuf::Duration* mutable_duration();
  ::google::protobuf::Duration* release_duration();
  void set_allocated_duration(::google::protobuf::Duration* duration);

  // .google.devtools.cloudprofiler.v2.ProfileType profile_type = 2;
  void clear_profile_type();
  static const int kProfileTypeFieldNumber = 2;
  ::google::devtools::cloudprofiler::v2::ProfileType profile_type() const;
  void set_profile_type(::google::devtools::cloudprofiler::v2::ProfileType value);

  // @@protoc_insertion_point(class_scope:google.devtools.cloudprofiler.v2.Profile)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  public:
  class Profile_LabelsEntry : public ::google::protobuf::internal::MapEntry<Profile_LabelsEntry, 
      ::std::string, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 > {
  public:
    typedef ::google::protobuf::internal::MapEntry<Profile_LabelsEntry, 
      ::std::string, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 > SuperType;
    Profile_LabelsEntry();
    Profile_LabelsEntry(::google::protobuf::Arena* arena);
    void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
    void MergeFrom(const Profile_LabelsEntry& other);
    static const Message* internal_default_instance() { return reinterpret_cast<const Message*>(&_Profile_LabelsEntry_default_instance_); }
    ::google::protobuf::Metadata GetMetadata() const;
  };
  ::google::protobuf::internal::MapField<
      Profile_LabelsEntry,
      ::std::string, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 > labels_;
  private:
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr profile_bytes_;
  ::google::devtools::cloudprofiler::v2::Deployment* deployment_;
  ::google::protobuf::Duration* duration_;
  int profile_type_;
  mutable int _cached_size_;
  friend struct protobuf_google_2fdevtools_2fcloudprofiler_2fv2_2fprofiler_2eproto::TableStruct;
};
// -------------------------------------------------------------------


// -------------------------------------------------------------------

class Deployment : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.devtools.cloudprofiler.v2.Deployment) */ {
 public:
  Deployment();
  virtual ~Deployment();

  Deployment(const Deployment& from);

  inline Deployment& operator=(const Deployment& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Deployment& default_instance();

  static inline const Deployment* internal_default_instance() {
    return reinterpret_cast<const Deployment*>(
               &_Deployment_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void Swap(Deployment* other);

  // implements Message ----------------------------------------------

  inline Deployment* New() const PROTOBUF_FINAL { return New(NULL); }

  Deployment* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Deployment& from);
  void MergeFrom(const Deployment& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Deployment* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<string, string> labels = 3;
  int labels_size() const;
  void clear_labels();
  static const int kLabelsFieldNumber = 3;
  const ::google::protobuf::Map< ::std::string, ::std::string >&
      labels() const;
  ::google::protobuf::Map< ::std::string, ::std::string >*
      mutable_labels();

  // string project_id = 1;
  void clear_project_id();
  static const int kProjectIdFieldNumber = 1;
  const ::std::string& project_id() const;
  void set_project_id(const ::std::string& value);
  #if LANG_CXX11
  void set_project_id(::std::string&& value);
  #endif
  void set_project_id(const char* value);
  void set_project_id(const char* value, size_t size);
  ::std::string* mutable_project_id();
  ::std::string* release_project_id();
  void set_allocated_project_id(::std::string* project_id);

  // string target = 2;
  void clear_target();
  static const int kTargetFieldNumber = 2;
  const ::std::string& target() const;
  void set_target(const ::std::string& value);
  #if LANG_CXX11
  void set_target(::std::string&& value);
  #endif
  void set_target(const char* value);
  void set_target(const char* value, size_t size);
  ::std::string* mutable_target();
  ::std::string* release_target();
  void set_allocated_target(::std::string* target);

  // @@protoc_insertion_point(class_scope:google.devtools.cloudprofiler.v2.Deployment)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  public:
  class Deployment_LabelsEntry : public ::google::protobuf::internal::MapEntry<Deployment_LabelsEntry, 
      ::std::string, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 > {
  public:
    typedef ::google::protobuf::internal::MapEntry<Deployment_LabelsEntry, 
      ::std::string, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 > SuperType;
    Deployment_LabelsEntry();
    Deployment_LabelsEntry(::google::protobuf::Arena* arena);
    void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
    void MergeFrom(const Deployment_LabelsEntry& other);
    static const Message* internal_default_instance() { return reinterpret_cast<const Message*>(&_Deployment_LabelsEntry_default_instance_); }
    ::google::protobuf::Metadata GetMetadata() const;
  };
  ::google::protobuf::internal::MapField<
      Deployment_LabelsEntry,
      ::std::string, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 > labels_;
  private:
  ::google::protobuf::internal::ArenaStringPtr project_id_;
  ::google::protobuf::internal::ArenaStringPtr target_;
  mutable int _cached_size_;
  friend struct protobuf_google_2fdevtools_2fcloudprofiler_2fv2_2fprofiler_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// CreateProfileRequest

// .google.devtools.cloudprofiler.v2.Deployment deployment = 1;
inline bool CreateProfileRequest::has_deployment() const {
  return this != internal_default_instance() && deployment_ != NULL;
}
inline void CreateProfileRequest::clear_deployment() {
  if (GetArenaNoVirtual() == NULL && deployment_ != NULL) delete deployment_;
  deployment_ = NULL;
}
inline const ::google::devtools::cloudprofiler::v2::Deployment& CreateProfileRequest::deployment() const {
  // @@protoc_insertion_point(field_get:google.devtools.cloudprofiler.v2.CreateProfileRequest.deployment)
  return deployment_ != NULL ? *deployment_
                         : *::google::devtools::cloudprofiler::v2::Deployment::internal_default_instance();
}
inline ::google::devtools::cloudprofiler::v2::Deployment* CreateProfileRequest::mutable_deployment() {
  
  if (deployment_ == NULL) {
    deployment_ = new ::google::devtools::cloudprofiler::v2::Deployment;
  }
  // @@protoc_insertion_point(field_mutable:google.devtools.cloudprofiler.v2.CreateProfileRequest.deployment)
  return deployment_;
}
inline ::google::devtools::cloudprofiler::v2::Deployment* CreateProfileRequest::release_deployment() {
  // @@protoc_insertion_point(field_release:google.devtools.cloudprofiler.v2.CreateProfileRequest.deployment)
  
  ::google::devtools::cloudprofiler::v2::Deployment* temp = deployment_;
  deployment_ = NULL;
  return temp;
}
inline void CreateProfileRequest::set_allocated_deployment(::google::devtools::cloudprofiler::v2::Deployment* deployment) {
  delete deployment_;
  deployment_ = deployment;
  if (deployment) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.devtools.cloudprofiler.v2.CreateProfileRequest.deployment)
}

// repeated .google.devtools.cloudprofiler.v2.ProfileType profile_type = 2;
inline int CreateProfileRequest::profile_type_size() const {
  return profile_type_.size();
}
inline void CreateProfileRequest::clear_profile_type() {
  profile_type_.Clear();
}
inline ::google::devtools::cloudprofiler::v2::ProfileType CreateProfileRequest::profile_type(int index) const {
  // @@protoc_insertion_point(field_get:google.devtools.cloudprofiler.v2.CreateProfileRequest.profile_type)
  return static_cast< ::google::devtools::cloudprofiler::v2::ProfileType >(profile_type_.Get(index));
}
inline void CreateProfileRequest::set_profile_type(int index, ::google::devtools::cloudprofiler::v2::ProfileType value) {
  profile_type_.Set(index, value);
  // @@protoc_insertion_point(field_set:google.devtools.cloudprofiler.v2.CreateProfileRequest.profile_type)
}
inline void CreateProfileRequest::add_profile_type(::google::devtools::cloudprofiler::v2::ProfileType value) {
  profile_type_.Add(value);
  // @@protoc_insertion_point(field_add:google.devtools.cloudprofiler.v2.CreateProfileRequest.profile_type)
}
inline const ::google::protobuf::RepeatedField<int>&
CreateProfileRequest::profile_type() const {
  // @@protoc_insertion_point(field_list:google.devtools.cloudprofiler.v2.CreateProfileRequest.profile_type)
  return profile_type_;
}
inline ::google::protobuf::RepeatedField<int>*
CreateProfileRequest::mutable_profile_type() {
  // @@protoc_insertion_point(field_mutable_list:google.devtools.cloudprofiler.v2.CreateProfileRequest.profile_type)
  return &profile_type_;
}

// .google.devtools.cloudprofiler.v2.Profile profile = 3;
inline bool CreateProfileRequest::has_profile() const {
  return this != internal_default_instance() && profile_ != NULL;
}
inline void CreateProfileRequest::clear_profile() {
  if (GetArenaNoVirtual() == NULL && profile_ != NULL) delete profile_;
  profile_ = NULL;
}
inline const ::google::devtools::cloudprofiler::v2::Profile& CreateProfileRequest::profile() const {
  // @@protoc_insertion_point(field_get:google.devtools.cloudprofiler.v2.CreateProfileRequest.profile)
  return profile_ != NULL ? *profile_
                         : *::google::devtools::cloudprofiler::v2::Profile::internal_default_instance();
}
inline ::google::devtools::cloudprofiler::v2::Profile* CreateProfileRequest::mutable_profile() {
  
  if (profile_ == NULL) {
    profile_ = new ::google::devtools::cloudprofiler::v2::Profile;
  }
  // @@protoc_insertion_point(field_mutable:google.devtools.cloudprofiler.v2.CreateProfileRequest.profile)
  return profile_;
}
inline ::google::devtools::cloudprofiler::v2::Profile* CreateProfileRequest::release_profile() {
  // @@protoc_insertion_point(field_release:google.devtools.cloudprofiler.v2.CreateProfileRequest.profile)
  
  ::google::devtools::cloudprofiler::v2::Profile* temp = profile_;
  profile_ = NULL;
  return temp;
}
inline void CreateProfileRequest::set_allocated_profile(::google::devtools::cloudprofiler::v2::Profile* profile) {
  delete profile_;
  profile_ = profile;
  if (profile) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.devtools.cloudprofiler.v2.CreateProfileRequest.profile)
}

// -------------------------------------------------------------------

// UpdateProfileRequest

// .google.devtools.cloudprofiler.v2.Profile profile = 1;
inline bool UpdateProfileRequest::has_profile() const {
  return this != internal_default_instance() && profile_ != NULL;
}
inline void UpdateProfileRequest::clear_profile() {
  if (GetArenaNoVirtual() == NULL && profile_ != NULL) delete profile_;
  profile_ = NULL;
}
inline const ::google::devtools::cloudprofiler::v2::Profile& UpdateProfileRequest::profile() const {
  // @@protoc_insertion_point(field_get:google.devtools.cloudprofiler.v2.UpdateProfileRequest.profile)
  return profile_ != NULL ? *profile_
                         : *::google::devtools::cloudprofiler::v2::Profile::internal_default_instance();
}
inline ::google::devtools::cloudprofiler::v2::Profile* UpdateProfileRequest::mutable_profile() {
  
  if (profile_ == NULL) {
    profile_ = new ::google::devtools::cloudprofiler::v2::Profile;
  }
  // @@protoc_insertion_point(field_mutable:google.devtools.cloudprofiler.v2.UpdateProfileRequest.profile)
  return profile_;
}
inline ::google::devtools::cloudprofiler::v2::Profile* UpdateProfileRequest::release_profile() {
  // @@protoc_insertion_point(field_release:google.devtools.cloudprofiler.v2.UpdateProfileRequest.profile)
  
  ::google::devtools::cloudprofiler::v2::Profile* temp = profile_;
  profile_ = NULL;
  return temp;
}
inline void UpdateProfileRequest::set_allocated_profile(::google::devtools::cloudprofiler::v2::Profile* profile) {
  delete profile_;
  profile_ = profile;
  if (profile) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.devtools.cloudprofiler.v2.UpdateProfileRequest.profile)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// Profile

// string name = 1;
inline void Profile::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Profile::name() const {
  // @@protoc_insertion_point(field_get:google.devtools.cloudprofiler.v2.Profile.name)
  return name_.GetNoArena();
}
inline void Profile::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.cloudprofiler.v2.Profile.name)
}
#if LANG_CXX11
inline void Profile::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.devtools.cloudprofiler.v2.Profile.name)
}
#endif
inline void Profile::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.cloudprofiler.v2.Profile.name)
}
inline void Profile::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.cloudprofiler.v2.Profile.name)
}
inline ::std::string* Profile::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:google.devtools.cloudprofiler.v2.Profile.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Profile::release_name() {
  // @@protoc_insertion_point(field_release:google.devtools.cloudprofiler.v2.Profile.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Profile::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:google.devtools.cloudprofiler.v2.Profile.name)
}

// .google.devtools.cloudprofiler.v2.ProfileType profile_type = 2;
inline void Profile::clear_profile_type() {
  profile_type_ = 0;
}
inline ::google::devtools::cloudprofiler::v2::ProfileType Profile::profile_type() const {
  // @@protoc_insertion_point(field_get:google.devtools.cloudprofiler.v2.Profile.profile_type)
  return static_cast< ::google::devtools::cloudprofiler::v2::ProfileType >(profile_type_);
}
inline void Profile::set_profile_type(::google::devtools::cloudprofiler::v2::ProfileType value) {
  
  profile_type_ = value;
  // @@protoc_insertion_point(field_set:google.devtools.cloudprofiler.v2.Profile.profile_type)
}

// .google.devtools.cloudprofiler.v2.Deployment deployment = 3;
inline bool Profile::has_deployment() const {
  return this != internal_default_instance() && deployment_ != NULL;
}
inline void Profile::clear_deployment() {
  if (GetArenaNoVirtual() == NULL && deployment_ != NULL) delete deployment_;
  deployment_ = NULL;
}
inline const ::google::devtools::cloudprofiler::v2::Deployment& Profile::deployment() const {
  // @@protoc_insertion_point(field_get:google.devtools.cloudprofiler.v2.Profile.deployment)
  return deployment_ != NULL ? *deployment_
                         : *::google::devtools::cloudprofiler::v2::Deployment::internal_default_instance();
}
inline ::google::devtools::cloudprofiler::v2::Deployment* Profile::mutable_deployment() {
  
  if (deployment_ == NULL) {
    deployment_ = new ::google::devtools::cloudprofiler::v2::Deployment;
  }
  // @@protoc_insertion_point(field_mutable:google.devtools.cloudprofiler.v2.Profile.deployment)
  return deployment_;
}
inline ::google::devtools::cloudprofiler::v2::Deployment* Profile::release_deployment() {
  // @@protoc_insertion_point(field_release:google.devtools.cloudprofiler.v2.Profile.deployment)
  
  ::google::devtools::cloudprofiler::v2::Deployment* temp = deployment_;
  deployment_ = NULL;
  return temp;
}
inline void Profile::set_allocated_deployment(::google::devtools::cloudprofiler::v2::Deployment* deployment) {
  delete deployment_;
  deployment_ = deployment;
  if (deployment) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.devtools.cloudprofiler.v2.Profile.deployment)
}

// .google.protobuf.Duration duration = 4;
inline bool Profile::has_duration() const {
  return this != internal_default_instance() && duration_ != NULL;
}
inline void Profile::clear_duration() {
  if (GetArenaNoVirtual() == NULL && duration_ != NULL) delete duration_;
  duration_ = NULL;
}
inline const ::google::protobuf::Duration& Profile::duration() const {
  // @@protoc_insertion_point(field_get:google.devtools.cloudprofiler.v2.Profile.duration)
  return duration_ != NULL ? *duration_
                         : *::google::protobuf::Duration::internal_default_instance();
}
inline ::google::protobuf::Duration* Profile::mutable_duration() {
  
  if (duration_ == NULL) {
    duration_ = new ::google::protobuf::Duration;
  }
  // @@protoc_insertion_point(field_mutable:google.devtools.cloudprofiler.v2.Profile.duration)
  return duration_;
}
inline ::google::protobuf::Duration* Profile::release_duration() {
  // @@protoc_insertion_point(field_release:google.devtools.cloudprofiler.v2.Profile.duration)
  
  ::google::protobuf::Duration* temp = duration_;
  duration_ = NULL;
  return temp;
}
inline void Profile::set_allocated_duration(::google::protobuf::Duration* duration) {
  delete duration_;
  if (duration != NULL && duration->GetArena() != NULL) {
    ::google::protobuf::Duration* new_duration = new ::google::protobuf::Duration;
    new_duration->CopyFrom(*duration);
    duration = new_duration;
  }
  duration_ = duration;
  if (duration) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.devtools.cloudprofiler.v2.Profile.duration)
}

// bytes profile_bytes = 5;
inline void Profile::clear_profile_bytes() {
  profile_bytes_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Profile::profile_bytes() const {
  // @@protoc_insertion_point(field_get:google.devtools.cloudprofiler.v2.Profile.profile_bytes)
  return profile_bytes_.GetNoArena();
}
inline void Profile::set_profile_bytes(const ::std::string& value) {
  
  profile_bytes_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.cloudprofiler.v2.Profile.profile_bytes)
}
#if LANG_CXX11
inline void Profile::set_profile_bytes(::std::string&& value) {
  
  profile_bytes_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.devtools.cloudprofiler.v2.Profile.profile_bytes)
}
#endif
inline void Profile::set_profile_bytes(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  profile_bytes_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.cloudprofiler.v2.Profile.profile_bytes)
}
inline void Profile::set_profile_bytes(const void* value, size_t size) {
  
  profile_bytes_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.cloudprofiler.v2.Profile.profile_bytes)
}
inline ::std::string* Profile::mutable_profile_bytes() {
  
  // @@protoc_insertion_point(field_mutable:google.devtools.cloudprofiler.v2.Profile.profile_bytes)
  return profile_bytes_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Profile::release_profile_bytes() {
  // @@protoc_insertion_point(field_release:google.devtools.cloudprofiler.v2.Profile.profile_bytes)
  
  return profile_bytes_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Profile::set_allocated_profile_bytes(::std::string* profile_bytes) {
  if (profile_bytes != NULL) {
    
  } else {
    
  }
  profile_bytes_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), profile_bytes);
  // @@protoc_insertion_point(field_set_allocated:google.devtools.cloudprofiler.v2.Profile.profile_bytes)
}

// map<string, string> labels = 6;
inline int Profile::labels_size() const {
  return labels_.size();
}
inline void Profile::clear_labels() {
  labels_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::std::string >&
Profile::labels() const {
  // @@protoc_insertion_point(field_map:google.devtools.cloudprofiler.v2.Profile.labels)
  return labels_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::std::string >*
Profile::mutable_labels() {
  // @@protoc_insertion_point(field_mutable_map:google.devtools.cloudprofiler.v2.Profile.labels)
  return labels_.MutableMap();
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// Deployment

// string project_id = 1;
inline void Deployment::clear_project_id() {
  project_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Deployment::project_id() const {
  // @@protoc_insertion_point(field_get:google.devtools.cloudprofiler.v2.Deployment.project_id)
  return project_id_.GetNoArena();
}
inline void Deployment::set_project_id(const ::std::string& value) {
  
  project_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.cloudprofiler.v2.Deployment.project_id)
}
#if LANG_CXX11
inline void Deployment::set_project_id(::std::string&& value) {
  
  project_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.devtools.cloudprofiler.v2.Deployment.project_id)
}
#endif
inline void Deployment::set_project_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  project_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.cloudprofiler.v2.Deployment.project_id)
}
inline void Deployment::set_project_id(const char* value, size_t size) {
  
  project_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.cloudprofiler.v2.Deployment.project_id)
}
inline ::std::string* Deployment::mutable_project_id() {
  
  // @@protoc_insertion_point(field_mutable:google.devtools.cloudprofiler.v2.Deployment.project_id)
  return project_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Deployment::release_project_id() {
  // @@protoc_insertion_point(field_release:google.devtools.cloudprofiler.v2.Deployment.project_id)
  
  return project_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Deployment::set_allocated_project_id(::std::string* project_id) {
  if (project_id != NULL) {
    
  } else {
    
  }
  project_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), project_id);
  // @@protoc_insertion_point(field_set_allocated:google.devtools.cloudprofiler.v2.Deployment.project_id)
}

// string target = 2;
inline void Deployment::clear_target() {
  target_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Deployment::target() const {
  // @@protoc_insertion_point(field_get:google.devtools.cloudprofiler.v2.Deployment.target)
  return target_.GetNoArena();
}
inline void Deployment::set_target(const ::std::string& value) {
  
  target_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.cloudprofiler.v2.Deployment.target)
}
#if LANG_CXX11
inline void Deployment::set_target(::std::string&& value) {
  
  target_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.devtools.cloudprofiler.v2.Deployment.target)
}
#endif
inline void Deployment::set_target(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  target_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.cloudprofiler.v2.Deployment.target)
}
inline void Deployment::set_target(const char* value, size_t size) {
  
  target_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.cloudprofiler.v2.Deployment.target)
}
inline ::std::string* Deployment::mutable_target() {
  
  // @@protoc_insertion_point(field_mutable:google.devtools.cloudprofiler.v2.Deployment.target)
  return target_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Deployment::release_target() {
  // @@protoc_insertion_point(field_release:google.devtools.cloudprofiler.v2.Deployment.target)
  
  return target_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Deployment::set_allocated_target(::std::string* target) {
  if (target != NULL) {
    
  } else {
    
  }
  target_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), target);
  // @@protoc_insertion_point(field_set_allocated:google.devtools.cloudprofiler.v2.Deployment.target)
}

// map<string, string> labels = 3;
inline int Deployment::labels_size() const {
  return labels_.size();
}
inline void Deployment::clear_labels() {
  labels_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::std::string >&
Deployment::labels() const {
  // @@protoc_insertion_point(field_map:google.devtools.cloudprofiler.v2.Deployment.labels)
  return labels_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::std::string >*
Deployment::mutable_labels() {
  // @@protoc_insertion_point(field_mutable_map:google.devtools.cloudprofiler.v2.Deployment.labels)
  return labels_.MutableMap();
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace v2
}  // namespace cloudprofiler
}  // namespace devtools
}  // namespace google

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::google::devtools::cloudprofiler::v2::ProfileType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::devtools::cloudprofiler::v2::ProfileType>() {
  return ::google::devtools::cloudprofiler::v2::ProfileType_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_google_2fdevtools_2fcloudprofiler_2fv2_2fprofiler_2eproto__INCLUDED
