// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/devtools/sourcerepo/v1/sourcerepo.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "google/devtools/sourcerepo/v1/sourcerepo.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace google {
namespace devtools {
namespace sourcerepo {
namespace v1 {
class RepoDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Repo> {
} _Repo_default_instance_;
class MirrorConfigDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<MirrorConfig> {
} _MirrorConfig_default_instance_;
class GetRepoRequestDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<GetRepoRequest> {
} _GetRepoRequest_default_instance_;
class ListReposRequestDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ListReposRequest> {
} _ListReposRequest_default_instance_;
class ListReposResponseDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ListReposResponse> {
} _ListReposResponse_default_instance_;
class CreateRepoRequestDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CreateRepoRequest> {
} _CreateRepoRequest_default_instance_;
class DeleteRepoRequestDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<DeleteRepoRequest> {
} _DeleteRepoRequest_default_instance_;

namespace protobuf_google_2fdevtools_2fsourcerepo_2fv1_2fsourcerepo_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[7];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] = {
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Repo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Repo, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Repo, size_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Repo, url_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Repo, mirror_config_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MirrorConfig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MirrorConfig, url_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MirrorConfig, webhook_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MirrorConfig, deploy_key_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetRepoRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetRepoRequest, name_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListReposRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListReposRequest, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListReposRequest, page_size_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListReposRequest, page_token_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListReposResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListReposResponse, repos_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListReposResponse, next_page_token_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateRepoRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateRepoRequest, parent_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateRepoRequest, repo_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteRepoRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteRepoRequest, name_),
};

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, -1, sizeof(Repo)},
  { 9, -1, sizeof(MirrorConfig)},
  { 17, -1, sizeof(GetRepoRequest)},
  { 23, -1, sizeof(ListReposRequest)},
  { 31, -1, sizeof(ListReposResponse)},
  { 38, -1, sizeof(CreateRepoRequest)},
  { 45, -1, sizeof(DeleteRepoRequest)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_Repo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_MirrorConfig_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GetRepoRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ListReposRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ListReposResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CreateRepoRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_DeleteRepoRequest_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "google/devtools/sourcerepo/v1/sourcerepo.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 7);
}

}  // namespace

void TableStruct::Shutdown() {
  _Repo_default_instance_.Shutdown();
  delete file_level_metadata[0].reflection;
  _MirrorConfig_default_instance_.Shutdown();
  delete file_level_metadata[1].reflection;
  _GetRepoRequest_default_instance_.Shutdown();
  delete file_level_metadata[2].reflection;
  _ListReposRequest_default_instance_.Shutdown();
  delete file_level_metadata[3].reflection;
  _ListReposResponse_default_instance_.Shutdown();
  delete file_level_metadata[4].reflection;
  _CreateRepoRequest_default_instance_.Shutdown();
  delete file_level_metadata[5].reflection;
  _DeleteRepoRequest_default_instance_.Shutdown();
  delete file_level_metadata[6].reflection;
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  ::google::api::protobuf_google_2fapi_2fannotations_2eproto::InitDefaults();
  ::google::api::protobuf_google_2fapi_2fauth_2eproto::InitDefaults();
  ::google::iam::v1::protobuf_google_2fiam_2fv1_2fiam_5fpolicy_2eproto::InitDefaults();
  ::google::iam::v1::protobuf_google_2fiam_2fv1_2fpolicy_2eproto::InitDefaults();
  ::google::protobuf::protobuf_google_2fprotobuf_2fempty_2eproto::InitDefaults();
  _Repo_default_instance_.DefaultConstruct();
  _MirrorConfig_default_instance_.DefaultConstruct();
  _GetRepoRequest_default_instance_.DefaultConstruct();
  _ListReposRequest_default_instance_.DefaultConstruct();
  _ListReposResponse_default_instance_.DefaultConstruct();
  _CreateRepoRequest_default_instance_.DefaultConstruct();
  _DeleteRepoRequest_default_instance_.DefaultConstruct();
  _Repo_default_instance_.get_mutable()->mirror_config_ = const_cast< ::google::devtools::sourcerepo::v1::MirrorConfig*>(
      ::google::devtools::sourcerepo::v1::MirrorConfig::internal_default_instance());
  _CreateRepoRequest_default_instance_.get_mutable()->repo_ = const_cast< ::google::devtools::sourcerepo::v1::Repo*>(
      ::google::devtools::sourcerepo::v1::Repo::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n.google/devtools/sourcerepo/v1/sourcere"
      "po.proto\022\035google.devtools.sourcerepo.v1\032"
      "\034google/api/annotations.proto\032\025google/ap"
      "i/auth.proto\032\036google/iam/v1/iam_policy.p"
      "roto\032\032google/iam/v1/policy.proto\032\033google"
      "/protobuf/empty.proto\"s\n\004Repo\022\014\n\004name\030\001 "
      "\001(\t\022\014\n\004size\030\002 \001(\003\022\013\n\003url\030\003 \001(\t\022B\n\rmirror"
      "_config\030\004 \001(\0132+.google.devtools.sourcere"
      "po.v1.MirrorConfig\"F\n\014MirrorConfig\022\013\n\003ur"
      "l\030\001 \001(\t\022\022\n\nwebhook_id\030\002 \001(\t\022\025\n\rdeploy_ke"
      "y_id\030\003 \001(\t\"\036\n\016GetRepoRequest\022\014\n\004name\030\001 \001"
      "(\t\"G\n\020ListReposRequest\022\014\n\004name\030\001 \001(\t\022\021\n\t"
      "page_size\030\002 \001(\005\022\022\n\npage_token\030\003 \001(\t\"`\n\021L"
      "istReposResponse\0222\n\005repos\030\001 \003(\0132#.google"
      ".devtools.sourcerepo.v1.Repo\022\027\n\017next_pag"
      "e_token\030\002 \001(\t\"V\n\021CreateRepoRequest\022\016\n\006pa"
      "rent\030\001 \001(\t\0221\n\004repo\030\002 \001(\0132#.google.devtoo"
      "ls.sourcerepo.v1.Repo\"!\n\021DeleteRepoReque"
      "st\022\014\n\004name\030\001 \001(\t2\370\007\n\nSourceRepo\022\223\001\n\tList"
      "Repos\022/.google.devtools.sourcerepo.v1.Li"
      "stReposRequest\0320.google.devtools.sourcer"
      "epo.v1.ListReposResponse\"#\202\323\344\223\002\035\022\033/v1/{n"
      "ame=projects/*}/repos\022\205\001\n\007GetRepo\022-.goog"
      "le.devtools.sourcerepo.v1.GetRepoRequest"
      "\032#.google.devtools.sourcerepo.v1.Repo\"&\202"
      "\323\344\223\002 \022\036/v1/{name=projects/*/repos/**}\022\220\001"
      "\n\nCreateRepo\0220.google.devtools.sourcerep"
      "o.v1.CreateRepoRequest\032#.google.devtools"
      ".sourcerepo.v1.Repo\"+\202\323\344\223\002%\"\035/v1/{parent"
      "=projects/*}/repos:\004repo\022~\n\nDeleteRepo\0220"
      ".google.devtools.sourcerepo.v1.DeleteRep"
      "oRequest\032\026.google.protobuf.Empty\"&\202\323\344\223\002 "
      "*\036/v1/{name=projects/*/repos/**}\022\205\001\n\014Set"
      "IamPolicy\022\".google.iam.v1.SetIamPolicyRe"
      "quest\032\025.google.iam.v1.Policy\":\202\323\344\223\0024\"//v"
      "1/{resource=projects/*/repos/**}:setIamP"
      "olicy:\001*\022\202\001\n\014GetIamPolicy\022\".google.iam.v"
      "1.GetIamPolicyRequest\032\025.google.iam.v1.Po"
      "licy\"7\202\323\344\223\0021\022//v1/{resource=projects/*/r"
      "epos/**}:getIamPolicy\022\253\001\n\022TestIamPermiss"
      "ions\022(.google.iam.v1.TestIamPermissionsR"
      "equest\032).google.iam.v1.TestIamPermission"
      "sResponse\"@\202\323\344\223\002:\"5/v1/{resource=project"
      "s/*/repos/**}:testIamPermissions:\001*B\177\n!c"
      "om.google.devtools.sourcerepo.v1B\017Source"
      "RepoProtoP\001ZGgoogle.golang.org/genproto/"
      "googleapis/devtools/sourcerepo/v1;source"
      "repob\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1892);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "google/devtools/sourcerepo/v1/sourcerepo.proto", &protobuf_RegisterTypes);
  ::google::api::protobuf_google_2fapi_2fannotations_2eproto::AddDescriptors();
  ::google::api::protobuf_google_2fapi_2fauth_2eproto::AddDescriptors();
  ::google::iam::v1::protobuf_google_2fiam_2fv1_2fiam_5fpolicy_2eproto::AddDescriptors();
  ::google::iam::v1::protobuf_google_2fiam_2fv1_2fpolicy_2eproto::AddDescriptors();
  ::google::protobuf::protobuf_google_2fprotobuf_2fempty_2eproto::AddDescriptors();
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_google_2fdevtools_2fsourcerepo_2fv1_2fsourcerepo_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Repo::kNameFieldNumber;
const int Repo::kSizeFieldNumber;
const int Repo::kUrlFieldNumber;
const int Repo::kMirrorConfigFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Repo::Repo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_google_2fdevtools_2fsourcerepo_2fv1_2fsourcerepo_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.devtools.sourcerepo.v1.Repo)
}
Repo::Repo(const Repo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.url().size() > 0) {
    url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.url_);
  }
  if (from.has_mirror_config()) {
    mirror_config_ = new ::google::devtools::sourcerepo::v1::MirrorConfig(*from.mirror_config_);
  } else {
    mirror_config_ = NULL;
  }
  size_ = from.size_;
  // @@protoc_insertion_point(copy_constructor:google.devtools.sourcerepo.v1.Repo)
}

void Repo::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&mirror_config_, 0, reinterpret_cast<char*>(&size_) -
    reinterpret_cast<char*>(&mirror_config_) + sizeof(size_));
  _cached_size_ = 0;
}

Repo::~Repo() {
  // @@protoc_insertion_point(destructor:google.devtools.sourcerepo.v1.Repo)
  SharedDtor();
}

void Repo::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  url_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete mirror_config_;
  }
}

void Repo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Repo::descriptor() {
  protobuf_google_2fdevtools_2fsourcerepo_2fv1_2fsourcerepo_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fdevtools_2fsourcerepo_2fv1_2fsourcerepo_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Repo& Repo::default_instance() {
  protobuf_google_2fdevtools_2fsourcerepo_2fv1_2fsourcerepo_2eproto::InitDefaults();
  return *internal_default_instance();
}

Repo* Repo::New(::google::protobuf::Arena* arena) const {
  Repo* n = new Repo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Repo::Clear() {
// @@protoc_insertion_point(message_clear_start:google.devtools.sourcerepo.v1.Repo)
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && mirror_config_ != NULL) {
    delete mirror_config_;
  }
  mirror_config_ = NULL;
  size_ = GOOGLE_LONGLONG(0);
}

bool Repo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.devtools.sourcerepo.v1.Repo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.sourcerepo.v1.Repo.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 size = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string url = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_url()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->url().data(), this->url().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.sourcerepo.v1.Repo.url"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.devtools.sourcerepo.v1.MirrorConfig mirror_config = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_mirror_config()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.devtools.sourcerepo.v1.Repo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.devtools.sourcerepo.v1.Repo)
  return false;
#undef DO_
}

void Repo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.devtools.sourcerepo.v1.Repo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.sourcerepo.v1.Repo.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // int64 size = 2;
  if (this->size() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->size(), output);
  }

  // string url = 3;
  if (this->url().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->url().data(), this->url().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.sourcerepo.v1.Repo.url");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->url(), output);
  }

  // .google.devtools.sourcerepo.v1.MirrorConfig mirror_config = 4;
  if (this->has_mirror_config()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->mirror_config_, output);
  }

  // @@protoc_insertion_point(serialize_end:google.devtools.sourcerepo.v1.Repo)
}

::google::protobuf::uint8* Repo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.devtools.sourcerepo.v1.Repo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.sourcerepo.v1.Repo.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // int64 size = 2;
  if (this->size() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->size(), target);
  }

  // string url = 3;
  if (this->url().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->url().data(), this->url().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.sourcerepo.v1.Repo.url");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->url(), target);
  }

  // .google.devtools.sourcerepo.v1.MirrorConfig mirror_config = 4;
  if (this->has_mirror_config()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, *this->mirror_config_, deterministic, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.devtools.sourcerepo.v1.Repo)
  return target;
}

size_t Repo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.devtools.sourcerepo.v1.Repo)
  size_t total_size = 0;

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string url = 3;
  if (this->url().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->url());
  }

  // .google.devtools.sourcerepo.v1.MirrorConfig mirror_config = 4;
  if (this->has_mirror_config()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->mirror_config_);
  }

  // int64 size = 2;
  if (this->size() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->size());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Repo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.devtools.sourcerepo.v1.Repo)
  GOOGLE_DCHECK_NE(&from, this);
  const Repo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Repo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.devtools.sourcerepo.v1.Repo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.devtools.sourcerepo.v1.Repo)
    MergeFrom(*source);
  }
}

void Repo::MergeFrom(const Repo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.devtools.sourcerepo.v1.Repo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.url().size() > 0) {

    url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.url_);
  }
  if (from.has_mirror_config()) {
    mutable_mirror_config()->::google::devtools::sourcerepo::v1::MirrorConfig::MergeFrom(from.mirror_config());
  }
  if (from.size() != 0) {
    set_size(from.size());
  }
}

void Repo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.devtools.sourcerepo.v1.Repo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Repo::CopyFrom(const Repo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.devtools.sourcerepo.v1.Repo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Repo::IsInitialized() const {
  return true;
}

void Repo::Swap(Repo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Repo::InternalSwap(Repo* other) {
  name_.Swap(&other->name_);
  url_.Swap(&other->url_);
  std::swap(mirror_config_, other->mirror_config_);
  std::swap(size_, other->size_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Repo::GetMetadata() const {
  protobuf_google_2fdevtools_2fsourcerepo_2fv1_2fsourcerepo_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fdevtools_2fsourcerepo_2fv1_2fsourcerepo_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Repo

// string name = 1;
void Repo::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Repo::name() const {
  // @@protoc_insertion_point(field_get:google.devtools.sourcerepo.v1.Repo.name)
  return name_.GetNoArena();
}
void Repo::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.sourcerepo.v1.Repo.name)
}
#if LANG_CXX11
void Repo::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.devtools.sourcerepo.v1.Repo.name)
}
#endif
void Repo::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.sourcerepo.v1.Repo.name)
}
void Repo::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.sourcerepo.v1.Repo.name)
}
::std::string* Repo::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:google.devtools.sourcerepo.v1.Repo.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Repo::release_name() {
  // @@protoc_insertion_point(field_release:google.devtools.sourcerepo.v1.Repo.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Repo::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:google.devtools.sourcerepo.v1.Repo.name)
}

// int64 size = 2;
void Repo::clear_size() {
  size_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 Repo::size() const {
  // @@protoc_insertion_point(field_get:google.devtools.sourcerepo.v1.Repo.size)
  return size_;
}
void Repo::set_size(::google::protobuf::int64 value) {
  
  size_ = value;
  // @@protoc_insertion_point(field_set:google.devtools.sourcerepo.v1.Repo.size)
}

// string url = 3;
void Repo::clear_url() {
  url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Repo::url() const {
  // @@protoc_insertion_point(field_get:google.devtools.sourcerepo.v1.Repo.url)
  return url_.GetNoArena();
}
void Repo::set_url(const ::std::string& value) {
  
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.sourcerepo.v1.Repo.url)
}
#if LANG_CXX11
void Repo::set_url(::std::string&& value) {
  
  url_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.devtools.sourcerepo.v1.Repo.url)
}
#endif
void Repo::set_url(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.sourcerepo.v1.Repo.url)
}
void Repo::set_url(const char* value, size_t size) {
  
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.sourcerepo.v1.Repo.url)
}
::std::string* Repo::mutable_url() {
  
  // @@protoc_insertion_point(field_mutable:google.devtools.sourcerepo.v1.Repo.url)
  return url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Repo::release_url() {
  // @@protoc_insertion_point(field_release:google.devtools.sourcerepo.v1.Repo.url)
  
  return url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Repo::set_allocated_url(::std::string* url) {
  if (url != NULL) {
    
  } else {
    
  }
  url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), url);
  // @@protoc_insertion_point(field_set_allocated:google.devtools.sourcerepo.v1.Repo.url)
}

// .google.devtools.sourcerepo.v1.MirrorConfig mirror_config = 4;
bool Repo::has_mirror_config() const {
  return this != internal_default_instance() && mirror_config_ != NULL;
}
void Repo::clear_mirror_config() {
  if (GetArenaNoVirtual() == NULL && mirror_config_ != NULL) delete mirror_config_;
  mirror_config_ = NULL;
}
const ::google::devtools::sourcerepo::v1::MirrorConfig& Repo::mirror_config() const {
  // @@protoc_insertion_point(field_get:google.devtools.sourcerepo.v1.Repo.mirror_config)
  return mirror_config_ != NULL ? *mirror_config_
                         : *::google::devtools::sourcerepo::v1::MirrorConfig::internal_default_instance();
}
::google::devtools::sourcerepo::v1::MirrorConfig* Repo::mutable_mirror_config() {
  
  if (mirror_config_ == NULL) {
    mirror_config_ = new ::google::devtools::sourcerepo::v1::MirrorConfig;
  }
  // @@protoc_insertion_point(field_mutable:google.devtools.sourcerepo.v1.Repo.mirror_config)
  return mirror_config_;
}
::google::devtools::sourcerepo::v1::MirrorConfig* Repo::release_mirror_config() {
  // @@protoc_insertion_point(field_release:google.devtools.sourcerepo.v1.Repo.mirror_config)
  
  ::google::devtools::sourcerepo::v1::MirrorConfig* temp = mirror_config_;
  mirror_config_ = NULL;
  return temp;
}
void Repo::set_allocated_mirror_config(::google::devtools::sourcerepo::v1::MirrorConfig* mirror_config) {
  delete mirror_config_;
  mirror_config_ = mirror_config;
  if (mirror_config) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.devtools.sourcerepo.v1.Repo.mirror_config)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MirrorConfig::kUrlFieldNumber;
const int MirrorConfig::kWebhookIdFieldNumber;
const int MirrorConfig::kDeployKeyIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MirrorConfig::MirrorConfig()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_google_2fdevtools_2fsourcerepo_2fv1_2fsourcerepo_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.devtools.sourcerepo.v1.MirrorConfig)
}
MirrorConfig::MirrorConfig(const MirrorConfig& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.url().size() > 0) {
    url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.url_);
  }
  webhook_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.webhook_id().size() > 0) {
    webhook_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.webhook_id_);
  }
  deploy_key_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.deploy_key_id().size() > 0) {
    deploy_key_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.deploy_key_id_);
  }
  // @@protoc_insertion_point(copy_constructor:google.devtools.sourcerepo.v1.MirrorConfig)
}

void MirrorConfig::SharedCtor() {
  url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  webhook_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  deploy_key_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

MirrorConfig::~MirrorConfig() {
  // @@protoc_insertion_point(destructor:google.devtools.sourcerepo.v1.MirrorConfig)
  SharedDtor();
}

void MirrorConfig::SharedDtor() {
  url_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  webhook_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  deploy_key_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void MirrorConfig::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MirrorConfig::descriptor() {
  protobuf_google_2fdevtools_2fsourcerepo_2fv1_2fsourcerepo_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fdevtools_2fsourcerepo_2fv1_2fsourcerepo_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MirrorConfig& MirrorConfig::default_instance() {
  protobuf_google_2fdevtools_2fsourcerepo_2fv1_2fsourcerepo_2eproto::InitDefaults();
  return *internal_default_instance();
}

MirrorConfig* MirrorConfig::New(::google::protobuf::Arena* arena) const {
  MirrorConfig* n = new MirrorConfig;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MirrorConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:google.devtools.sourcerepo.v1.MirrorConfig)
  url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  webhook_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  deploy_key_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool MirrorConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.devtools.sourcerepo.v1.MirrorConfig)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string url = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_url()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->url().data(), this->url().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.sourcerepo.v1.MirrorConfig.url"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string webhook_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_webhook_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->webhook_id().data(), this->webhook_id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.sourcerepo.v1.MirrorConfig.webhook_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string deploy_key_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_deploy_key_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->deploy_key_id().data(), this->deploy_key_id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.sourcerepo.v1.MirrorConfig.deploy_key_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.devtools.sourcerepo.v1.MirrorConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.devtools.sourcerepo.v1.MirrorConfig)
  return false;
#undef DO_
}

void MirrorConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.devtools.sourcerepo.v1.MirrorConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string url = 1;
  if (this->url().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->url().data(), this->url().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.sourcerepo.v1.MirrorConfig.url");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->url(), output);
  }

  // string webhook_id = 2;
  if (this->webhook_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->webhook_id().data(), this->webhook_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.sourcerepo.v1.MirrorConfig.webhook_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->webhook_id(), output);
  }

  // string deploy_key_id = 3;
  if (this->deploy_key_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->deploy_key_id().data(), this->deploy_key_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.sourcerepo.v1.MirrorConfig.deploy_key_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->deploy_key_id(), output);
  }

  // @@protoc_insertion_point(serialize_end:google.devtools.sourcerepo.v1.MirrorConfig)
}

::google::protobuf::uint8* MirrorConfig::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.devtools.sourcerepo.v1.MirrorConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string url = 1;
  if (this->url().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->url().data(), this->url().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.sourcerepo.v1.MirrorConfig.url");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->url(), target);
  }

  // string webhook_id = 2;
  if (this->webhook_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->webhook_id().data(), this->webhook_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.sourcerepo.v1.MirrorConfig.webhook_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->webhook_id(), target);
  }

  // string deploy_key_id = 3;
  if (this->deploy_key_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->deploy_key_id().data(), this->deploy_key_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.sourcerepo.v1.MirrorConfig.deploy_key_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->deploy_key_id(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.devtools.sourcerepo.v1.MirrorConfig)
  return target;
}

size_t MirrorConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.devtools.sourcerepo.v1.MirrorConfig)
  size_t total_size = 0;

  // string url = 1;
  if (this->url().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->url());
  }

  // string webhook_id = 2;
  if (this->webhook_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->webhook_id());
  }

  // string deploy_key_id = 3;
  if (this->deploy_key_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->deploy_key_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MirrorConfig::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.devtools.sourcerepo.v1.MirrorConfig)
  GOOGLE_DCHECK_NE(&from, this);
  const MirrorConfig* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MirrorConfig>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.devtools.sourcerepo.v1.MirrorConfig)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.devtools.sourcerepo.v1.MirrorConfig)
    MergeFrom(*source);
  }
}

void MirrorConfig::MergeFrom(const MirrorConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.devtools.sourcerepo.v1.MirrorConfig)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.url().size() > 0) {

    url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.url_);
  }
  if (from.webhook_id().size() > 0) {

    webhook_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.webhook_id_);
  }
  if (from.deploy_key_id().size() > 0) {

    deploy_key_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.deploy_key_id_);
  }
}

void MirrorConfig::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.devtools.sourcerepo.v1.MirrorConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MirrorConfig::CopyFrom(const MirrorConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.devtools.sourcerepo.v1.MirrorConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MirrorConfig::IsInitialized() const {
  return true;
}

void MirrorConfig::Swap(MirrorConfig* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MirrorConfig::InternalSwap(MirrorConfig* other) {
  url_.Swap(&other->url_);
  webhook_id_.Swap(&other->webhook_id_);
  deploy_key_id_.Swap(&other->deploy_key_id_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MirrorConfig::GetMetadata() const {
  protobuf_google_2fdevtools_2fsourcerepo_2fv1_2fsourcerepo_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fdevtools_2fsourcerepo_2fv1_2fsourcerepo_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MirrorConfig

// string url = 1;
void MirrorConfig::clear_url() {
  url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& MirrorConfig::url() const {
  // @@protoc_insertion_point(field_get:google.devtools.sourcerepo.v1.MirrorConfig.url)
  return url_.GetNoArena();
}
void MirrorConfig::set_url(const ::std::string& value) {
  
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.sourcerepo.v1.MirrorConfig.url)
}
#if LANG_CXX11
void MirrorConfig::set_url(::std::string&& value) {
  
  url_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.devtools.sourcerepo.v1.MirrorConfig.url)
}
#endif
void MirrorConfig::set_url(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.sourcerepo.v1.MirrorConfig.url)
}
void MirrorConfig::set_url(const char* value, size_t size) {
  
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.sourcerepo.v1.MirrorConfig.url)
}
::std::string* MirrorConfig::mutable_url() {
  
  // @@protoc_insertion_point(field_mutable:google.devtools.sourcerepo.v1.MirrorConfig.url)
  return url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* MirrorConfig::release_url() {
  // @@protoc_insertion_point(field_release:google.devtools.sourcerepo.v1.MirrorConfig.url)
  
  return url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MirrorConfig::set_allocated_url(::std::string* url) {
  if (url != NULL) {
    
  } else {
    
  }
  url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), url);
  // @@protoc_insertion_point(field_set_allocated:google.devtools.sourcerepo.v1.MirrorConfig.url)
}

// string webhook_id = 2;
void MirrorConfig::clear_webhook_id() {
  webhook_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& MirrorConfig::webhook_id() const {
  // @@protoc_insertion_point(field_get:google.devtools.sourcerepo.v1.MirrorConfig.webhook_id)
  return webhook_id_.GetNoArena();
}
void MirrorConfig::set_webhook_id(const ::std::string& value) {
  
  webhook_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.sourcerepo.v1.MirrorConfig.webhook_id)
}
#if LANG_CXX11
void MirrorConfig::set_webhook_id(::std::string&& value) {
  
  webhook_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.devtools.sourcerepo.v1.MirrorConfig.webhook_id)
}
#endif
void MirrorConfig::set_webhook_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  webhook_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.sourcerepo.v1.MirrorConfig.webhook_id)
}
void MirrorConfig::set_webhook_id(const char* value, size_t size) {
  
  webhook_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.sourcerepo.v1.MirrorConfig.webhook_id)
}
::std::string* MirrorConfig::mutable_webhook_id() {
  
  // @@protoc_insertion_point(field_mutable:google.devtools.sourcerepo.v1.MirrorConfig.webhook_id)
  return webhook_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* MirrorConfig::release_webhook_id() {
  // @@protoc_insertion_point(field_release:google.devtools.sourcerepo.v1.MirrorConfig.webhook_id)
  
  return webhook_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MirrorConfig::set_allocated_webhook_id(::std::string* webhook_id) {
  if (webhook_id != NULL) {
    
  } else {
    
  }
  webhook_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), webhook_id);
  // @@protoc_insertion_point(field_set_allocated:google.devtools.sourcerepo.v1.MirrorConfig.webhook_id)
}

// string deploy_key_id = 3;
void MirrorConfig::clear_deploy_key_id() {
  deploy_key_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& MirrorConfig::deploy_key_id() const {
  // @@protoc_insertion_point(field_get:google.devtools.sourcerepo.v1.MirrorConfig.deploy_key_id)
  return deploy_key_id_.GetNoArena();
}
void MirrorConfig::set_deploy_key_id(const ::std::string& value) {
  
  deploy_key_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.sourcerepo.v1.MirrorConfig.deploy_key_id)
}
#if LANG_CXX11
void MirrorConfig::set_deploy_key_id(::std::string&& value) {
  
  deploy_key_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.devtools.sourcerepo.v1.MirrorConfig.deploy_key_id)
}
#endif
void MirrorConfig::set_deploy_key_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  deploy_key_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.sourcerepo.v1.MirrorConfig.deploy_key_id)
}
void MirrorConfig::set_deploy_key_id(const char* value, size_t size) {
  
  deploy_key_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.sourcerepo.v1.MirrorConfig.deploy_key_id)
}
::std::string* MirrorConfig::mutable_deploy_key_id() {
  
  // @@protoc_insertion_point(field_mutable:google.devtools.sourcerepo.v1.MirrorConfig.deploy_key_id)
  return deploy_key_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* MirrorConfig::release_deploy_key_id() {
  // @@protoc_insertion_point(field_release:google.devtools.sourcerepo.v1.MirrorConfig.deploy_key_id)
  
  return deploy_key_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MirrorConfig::set_allocated_deploy_key_id(::std::string* deploy_key_id) {
  if (deploy_key_id != NULL) {
    
  } else {
    
  }
  deploy_key_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), deploy_key_id);
  // @@protoc_insertion_point(field_set_allocated:google.devtools.sourcerepo.v1.MirrorConfig.deploy_key_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetRepoRequest::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetRepoRequest::GetRepoRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_google_2fdevtools_2fsourcerepo_2fv1_2fsourcerepo_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.devtools.sourcerepo.v1.GetRepoRequest)
}
GetRepoRequest::GetRepoRequest(const GetRepoRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  // @@protoc_insertion_point(copy_constructor:google.devtools.sourcerepo.v1.GetRepoRequest)
}

void GetRepoRequest::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

GetRepoRequest::~GetRepoRequest() {
  // @@protoc_insertion_point(destructor:google.devtools.sourcerepo.v1.GetRepoRequest)
  SharedDtor();
}

void GetRepoRequest::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GetRepoRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetRepoRequest::descriptor() {
  protobuf_google_2fdevtools_2fsourcerepo_2fv1_2fsourcerepo_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fdevtools_2fsourcerepo_2fv1_2fsourcerepo_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetRepoRequest& GetRepoRequest::default_instance() {
  protobuf_google_2fdevtools_2fsourcerepo_2fv1_2fsourcerepo_2eproto::InitDefaults();
  return *internal_default_instance();
}

GetRepoRequest* GetRepoRequest::New(::google::protobuf::Arena* arena) const {
  GetRepoRequest* n = new GetRepoRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetRepoRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.devtools.sourcerepo.v1.GetRepoRequest)
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool GetRepoRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.devtools.sourcerepo.v1.GetRepoRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.sourcerepo.v1.GetRepoRequest.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.devtools.sourcerepo.v1.GetRepoRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.devtools.sourcerepo.v1.GetRepoRequest)
  return false;
#undef DO_
}

void GetRepoRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.devtools.sourcerepo.v1.GetRepoRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.sourcerepo.v1.GetRepoRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // @@protoc_insertion_point(serialize_end:google.devtools.sourcerepo.v1.GetRepoRequest)
}

::google::protobuf::uint8* GetRepoRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.devtools.sourcerepo.v1.GetRepoRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.sourcerepo.v1.GetRepoRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.devtools.sourcerepo.v1.GetRepoRequest)
  return target;
}

size_t GetRepoRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.devtools.sourcerepo.v1.GetRepoRequest)
  size_t total_size = 0;

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetRepoRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.devtools.sourcerepo.v1.GetRepoRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetRepoRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetRepoRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.devtools.sourcerepo.v1.GetRepoRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.devtools.sourcerepo.v1.GetRepoRequest)
    MergeFrom(*source);
  }
}

void GetRepoRequest::MergeFrom(const GetRepoRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.devtools.sourcerepo.v1.GetRepoRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
}

void GetRepoRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.devtools.sourcerepo.v1.GetRepoRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetRepoRequest::CopyFrom(const GetRepoRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.devtools.sourcerepo.v1.GetRepoRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetRepoRequest::IsInitialized() const {
  return true;
}

void GetRepoRequest::Swap(GetRepoRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetRepoRequest::InternalSwap(GetRepoRequest* other) {
  name_.Swap(&other->name_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetRepoRequest::GetMetadata() const {
  protobuf_google_2fdevtools_2fsourcerepo_2fv1_2fsourcerepo_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fdevtools_2fsourcerepo_2fv1_2fsourcerepo_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetRepoRequest

// string name = 1;
void GetRepoRequest::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& GetRepoRequest::name() const {
  // @@protoc_insertion_point(field_get:google.devtools.sourcerepo.v1.GetRepoRequest.name)
  return name_.GetNoArena();
}
void GetRepoRequest::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.sourcerepo.v1.GetRepoRequest.name)
}
#if LANG_CXX11
void GetRepoRequest::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.devtools.sourcerepo.v1.GetRepoRequest.name)
}
#endif
void GetRepoRequest::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.sourcerepo.v1.GetRepoRequest.name)
}
void GetRepoRequest::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.sourcerepo.v1.GetRepoRequest.name)
}
::std::string* GetRepoRequest::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:google.devtools.sourcerepo.v1.GetRepoRequest.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GetRepoRequest::release_name() {
  // @@protoc_insertion_point(field_release:google.devtools.sourcerepo.v1.GetRepoRequest.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GetRepoRequest::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:google.devtools.sourcerepo.v1.GetRepoRequest.name)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListReposRequest::kNameFieldNumber;
const int ListReposRequest::kPageSizeFieldNumber;
const int ListReposRequest::kPageTokenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListReposRequest::ListReposRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_google_2fdevtools_2fsourcerepo_2fv1_2fsourcerepo_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.devtools.sourcerepo.v1.ListReposRequest)
}
ListReposRequest::ListReposRequest(const ListReposRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.page_token().size() > 0) {
    page_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.page_token_);
  }
  page_size_ = from.page_size_;
  // @@protoc_insertion_point(copy_constructor:google.devtools.sourcerepo.v1.ListReposRequest)
}

void ListReposRequest::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_size_ = 0;
  _cached_size_ = 0;
}

ListReposRequest::~ListReposRequest() {
  // @@protoc_insertion_point(destructor:google.devtools.sourcerepo.v1.ListReposRequest)
  SharedDtor();
}

void ListReposRequest::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ListReposRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ListReposRequest::descriptor() {
  protobuf_google_2fdevtools_2fsourcerepo_2fv1_2fsourcerepo_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fdevtools_2fsourcerepo_2fv1_2fsourcerepo_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListReposRequest& ListReposRequest::default_instance() {
  protobuf_google_2fdevtools_2fsourcerepo_2fv1_2fsourcerepo_2eproto::InitDefaults();
  return *internal_default_instance();
}

ListReposRequest* ListReposRequest::New(::google::protobuf::Arena* arena) const {
  ListReposRequest* n = new ListReposRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ListReposRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.devtools.sourcerepo.v1.ListReposRequest)
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_size_ = 0;
}

bool ListReposRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.devtools.sourcerepo.v1.ListReposRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.sourcerepo.v1.ListReposRequest.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 page_size = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &page_size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string page_token = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_page_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->page_token().data(), this->page_token().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.sourcerepo.v1.ListReposRequest.page_token"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.devtools.sourcerepo.v1.ListReposRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.devtools.sourcerepo.v1.ListReposRequest)
  return false;
#undef DO_
}

void ListReposRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.devtools.sourcerepo.v1.ListReposRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.sourcerepo.v1.ListReposRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // int32 page_size = 2;
  if (this->page_size() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->page_size(), output);
  }

  // string page_token = 3;
  if (this->page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->page_token().data(), this->page_token().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.sourcerepo.v1.ListReposRequest.page_token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->page_token(), output);
  }

  // @@protoc_insertion_point(serialize_end:google.devtools.sourcerepo.v1.ListReposRequest)
}

::google::protobuf::uint8* ListReposRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.devtools.sourcerepo.v1.ListReposRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.sourcerepo.v1.ListReposRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // int32 page_size = 2;
  if (this->page_size() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->page_size(), target);
  }

  // string page_token = 3;
  if (this->page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->page_token().data(), this->page_token().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.sourcerepo.v1.ListReposRequest.page_token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->page_token(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.devtools.sourcerepo.v1.ListReposRequest)
  return target;
}

size_t ListReposRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.devtools.sourcerepo.v1.ListReposRequest)
  size_t total_size = 0;

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string page_token = 3;
  if (this->page_token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->page_token());
  }

  // int32 page_size = 2;
  if (this->page_size() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->page_size());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ListReposRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.devtools.sourcerepo.v1.ListReposRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ListReposRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListReposRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.devtools.sourcerepo.v1.ListReposRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.devtools.sourcerepo.v1.ListReposRequest)
    MergeFrom(*source);
  }
}

void ListReposRequest::MergeFrom(const ListReposRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.devtools.sourcerepo.v1.ListReposRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.page_token().size() > 0) {

    page_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.page_token_);
  }
  if (from.page_size() != 0) {
    set_page_size(from.page_size());
  }
}

void ListReposRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.devtools.sourcerepo.v1.ListReposRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListReposRequest::CopyFrom(const ListReposRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.devtools.sourcerepo.v1.ListReposRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListReposRequest::IsInitialized() const {
  return true;
}

void ListReposRequest::Swap(ListReposRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListReposRequest::InternalSwap(ListReposRequest* other) {
  name_.Swap(&other->name_);
  page_token_.Swap(&other->page_token_);
  std::swap(page_size_, other->page_size_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ListReposRequest::GetMetadata() const {
  protobuf_google_2fdevtools_2fsourcerepo_2fv1_2fsourcerepo_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fdevtools_2fsourcerepo_2fv1_2fsourcerepo_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ListReposRequest

// string name = 1;
void ListReposRequest::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ListReposRequest::name() const {
  // @@protoc_insertion_point(field_get:google.devtools.sourcerepo.v1.ListReposRequest.name)
  return name_.GetNoArena();
}
void ListReposRequest::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.sourcerepo.v1.ListReposRequest.name)
}
#if LANG_CXX11
void ListReposRequest::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.devtools.sourcerepo.v1.ListReposRequest.name)
}
#endif
void ListReposRequest::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.sourcerepo.v1.ListReposRequest.name)
}
void ListReposRequest::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.sourcerepo.v1.ListReposRequest.name)
}
::std::string* ListReposRequest::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:google.devtools.sourcerepo.v1.ListReposRequest.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ListReposRequest::release_name() {
  // @@protoc_insertion_point(field_release:google.devtools.sourcerepo.v1.ListReposRequest.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ListReposRequest::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:google.devtools.sourcerepo.v1.ListReposRequest.name)
}

// int32 page_size = 2;
void ListReposRequest::clear_page_size() {
  page_size_ = 0;
}
::google::protobuf::int32 ListReposRequest::page_size() const {
  // @@protoc_insertion_point(field_get:google.devtools.sourcerepo.v1.ListReposRequest.page_size)
  return page_size_;
}
void ListReposRequest::set_page_size(::google::protobuf::int32 value) {
  
  page_size_ = value;
  // @@protoc_insertion_point(field_set:google.devtools.sourcerepo.v1.ListReposRequest.page_size)
}

// string page_token = 3;
void ListReposRequest::clear_page_token() {
  page_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ListReposRequest::page_token() const {
  // @@protoc_insertion_point(field_get:google.devtools.sourcerepo.v1.ListReposRequest.page_token)
  return page_token_.GetNoArena();
}
void ListReposRequest::set_page_token(const ::std::string& value) {
  
  page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.sourcerepo.v1.ListReposRequest.page_token)
}
#if LANG_CXX11
void ListReposRequest::set_page_token(::std::string&& value) {
  
  page_token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.devtools.sourcerepo.v1.ListReposRequest.page_token)
}
#endif
void ListReposRequest::set_page_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.sourcerepo.v1.ListReposRequest.page_token)
}
void ListReposRequest::set_page_token(const char* value, size_t size) {
  
  page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.sourcerepo.v1.ListReposRequest.page_token)
}
::std::string* ListReposRequest::mutable_page_token() {
  
  // @@protoc_insertion_point(field_mutable:google.devtools.sourcerepo.v1.ListReposRequest.page_token)
  return page_token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ListReposRequest::release_page_token() {
  // @@protoc_insertion_point(field_release:google.devtools.sourcerepo.v1.ListReposRequest.page_token)
  
  return page_token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ListReposRequest::set_allocated_page_token(::std::string* page_token) {
  if (page_token != NULL) {
    
  } else {
    
  }
  page_token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), page_token);
  // @@protoc_insertion_point(field_set_allocated:google.devtools.sourcerepo.v1.ListReposRequest.page_token)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListReposResponse::kReposFieldNumber;
const int ListReposResponse::kNextPageTokenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListReposResponse::ListReposResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_google_2fdevtools_2fsourcerepo_2fv1_2fsourcerepo_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.devtools.sourcerepo.v1.ListReposResponse)
}
ListReposResponse::ListReposResponse(const ListReposResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      repos_(from.repos_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  next_page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.next_page_token().size() > 0) {
    next_page_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.next_page_token_);
  }
  // @@protoc_insertion_point(copy_constructor:google.devtools.sourcerepo.v1.ListReposResponse)
}

void ListReposResponse::SharedCtor() {
  next_page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

ListReposResponse::~ListReposResponse() {
  // @@protoc_insertion_point(destructor:google.devtools.sourcerepo.v1.ListReposResponse)
  SharedDtor();
}

void ListReposResponse::SharedDtor() {
  next_page_token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ListReposResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ListReposResponse::descriptor() {
  protobuf_google_2fdevtools_2fsourcerepo_2fv1_2fsourcerepo_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fdevtools_2fsourcerepo_2fv1_2fsourcerepo_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListReposResponse& ListReposResponse::default_instance() {
  protobuf_google_2fdevtools_2fsourcerepo_2fv1_2fsourcerepo_2eproto::InitDefaults();
  return *internal_default_instance();
}

ListReposResponse* ListReposResponse::New(::google::protobuf::Arena* arena) const {
  ListReposResponse* n = new ListReposResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ListReposResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:google.devtools.sourcerepo.v1.ListReposResponse)
  repos_.Clear();
  next_page_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool ListReposResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.devtools.sourcerepo.v1.ListReposResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .google.devtools.sourcerepo.v1.Repo repos = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_repos()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string next_page_token = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_next_page_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->next_page_token().data(), this->next_page_token().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.sourcerepo.v1.ListReposResponse.next_page_token"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.devtools.sourcerepo.v1.ListReposResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.devtools.sourcerepo.v1.ListReposResponse)
  return false;
#undef DO_
}

void ListReposResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.devtools.sourcerepo.v1.ListReposResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.devtools.sourcerepo.v1.Repo repos = 1;
  for (unsigned int i = 0, n = this->repos_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->repos(i), output);
  }

  // string next_page_token = 2;
  if (this->next_page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->next_page_token().data(), this->next_page_token().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.sourcerepo.v1.ListReposResponse.next_page_token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->next_page_token(), output);
  }

  // @@protoc_insertion_point(serialize_end:google.devtools.sourcerepo.v1.ListReposResponse)
}

::google::protobuf::uint8* ListReposResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.devtools.sourcerepo.v1.ListReposResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.devtools.sourcerepo.v1.Repo repos = 1;
  for (unsigned int i = 0, n = this->repos_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->repos(i), deterministic, target);
  }

  // string next_page_token = 2;
  if (this->next_page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->next_page_token().data(), this->next_page_token().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.sourcerepo.v1.ListReposResponse.next_page_token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->next_page_token(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.devtools.sourcerepo.v1.ListReposResponse)
  return target;
}

size_t ListReposResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.devtools.sourcerepo.v1.ListReposResponse)
  size_t total_size = 0;

  // repeated .google.devtools.sourcerepo.v1.Repo repos = 1;
  {
    unsigned int count = this->repos_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->repos(i));
    }
  }

  // string next_page_token = 2;
  if (this->next_page_token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->next_page_token());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ListReposResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.devtools.sourcerepo.v1.ListReposResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ListReposResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListReposResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.devtools.sourcerepo.v1.ListReposResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.devtools.sourcerepo.v1.ListReposResponse)
    MergeFrom(*source);
  }
}

void ListReposResponse::MergeFrom(const ListReposResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.devtools.sourcerepo.v1.ListReposResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  repos_.MergeFrom(from.repos_);
  if (from.next_page_token().size() > 0) {

    next_page_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.next_page_token_);
  }
}

void ListReposResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.devtools.sourcerepo.v1.ListReposResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListReposResponse::CopyFrom(const ListReposResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.devtools.sourcerepo.v1.ListReposResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListReposResponse::IsInitialized() const {
  return true;
}

void ListReposResponse::Swap(ListReposResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListReposResponse::InternalSwap(ListReposResponse* other) {
  repos_.InternalSwap(&other->repos_);
  next_page_token_.Swap(&other->next_page_token_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ListReposResponse::GetMetadata() const {
  protobuf_google_2fdevtools_2fsourcerepo_2fv1_2fsourcerepo_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fdevtools_2fsourcerepo_2fv1_2fsourcerepo_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ListReposResponse

// repeated .google.devtools.sourcerepo.v1.Repo repos = 1;
int ListReposResponse::repos_size() const {
  return repos_.size();
}
void ListReposResponse::clear_repos() {
  repos_.Clear();
}
const ::google::devtools::sourcerepo::v1::Repo& ListReposResponse::repos(int index) const {
  // @@protoc_insertion_point(field_get:google.devtools.sourcerepo.v1.ListReposResponse.repos)
  return repos_.Get(index);
}
::google::devtools::sourcerepo::v1::Repo* ListReposResponse::mutable_repos(int index) {
  // @@protoc_insertion_point(field_mutable:google.devtools.sourcerepo.v1.ListReposResponse.repos)
  return repos_.Mutable(index);
}
::google::devtools::sourcerepo::v1::Repo* ListReposResponse::add_repos() {
  // @@protoc_insertion_point(field_add:google.devtools.sourcerepo.v1.ListReposResponse.repos)
  return repos_.Add();
}
::google::protobuf::RepeatedPtrField< ::google::devtools::sourcerepo::v1::Repo >*
ListReposResponse::mutable_repos() {
  // @@protoc_insertion_point(field_mutable_list:google.devtools.sourcerepo.v1.ListReposResponse.repos)
  return &repos_;
}
const ::google::protobuf::RepeatedPtrField< ::google::devtools::sourcerepo::v1::Repo >&
ListReposResponse::repos() const {
  // @@protoc_insertion_point(field_list:google.devtools.sourcerepo.v1.ListReposResponse.repos)
  return repos_;
}

// string next_page_token = 2;
void ListReposResponse::clear_next_page_token() {
  next_page_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ListReposResponse::next_page_token() const {
  // @@protoc_insertion_point(field_get:google.devtools.sourcerepo.v1.ListReposResponse.next_page_token)
  return next_page_token_.GetNoArena();
}
void ListReposResponse::set_next_page_token(const ::std::string& value) {
  
  next_page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.sourcerepo.v1.ListReposResponse.next_page_token)
}
#if LANG_CXX11
void ListReposResponse::set_next_page_token(::std::string&& value) {
  
  next_page_token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.devtools.sourcerepo.v1.ListReposResponse.next_page_token)
}
#endif
void ListReposResponse::set_next_page_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  next_page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.sourcerepo.v1.ListReposResponse.next_page_token)
}
void ListReposResponse::set_next_page_token(const char* value, size_t size) {
  
  next_page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.sourcerepo.v1.ListReposResponse.next_page_token)
}
::std::string* ListReposResponse::mutable_next_page_token() {
  
  // @@protoc_insertion_point(field_mutable:google.devtools.sourcerepo.v1.ListReposResponse.next_page_token)
  return next_page_token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ListReposResponse::release_next_page_token() {
  // @@protoc_insertion_point(field_release:google.devtools.sourcerepo.v1.ListReposResponse.next_page_token)
  
  return next_page_token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ListReposResponse::set_allocated_next_page_token(::std::string* next_page_token) {
  if (next_page_token != NULL) {
    
  } else {
    
  }
  next_page_token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), next_page_token);
  // @@protoc_insertion_point(field_set_allocated:google.devtools.sourcerepo.v1.ListReposResponse.next_page_token)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CreateRepoRequest::kParentFieldNumber;
const int CreateRepoRequest::kRepoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CreateRepoRequest::CreateRepoRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_google_2fdevtools_2fsourcerepo_2fv1_2fsourcerepo_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.devtools.sourcerepo.v1.CreateRepoRequest)
}
CreateRepoRequest::CreateRepoRequest(const CreateRepoRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  parent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.parent().size() > 0) {
    parent_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.parent_);
  }
  if (from.has_repo()) {
    repo_ = new ::google::devtools::sourcerepo::v1::Repo(*from.repo_);
  } else {
    repo_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.devtools.sourcerepo.v1.CreateRepoRequest)
}

void CreateRepoRequest::SharedCtor() {
  parent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  repo_ = NULL;
  _cached_size_ = 0;
}

CreateRepoRequest::~CreateRepoRequest() {
  // @@protoc_insertion_point(destructor:google.devtools.sourcerepo.v1.CreateRepoRequest)
  SharedDtor();
}

void CreateRepoRequest::SharedDtor() {
  parent_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete repo_;
  }
}

void CreateRepoRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CreateRepoRequest::descriptor() {
  protobuf_google_2fdevtools_2fsourcerepo_2fv1_2fsourcerepo_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fdevtools_2fsourcerepo_2fv1_2fsourcerepo_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CreateRepoRequest& CreateRepoRequest::default_instance() {
  protobuf_google_2fdevtools_2fsourcerepo_2fv1_2fsourcerepo_2eproto::InitDefaults();
  return *internal_default_instance();
}

CreateRepoRequest* CreateRepoRequest::New(::google::protobuf::Arena* arena) const {
  CreateRepoRequest* n = new CreateRepoRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CreateRepoRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.devtools.sourcerepo.v1.CreateRepoRequest)
  parent_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && repo_ != NULL) {
    delete repo_;
  }
  repo_ = NULL;
}

bool CreateRepoRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.devtools.sourcerepo.v1.CreateRepoRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string parent = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_parent()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->parent().data(), this->parent().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.sourcerepo.v1.CreateRepoRequest.parent"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.devtools.sourcerepo.v1.Repo repo = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_repo()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.devtools.sourcerepo.v1.CreateRepoRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.devtools.sourcerepo.v1.CreateRepoRequest)
  return false;
#undef DO_
}

void CreateRepoRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.devtools.sourcerepo.v1.CreateRepoRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string parent = 1;
  if (this->parent().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->parent().data(), this->parent().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.sourcerepo.v1.CreateRepoRequest.parent");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->parent(), output);
  }

  // .google.devtools.sourcerepo.v1.Repo repo = 2;
  if (this->has_repo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->repo_, output);
  }

  // @@protoc_insertion_point(serialize_end:google.devtools.sourcerepo.v1.CreateRepoRequest)
}

::google::protobuf::uint8* CreateRepoRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.devtools.sourcerepo.v1.CreateRepoRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string parent = 1;
  if (this->parent().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->parent().data(), this->parent().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.sourcerepo.v1.CreateRepoRequest.parent");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->parent(), target);
  }

  // .google.devtools.sourcerepo.v1.Repo repo = 2;
  if (this->has_repo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->repo_, deterministic, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.devtools.sourcerepo.v1.CreateRepoRequest)
  return target;
}

size_t CreateRepoRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.devtools.sourcerepo.v1.CreateRepoRequest)
  size_t total_size = 0;

  // string parent = 1;
  if (this->parent().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->parent());
  }

  // .google.devtools.sourcerepo.v1.Repo repo = 2;
  if (this->has_repo()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->repo_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CreateRepoRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.devtools.sourcerepo.v1.CreateRepoRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateRepoRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CreateRepoRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.devtools.sourcerepo.v1.CreateRepoRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.devtools.sourcerepo.v1.CreateRepoRequest)
    MergeFrom(*source);
  }
}

void CreateRepoRequest::MergeFrom(const CreateRepoRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.devtools.sourcerepo.v1.CreateRepoRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.parent().size() > 0) {

    parent_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.parent_);
  }
  if (from.has_repo()) {
    mutable_repo()->::google::devtools::sourcerepo::v1::Repo::MergeFrom(from.repo());
  }
}

void CreateRepoRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.devtools.sourcerepo.v1.CreateRepoRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateRepoRequest::CopyFrom(const CreateRepoRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.devtools.sourcerepo.v1.CreateRepoRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateRepoRequest::IsInitialized() const {
  return true;
}

void CreateRepoRequest::Swap(CreateRepoRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CreateRepoRequest::InternalSwap(CreateRepoRequest* other) {
  parent_.Swap(&other->parent_);
  std::swap(repo_, other->repo_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CreateRepoRequest::GetMetadata() const {
  protobuf_google_2fdevtools_2fsourcerepo_2fv1_2fsourcerepo_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fdevtools_2fsourcerepo_2fv1_2fsourcerepo_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CreateRepoRequest

// string parent = 1;
void CreateRepoRequest::clear_parent() {
  parent_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& CreateRepoRequest::parent() const {
  // @@protoc_insertion_point(field_get:google.devtools.sourcerepo.v1.CreateRepoRequest.parent)
  return parent_.GetNoArena();
}
void CreateRepoRequest::set_parent(const ::std::string& value) {
  
  parent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.sourcerepo.v1.CreateRepoRequest.parent)
}
#if LANG_CXX11
void CreateRepoRequest::set_parent(::std::string&& value) {
  
  parent_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.devtools.sourcerepo.v1.CreateRepoRequest.parent)
}
#endif
void CreateRepoRequest::set_parent(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  parent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.sourcerepo.v1.CreateRepoRequest.parent)
}
void CreateRepoRequest::set_parent(const char* value, size_t size) {
  
  parent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.sourcerepo.v1.CreateRepoRequest.parent)
}
::std::string* CreateRepoRequest::mutable_parent() {
  
  // @@protoc_insertion_point(field_mutable:google.devtools.sourcerepo.v1.CreateRepoRequest.parent)
  return parent_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CreateRepoRequest::release_parent() {
  // @@protoc_insertion_point(field_release:google.devtools.sourcerepo.v1.CreateRepoRequest.parent)
  
  return parent_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CreateRepoRequest::set_allocated_parent(::std::string* parent) {
  if (parent != NULL) {
    
  } else {
    
  }
  parent_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), parent);
  // @@protoc_insertion_point(field_set_allocated:google.devtools.sourcerepo.v1.CreateRepoRequest.parent)
}

// .google.devtools.sourcerepo.v1.Repo repo = 2;
bool CreateRepoRequest::has_repo() const {
  return this != internal_default_instance() && repo_ != NULL;
}
void CreateRepoRequest::clear_repo() {
  if (GetArenaNoVirtual() == NULL && repo_ != NULL) delete repo_;
  repo_ = NULL;
}
const ::google::devtools::sourcerepo::v1::Repo& CreateRepoRequest::repo() const {
  // @@protoc_insertion_point(field_get:google.devtools.sourcerepo.v1.CreateRepoRequest.repo)
  return repo_ != NULL ? *repo_
                         : *::google::devtools::sourcerepo::v1::Repo::internal_default_instance();
}
::google::devtools::sourcerepo::v1::Repo* CreateRepoRequest::mutable_repo() {
  
  if (repo_ == NULL) {
    repo_ = new ::google::devtools::sourcerepo::v1::Repo;
  }
  // @@protoc_insertion_point(field_mutable:google.devtools.sourcerepo.v1.CreateRepoRequest.repo)
  return repo_;
}
::google::devtools::sourcerepo::v1::Repo* CreateRepoRequest::release_repo() {
  // @@protoc_insertion_point(field_release:google.devtools.sourcerepo.v1.CreateRepoRequest.repo)
  
  ::google::devtools::sourcerepo::v1::Repo* temp = repo_;
  repo_ = NULL;
  return temp;
}
void CreateRepoRequest::set_allocated_repo(::google::devtools::sourcerepo::v1::Repo* repo) {
  delete repo_;
  repo_ = repo;
  if (repo) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.devtools.sourcerepo.v1.CreateRepoRequest.repo)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DeleteRepoRequest::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DeleteRepoRequest::DeleteRepoRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_google_2fdevtools_2fsourcerepo_2fv1_2fsourcerepo_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.devtools.sourcerepo.v1.DeleteRepoRequest)
}
DeleteRepoRequest::DeleteRepoRequest(const DeleteRepoRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  // @@protoc_insertion_point(copy_constructor:google.devtools.sourcerepo.v1.DeleteRepoRequest)
}

void DeleteRepoRequest::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

DeleteRepoRequest::~DeleteRepoRequest() {
  // @@protoc_insertion_point(destructor:google.devtools.sourcerepo.v1.DeleteRepoRequest)
  SharedDtor();
}

void DeleteRepoRequest::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DeleteRepoRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DeleteRepoRequest::descriptor() {
  protobuf_google_2fdevtools_2fsourcerepo_2fv1_2fsourcerepo_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fdevtools_2fsourcerepo_2fv1_2fsourcerepo_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DeleteRepoRequest& DeleteRepoRequest::default_instance() {
  protobuf_google_2fdevtools_2fsourcerepo_2fv1_2fsourcerepo_2eproto::InitDefaults();
  return *internal_default_instance();
}

DeleteRepoRequest* DeleteRepoRequest::New(::google::protobuf::Arena* arena) const {
  DeleteRepoRequest* n = new DeleteRepoRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DeleteRepoRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.devtools.sourcerepo.v1.DeleteRepoRequest)
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool DeleteRepoRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.devtools.sourcerepo.v1.DeleteRepoRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.sourcerepo.v1.DeleteRepoRequest.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.devtools.sourcerepo.v1.DeleteRepoRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.devtools.sourcerepo.v1.DeleteRepoRequest)
  return false;
#undef DO_
}

void DeleteRepoRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.devtools.sourcerepo.v1.DeleteRepoRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.sourcerepo.v1.DeleteRepoRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // @@protoc_insertion_point(serialize_end:google.devtools.sourcerepo.v1.DeleteRepoRequest)
}

::google::protobuf::uint8* DeleteRepoRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.devtools.sourcerepo.v1.DeleteRepoRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.sourcerepo.v1.DeleteRepoRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.devtools.sourcerepo.v1.DeleteRepoRequest)
  return target;
}

size_t DeleteRepoRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.devtools.sourcerepo.v1.DeleteRepoRequest)
  size_t total_size = 0;

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DeleteRepoRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.devtools.sourcerepo.v1.DeleteRepoRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteRepoRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DeleteRepoRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.devtools.sourcerepo.v1.DeleteRepoRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.devtools.sourcerepo.v1.DeleteRepoRequest)
    MergeFrom(*source);
  }
}

void DeleteRepoRequest::MergeFrom(const DeleteRepoRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.devtools.sourcerepo.v1.DeleteRepoRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
}

void DeleteRepoRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.devtools.sourcerepo.v1.DeleteRepoRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteRepoRequest::CopyFrom(const DeleteRepoRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.devtools.sourcerepo.v1.DeleteRepoRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteRepoRequest::IsInitialized() const {
  return true;
}

void DeleteRepoRequest::Swap(DeleteRepoRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DeleteRepoRequest::InternalSwap(DeleteRepoRequest* other) {
  name_.Swap(&other->name_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DeleteRepoRequest::GetMetadata() const {
  protobuf_google_2fdevtools_2fsourcerepo_2fv1_2fsourcerepo_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fdevtools_2fsourcerepo_2fv1_2fsourcerepo_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DeleteRepoRequest

// string name = 1;
void DeleteRepoRequest::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& DeleteRepoRequest::name() const {
  // @@protoc_insertion_point(field_get:google.devtools.sourcerepo.v1.DeleteRepoRequest.name)
  return name_.GetNoArena();
}
void DeleteRepoRequest::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.sourcerepo.v1.DeleteRepoRequest.name)
}
#if LANG_CXX11
void DeleteRepoRequest::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.devtools.sourcerepo.v1.DeleteRepoRequest.name)
}
#endif
void DeleteRepoRequest::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.sourcerepo.v1.DeleteRepoRequest.name)
}
void DeleteRepoRequest::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.sourcerepo.v1.DeleteRepoRequest.name)
}
::std::string* DeleteRepoRequest::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:google.devtools.sourcerepo.v1.DeleteRepoRequest.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* DeleteRepoRequest::release_name() {
  // @@protoc_insertion_point(field_release:google.devtools.sourcerepo.v1.DeleteRepoRequest.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void DeleteRepoRequest::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:google.devtools.sourcerepo.v1.DeleteRepoRequest.name)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace v1
}  // namespace sourcerepo
}  // namespace devtools
}  // namespace google

// @@protoc_insertion_point(global_scope)
