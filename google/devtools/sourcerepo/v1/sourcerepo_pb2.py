# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/devtools/sourcerepo/v1/sourcerepo.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from google.api import annotations_pb2 as google_dot_api_dot_annotations__pb2
from google.api import auth_pb2 as google_dot_api_dot_auth__pb2
from google.iam.v1 import iam_policy_pb2 as google_dot_iam_dot_v1_dot_iam__policy__pb2
from google.iam.v1 import policy_pb2 as google_dot_iam_dot_v1_dot_policy__pb2
from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='google/devtools/sourcerepo/v1/sourcerepo.proto',
  package='google.devtools.sourcerepo.v1',
  syntax='proto3',
  serialized_pb=_b('\n.google/devtools/sourcerepo/v1/sourcerepo.proto\x12\x1dgoogle.devtools.sourcerepo.v1\x1a\x1cgoogle/api/annotations.proto\x1a\x15google/api/auth.proto\x1a\x1egoogle/iam/v1/iam_policy.proto\x1a\x1agoogle/iam/v1/policy.proto\x1a\x1bgoogle/protobuf/empty.proto\"s\n\x04Repo\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\x0c\n\x04size\x18\x02 \x01(\x03\x12\x0b\n\x03url\x18\x03 \x01(\t\x12\x42\n\rmirror_config\x18\x04 \x01(\x0b\x32+.google.devtools.sourcerepo.v1.MirrorConfig\"F\n\x0cMirrorConfig\x12\x0b\n\x03url\x18\x01 \x01(\t\x12\x12\n\nwebhook_id\x18\x02 \x01(\t\x12\x15\n\rdeploy_key_id\x18\x03 \x01(\t\"\x1e\n\x0eGetRepoRequest\x12\x0c\n\x04name\x18\x01 \x01(\t\"G\n\x10ListReposRequest\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\x11\n\tpage_size\x18\x02 \x01(\x05\x12\x12\n\npage_token\x18\x03 \x01(\t\"`\n\x11ListReposResponse\x12\x32\n\x05repos\x18\x01 \x03(\x0b\x32#.google.devtools.sourcerepo.v1.Repo\x12\x17\n\x0fnext_page_token\x18\x02 \x01(\t\"V\n\x11\x43reateRepoRequest\x12\x0e\n\x06parent\x18\x01 \x01(\t\x12\x31\n\x04repo\x18\x02 \x01(\x0b\x32#.google.devtools.sourcerepo.v1.Repo\"!\n\x11\x44\x65leteRepoRequest\x12\x0c\n\x04name\x18\x01 \x01(\t2\xf8\x07\n\nSourceRepo\x12\x93\x01\n\tListRepos\x12/.google.devtools.sourcerepo.v1.ListReposRequest\x1a\x30.google.devtools.sourcerepo.v1.ListReposResponse\"#\x82\xd3\xe4\x93\x02\x1d\x12\x1b/v1/{name=projects/*}/repos\x12\x85\x01\n\x07GetRepo\x12-.google.devtools.sourcerepo.v1.GetRepoRequest\x1a#.google.devtools.sourcerepo.v1.Repo\"&\x82\xd3\xe4\x93\x02 \x12\x1e/v1/{name=projects/*/repos/**}\x12\x90\x01\n\nCreateRepo\x12\x30.google.devtools.sourcerepo.v1.CreateRepoRequest\x1a#.google.devtools.sourcerepo.v1.Repo\"+\x82\xd3\xe4\x93\x02%\"\x1d/v1/{parent=projects/*}/repos:\x04repo\x12~\n\nDeleteRepo\x12\x30.google.devtools.sourcerepo.v1.DeleteRepoRequest\x1a\x16.google.protobuf.Empty\"&\x82\xd3\xe4\x93\x02 *\x1e/v1/{name=projects/*/repos/**}\x12\x85\x01\n\x0cSetIamPolicy\x12\".google.iam.v1.SetIamPolicyRequest\x1a\x15.google.iam.v1.Policy\":\x82\xd3\xe4\x93\x02\x34\"//v1/{resource=projects/*/repos/**}:setIamPolicy:\x01*\x12\x82\x01\n\x0cGetIamPolicy\x12\".google.iam.v1.GetIamPolicyRequest\x1a\x15.google.iam.v1.Policy\"7\x82\xd3\xe4\x93\x02\x31\x12//v1/{resource=projects/*/repos/**}:getIamPolicy\x12\xab\x01\n\x12TestIamPermissions\x12(.google.iam.v1.TestIamPermissionsRequest\x1a).google.iam.v1.TestIamPermissionsResponse\"@\x82\xd3\xe4\x93\x02:\"5/v1/{resource=projects/*/repos/**}:testIamPermissions:\x01*B\x7f\n!com.google.devtools.sourcerepo.v1B\x0fSourceRepoProtoP\x01ZGgoogle.golang.org/genproto/googleapis/devtools/sourcerepo/v1;sourcerepob\x06proto3')
  ,
  dependencies=[google_dot_api_dot_annotations__pb2.DESCRIPTOR,google_dot_api_dot_auth__pb2.DESCRIPTOR,google_dot_iam_dot_v1_dot_iam__policy__pb2.DESCRIPTOR,google_dot_iam_dot_v1_dot_policy__pb2.DESCRIPTOR,google_dot_protobuf_dot_empty__pb2.DESCRIPTOR,])




_REPO = _descriptor.Descriptor(
  name='Repo',
  full_name='google.devtools.sourcerepo.v1.Repo',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='name', full_name='google.devtools.sourcerepo.v1.Repo.name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='size', full_name='google.devtools.sourcerepo.v1.Repo.size', index=1,
      number=2, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='url', full_name='google.devtools.sourcerepo.v1.Repo.url', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='mirror_config', full_name='google.devtools.sourcerepo.v1.Repo.mirror_config', index=3,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=223,
  serialized_end=338,
)


_MIRRORCONFIG = _descriptor.Descriptor(
  name='MirrorConfig',
  full_name='google.devtools.sourcerepo.v1.MirrorConfig',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='url', full_name='google.devtools.sourcerepo.v1.MirrorConfig.url', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='webhook_id', full_name='google.devtools.sourcerepo.v1.MirrorConfig.webhook_id', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='deploy_key_id', full_name='google.devtools.sourcerepo.v1.MirrorConfig.deploy_key_id', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=340,
  serialized_end=410,
)


_GETREPOREQUEST = _descriptor.Descriptor(
  name='GetRepoRequest',
  full_name='google.devtools.sourcerepo.v1.GetRepoRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='name', full_name='google.devtools.sourcerepo.v1.GetRepoRequest.name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=412,
  serialized_end=442,
)


_LISTREPOSREQUEST = _descriptor.Descriptor(
  name='ListReposRequest',
  full_name='google.devtools.sourcerepo.v1.ListReposRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='name', full_name='google.devtools.sourcerepo.v1.ListReposRequest.name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='page_size', full_name='google.devtools.sourcerepo.v1.ListReposRequest.page_size', index=1,
      number=2, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='page_token', full_name='google.devtools.sourcerepo.v1.ListReposRequest.page_token', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=444,
  serialized_end=515,
)


_LISTREPOSRESPONSE = _descriptor.Descriptor(
  name='ListReposResponse',
  full_name='google.devtools.sourcerepo.v1.ListReposResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='repos', full_name='google.devtools.sourcerepo.v1.ListReposResponse.repos', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='next_page_token', full_name='google.devtools.sourcerepo.v1.ListReposResponse.next_page_token', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=517,
  serialized_end=613,
)


_CREATEREPOREQUEST = _descriptor.Descriptor(
  name='CreateRepoRequest',
  full_name='google.devtools.sourcerepo.v1.CreateRepoRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='parent', full_name='google.devtools.sourcerepo.v1.CreateRepoRequest.parent', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='repo', full_name='google.devtools.sourcerepo.v1.CreateRepoRequest.repo', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=615,
  serialized_end=701,
)


_DELETEREPOREQUEST = _descriptor.Descriptor(
  name='DeleteRepoRequest',
  full_name='google.devtools.sourcerepo.v1.DeleteRepoRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='name', full_name='google.devtools.sourcerepo.v1.DeleteRepoRequest.name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=703,
  serialized_end=736,
)

_REPO.fields_by_name['mirror_config'].message_type = _MIRRORCONFIG
_LISTREPOSRESPONSE.fields_by_name['repos'].message_type = _REPO
_CREATEREPOREQUEST.fields_by_name['repo'].message_type = _REPO
DESCRIPTOR.message_types_by_name['Repo'] = _REPO
DESCRIPTOR.message_types_by_name['MirrorConfig'] = _MIRRORCONFIG
DESCRIPTOR.message_types_by_name['GetRepoRequest'] = _GETREPOREQUEST
DESCRIPTOR.message_types_by_name['ListReposRequest'] = _LISTREPOSREQUEST
DESCRIPTOR.message_types_by_name['ListReposResponse'] = _LISTREPOSRESPONSE
DESCRIPTOR.message_types_by_name['CreateRepoRequest'] = _CREATEREPOREQUEST
DESCRIPTOR.message_types_by_name['DeleteRepoRequest'] = _DELETEREPOREQUEST
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

Repo = _reflection.GeneratedProtocolMessageType('Repo', (_message.Message,), dict(
  DESCRIPTOR = _REPO,
  __module__ = 'google.devtools.sourcerepo.v1.sourcerepo_pb2'
  # @@protoc_insertion_point(class_scope:google.devtools.sourcerepo.v1.Repo)
  ))
_sym_db.RegisterMessage(Repo)

MirrorConfig = _reflection.GeneratedProtocolMessageType('MirrorConfig', (_message.Message,), dict(
  DESCRIPTOR = _MIRRORCONFIG,
  __module__ = 'google.devtools.sourcerepo.v1.sourcerepo_pb2'
  # @@protoc_insertion_point(class_scope:google.devtools.sourcerepo.v1.MirrorConfig)
  ))
_sym_db.RegisterMessage(MirrorConfig)

GetRepoRequest = _reflection.GeneratedProtocolMessageType('GetRepoRequest', (_message.Message,), dict(
  DESCRIPTOR = _GETREPOREQUEST,
  __module__ = 'google.devtools.sourcerepo.v1.sourcerepo_pb2'
  # @@protoc_insertion_point(class_scope:google.devtools.sourcerepo.v1.GetRepoRequest)
  ))
_sym_db.RegisterMessage(GetRepoRequest)

ListReposRequest = _reflection.GeneratedProtocolMessageType('ListReposRequest', (_message.Message,), dict(
  DESCRIPTOR = _LISTREPOSREQUEST,
  __module__ = 'google.devtools.sourcerepo.v1.sourcerepo_pb2'
  # @@protoc_insertion_point(class_scope:google.devtools.sourcerepo.v1.ListReposRequest)
  ))
_sym_db.RegisterMessage(ListReposRequest)

ListReposResponse = _reflection.GeneratedProtocolMessageType('ListReposResponse', (_message.Message,), dict(
  DESCRIPTOR = _LISTREPOSRESPONSE,
  __module__ = 'google.devtools.sourcerepo.v1.sourcerepo_pb2'
  # @@protoc_insertion_point(class_scope:google.devtools.sourcerepo.v1.ListReposResponse)
  ))
_sym_db.RegisterMessage(ListReposResponse)

CreateRepoRequest = _reflection.GeneratedProtocolMessageType('CreateRepoRequest', (_message.Message,), dict(
  DESCRIPTOR = _CREATEREPOREQUEST,
  __module__ = 'google.devtools.sourcerepo.v1.sourcerepo_pb2'
  # @@protoc_insertion_point(class_scope:google.devtools.sourcerepo.v1.CreateRepoRequest)
  ))
_sym_db.RegisterMessage(CreateRepoRequest)

DeleteRepoRequest = _reflection.GeneratedProtocolMessageType('DeleteRepoRequest', (_message.Message,), dict(
  DESCRIPTOR = _DELETEREPOREQUEST,
  __module__ = 'google.devtools.sourcerepo.v1.sourcerepo_pb2'
  # @@protoc_insertion_point(class_scope:google.devtools.sourcerepo.v1.DeleteRepoRequest)
  ))
_sym_db.RegisterMessage(DeleteRepoRequest)


DESCRIPTOR.has_options = True
DESCRIPTOR._options = _descriptor._ParseOptions(descriptor_pb2.FileOptions(), _b('\n!com.google.devtools.sourcerepo.v1B\017SourceRepoProtoP\001ZGgoogle.golang.org/genproto/googleapis/devtools/sourcerepo/v1;sourcerepo'))
try:
  # THESE ELEMENTS WILL BE DEPRECATED.
  # Please use the generated *_pb2_grpc.py files instead.
  import grpc
  from grpc.beta import implementations as beta_implementations
  from grpc.beta import interfaces as beta_interfaces
  from grpc.framework.common import cardinality
  from grpc.framework.interfaces.face import utilities as face_utilities


  class SourceRepoStub(object):
    """The Source Repo API service.
    """

    def __init__(self, channel):
      """Constructor.

      Args:
        channel: A grpc.Channel.
      """
      self.ListRepos = channel.unary_unary(
          '/google.devtools.sourcerepo.v1.SourceRepo/ListRepos',
          request_serializer=ListReposRequest.SerializeToString,
          response_deserializer=ListReposResponse.FromString,
          )
      self.GetRepo = channel.unary_unary(
          '/google.devtools.sourcerepo.v1.SourceRepo/GetRepo',
          request_serializer=GetRepoRequest.SerializeToString,
          response_deserializer=Repo.FromString,
          )
      self.CreateRepo = channel.unary_unary(
          '/google.devtools.sourcerepo.v1.SourceRepo/CreateRepo',
          request_serializer=CreateRepoRequest.SerializeToString,
          response_deserializer=Repo.FromString,
          )
      self.DeleteRepo = channel.unary_unary(
          '/google.devtools.sourcerepo.v1.SourceRepo/DeleteRepo',
          request_serializer=DeleteRepoRequest.SerializeToString,
          response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
          )
      self.SetIamPolicy = channel.unary_unary(
          '/google.devtools.sourcerepo.v1.SourceRepo/SetIamPolicy',
          request_serializer=google_dot_iam_dot_v1_dot_iam__policy__pb2.SetIamPolicyRequest.SerializeToString,
          response_deserializer=google_dot_iam_dot_v1_dot_policy__pb2.Policy.FromString,
          )
      self.GetIamPolicy = channel.unary_unary(
          '/google.devtools.sourcerepo.v1.SourceRepo/GetIamPolicy',
          request_serializer=google_dot_iam_dot_v1_dot_iam__policy__pb2.GetIamPolicyRequest.SerializeToString,
          response_deserializer=google_dot_iam_dot_v1_dot_policy__pb2.Policy.FromString,
          )
      self.TestIamPermissions = channel.unary_unary(
          '/google.devtools.sourcerepo.v1.SourceRepo/TestIamPermissions',
          request_serializer=google_dot_iam_dot_v1_dot_iam__policy__pb2.TestIamPermissionsRequest.SerializeToString,
          response_deserializer=google_dot_iam_dot_v1_dot_iam__policy__pb2.TestIamPermissionsResponse.FromString,
          )


  class SourceRepoServicer(object):
    """The Source Repo API service.
    """

    def ListRepos(self, request, context):
      """Returns all repos belonging to a project. The sizes of the repos are
      not set by ListRepos.  To get the size of a repo, use GetRepo.
      """
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def GetRepo(self, request, context):
      """Returns information about a repo.
      """
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def CreateRepo(self, request, context):
      """Creates a repo in the given project with the given name.

      If the named repository already exists, `CreateRepo` returns
      `ALREADY_EXISTS`.
      """
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def DeleteRepo(self, request, context):
      """Deletes a repo.
      """
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def SetIamPolicy(self, request, context):
      """Sets the access control policy on the specified resource. Replaces any
      existing policy.
      """
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def GetIamPolicy(self, request, context):
      """Gets the access control policy for a resource.
      Returns an empty policy if the resource exists and does not have a policy
      set.
      """
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def TestIamPermissions(self, request, context):
      """Returns permissions that a caller has on the specified resource.
      If the resource does not exist, this will return an empty set of
      permissions, not a NOT_FOUND error.
      """
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')


  def add_SourceRepoServicer_to_server(servicer, server):
    rpc_method_handlers = {
        'ListRepos': grpc.unary_unary_rpc_method_handler(
            servicer.ListRepos,
            request_deserializer=ListReposRequest.FromString,
            response_serializer=ListReposResponse.SerializeToString,
        ),
        'GetRepo': grpc.unary_unary_rpc_method_handler(
            servicer.GetRepo,
            request_deserializer=GetRepoRequest.FromString,
            response_serializer=Repo.SerializeToString,
        ),
        'CreateRepo': grpc.unary_unary_rpc_method_handler(
            servicer.CreateRepo,
            request_deserializer=CreateRepoRequest.FromString,
            response_serializer=Repo.SerializeToString,
        ),
        'DeleteRepo': grpc.unary_unary_rpc_method_handler(
            servicer.DeleteRepo,
            request_deserializer=DeleteRepoRequest.FromString,
            response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
        ),
        'SetIamPolicy': grpc.unary_unary_rpc_method_handler(
            servicer.SetIamPolicy,
            request_deserializer=google_dot_iam_dot_v1_dot_iam__policy__pb2.SetIamPolicyRequest.FromString,
            response_serializer=google_dot_iam_dot_v1_dot_policy__pb2.Policy.SerializeToString,
        ),
        'GetIamPolicy': grpc.unary_unary_rpc_method_handler(
            servicer.GetIamPolicy,
            request_deserializer=google_dot_iam_dot_v1_dot_iam__policy__pb2.GetIamPolicyRequest.FromString,
            response_serializer=google_dot_iam_dot_v1_dot_policy__pb2.Policy.SerializeToString,
        ),
        'TestIamPermissions': grpc.unary_unary_rpc_method_handler(
            servicer.TestIamPermissions,
            request_deserializer=google_dot_iam_dot_v1_dot_iam__policy__pb2.TestIamPermissionsRequest.FromString,
            response_serializer=google_dot_iam_dot_v1_dot_iam__policy__pb2.TestIamPermissionsResponse.SerializeToString,
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
        'google.devtools.sourcerepo.v1.SourceRepo', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


  class BetaSourceRepoServicer(object):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This class was generated
    only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0."""
    """The Source Repo API service.
    """
    def ListRepos(self, request, context):
      """Returns all repos belonging to a project. The sizes of the repos are
      not set by ListRepos.  To get the size of a repo, use GetRepo.
      """
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def GetRepo(self, request, context):
      """Returns information about a repo.
      """
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def CreateRepo(self, request, context):
      """Creates a repo in the given project with the given name.

      If the named repository already exists, `CreateRepo` returns
      `ALREADY_EXISTS`.
      """
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def DeleteRepo(self, request, context):
      """Deletes a repo.
      """
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def SetIamPolicy(self, request, context):
      """Sets the access control policy on the specified resource. Replaces any
      existing policy.
      """
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def GetIamPolicy(self, request, context):
      """Gets the access control policy for a resource.
      Returns an empty policy if the resource exists and does not have a policy
      set.
      """
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def TestIamPermissions(self, request, context):
      """Returns permissions that a caller has on the specified resource.
      If the resource does not exist, this will return an empty set of
      permissions, not a NOT_FOUND error.
      """
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)


  class BetaSourceRepoStub(object):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This class was generated
    only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0."""
    """The Source Repo API service.
    """
    def ListRepos(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      """Returns all repos belonging to a project. The sizes of the repos are
      not set by ListRepos.  To get the size of a repo, use GetRepo.
      """
      raise NotImplementedError()
    ListRepos.future = None
    def GetRepo(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      """Returns information about a repo.
      """
      raise NotImplementedError()
    GetRepo.future = None
    def CreateRepo(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      """Creates a repo in the given project with the given name.

      If the named repository already exists, `CreateRepo` returns
      `ALREADY_EXISTS`.
      """
      raise NotImplementedError()
    CreateRepo.future = None
    def DeleteRepo(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      """Deletes a repo.
      """
      raise NotImplementedError()
    DeleteRepo.future = None
    def SetIamPolicy(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      """Sets the access control policy on the specified resource. Replaces any
      existing policy.
      """
      raise NotImplementedError()
    SetIamPolicy.future = None
    def GetIamPolicy(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      """Gets the access control policy for a resource.
      Returns an empty policy if the resource exists and does not have a policy
      set.
      """
      raise NotImplementedError()
    GetIamPolicy.future = None
    def TestIamPermissions(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      """Returns permissions that a caller has on the specified resource.
      If the resource does not exist, this will return an empty set of
      permissions, not a NOT_FOUND error.
      """
      raise NotImplementedError()
    TestIamPermissions.future = None


  def beta_create_SourceRepo_server(servicer, pool=None, pool_size=None, default_timeout=None, maximum_timeout=None):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This function was
    generated only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0"""
    request_deserializers = {
      ('google.devtools.sourcerepo.v1.SourceRepo', 'CreateRepo'): CreateRepoRequest.FromString,
      ('google.devtools.sourcerepo.v1.SourceRepo', 'DeleteRepo'): DeleteRepoRequest.FromString,
      ('google.devtools.sourcerepo.v1.SourceRepo', 'GetIamPolicy'): google_dot_iam_dot_v1_dot_iam__policy__pb2.GetIamPolicyRequest.FromString,
      ('google.devtools.sourcerepo.v1.SourceRepo', 'GetRepo'): GetRepoRequest.FromString,
      ('google.devtools.sourcerepo.v1.SourceRepo', 'ListRepos'): ListReposRequest.FromString,
      ('google.devtools.sourcerepo.v1.SourceRepo', 'SetIamPolicy'): google_dot_iam_dot_v1_dot_iam__policy__pb2.SetIamPolicyRequest.FromString,
      ('google.devtools.sourcerepo.v1.SourceRepo', 'TestIamPermissions'): google_dot_iam_dot_v1_dot_iam__policy__pb2.TestIamPermissionsRequest.FromString,
    }
    response_serializers = {
      ('google.devtools.sourcerepo.v1.SourceRepo', 'CreateRepo'): Repo.SerializeToString,
      ('google.devtools.sourcerepo.v1.SourceRepo', 'DeleteRepo'): google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
      ('google.devtools.sourcerepo.v1.SourceRepo', 'GetIamPolicy'): google_dot_iam_dot_v1_dot_policy__pb2.Policy.SerializeToString,
      ('google.devtools.sourcerepo.v1.SourceRepo', 'GetRepo'): Repo.SerializeToString,
      ('google.devtools.sourcerepo.v1.SourceRepo', 'ListRepos'): ListReposResponse.SerializeToString,
      ('google.devtools.sourcerepo.v1.SourceRepo', 'SetIamPolicy'): google_dot_iam_dot_v1_dot_policy__pb2.Policy.SerializeToString,
      ('google.devtools.sourcerepo.v1.SourceRepo', 'TestIamPermissions'): google_dot_iam_dot_v1_dot_iam__policy__pb2.TestIamPermissionsResponse.SerializeToString,
    }
    method_implementations = {
      ('google.devtools.sourcerepo.v1.SourceRepo', 'CreateRepo'): face_utilities.unary_unary_inline(servicer.CreateRepo),
      ('google.devtools.sourcerepo.v1.SourceRepo', 'DeleteRepo'): face_utilities.unary_unary_inline(servicer.DeleteRepo),
      ('google.devtools.sourcerepo.v1.SourceRepo', 'GetIamPolicy'): face_utilities.unary_unary_inline(servicer.GetIamPolicy),
      ('google.devtools.sourcerepo.v1.SourceRepo', 'GetRepo'): face_utilities.unary_unary_inline(servicer.GetRepo),
      ('google.devtools.sourcerepo.v1.SourceRepo', 'ListRepos'): face_utilities.unary_unary_inline(servicer.ListRepos),
      ('google.devtools.sourcerepo.v1.SourceRepo', 'SetIamPolicy'): face_utilities.unary_unary_inline(servicer.SetIamPolicy),
      ('google.devtools.sourcerepo.v1.SourceRepo', 'TestIamPermissions'): face_utilities.unary_unary_inline(servicer.TestIamPermissions),
    }
    server_options = beta_implementations.server_options(request_deserializers=request_deserializers, response_serializers=response_serializers, thread_pool=pool, thread_pool_size=pool_size, default_timeout=default_timeout, maximum_timeout=maximum_timeout)
    return beta_implementations.server(method_implementations, options=server_options)


  def beta_create_SourceRepo_stub(channel, host=None, metadata_transformer=None, pool=None, pool_size=None):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This function was
    generated only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0"""
    request_serializers = {
      ('google.devtools.sourcerepo.v1.SourceRepo', 'CreateRepo'): CreateRepoRequest.SerializeToString,
      ('google.devtools.sourcerepo.v1.SourceRepo', 'DeleteRepo'): DeleteRepoRequest.SerializeToString,
      ('google.devtools.sourcerepo.v1.SourceRepo', 'GetIamPolicy'): google_dot_iam_dot_v1_dot_iam__policy__pb2.GetIamPolicyRequest.SerializeToString,
      ('google.devtools.sourcerepo.v1.SourceRepo', 'GetRepo'): GetRepoRequest.SerializeToString,
      ('google.devtools.sourcerepo.v1.SourceRepo', 'ListRepos'): ListReposRequest.SerializeToString,
      ('google.devtools.sourcerepo.v1.SourceRepo', 'SetIamPolicy'): google_dot_iam_dot_v1_dot_iam__policy__pb2.SetIamPolicyRequest.SerializeToString,
      ('google.devtools.sourcerepo.v1.SourceRepo', 'TestIamPermissions'): google_dot_iam_dot_v1_dot_iam__policy__pb2.TestIamPermissionsRequest.SerializeToString,
    }
    response_deserializers = {
      ('google.devtools.sourcerepo.v1.SourceRepo', 'CreateRepo'): Repo.FromString,
      ('google.devtools.sourcerepo.v1.SourceRepo', 'DeleteRepo'): google_dot_protobuf_dot_empty__pb2.Empty.FromString,
      ('google.devtools.sourcerepo.v1.SourceRepo', 'GetIamPolicy'): google_dot_iam_dot_v1_dot_policy__pb2.Policy.FromString,
      ('google.devtools.sourcerepo.v1.SourceRepo', 'GetRepo'): Repo.FromString,
      ('google.devtools.sourcerepo.v1.SourceRepo', 'ListRepos'): ListReposResponse.FromString,
      ('google.devtools.sourcerepo.v1.SourceRepo', 'SetIamPolicy'): google_dot_iam_dot_v1_dot_policy__pb2.Policy.FromString,
      ('google.devtools.sourcerepo.v1.SourceRepo', 'TestIamPermissions'): google_dot_iam_dot_v1_dot_iam__policy__pb2.TestIamPermissionsResponse.FromString,
    }
    cardinalities = {
      'CreateRepo': cardinality.Cardinality.UNARY_UNARY,
      'DeleteRepo': cardinality.Cardinality.UNARY_UNARY,
      'GetIamPolicy': cardinality.Cardinality.UNARY_UNARY,
      'GetRepo': cardinality.Cardinality.UNARY_UNARY,
      'ListRepos': cardinality.Cardinality.UNARY_UNARY,
      'SetIamPolicy': cardinality.Cardinality.UNARY_UNARY,
      'TestIamPermissions': cardinality.Cardinality.UNARY_UNARY,
    }
    stub_options = beta_implementations.stub_options(host=host, metadata_transformer=metadata_transformer, request_serializers=request_serializers, response_deserializers=response_deserializers, thread_pool=pool, thread_pool_size=pool_size)
    return beta_implementations.dynamic_stub(channel, 'google.devtools.sourcerepo.v1.SourceRepo', cardinalities, options=stub_options)
except ImportError:
  pass
# @@protoc_insertion_point(module_scope)
