# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from google.devtools.sourcerepo.v1 import sourcerepo_pb2 as google_dot_devtools_dot_sourcerepo_dot_v1_dot_sourcerepo__pb2
from google.iam.v1 import iam_policy_pb2 as google_dot_iam_dot_v1_dot_iam__policy__pb2
from google.iam.v1 import policy_pb2 as google_dot_iam_dot_v1_dot_policy__pb2
from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2


class SourceRepoStub(object):
  """The Source Repo API service.
  """

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.ListRepos = channel.unary_unary(
        '/google.devtools.sourcerepo.v1.SourceRepo/ListRepos',
        request_serializer=google_dot_devtools_dot_sourcerepo_dot_v1_dot_sourcerepo__pb2.ListReposRequest.SerializeToString,
        response_deserializer=google_dot_devtools_dot_sourcerepo_dot_v1_dot_sourcerepo__pb2.ListReposResponse.FromString,
        )
    self.GetRepo = channel.unary_unary(
        '/google.devtools.sourcerepo.v1.SourceRepo/GetRepo',
        request_serializer=google_dot_devtools_dot_sourcerepo_dot_v1_dot_sourcerepo__pb2.GetRepoRequest.SerializeToString,
        response_deserializer=google_dot_devtools_dot_sourcerepo_dot_v1_dot_sourcerepo__pb2.Repo.FromString,
        )
    self.CreateRepo = channel.unary_unary(
        '/google.devtools.sourcerepo.v1.SourceRepo/CreateRepo',
        request_serializer=google_dot_devtools_dot_sourcerepo_dot_v1_dot_sourcerepo__pb2.CreateRepoRequest.SerializeToString,
        response_deserializer=google_dot_devtools_dot_sourcerepo_dot_v1_dot_sourcerepo__pb2.Repo.FromString,
        )
    self.DeleteRepo = channel.unary_unary(
        '/google.devtools.sourcerepo.v1.SourceRepo/DeleteRepo',
        request_serializer=google_dot_devtools_dot_sourcerepo_dot_v1_dot_sourcerepo__pb2.DeleteRepoRequest.SerializeToString,
        response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
        )
    self.SetIamPolicy = channel.unary_unary(
        '/google.devtools.sourcerepo.v1.SourceRepo/SetIamPolicy',
        request_serializer=google_dot_iam_dot_v1_dot_iam__policy__pb2.SetIamPolicyRequest.SerializeToString,
        response_deserializer=google_dot_iam_dot_v1_dot_policy__pb2.Policy.FromString,
        )
    self.GetIamPolicy = channel.unary_unary(
        '/google.devtools.sourcerepo.v1.SourceRepo/GetIamPolicy',
        request_serializer=google_dot_iam_dot_v1_dot_iam__policy__pb2.GetIamPolicyRequest.SerializeToString,
        response_deserializer=google_dot_iam_dot_v1_dot_policy__pb2.Policy.FromString,
        )
    self.TestIamPermissions = channel.unary_unary(
        '/google.devtools.sourcerepo.v1.SourceRepo/TestIamPermissions',
        request_serializer=google_dot_iam_dot_v1_dot_iam__policy__pb2.TestIamPermissionsRequest.SerializeToString,
        response_deserializer=google_dot_iam_dot_v1_dot_iam__policy__pb2.TestIamPermissionsResponse.FromString,
        )


class SourceRepoServicer(object):
  """The Source Repo API service.
  """

  def ListRepos(self, request, context):
    """Returns all repos belonging to a project. The sizes of the repos are
    not set by ListRepos.  To get the size of a repo, use GetRepo.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetRepo(self, request, context):
    """Returns information about a repo.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def CreateRepo(self, request, context):
    """Creates a repo in the given project with the given name.

    If the named repository already exists, `CreateRepo` returns
    `ALREADY_EXISTS`.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def DeleteRepo(self, request, context):
    """Deletes a repo.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def SetIamPolicy(self, request, context):
    """Sets the access control policy on the specified resource. Replaces any
    existing policy.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetIamPolicy(self, request, context):
    """Gets the access control policy for a resource.
    Returns an empty policy if the resource exists and does not have a policy
    set.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def TestIamPermissions(self, request, context):
    """Returns permissions that a caller has on the specified resource.
    If the resource does not exist, this will return an empty set of
    permissions, not a NOT_FOUND error.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_SourceRepoServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'ListRepos': grpc.unary_unary_rpc_method_handler(
          servicer.ListRepos,
          request_deserializer=google_dot_devtools_dot_sourcerepo_dot_v1_dot_sourcerepo__pb2.ListReposRequest.FromString,
          response_serializer=google_dot_devtools_dot_sourcerepo_dot_v1_dot_sourcerepo__pb2.ListReposResponse.SerializeToString,
      ),
      'GetRepo': grpc.unary_unary_rpc_method_handler(
          servicer.GetRepo,
          request_deserializer=google_dot_devtools_dot_sourcerepo_dot_v1_dot_sourcerepo__pb2.GetRepoRequest.FromString,
          response_serializer=google_dot_devtools_dot_sourcerepo_dot_v1_dot_sourcerepo__pb2.Repo.SerializeToString,
      ),
      'CreateRepo': grpc.unary_unary_rpc_method_handler(
          servicer.CreateRepo,
          request_deserializer=google_dot_devtools_dot_sourcerepo_dot_v1_dot_sourcerepo__pb2.CreateRepoRequest.FromString,
          response_serializer=google_dot_devtools_dot_sourcerepo_dot_v1_dot_sourcerepo__pb2.Repo.SerializeToString,
      ),
      'DeleteRepo': grpc.unary_unary_rpc_method_handler(
          servicer.DeleteRepo,
          request_deserializer=google_dot_devtools_dot_sourcerepo_dot_v1_dot_sourcerepo__pb2.DeleteRepoRequest.FromString,
          response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
      ),
      'SetIamPolicy': grpc.unary_unary_rpc_method_handler(
          servicer.SetIamPolicy,
          request_deserializer=google_dot_iam_dot_v1_dot_iam__policy__pb2.SetIamPolicyRequest.FromString,
          response_serializer=google_dot_iam_dot_v1_dot_policy__pb2.Policy.SerializeToString,
      ),
      'GetIamPolicy': grpc.unary_unary_rpc_method_handler(
          servicer.GetIamPolicy,
          request_deserializer=google_dot_iam_dot_v1_dot_iam__policy__pb2.GetIamPolicyRequest.FromString,
          response_serializer=google_dot_iam_dot_v1_dot_policy__pb2.Policy.SerializeToString,
      ),
      'TestIamPermissions': grpc.unary_unary_rpc_method_handler(
          servicer.TestIamPermissions,
          request_deserializer=google_dot_iam_dot_v1_dot_iam__policy__pb2.TestIamPermissionsRequest.FromString,
          response_serializer=google_dot_iam_dot_v1_dot_iam__policy__pb2.TestIamPermissionsResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'google.devtools.sourcerepo.v1.SourceRepo', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
