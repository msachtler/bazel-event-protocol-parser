# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from google.genomics.v1 import annotations_pb2 as google_dot_genomics_dot_v1_dot_annotations__pb2
from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2


class AnnotationServiceV1Stub(object):
  """This service provides storage and positional retrieval of genomic
  reference annotations, including variant annotations.
  """

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.CreateAnnotationSet = channel.unary_unary(
        '/google.genomics.v1.AnnotationServiceV1/CreateAnnotationSet',
        request_serializer=google_dot_genomics_dot_v1_dot_annotations__pb2.CreateAnnotationSetRequest.SerializeToString,
        response_deserializer=google_dot_genomics_dot_v1_dot_annotations__pb2.AnnotationSet.FromString,
        )
    self.GetAnnotationSet = channel.unary_unary(
        '/google.genomics.v1.AnnotationServiceV1/GetAnnotationSet',
        request_serializer=google_dot_genomics_dot_v1_dot_annotations__pb2.GetAnnotationSetRequest.SerializeToString,
        response_deserializer=google_dot_genomics_dot_v1_dot_annotations__pb2.AnnotationSet.FromString,
        )
    self.UpdateAnnotationSet = channel.unary_unary(
        '/google.genomics.v1.AnnotationServiceV1/UpdateAnnotationSet',
        request_serializer=google_dot_genomics_dot_v1_dot_annotations__pb2.UpdateAnnotationSetRequest.SerializeToString,
        response_deserializer=google_dot_genomics_dot_v1_dot_annotations__pb2.AnnotationSet.FromString,
        )
    self.DeleteAnnotationSet = channel.unary_unary(
        '/google.genomics.v1.AnnotationServiceV1/DeleteAnnotationSet',
        request_serializer=google_dot_genomics_dot_v1_dot_annotations__pb2.DeleteAnnotationSetRequest.SerializeToString,
        response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
        )
    self.SearchAnnotationSets = channel.unary_unary(
        '/google.genomics.v1.AnnotationServiceV1/SearchAnnotationSets',
        request_serializer=google_dot_genomics_dot_v1_dot_annotations__pb2.SearchAnnotationSetsRequest.SerializeToString,
        response_deserializer=google_dot_genomics_dot_v1_dot_annotations__pb2.SearchAnnotationSetsResponse.FromString,
        )
    self.CreateAnnotation = channel.unary_unary(
        '/google.genomics.v1.AnnotationServiceV1/CreateAnnotation',
        request_serializer=google_dot_genomics_dot_v1_dot_annotations__pb2.CreateAnnotationRequest.SerializeToString,
        response_deserializer=google_dot_genomics_dot_v1_dot_annotations__pb2.Annotation.FromString,
        )
    self.BatchCreateAnnotations = channel.unary_unary(
        '/google.genomics.v1.AnnotationServiceV1/BatchCreateAnnotations',
        request_serializer=google_dot_genomics_dot_v1_dot_annotations__pb2.BatchCreateAnnotationsRequest.SerializeToString,
        response_deserializer=google_dot_genomics_dot_v1_dot_annotations__pb2.BatchCreateAnnotationsResponse.FromString,
        )
    self.GetAnnotation = channel.unary_unary(
        '/google.genomics.v1.AnnotationServiceV1/GetAnnotation',
        request_serializer=google_dot_genomics_dot_v1_dot_annotations__pb2.GetAnnotationRequest.SerializeToString,
        response_deserializer=google_dot_genomics_dot_v1_dot_annotations__pb2.Annotation.FromString,
        )
    self.UpdateAnnotation = channel.unary_unary(
        '/google.genomics.v1.AnnotationServiceV1/UpdateAnnotation',
        request_serializer=google_dot_genomics_dot_v1_dot_annotations__pb2.UpdateAnnotationRequest.SerializeToString,
        response_deserializer=google_dot_genomics_dot_v1_dot_annotations__pb2.Annotation.FromString,
        )
    self.DeleteAnnotation = channel.unary_unary(
        '/google.genomics.v1.AnnotationServiceV1/DeleteAnnotation',
        request_serializer=google_dot_genomics_dot_v1_dot_annotations__pb2.DeleteAnnotationRequest.SerializeToString,
        response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
        )
    self.SearchAnnotations = channel.unary_unary(
        '/google.genomics.v1.AnnotationServiceV1/SearchAnnotations',
        request_serializer=google_dot_genomics_dot_v1_dot_annotations__pb2.SearchAnnotationsRequest.SerializeToString,
        response_deserializer=google_dot_genomics_dot_v1_dot_annotations__pb2.SearchAnnotationsResponse.FromString,
        )


class AnnotationServiceV1Servicer(object):
  """This service provides storage and positional retrieval of genomic
  reference annotations, including variant annotations.
  """

  def CreateAnnotationSet(self, request, context):
    """Creates a new annotation set. Caller must have WRITE permission for the
    associated dataset.

    The following fields are required:

    * [datasetId][google.genomics.v1.AnnotationSet.dataset_id]
    * [referenceSetId][google.genomics.v1.AnnotationSet.reference_set_id]

    All other fields may be optionally specified, unless documented as being
    server-generated (for example, the `id` field).
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetAnnotationSet(self, request, context):
    """Gets an annotation set. Caller must have READ permission for
    the associated dataset.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def UpdateAnnotationSet(self, request, context):
    """Updates an annotation set. The update must respect all mutability
    restrictions and other invariants described on the annotation set resource.
    Caller must have WRITE permission for the associated dataset.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def DeleteAnnotationSet(self, request, context):
    """Deletes an annotation set. Caller must have WRITE permission
    for the associated annotation set.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def SearchAnnotationSets(self, request, context):
    """Searches for annotation sets that match the given criteria. Annotation sets
    are returned in an unspecified order. This order is consistent, such that
    two queries for the same content (regardless of page size) yield annotation
    sets in the same order across their respective streams of paginated
    responses. Caller must have READ permission for the queried datasets.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def CreateAnnotation(self, request, context):
    """Creates a new annotation. Caller must have WRITE permission
    for the associated annotation set.

    The following fields are required:

    * [annotationSetId][google.genomics.v1.Annotation.annotation_set_id]
    * [referenceName][google.genomics.v1.Annotation.reference_name] or
    [referenceId][google.genomics.v1.Annotation.reference_id]

    ### Transcripts

    For annotations of type TRANSCRIPT, the following fields of
    [transcript][google.genomics.v1.Annotation.transcript] must be provided:

    * [exons.start][google.genomics.v1.Transcript.Exon.start]
    * [exons.end][google.genomics.v1.Transcript.Exon.end]

    All other fields may be optionally specified, unless documented as being
    server-generated (for example, the `id` field). The annotated
    range must be no longer than 100Mbp (mega base pairs). See the
    [Annotation resource][google.genomics.v1.Annotation]
    for additional restrictions on each field.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def BatchCreateAnnotations(self, request, context):
    """Creates one or more new annotations atomically. All annotations must
    belong to the same annotation set. Caller must have WRITE
    permission for this annotation set. For optimal performance, batch
    positionally adjacent annotations together.

    If the request has a systemic issue, such as an attempt to write to
    an inaccessible annotation set, the entire RPC will fail accordingly. For
    lesser data issues, when possible an error will be isolated to the
    corresponding batch entry in the response; the remaining well formed
    annotations will be created normally.

    For details on the requirements for each individual annotation resource,
    see
    [CreateAnnotation][google.genomics.v1.AnnotationServiceV1.CreateAnnotation].
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetAnnotation(self, request, context):
    """Gets an annotation. Caller must have READ permission
    for the associated annotation set.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def UpdateAnnotation(self, request, context):
    """Updates an annotation. Caller must have
    WRITE permission for the associated dataset.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def DeleteAnnotation(self, request, context):
    """Deletes an annotation. Caller must have WRITE permission for
    the associated annotation set.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def SearchAnnotations(self, request, context):
    """Searches for annotations that match the given criteria. Results are
    ordered by genomic coordinate (by reference sequence, then position).
    Annotations with equivalent genomic coordinates are returned in an
    unspecified order. This order is consistent, such that two queries for the
    same content (regardless of page size) yield annotations in the same order
    across their respective streams of paginated responses. Caller must have
    READ permission for the queried annotation sets.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_AnnotationServiceV1Servicer_to_server(servicer, server):
  rpc_method_handlers = {
      'CreateAnnotationSet': grpc.unary_unary_rpc_method_handler(
          servicer.CreateAnnotationSet,
          request_deserializer=google_dot_genomics_dot_v1_dot_annotations__pb2.CreateAnnotationSetRequest.FromString,
          response_serializer=google_dot_genomics_dot_v1_dot_annotations__pb2.AnnotationSet.SerializeToString,
      ),
      'GetAnnotationSet': grpc.unary_unary_rpc_method_handler(
          servicer.GetAnnotationSet,
          request_deserializer=google_dot_genomics_dot_v1_dot_annotations__pb2.GetAnnotationSetRequest.FromString,
          response_serializer=google_dot_genomics_dot_v1_dot_annotations__pb2.AnnotationSet.SerializeToString,
      ),
      'UpdateAnnotationSet': grpc.unary_unary_rpc_method_handler(
          servicer.UpdateAnnotationSet,
          request_deserializer=google_dot_genomics_dot_v1_dot_annotations__pb2.UpdateAnnotationSetRequest.FromString,
          response_serializer=google_dot_genomics_dot_v1_dot_annotations__pb2.AnnotationSet.SerializeToString,
      ),
      'DeleteAnnotationSet': grpc.unary_unary_rpc_method_handler(
          servicer.DeleteAnnotationSet,
          request_deserializer=google_dot_genomics_dot_v1_dot_annotations__pb2.DeleteAnnotationSetRequest.FromString,
          response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
      ),
      'SearchAnnotationSets': grpc.unary_unary_rpc_method_handler(
          servicer.SearchAnnotationSets,
          request_deserializer=google_dot_genomics_dot_v1_dot_annotations__pb2.SearchAnnotationSetsRequest.FromString,
          response_serializer=google_dot_genomics_dot_v1_dot_annotations__pb2.SearchAnnotationSetsResponse.SerializeToString,
      ),
      'CreateAnnotation': grpc.unary_unary_rpc_method_handler(
          servicer.CreateAnnotation,
          request_deserializer=google_dot_genomics_dot_v1_dot_annotations__pb2.CreateAnnotationRequest.FromString,
          response_serializer=google_dot_genomics_dot_v1_dot_annotations__pb2.Annotation.SerializeToString,
      ),
      'BatchCreateAnnotations': grpc.unary_unary_rpc_method_handler(
          servicer.BatchCreateAnnotations,
          request_deserializer=google_dot_genomics_dot_v1_dot_annotations__pb2.BatchCreateAnnotationsRequest.FromString,
          response_serializer=google_dot_genomics_dot_v1_dot_annotations__pb2.BatchCreateAnnotationsResponse.SerializeToString,
      ),
      'GetAnnotation': grpc.unary_unary_rpc_method_handler(
          servicer.GetAnnotation,
          request_deserializer=google_dot_genomics_dot_v1_dot_annotations__pb2.GetAnnotationRequest.FromString,
          response_serializer=google_dot_genomics_dot_v1_dot_annotations__pb2.Annotation.SerializeToString,
      ),
      'UpdateAnnotation': grpc.unary_unary_rpc_method_handler(
          servicer.UpdateAnnotation,
          request_deserializer=google_dot_genomics_dot_v1_dot_annotations__pb2.UpdateAnnotationRequest.FromString,
          response_serializer=google_dot_genomics_dot_v1_dot_annotations__pb2.Annotation.SerializeToString,
      ),
      'DeleteAnnotation': grpc.unary_unary_rpc_method_handler(
          servicer.DeleteAnnotation,
          request_deserializer=google_dot_genomics_dot_v1_dot_annotations__pb2.DeleteAnnotationRequest.FromString,
          response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
      ),
      'SearchAnnotations': grpc.unary_unary_rpc_method_handler(
          servicer.SearchAnnotations,
          request_deserializer=google_dot_genomics_dot_v1_dot_annotations__pb2.SearchAnnotationsRequest.FromString,
          response_serializer=google_dot_genomics_dot_v1_dot_annotations__pb2.SearchAnnotationsResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'google.genomics.v1.AnnotationServiceV1', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
