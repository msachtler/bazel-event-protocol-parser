# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from google.genomics.v1 import readgroupset_pb2 as google_dot_genomics_dot_v1_dot_readgroupset__pb2
from google.genomics.v1 import reads_pb2 as google_dot_genomics_dot_v1_dot_reads__pb2
from google.longrunning import operations_pb2 as google_dot_longrunning_dot_operations__pb2
from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2


class StreamingReadServiceStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.StreamReads = channel.unary_stream(
        '/google.genomics.v1.StreamingReadService/StreamReads',
        request_serializer=google_dot_genomics_dot_v1_dot_reads__pb2.StreamReadsRequest.SerializeToString,
        response_deserializer=google_dot_genomics_dot_v1_dot_reads__pb2.StreamReadsResponse.FromString,
        )


class StreamingReadServiceServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def StreamReads(self, request, context):
    """Returns a stream of all the reads matching the search request, ordered
    by reference name, position, and ID.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_StreamingReadServiceServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'StreamReads': grpc.unary_stream_rpc_method_handler(
          servicer.StreamReads,
          request_deserializer=google_dot_genomics_dot_v1_dot_reads__pb2.StreamReadsRequest.FromString,
          response_serializer=google_dot_genomics_dot_v1_dot_reads__pb2.StreamReadsResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'google.genomics.v1.StreamingReadService', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))


class ReadServiceV1Stub(object):
  """The Readstore. A data store for DNA sequencing Reads.
  """

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.ImportReadGroupSets = channel.unary_unary(
        '/google.genomics.v1.ReadServiceV1/ImportReadGroupSets',
        request_serializer=google_dot_genomics_dot_v1_dot_reads__pb2.ImportReadGroupSetsRequest.SerializeToString,
        response_deserializer=google_dot_longrunning_dot_operations__pb2.Operation.FromString,
        )
    self.ExportReadGroupSet = channel.unary_unary(
        '/google.genomics.v1.ReadServiceV1/ExportReadGroupSet',
        request_serializer=google_dot_genomics_dot_v1_dot_reads__pb2.ExportReadGroupSetRequest.SerializeToString,
        response_deserializer=google_dot_longrunning_dot_operations__pb2.Operation.FromString,
        )
    self.SearchReadGroupSets = channel.unary_unary(
        '/google.genomics.v1.ReadServiceV1/SearchReadGroupSets',
        request_serializer=google_dot_genomics_dot_v1_dot_reads__pb2.SearchReadGroupSetsRequest.SerializeToString,
        response_deserializer=google_dot_genomics_dot_v1_dot_reads__pb2.SearchReadGroupSetsResponse.FromString,
        )
    self.UpdateReadGroupSet = channel.unary_unary(
        '/google.genomics.v1.ReadServiceV1/UpdateReadGroupSet',
        request_serializer=google_dot_genomics_dot_v1_dot_reads__pb2.UpdateReadGroupSetRequest.SerializeToString,
        response_deserializer=google_dot_genomics_dot_v1_dot_readgroupset__pb2.ReadGroupSet.FromString,
        )
    self.DeleteReadGroupSet = channel.unary_unary(
        '/google.genomics.v1.ReadServiceV1/DeleteReadGroupSet',
        request_serializer=google_dot_genomics_dot_v1_dot_reads__pb2.DeleteReadGroupSetRequest.SerializeToString,
        response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
        )
    self.GetReadGroupSet = channel.unary_unary(
        '/google.genomics.v1.ReadServiceV1/GetReadGroupSet',
        request_serializer=google_dot_genomics_dot_v1_dot_reads__pb2.GetReadGroupSetRequest.SerializeToString,
        response_deserializer=google_dot_genomics_dot_v1_dot_readgroupset__pb2.ReadGroupSet.FromString,
        )
    self.ListCoverageBuckets = channel.unary_unary(
        '/google.genomics.v1.ReadServiceV1/ListCoverageBuckets',
        request_serializer=google_dot_genomics_dot_v1_dot_reads__pb2.ListCoverageBucketsRequest.SerializeToString,
        response_deserializer=google_dot_genomics_dot_v1_dot_reads__pb2.ListCoverageBucketsResponse.FromString,
        )
    self.SearchReads = channel.unary_unary(
        '/google.genomics.v1.ReadServiceV1/SearchReads',
        request_serializer=google_dot_genomics_dot_v1_dot_reads__pb2.SearchReadsRequest.SerializeToString,
        response_deserializer=google_dot_genomics_dot_v1_dot_reads__pb2.SearchReadsResponse.FromString,
        )


class ReadServiceV1Servicer(object):
  """The Readstore. A data store for DNA sequencing Reads.
  """

  def ImportReadGroupSets(self, request, context):
    """Creates read group sets by asynchronously importing the provided
    information.

    For the definitions of read group sets and other genomics resources, see
    [Fundamentals of Google
    Genomics](https://cloud.google.com/genomics/fundamentals-of-google-genomics)

    The caller must have WRITE permissions to the dataset.

    ## Notes on [BAM](https://samtools.github.io/hts-specs/SAMv1.pdf) import

    - Tags will be converted to strings - tag types are not preserved
    - Comments (`@CO`) in the input file header will not be preserved
    - Original header order of references (`@SQ`) will not be preserved
    - Any reverse stranded unmapped reads will be reverse complemented, and
    their qualities (also the "BQ" and "OQ" tags, if any) will be reversed
    - Unmapped reads will be stripped of positional information (reference name
    and position)
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def ExportReadGroupSet(self, request, context):
    """Exports a read group set to a BAM file in Google Cloud Storage.

    For the definitions of read group sets and other genomics resources, see
    [Fundamentals of Google
    Genomics](https://cloud.google.com/genomics/fundamentals-of-google-genomics)

    Note that currently there may be some differences between exported BAM
    files and the original BAM file at the time of import. See
    [ImportReadGroupSets][google.genomics.v1.ReadServiceV1.ImportReadGroupSets]
    for caveats.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def SearchReadGroupSets(self, request, context):
    """Searches for read group sets matching the criteria.

    For the definitions of read group sets and other genomics resources, see
    [Fundamentals of Google
    Genomics](https://cloud.google.com/genomics/fundamentals-of-google-genomics)

    Implements
    [GlobalAllianceApi.searchReadGroupSets](https://github.com/ga4gh/schemas/blob/v0.5.1/src/main/resources/avro/readmethods.avdl#L135).
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def UpdateReadGroupSet(self, request, context):
    """Updates a read group set.

    For the definitions of read group sets and other genomics resources, see
    [Fundamentals of Google
    Genomics](https://cloud.google.com/genomics/fundamentals-of-google-genomics)

    This method supports patch semantics.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def DeleteReadGroupSet(self, request, context):
    """Deletes a read group set.

    For the definitions of read group sets and other genomics resources, see
    [Fundamentals of Google
    Genomics](https://cloud.google.com/genomics/fundamentals-of-google-genomics)
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetReadGroupSet(self, request, context):
    """Gets a read group set by ID.

    For the definitions of read group sets and other genomics resources, see
    [Fundamentals of Google
    Genomics](https://cloud.google.com/genomics/fundamentals-of-google-genomics)
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def ListCoverageBuckets(self, request, context):
    """Lists fixed width coverage buckets for a read group set, each of which
    correspond to a range of a reference sequence. Each bucket summarizes
    coverage information across its corresponding genomic range.

    For the definitions of read group sets and other genomics resources, see
    [Fundamentals of Google
    Genomics](https://cloud.google.com/genomics/fundamentals-of-google-genomics)

    Coverage is defined as the number of reads which are aligned to a given
    base in the reference sequence. Coverage buckets are available at several
    precomputed bucket widths, enabling retrieval of various coverage 'zoom
    levels'. The caller must have READ permissions for the target read group
    set.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def SearchReads(self, request, context):
    """Gets a list of reads for one or more read group sets.

    For the definitions of read group sets and other genomics resources, see
    [Fundamentals of Google
    Genomics](https://cloud.google.com/genomics/fundamentals-of-google-genomics)

    Reads search operates over a genomic coordinate space of reference sequence
    & position defined over the reference sequences to which the requested
    read group sets are aligned.

    If a target positional range is specified, search returns all reads whose
    alignment to the reference genome overlap the range. A query which
    specifies only read group set IDs yields all reads in those read group
    sets, including unmapped reads.

    All reads returned (including reads on subsequent pages) are ordered by
    genomic coordinate (by reference sequence, then position). Reads with
    equivalent genomic coordinates are returned in an unspecified order. This
    order is consistent, such that two queries for the same content (regardless
    of page size) yield reads in the same order across their respective streams
    of paginated responses.

    Implements
    [GlobalAllianceApi.searchReads](https://github.com/ga4gh/schemas/blob/v0.5.1/src/main/resources/avro/readmethods.avdl#L85).
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_ReadServiceV1Servicer_to_server(servicer, server):
  rpc_method_handlers = {
      'ImportReadGroupSets': grpc.unary_unary_rpc_method_handler(
          servicer.ImportReadGroupSets,
          request_deserializer=google_dot_genomics_dot_v1_dot_reads__pb2.ImportReadGroupSetsRequest.FromString,
          response_serializer=google_dot_longrunning_dot_operations__pb2.Operation.SerializeToString,
      ),
      'ExportReadGroupSet': grpc.unary_unary_rpc_method_handler(
          servicer.ExportReadGroupSet,
          request_deserializer=google_dot_genomics_dot_v1_dot_reads__pb2.ExportReadGroupSetRequest.FromString,
          response_serializer=google_dot_longrunning_dot_operations__pb2.Operation.SerializeToString,
      ),
      'SearchReadGroupSets': grpc.unary_unary_rpc_method_handler(
          servicer.SearchReadGroupSets,
          request_deserializer=google_dot_genomics_dot_v1_dot_reads__pb2.SearchReadGroupSetsRequest.FromString,
          response_serializer=google_dot_genomics_dot_v1_dot_reads__pb2.SearchReadGroupSetsResponse.SerializeToString,
      ),
      'UpdateReadGroupSet': grpc.unary_unary_rpc_method_handler(
          servicer.UpdateReadGroupSet,
          request_deserializer=google_dot_genomics_dot_v1_dot_reads__pb2.UpdateReadGroupSetRequest.FromString,
          response_serializer=google_dot_genomics_dot_v1_dot_readgroupset__pb2.ReadGroupSet.SerializeToString,
      ),
      'DeleteReadGroupSet': grpc.unary_unary_rpc_method_handler(
          servicer.DeleteReadGroupSet,
          request_deserializer=google_dot_genomics_dot_v1_dot_reads__pb2.DeleteReadGroupSetRequest.FromString,
          response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
      ),
      'GetReadGroupSet': grpc.unary_unary_rpc_method_handler(
          servicer.GetReadGroupSet,
          request_deserializer=google_dot_genomics_dot_v1_dot_reads__pb2.GetReadGroupSetRequest.FromString,
          response_serializer=google_dot_genomics_dot_v1_dot_readgroupset__pb2.ReadGroupSet.SerializeToString,
      ),
      'ListCoverageBuckets': grpc.unary_unary_rpc_method_handler(
          servicer.ListCoverageBuckets,
          request_deserializer=google_dot_genomics_dot_v1_dot_reads__pb2.ListCoverageBucketsRequest.FromString,
          response_serializer=google_dot_genomics_dot_v1_dot_reads__pb2.ListCoverageBucketsResponse.SerializeToString,
      ),
      'SearchReads': grpc.unary_unary_rpc_method_handler(
          servicer.SearchReads,
          request_deserializer=google_dot_genomics_dot_v1_dot_reads__pb2.SearchReadsRequest.FromString,
          response_serializer=google_dot_genomics_dot_v1_dot_reads__pb2.SearchReadsResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'google.genomics.v1.ReadServiceV1', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
