// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/spanner/admin/instance/v1/spanner_instance_admin.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "google/spanner/admin/instance/v1/spanner_instance_admin.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace google {
namespace spanner {
namespace admin {
namespace instance {
namespace v1 {
class InstanceConfigDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<InstanceConfig> {
} _InstanceConfig_default_instance_;
class Instance_LabelsEntryDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Instance::Instance_LabelsEntry> {
} _Instance_LabelsEntry_default_instance_;
class InstanceDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Instance> {
} _Instance_default_instance_;
class ListInstanceConfigsRequestDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ListInstanceConfigsRequest> {
} _ListInstanceConfigsRequest_default_instance_;
class ListInstanceConfigsResponseDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ListInstanceConfigsResponse> {
} _ListInstanceConfigsResponse_default_instance_;
class GetInstanceConfigRequestDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<GetInstanceConfigRequest> {
} _GetInstanceConfigRequest_default_instance_;
class GetInstanceRequestDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<GetInstanceRequest> {
} _GetInstanceRequest_default_instance_;
class CreateInstanceRequestDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CreateInstanceRequest> {
} _CreateInstanceRequest_default_instance_;
class ListInstancesRequestDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ListInstancesRequest> {
} _ListInstancesRequest_default_instance_;
class ListInstancesResponseDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ListInstancesResponse> {
} _ListInstancesResponse_default_instance_;
class UpdateInstanceRequestDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<UpdateInstanceRequest> {
} _UpdateInstanceRequest_default_instance_;
class DeleteInstanceRequestDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<DeleteInstanceRequest> {
} _DeleteInstanceRequest_default_instance_;
class CreateInstanceMetadataDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CreateInstanceMetadata> {
} _CreateInstanceMetadata_default_instance_;
class UpdateInstanceMetadataDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<UpdateInstanceMetadata> {
} _UpdateInstanceMetadata_default_instance_;

namespace protobuf_google_2fspanner_2fadmin_2finstance_2fv1_2fspanner_5finstance_5fadmin_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[14];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] = {
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InstanceConfig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InstanceConfig, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InstanceConfig, display_name_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Instance, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Instance, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Instance, config_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Instance, display_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Instance, node_count_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Instance, state_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Instance, labels_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListInstanceConfigsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListInstanceConfigsRequest, parent_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListInstanceConfigsRequest, page_size_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListInstanceConfigsRequest, page_token_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListInstanceConfigsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListInstanceConfigsResponse, instance_configs_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListInstanceConfigsResponse, next_page_token_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetInstanceConfigRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetInstanceConfigRequest, name_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetInstanceRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetInstanceRequest, name_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateInstanceRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateInstanceRequest, parent_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateInstanceRequest, instance_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateInstanceRequest, instance_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListInstancesRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListInstancesRequest, parent_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListInstancesRequest, page_size_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListInstancesRequest, page_token_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListInstancesRequest, filter_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListInstancesResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListInstancesResponse, instances_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListInstancesResponse, next_page_token_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateInstanceRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateInstanceRequest, instance_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateInstanceRequest, field_mask_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteInstanceRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteInstanceRequest, name_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateInstanceMetadata, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateInstanceMetadata, instance_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateInstanceMetadata, start_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateInstanceMetadata, cancel_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateInstanceMetadata, end_time_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateInstanceMetadata, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateInstanceMetadata, instance_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateInstanceMetadata, start_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateInstanceMetadata, cancel_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateInstanceMetadata, end_time_),
};

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, -1, sizeof(InstanceConfig)},
  { 7, -1, sizeof(Instance)},
  { 18, -1, sizeof(ListInstanceConfigsRequest)},
  { 26, -1, sizeof(ListInstanceConfigsResponse)},
  { 33, -1, sizeof(GetInstanceConfigRequest)},
  { 39, -1, sizeof(GetInstanceRequest)},
  { 45, -1, sizeof(CreateInstanceRequest)},
  { 53, -1, sizeof(ListInstancesRequest)},
  { 62, -1, sizeof(ListInstancesResponse)},
  { 69, -1, sizeof(UpdateInstanceRequest)},
  { 76, -1, sizeof(DeleteInstanceRequest)},
  { 82, -1, sizeof(CreateInstanceMetadata)},
  { 91, -1, sizeof(UpdateInstanceMetadata)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_InstanceConfig_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Instance_LabelsEntry_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Instance_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ListInstanceConfigsRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ListInstanceConfigsResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GetInstanceConfigRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GetInstanceRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CreateInstanceRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ListInstancesRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ListInstancesResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_UpdateInstanceRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_DeleteInstanceRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CreateInstanceMetadata_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_UpdateInstanceMetadata_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "google/spanner/admin/instance/v1/spanner_instance_admin.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
file_level_metadata[1].reflection = Instance::Instance_LabelsEntry::CreateReflection(file_level_metadata[1].descriptor, _Instance_LabelsEntry_default_instance_.get_mutable());
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 14);
}

}  // namespace

void TableStruct::Shutdown() {
  _InstanceConfig_default_instance_.Shutdown();
  delete file_level_metadata[0].reflection;
  _Instance_default_instance_.Shutdown();
  delete file_level_metadata[2].reflection;
  _ListInstanceConfigsRequest_default_instance_.Shutdown();
  delete file_level_metadata[3].reflection;
  _ListInstanceConfigsResponse_default_instance_.Shutdown();
  delete file_level_metadata[4].reflection;
  _GetInstanceConfigRequest_default_instance_.Shutdown();
  delete file_level_metadata[5].reflection;
  _GetInstanceRequest_default_instance_.Shutdown();
  delete file_level_metadata[6].reflection;
  _CreateInstanceRequest_default_instance_.Shutdown();
  delete file_level_metadata[7].reflection;
  _ListInstancesRequest_default_instance_.Shutdown();
  delete file_level_metadata[8].reflection;
  _ListInstancesResponse_default_instance_.Shutdown();
  delete file_level_metadata[9].reflection;
  _UpdateInstanceRequest_default_instance_.Shutdown();
  delete file_level_metadata[10].reflection;
  _DeleteInstanceRequest_default_instance_.Shutdown();
  delete file_level_metadata[11].reflection;
  _CreateInstanceMetadata_default_instance_.Shutdown();
  delete file_level_metadata[12].reflection;
  _UpdateInstanceMetadata_default_instance_.Shutdown();
  delete file_level_metadata[13].reflection;
  delete file_level_metadata[1].reflection;
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  ::google::api::protobuf_google_2fapi_2fannotations_2eproto::InitDefaults();
  ::google::api::protobuf_google_2fapi_2fauth_2eproto::InitDefaults();
  ::google::iam::v1::protobuf_google_2fiam_2fv1_2fiam_5fpolicy_2eproto::InitDefaults();
  ::google::iam::v1::protobuf_google_2fiam_2fv1_2fpolicy_2eproto::InitDefaults();
  ::google::longrunning::protobuf_google_2flongrunning_2foperations_2eproto::InitDefaults();
  ::google::protobuf::protobuf_google_2fprotobuf_2fempty_2eproto::InitDefaults();
  ::google::protobuf::protobuf_google_2fprotobuf_2ffield_5fmask_2eproto::InitDefaults();
  ::google::protobuf::protobuf_google_2fprotobuf_2ftimestamp_2eproto::InitDefaults();
  _InstanceConfig_default_instance_.DefaultConstruct();
  _Instance_LabelsEntry_default_instance_.DefaultConstruct();
  _Instance_default_instance_.DefaultConstruct();
  _ListInstanceConfigsRequest_default_instance_.DefaultConstruct();
  _ListInstanceConfigsResponse_default_instance_.DefaultConstruct();
  _GetInstanceConfigRequest_default_instance_.DefaultConstruct();
  _GetInstanceRequest_default_instance_.DefaultConstruct();
  _CreateInstanceRequest_default_instance_.DefaultConstruct();
  _ListInstancesRequest_default_instance_.DefaultConstruct();
  _ListInstancesResponse_default_instance_.DefaultConstruct();
  _UpdateInstanceRequest_default_instance_.DefaultConstruct();
  _DeleteInstanceRequest_default_instance_.DefaultConstruct();
  _CreateInstanceMetadata_default_instance_.DefaultConstruct();
  _UpdateInstanceMetadata_default_instance_.DefaultConstruct();
  _Instance_LabelsEntry_default_instance_.get_mutable()->set_default_instance(_Instance_LabelsEntry_default_instance_.get_mutable());
  _Instance_LabelsEntry_default_instance_.get_mutable()->InitAsDefaultInstance();
  _CreateInstanceRequest_default_instance_.get_mutable()->instance_ = const_cast< ::google::spanner::admin::instance::v1::Instance*>(
      ::google::spanner::admin::instance::v1::Instance::internal_default_instance());
  _UpdateInstanceRequest_default_instance_.get_mutable()->instance_ = const_cast< ::google::spanner::admin::instance::v1::Instance*>(
      ::google::spanner::admin::instance::v1::Instance::internal_default_instance());
  _UpdateInstanceRequest_default_instance_.get_mutable()->field_mask_ = const_cast< ::google::protobuf::FieldMask*>(
      ::google::protobuf::FieldMask::internal_default_instance());
  _CreateInstanceMetadata_default_instance_.get_mutable()->instance_ = const_cast< ::google::spanner::admin::instance::v1::Instance*>(
      ::google::spanner::admin::instance::v1::Instance::internal_default_instance());
  _CreateInstanceMetadata_default_instance_.get_mutable()->start_time_ = const_cast< ::google::protobuf::Timestamp*>(
      ::google::protobuf::Timestamp::internal_default_instance());
  _CreateInstanceMetadata_default_instance_.get_mutable()->cancel_time_ = const_cast< ::google::protobuf::Timestamp*>(
      ::google::protobuf::Timestamp::internal_default_instance());
  _CreateInstanceMetadata_default_instance_.get_mutable()->end_time_ = const_cast< ::google::protobuf::Timestamp*>(
      ::google::protobuf::Timestamp::internal_default_instance());
  _UpdateInstanceMetadata_default_instance_.get_mutable()->instance_ = const_cast< ::google::spanner::admin::instance::v1::Instance*>(
      ::google::spanner::admin::instance::v1::Instance::internal_default_instance());
  _UpdateInstanceMetadata_default_instance_.get_mutable()->start_time_ = const_cast< ::google::protobuf::Timestamp*>(
      ::google::protobuf::Timestamp::internal_default_instance());
  _UpdateInstanceMetadata_default_instance_.get_mutable()->cancel_time_ = const_cast< ::google::protobuf::Timestamp*>(
      ::google::protobuf::Timestamp::internal_default_instance());
  _UpdateInstanceMetadata_default_instance_.get_mutable()->end_time_ = const_cast< ::google::protobuf::Timestamp*>(
      ::google::protobuf::Timestamp::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n=google/spanner/admin/instance/v1/spann"
      "er_instance_admin.proto\022 google.spanner."
      "admin.instance.v1\032\034google/api/annotation"
      "s.proto\032\025google/api/auth.proto\032\036google/i"
      "am/v1/iam_policy.proto\032\032google/iam/v1/po"
      "licy.proto\032#google/longrunning/operation"
      "s.proto\032\033google/protobuf/empty.proto\032 go"
      "ogle/protobuf/field_mask.proto\032\037google/p"
      "rotobuf/timestamp.proto\"4\n\016InstanceConfi"
      "g\022\014\n\004name\030\001 \001(\t\022\024\n\014display_name\030\002 \001(\t\"\303\002"
      "\n\010Instance\022\014\n\004name\030\001 \001(\t\022\016\n\006config\030\002 \001(\t"
      "\022\024\n\014display_name\030\003 \001(\t\022\022\n\nnode_count\030\005 \001"
      "(\005\022\?\n\005state\030\006 \001(\01620.google.spanner.admin"
      ".instance.v1.Instance.State\022F\n\006labels\030\007 "
      "\003(\01326.google.spanner.admin.instance.v1.I"
      "nstance.LabelsEntry\032-\n\013LabelsEntry\022\013\n\003ke"
      "y\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\"7\n\005State\022\025\n\021S"
      "TATE_UNSPECIFIED\020\000\022\014\n\010CREATING\020\001\022\t\n\005READ"
      "Y\020\002\"S\n\032ListInstanceConfigsRequest\022\016\n\006par"
      "ent\030\001 \001(\t\022\021\n\tpage_size\030\002 \001(\005\022\022\n\npage_tok"
      "en\030\003 \001(\t\"\202\001\n\033ListInstanceConfigsResponse"
      "\022J\n\020instance_configs\030\001 \003(\01320.google.span"
      "ner.admin.instance.v1.InstanceConfig\022\027\n\017"
      "next_page_token\030\002 \001(\t\"(\n\030GetInstanceConf"
      "igRequest\022\014\n\004name\030\001 \001(\t\"\"\n\022GetInstanceRe"
      "quest\022\014\n\004name\030\001 \001(\t\"z\n\025CreateInstanceReq"
      "uest\022\016\n\006parent\030\001 \001(\t\022\023\n\013instance_id\030\002 \001("
      "\t\022<\n\010instance\030\003 \001(\0132*.google.spanner.adm"
      "in.instance.v1.Instance\"]\n\024ListInstances"
      "Request\022\016\n\006parent\030\001 \001(\t\022\021\n\tpage_size\030\002 \001"
      "(\005\022\022\n\npage_token\030\003 \001(\t\022\016\n\006filter\030\004 \001(\t\"o"
      "\n\025ListInstancesResponse\022=\n\tinstances\030\001 \003"
      "(\0132*.google.spanner.admin.instance.v1.In"
      "stance\022\027\n\017next_page_token\030\002 \001(\t\"\205\001\n\025Upda"
      "teInstanceRequest\022<\n\010instance\030\001 \001(\0132*.go"
      "ogle.spanner.admin.instance.v1.Instance\022"
      ".\n\nfield_mask\030\002 \001(\0132\032.google.protobuf.Fi"
      "eldMask\"%\n\025DeleteInstanceRequest\022\014\n\004name"
      "\030\001 \001(\t\"\345\001\n\026CreateInstanceMetadata\022<\n\010ins"
      "tance\030\001 \001(\0132*.google.spanner.admin.insta"
      "nce.v1.Instance\022.\n\nstart_time\030\002 \001(\0132\032.go"
      "ogle.protobuf.Timestamp\022/\n\013cancel_time\030\003"
      " \001(\0132\032.google.protobuf.Timestamp\022,\n\010end_"
      "time\030\004 \001(\0132\032.google.protobuf.Timestamp\"\345"
      "\001\n\026UpdateInstanceMetadata\022<\n\010instance\030\001 "
      "\001(\0132*.google.spanner.admin.instance.v1.I"
      "nstance\022.\n\nstart_time\030\002 \001(\0132\032.google.pro"
      "tobuf.Timestamp\022/\n\013cancel_time\030\003 \001(\0132\032.g"
      "oogle.protobuf.Timestamp\022,\n\010end_time\030\004 \001"
      "(\0132\032.google.protobuf.Timestamp2\346\014\n\rInsta"
      "nceAdmin\022\303\001\n\023ListInstanceConfigs\022<.googl"
      "e.spanner.admin.instance.v1.ListInstance"
      "ConfigsRequest\032=.google.spanner.admin.in"
      "stance.v1.ListInstanceConfigsResponse\"/\202"
      "\323\344\223\002)\022\'/v1/{parent=projects/*}/instanceC"
      "onfigs\022\262\001\n\021GetInstanceConfig\022:.google.sp"
      "anner.admin.instance.v1.GetInstanceConfi"
      "gRequest\0320.google.spanner.admin.instance"
      ".v1.InstanceConfig\"/\202\323\344\223\002)\022\'/v1/{name=pr"
      "ojects/*/instanceConfigs/*}\022\253\001\n\rListInst"
      "ances\0226.google.spanner.admin.instance.v1"
      ".ListInstancesRequest\0327.google.spanner.a"
      "dmin.instance.v1.ListInstancesResponse\")"
      "\202\323\344\223\002#\022!/v1/{parent=projects/*}/instance"
      "s\022\232\001\n\013GetInstance\0224.google.spanner.admin"
      ".instance.v1.GetInstanceRequest\032*.google"
      ".spanner.admin.instance.v1.Instance\")\202\323\344"
      "\223\002#\022!/v1/{name=projects/*/instances/*}\022\226"
      "\001\n\016CreateInstance\0227.google.spanner.admin"
      ".instance.v1.CreateInstanceRequest\032\035.goo"
      "gle.longrunning.Operation\",\202\323\344\223\002&\"!/v1/{"
      "parent=projects/*}/instances:\001*\022\237\001\n\016Upda"
      "teInstance\0227.google.spanner.admin.instan"
      "ce.v1.UpdateInstanceRequest\032\035.google.lon"
      "grunning.Operation\"5\202\323\344\223\002/2*/v1/{instanc"
      "e.name=projects/*/instances/*}:\001*\022\214\001\n\016De"
      "leteInstance\0227.google.spanner.admin.inst"
      "ance.v1.DeleteInstanceRequest\032\026.google.p"
      "rotobuf.Empty\")\202\323\344\223\002#*!/v1/{name=project"
      "s/*/instances/*}\022\210\001\n\014SetIamPolicy\022\".goog"
      "le.iam.v1.SetIamPolicyRequest\032\025.google.i"
      "am.v1.Policy\"=\202\323\344\223\0027\"2/v1/{resource=proj"
      "ects/*/instances/*}:setIamPolicy:\001*\022\210\001\n\014"
      "GetIamPolicy\022\".google.iam.v1.GetIamPolic"
      "yRequest\032\025.google.iam.v1.Policy\"=\202\323\344\223\0027\""
      "2/v1/{resource=projects/*/instances/*}:g"
      "etIamPolicy:\001*\022\256\001\n\022TestIamPermissions\022(."
      "google.iam.v1.TestIamPermissionsRequest\032"
      ").google.iam.v1.TestIamPermissionsRespon"
      "se\"C\202\323\344\223\002=\"8/v1/{resource=projects/*/ins"
      "tances/*}:testIamPermissions:\001*B\266\001\n$com."
      "google.spanner.admin.instance.v1B\031Spanne"
      "rInstanceAdminProtoP\001ZHgoogle.golang.org"
      "/genproto/googleapis/spanner/admin/insta"
      "nce/v1;instance\252\002&Google.Cloud.Spanner.A"
      "dmin.Instance.V1b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 3824);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "google/spanner/admin/instance/v1/spanner_instance_admin.proto", &protobuf_RegisterTypes);
  ::google::api::protobuf_google_2fapi_2fannotations_2eproto::AddDescriptors();
  ::google::api::protobuf_google_2fapi_2fauth_2eproto::AddDescriptors();
  ::google::iam::v1::protobuf_google_2fiam_2fv1_2fiam_5fpolicy_2eproto::AddDescriptors();
  ::google::iam::v1::protobuf_google_2fiam_2fv1_2fpolicy_2eproto::AddDescriptors();
  ::google::longrunning::protobuf_google_2flongrunning_2foperations_2eproto::AddDescriptors();
  ::google::protobuf::protobuf_google_2fprotobuf_2fempty_2eproto::AddDescriptors();
  ::google::protobuf::protobuf_google_2fprotobuf_2ffield_5fmask_2eproto::AddDescriptors();
  ::google::protobuf::protobuf_google_2fprotobuf_2ftimestamp_2eproto::AddDescriptors();
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_google_2fspanner_2fadmin_2finstance_2fv1_2fspanner_5finstance_5fadmin_2eproto

const ::google::protobuf::EnumDescriptor* Instance_State_descriptor() {
  protobuf_google_2fspanner_2fadmin_2finstance_2fv1_2fspanner_5finstance_5fadmin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fspanner_2fadmin_2finstance_2fv1_2fspanner_5finstance_5fadmin_2eproto::file_level_enum_descriptors[0];
}
bool Instance_State_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Instance_State Instance::STATE_UNSPECIFIED;
const Instance_State Instance::CREATING;
const Instance_State Instance::READY;
const Instance_State Instance::State_MIN;
const Instance_State Instance::State_MAX;
const int Instance::State_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int InstanceConfig::kNameFieldNumber;
const int InstanceConfig::kDisplayNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

InstanceConfig::InstanceConfig()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_google_2fspanner_2fadmin_2finstance_2fv1_2fspanner_5finstance_5fadmin_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.spanner.admin.instance.v1.InstanceConfig)
}
InstanceConfig::InstanceConfig(const InstanceConfig& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  display_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.display_name().size() > 0) {
    display_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.display_name_);
  }
  // @@protoc_insertion_point(copy_constructor:google.spanner.admin.instance.v1.InstanceConfig)
}

void InstanceConfig::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  display_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

InstanceConfig::~InstanceConfig() {
  // @@protoc_insertion_point(destructor:google.spanner.admin.instance.v1.InstanceConfig)
  SharedDtor();
}

void InstanceConfig::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  display_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void InstanceConfig::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* InstanceConfig::descriptor() {
  protobuf_google_2fspanner_2fadmin_2finstance_2fv1_2fspanner_5finstance_5fadmin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fspanner_2fadmin_2finstance_2fv1_2fspanner_5finstance_5fadmin_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const InstanceConfig& InstanceConfig::default_instance() {
  protobuf_google_2fspanner_2fadmin_2finstance_2fv1_2fspanner_5finstance_5fadmin_2eproto::InitDefaults();
  return *internal_default_instance();
}

InstanceConfig* InstanceConfig::New(::google::protobuf::Arena* arena) const {
  InstanceConfig* n = new InstanceConfig;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void InstanceConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:google.spanner.admin.instance.v1.InstanceConfig)
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  display_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool InstanceConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.spanner.admin.instance.v1.InstanceConfig)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.spanner.admin.instance.v1.InstanceConfig.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string display_name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_display_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->display_name().data(), this->display_name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.spanner.admin.instance.v1.InstanceConfig.display_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.spanner.admin.instance.v1.InstanceConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.spanner.admin.instance.v1.InstanceConfig)
  return false;
#undef DO_
}

void InstanceConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.spanner.admin.instance.v1.InstanceConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.spanner.admin.instance.v1.InstanceConfig.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // string display_name = 2;
  if (this->display_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->display_name().data(), this->display_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.spanner.admin.instance.v1.InstanceConfig.display_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->display_name(), output);
  }

  // @@protoc_insertion_point(serialize_end:google.spanner.admin.instance.v1.InstanceConfig)
}

::google::protobuf::uint8* InstanceConfig::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.spanner.admin.instance.v1.InstanceConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.spanner.admin.instance.v1.InstanceConfig.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // string display_name = 2;
  if (this->display_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->display_name().data(), this->display_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.spanner.admin.instance.v1.InstanceConfig.display_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->display_name(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.spanner.admin.instance.v1.InstanceConfig)
  return target;
}

size_t InstanceConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.spanner.admin.instance.v1.InstanceConfig)
  size_t total_size = 0;

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string display_name = 2;
  if (this->display_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->display_name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void InstanceConfig::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.spanner.admin.instance.v1.InstanceConfig)
  GOOGLE_DCHECK_NE(&from, this);
  const InstanceConfig* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const InstanceConfig>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.spanner.admin.instance.v1.InstanceConfig)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.spanner.admin.instance.v1.InstanceConfig)
    MergeFrom(*source);
  }
}

void InstanceConfig::MergeFrom(const InstanceConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.spanner.admin.instance.v1.InstanceConfig)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.display_name().size() > 0) {

    display_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.display_name_);
  }
}

void InstanceConfig::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.spanner.admin.instance.v1.InstanceConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InstanceConfig::CopyFrom(const InstanceConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.spanner.admin.instance.v1.InstanceConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InstanceConfig::IsInitialized() const {
  return true;
}

void InstanceConfig::Swap(InstanceConfig* other) {
  if (other == this) return;
  InternalSwap(other);
}
void InstanceConfig::InternalSwap(InstanceConfig* other) {
  name_.Swap(&other->name_);
  display_name_.Swap(&other->display_name_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata InstanceConfig::GetMetadata() const {
  protobuf_google_2fspanner_2fadmin_2finstance_2fv1_2fspanner_5finstance_5fadmin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fspanner_2fadmin_2finstance_2fv1_2fspanner_5finstance_5fadmin_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// InstanceConfig

// string name = 1;
void InstanceConfig::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& InstanceConfig::name() const {
  // @@protoc_insertion_point(field_get:google.spanner.admin.instance.v1.InstanceConfig.name)
  return name_.GetNoArena();
}
void InstanceConfig::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.spanner.admin.instance.v1.InstanceConfig.name)
}
#if LANG_CXX11
void InstanceConfig::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.spanner.admin.instance.v1.InstanceConfig.name)
}
#endif
void InstanceConfig::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.spanner.admin.instance.v1.InstanceConfig.name)
}
void InstanceConfig::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.spanner.admin.instance.v1.InstanceConfig.name)
}
::std::string* InstanceConfig::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:google.spanner.admin.instance.v1.InstanceConfig.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* InstanceConfig::release_name() {
  // @@protoc_insertion_point(field_release:google.spanner.admin.instance.v1.InstanceConfig.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void InstanceConfig::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:google.spanner.admin.instance.v1.InstanceConfig.name)
}

// string display_name = 2;
void InstanceConfig::clear_display_name() {
  display_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& InstanceConfig::display_name() const {
  // @@protoc_insertion_point(field_get:google.spanner.admin.instance.v1.InstanceConfig.display_name)
  return display_name_.GetNoArena();
}
void InstanceConfig::set_display_name(const ::std::string& value) {
  
  display_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.spanner.admin.instance.v1.InstanceConfig.display_name)
}
#if LANG_CXX11
void InstanceConfig::set_display_name(::std::string&& value) {
  
  display_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.spanner.admin.instance.v1.InstanceConfig.display_name)
}
#endif
void InstanceConfig::set_display_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  display_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.spanner.admin.instance.v1.InstanceConfig.display_name)
}
void InstanceConfig::set_display_name(const char* value, size_t size) {
  
  display_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.spanner.admin.instance.v1.InstanceConfig.display_name)
}
::std::string* InstanceConfig::mutable_display_name() {
  
  // @@protoc_insertion_point(field_mutable:google.spanner.admin.instance.v1.InstanceConfig.display_name)
  return display_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* InstanceConfig::release_display_name() {
  // @@protoc_insertion_point(field_release:google.spanner.admin.instance.v1.InstanceConfig.display_name)
  
  return display_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void InstanceConfig::set_allocated_display_name(::std::string* display_name) {
  if (display_name != NULL) {
    
  } else {
    
  }
  display_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), display_name);
  // @@protoc_insertion_point(field_set_allocated:google.spanner.admin.instance.v1.InstanceConfig.display_name)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

Instance::Instance_LabelsEntry::Instance_LabelsEntry() {}
Instance::Instance_LabelsEntry::Instance_LabelsEntry(::google::protobuf::Arena* arena) : SuperType(arena) {}
::google::protobuf::Metadata Instance::Instance_LabelsEntry::GetMetadata() const {
  protobuf_google_2fspanner_2fadmin_2finstance_2fv1_2fspanner_5finstance_5fadmin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fspanner_2fadmin_2finstance_2fv1_2fspanner_5finstance_5fadmin_2eproto::file_level_metadata[1];
}
void Instance::Instance_LabelsEntry::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}
void Instance::Instance_LabelsEntry::MergeFrom(const Instance_LabelsEntry& other) {
  MergeFromInternal(other);
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Instance::kNameFieldNumber;
const int Instance::kConfigFieldNumber;
const int Instance::kDisplayNameFieldNumber;
const int Instance::kNodeCountFieldNumber;
const int Instance::kStateFieldNumber;
const int Instance::kLabelsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Instance::Instance()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_google_2fspanner_2fadmin_2finstance_2fv1_2fspanner_5finstance_5fadmin_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.spanner.admin.instance.v1.Instance)
}
Instance::Instance(const Instance& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  labels_.MergeFrom(from.labels_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  config_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.config().size() > 0) {
    config_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.config_);
  }
  display_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.display_name().size() > 0) {
    display_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.display_name_);
  }
  ::memcpy(&node_count_, &from.node_count_,
    reinterpret_cast<char*>(&state_) -
    reinterpret_cast<char*>(&node_count_) + sizeof(state_));
  // @@protoc_insertion_point(copy_constructor:google.spanner.admin.instance.v1.Instance)
}

void Instance::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  config_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  display_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&node_count_, 0, reinterpret_cast<char*>(&state_) -
    reinterpret_cast<char*>(&node_count_) + sizeof(state_));
  _cached_size_ = 0;
}

Instance::~Instance() {
  // @@protoc_insertion_point(destructor:google.spanner.admin.instance.v1.Instance)
  SharedDtor();
}

void Instance::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  config_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  display_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Instance::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Instance::descriptor() {
  protobuf_google_2fspanner_2fadmin_2finstance_2fv1_2fspanner_5finstance_5fadmin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fspanner_2fadmin_2finstance_2fv1_2fspanner_5finstance_5fadmin_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Instance& Instance::default_instance() {
  protobuf_google_2fspanner_2fadmin_2finstance_2fv1_2fspanner_5finstance_5fadmin_2eproto::InitDefaults();
  return *internal_default_instance();
}

Instance* Instance::New(::google::protobuf::Arena* arena) const {
  Instance* n = new Instance;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Instance::Clear() {
// @@protoc_insertion_point(message_clear_start:google.spanner.admin.instance.v1.Instance)
  labels_.Clear();
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  config_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  display_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&node_count_, 0, reinterpret_cast<char*>(&state_) -
    reinterpret_cast<char*>(&node_count_) + sizeof(state_));
}

bool Instance::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.spanner.admin.instance.v1.Instance)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.spanner.admin.instance.v1.Instance.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string config = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_config()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->config().data(), this->config().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.spanner.admin.instance.v1.Instance.config"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string display_name = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_display_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->display_name().data(), this->display_name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.spanner.admin.instance.v1.Instance.display_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 node_count = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &node_count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.spanner.admin.instance.v1.Instance.State state = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_state(static_cast< ::google::spanner::admin::instance::v1::Instance_State >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, string> labels = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u)) {
          Instance_LabelsEntry::Parser< ::google::protobuf::internal::MapField<
              Instance_LabelsEntry,
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&labels_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), parser.key().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.spanner.admin.instance.v1.Instance.LabelsEntry.key"));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.value().data(), parser.value().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.spanner.admin.instance.v1.Instance.LabelsEntry.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.spanner.admin.instance.v1.Instance)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.spanner.admin.instance.v1.Instance)
  return false;
#undef DO_
}

void Instance::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.spanner.admin.instance.v1.Instance)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.spanner.admin.instance.v1.Instance.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // string config = 2;
  if (this->config().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->config().data(), this->config().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.spanner.admin.instance.v1.Instance.config");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->config(), output);
  }

  // string display_name = 3;
  if (this->display_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->display_name().data(), this->display_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.spanner.admin.instance.v1.Instance.display_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->display_name(), output);
  }

  // int32 node_count = 5;
  if (this->node_count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->node_count(), output);
  }

  // .google.spanner.admin.instance.v1.Instance.State state = 6;
  if (this->state() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      6, this->state(), output);
  }

  // map<string, string> labels = 7;
  if (!this->labels().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), p->first.length(),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.spanner.admin.instance.v1.Instance.LabelsEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), p->second.length(),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.spanner.admin.instance.v1.Instance.LabelsEntry.value");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->labels().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->labels().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->labels().begin();
          it != this->labels().end(); ++it, ++n) {
        items[n] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[n], Less());
      ::google::protobuf::scoped_ptr<Instance_LabelsEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(labels_.NewEntryWrapper(
            items[i]->first, items[i]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            7, *entry, output);
        Utf8Check::Check(items[i]);
      }
    } else {
      ::google::protobuf::scoped_ptr<Instance_LabelsEntry> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->labels().begin();
          it != this->labels().end(); ++it) {
        entry.reset(labels_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            7, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  // @@protoc_insertion_point(serialize_end:google.spanner.admin.instance.v1.Instance)
}

::google::protobuf::uint8* Instance::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.spanner.admin.instance.v1.Instance)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.spanner.admin.instance.v1.Instance.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // string config = 2;
  if (this->config().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->config().data(), this->config().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.spanner.admin.instance.v1.Instance.config");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->config(), target);
  }

  // string display_name = 3;
  if (this->display_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->display_name().data(), this->display_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.spanner.admin.instance.v1.Instance.display_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->display_name(), target);
  }

  // int32 node_count = 5;
  if (this->node_count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->node_count(), target);
  }

  // .google.spanner.admin.instance.v1.Instance.State state = 6;
  if (this->state() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      6, this->state(), target);
  }

  // map<string, string> labels = 7;
  if (!this->labels().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), p->first.length(),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.spanner.admin.instance.v1.Instance.LabelsEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), p->second.length(),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.spanner.admin.instance.v1.Instance.LabelsEntry.value");
      }
    };

    if (deterministic &&
        this->labels().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->labels().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->labels().begin();
          it != this->labels().end(); ++it, ++n) {
        items[n] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[n], Less());
      ::google::protobuf::scoped_ptr<Instance_LabelsEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(labels_.NewEntryWrapper(
            items[i]->first, items[i]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       7, *entry, deterministic, target);
;
        Utf8Check::Check(items[i]);
      }
    } else {
      ::google::protobuf::scoped_ptr<Instance_LabelsEntry> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->labels().begin();
          it != this->labels().end(); ++it) {
        entry.reset(labels_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       7, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.spanner.admin.instance.v1.Instance)
  return target;
}

size_t Instance::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.spanner.admin.instance.v1.Instance)
  size_t total_size = 0;

  // map<string, string> labels = 7;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->labels_size());
  {
    ::google::protobuf::scoped_ptr<Instance_LabelsEntry> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->labels().begin();
        it != this->labels().end(); ++it) {
      entry.reset(labels_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string config = 2;
  if (this->config().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->config());
  }

  // string display_name = 3;
  if (this->display_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->display_name());
  }

  // int32 node_count = 5;
  if (this->node_count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->node_count());
  }

  // .google.spanner.admin.instance.v1.Instance.State state = 6;
  if (this->state() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->state());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Instance::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.spanner.admin.instance.v1.Instance)
  GOOGLE_DCHECK_NE(&from, this);
  const Instance* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Instance>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.spanner.admin.instance.v1.Instance)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.spanner.admin.instance.v1.Instance)
    MergeFrom(*source);
  }
}

void Instance::MergeFrom(const Instance& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.spanner.admin.instance.v1.Instance)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  labels_.MergeFrom(from.labels_);
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.config().size() > 0) {

    config_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.config_);
  }
  if (from.display_name().size() > 0) {

    display_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.display_name_);
  }
  if (from.node_count() != 0) {
    set_node_count(from.node_count());
  }
  if (from.state() != 0) {
    set_state(from.state());
  }
}

void Instance::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.spanner.admin.instance.v1.Instance)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Instance::CopyFrom(const Instance& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.spanner.admin.instance.v1.Instance)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Instance::IsInitialized() const {
  return true;
}

void Instance::Swap(Instance* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Instance::InternalSwap(Instance* other) {
  labels_.Swap(&other->labels_);
  name_.Swap(&other->name_);
  config_.Swap(&other->config_);
  display_name_.Swap(&other->display_name_);
  std::swap(node_count_, other->node_count_);
  std::swap(state_, other->state_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Instance::GetMetadata() const {
  protobuf_google_2fspanner_2fadmin_2finstance_2fv1_2fspanner_5finstance_5fadmin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fspanner_2fadmin_2finstance_2fv1_2fspanner_5finstance_5fadmin_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Instance

// string name = 1;
void Instance::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Instance::name() const {
  // @@protoc_insertion_point(field_get:google.spanner.admin.instance.v1.Instance.name)
  return name_.GetNoArena();
}
void Instance::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.spanner.admin.instance.v1.Instance.name)
}
#if LANG_CXX11
void Instance::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.spanner.admin.instance.v1.Instance.name)
}
#endif
void Instance::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.spanner.admin.instance.v1.Instance.name)
}
void Instance::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.spanner.admin.instance.v1.Instance.name)
}
::std::string* Instance::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:google.spanner.admin.instance.v1.Instance.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Instance::release_name() {
  // @@protoc_insertion_point(field_release:google.spanner.admin.instance.v1.Instance.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Instance::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:google.spanner.admin.instance.v1.Instance.name)
}

// string config = 2;
void Instance::clear_config() {
  config_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Instance::config() const {
  // @@protoc_insertion_point(field_get:google.spanner.admin.instance.v1.Instance.config)
  return config_.GetNoArena();
}
void Instance::set_config(const ::std::string& value) {
  
  config_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.spanner.admin.instance.v1.Instance.config)
}
#if LANG_CXX11
void Instance::set_config(::std::string&& value) {
  
  config_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.spanner.admin.instance.v1.Instance.config)
}
#endif
void Instance::set_config(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  config_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.spanner.admin.instance.v1.Instance.config)
}
void Instance::set_config(const char* value, size_t size) {
  
  config_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.spanner.admin.instance.v1.Instance.config)
}
::std::string* Instance::mutable_config() {
  
  // @@protoc_insertion_point(field_mutable:google.spanner.admin.instance.v1.Instance.config)
  return config_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Instance::release_config() {
  // @@protoc_insertion_point(field_release:google.spanner.admin.instance.v1.Instance.config)
  
  return config_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Instance::set_allocated_config(::std::string* config) {
  if (config != NULL) {
    
  } else {
    
  }
  config_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), config);
  // @@protoc_insertion_point(field_set_allocated:google.spanner.admin.instance.v1.Instance.config)
}

// string display_name = 3;
void Instance::clear_display_name() {
  display_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Instance::display_name() const {
  // @@protoc_insertion_point(field_get:google.spanner.admin.instance.v1.Instance.display_name)
  return display_name_.GetNoArena();
}
void Instance::set_display_name(const ::std::string& value) {
  
  display_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.spanner.admin.instance.v1.Instance.display_name)
}
#if LANG_CXX11
void Instance::set_display_name(::std::string&& value) {
  
  display_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.spanner.admin.instance.v1.Instance.display_name)
}
#endif
void Instance::set_display_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  display_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.spanner.admin.instance.v1.Instance.display_name)
}
void Instance::set_display_name(const char* value, size_t size) {
  
  display_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.spanner.admin.instance.v1.Instance.display_name)
}
::std::string* Instance::mutable_display_name() {
  
  // @@protoc_insertion_point(field_mutable:google.spanner.admin.instance.v1.Instance.display_name)
  return display_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Instance::release_display_name() {
  // @@protoc_insertion_point(field_release:google.spanner.admin.instance.v1.Instance.display_name)
  
  return display_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Instance::set_allocated_display_name(::std::string* display_name) {
  if (display_name != NULL) {
    
  } else {
    
  }
  display_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), display_name);
  // @@protoc_insertion_point(field_set_allocated:google.spanner.admin.instance.v1.Instance.display_name)
}

// int32 node_count = 5;
void Instance::clear_node_count() {
  node_count_ = 0;
}
::google::protobuf::int32 Instance::node_count() const {
  // @@protoc_insertion_point(field_get:google.spanner.admin.instance.v1.Instance.node_count)
  return node_count_;
}
void Instance::set_node_count(::google::protobuf::int32 value) {
  
  node_count_ = value;
  // @@protoc_insertion_point(field_set:google.spanner.admin.instance.v1.Instance.node_count)
}

// .google.spanner.admin.instance.v1.Instance.State state = 6;
void Instance::clear_state() {
  state_ = 0;
}
::google::spanner::admin::instance::v1::Instance_State Instance::state() const {
  // @@protoc_insertion_point(field_get:google.spanner.admin.instance.v1.Instance.state)
  return static_cast< ::google::spanner::admin::instance::v1::Instance_State >(state_);
}
void Instance::set_state(::google::spanner::admin::instance::v1::Instance_State value) {
  
  state_ = value;
  // @@protoc_insertion_point(field_set:google.spanner.admin.instance.v1.Instance.state)
}

// map<string, string> labels = 7;
int Instance::labels_size() const {
  return labels_.size();
}
void Instance::clear_labels() {
  labels_.Clear();
}
 const ::google::protobuf::Map< ::std::string, ::std::string >&
Instance::labels() const {
  // @@protoc_insertion_point(field_map:google.spanner.admin.instance.v1.Instance.labels)
  return labels_.GetMap();
}
 ::google::protobuf::Map< ::std::string, ::std::string >*
Instance::mutable_labels() {
  // @@protoc_insertion_point(field_mutable_map:google.spanner.admin.instance.v1.Instance.labels)
  return labels_.MutableMap();
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListInstanceConfigsRequest::kParentFieldNumber;
const int ListInstanceConfigsRequest::kPageSizeFieldNumber;
const int ListInstanceConfigsRequest::kPageTokenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListInstanceConfigsRequest::ListInstanceConfigsRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_google_2fspanner_2fadmin_2finstance_2fv1_2fspanner_5finstance_5fadmin_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.spanner.admin.instance.v1.ListInstanceConfigsRequest)
}
ListInstanceConfigsRequest::ListInstanceConfigsRequest(const ListInstanceConfigsRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  parent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.parent().size() > 0) {
    parent_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.parent_);
  }
  page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.page_token().size() > 0) {
    page_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.page_token_);
  }
  page_size_ = from.page_size_;
  // @@protoc_insertion_point(copy_constructor:google.spanner.admin.instance.v1.ListInstanceConfigsRequest)
}

void ListInstanceConfigsRequest::SharedCtor() {
  parent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_size_ = 0;
  _cached_size_ = 0;
}

ListInstanceConfigsRequest::~ListInstanceConfigsRequest() {
  // @@protoc_insertion_point(destructor:google.spanner.admin.instance.v1.ListInstanceConfigsRequest)
  SharedDtor();
}

void ListInstanceConfigsRequest::SharedDtor() {
  parent_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ListInstanceConfigsRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ListInstanceConfigsRequest::descriptor() {
  protobuf_google_2fspanner_2fadmin_2finstance_2fv1_2fspanner_5finstance_5fadmin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fspanner_2fadmin_2finstance_2fv1_2fspanner_5finstance_5fadmin_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListInstanceConfigsRequest& ListInstanceConfigsRequest::default_instance() {
  protobuf_google_2fspanner_2fadmin_2finstance_2fv1_2fspanner_5finstance_5fadmin_2eproto::InitDefaults();
  return *internal_default_instance();
}

ListInstanceConfigsRequest* ListInstanceConfigsRequest::New(::google::protobuf::Arena* arena) const {
  ListInstanceConfigsRequest* n = new ListInstanceConfigsRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ListInstanceConfigsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.spanner.admin.instance.v1.ListInstanceConfigsRequest)
  parent_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_size_ = 0;
}

bool ListInstanceConfigsRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.spanner.admin.instance.v1.ListInstanceConfigsRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string parent = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_parent()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->parent().data(), this->parent().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.spanner.admin.instance.v1.ListInstanceConfigsRequest.parent"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 page_size = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &page_size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string page_token = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_page_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->page_token().data(), this->page_token().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.spanner.admin.instance.v1.ListInstanceConfigsRequest.page_token"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.spanner.admin.instance.v1.ListInstanceConfigsRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.spanner.admin.instance.v1.ListInstanceConfigsRequest)
  return false;
#undef DO_
}

void ListInstanceConfigsRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.spanner.admin.instance.v1.ListInstanceConfigsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string parent = 1;
  if (this->parent().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->parent().data(), this->parent().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.spanner.admin.instance.v1.ListInstanceConfigsRequest.parent");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->parent(), output);
  }

  // int32 page_size = 2;
  if (this->page_size() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->page_size(), output);
  }

  // string page_token = 3;
  if (this->page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->page_token().data(), this->page_token().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.spanner.admin.instance.v1.ListInstanceConfigsRequest.page_token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->page_token(), output);
  }

  // @@protoc_insertion_point(serialize_end:google.spanner.admin.instance.v1.ListInstanceConfigsRequest)
}

::google::protobuf::uint8* ListInstanceConfigsRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.spanner.admin.instance.v1.ListInstanceConfigsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string parent = 1;
  if (this->parent().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->parent().data(), this->parent().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.spanner.admin.instance.v1.ListInstanceConfigsRequest.parent");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->parent(), target);
  }

  // int32 page_size = 2;
  if (this->page_size() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->page_size(), target);
  }

  // string page_token = 3;
  if (this->page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->page_token().data(), this->page_token().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.spanner.admin.instance.v1.ListInstanceConfigsRequest.page_token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->page_token(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.spanner.admin.instance.v1.ListInstanceConfigsRequest)
  return target;
}

size_t ListInstanceConfigsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.spanner.admin.instance.v1.ListInstanceConfigsRequest)
  size_t total_size = 0;

  // string parent = 1;
  if (this->parent().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->parent());
  }

  // string page_token = 3;
  if (this->page_token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->page_token());
  }

  // int32 page_size = 2;
  if (this->page_size() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->page_size());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ListInstanceConfigsRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.spanner.admin.instance.v1.ListInstanceConfigsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ListInstanceConfigsRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListInstanceConfigsRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.spanner.admin.instance.v1.ListInstanceConfigsRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.spanner.admin.instance.v1.ListInstanceConfigsRequest)
    MergeFrom(*source);
  }
}

void ListInstanceConfigsRequest::MergeFrom(const ListInstanceConfigsRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.spanner.admin.instance.v1.ListInstanceConfigsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.parent().size() > 0) {

    parent_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.parent_);
  }
  if (from.page_token().size() > 0) {

    page_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.page_token_);
  }
  if (from.page_size() != 0) {
    set_page_size(from.page_size());
  }
}

void ListInstanceConfigsRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.spanner.admin.instance.v1.ListInstanceConfigsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListInstanceConfigsRequest::CopyFrom(const ListInstanceConfigsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.spanner.admin.instance.v1.ListInstanceConfigsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListInstanceConfigsRequest::IsInitialized() const {
  return true;
}

void ListInstanceConfigsRequest::Swap(ListInstanceConfigsRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListInstanceConfigsRequest::InternalSwap(ListInstanceConfigsRequest* other) {
  parent_.Swap(&other->parent_);
  page_token_.Swap(&other->page_token_);
  std::swap(page_size_, other->page_size_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ListInstanceConfigsRequest::GetMetadata() const {
  protobuf_google_2fspanner_2fadmin_2finstance_2fv1_2fspanner_5finstance_5fadmin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fspanner_2fadmin_2finstance_2fv1_2fspanner_5finstance_5fadmin_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ListInstanceConfigsRequest

// string parent = 1;
void ListInstanceConfigsRequest::clear_parent() {
  parent_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ListInstanceConfigsRequest::parent() const {
  // @@protoc_insertion_point(field_get:google.spanner.admin.instance.v1.ListInstanceConfigsRequest.parent)
  return parent_.GetNoArena();
}
void ListInstanceConfigsRequest::set_parent(const ::std::string& value) {
  
  parent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.spanner.admin.instance.v1.ListInstanceConfigsRequest.parent)
}
#if LANG_CXX11
void ListInstanceConfigsRequest::set_parent(::std::string&& value) {
  
  parent_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.spanner.admin.instance.v1.ListInstanceConfigsRequest.parent)
}
#endif
void ListInstanceConfigsRequest::set_parent(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  parent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.spanner.admin.instance.v1.ListInstanceConfigsRequest.parent)
}
void ListInstanceConfigsRequest::set_parent(const char* value, size_t size) {
  
  parent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.spanner.admin.instance.v1.ListInstanceConfigsRequest.parent)
}
::std::string* ListInstanceConfigsRequest::mutable_parent() {
  
  // @@protoc_insertion_point(field_mutable:google.spanner.admin.instance.v1.ListInstanceConfigsRequest.parent)
  return parent_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ListInstanceConfigsRequest::release_parent() {
  // @@protoc_insertion_point(field_release:google.spanner.admin.instance.v1.ListInstanceConfigsRequest.parent)
  
  return parent_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ListInstanceConfigsRequest::set_allocated_parent(::std::string* parent) {
  if (parent != NULL) {
    
  } else {
    
  }
  parent_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), parent);
  // @@protoc_insertion_point(field_set_allocated:google.spanner.admin.instance.v1.ListInstanceConfigsRequest.parent)
}

// int32 page_size = 2;
void ListInstanceConfigsRequest::clear_page_size() {
  page_size_ = 0;
}
::google::protobuf::int32 ListInstanceConfigsRequest::page_size() const {
  // @@protoc_insertion_point(field_get:google.spanner.admin.instance.v1.ListInstanceConfigsRequest.page_size)
  return page_size_;
}
void ListInstanceConfigsRequest::set_page_size(::google::protobuf::int32 value) {
  
  page_size_ = value;
  // @@protoc_insertion_point(field_set:google.spanner.admin.instance.v1.ListInstanceConfigsRequest.page_size)
}

// string page_token = 3;
void ListInstanceConfigsRequest::clear_page_token() {
  page_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ListInstanceConfigsRequest::page_token() const {
  // @@protoc_insertion_point(field_get:google.spanner.admin.instance.v1.ListInstanceConfigsRequest.page_token)
  return page_token_.GetNoArena();
}
void ListInstanceConfigsRequest::set_page_token(const ::std::string& value) {
  
  page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.spanner.admin.instance.v1.ListInstanceConfigsRequest.page_token)
}
#if LANG_CXX11
void ListInstanceConfigsRequest::set_page_token(::std::string&& value) {
  
  page_token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.spanner.admin.instance.v1.ListInstanceConfigsRequest.page_token)
}
#endif
void ListInstanceConfigsRequest::set_page_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.spanner.admin.instance.v1.ListInstanceConfigsRequest.page_token)
}
void ListInstanceConfigsRequest::set_page_token(const char* value, size_t size) {
  
  page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.spanner.admin.instance.v1.ListInstanceConfigsRequest.page_token)
}
::std::string* ListInstanceConfigsRequest::mutable_page_token() {
  
  // @@protoc_insertion_point(field_mutable:google.spanner.admin.instance.v1.ListInstanceConfigsRequest.page_token)
  return page_token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ListInstanceConfigsRequest::release_page_token() {
  // @@protoc_insertion_point(field_release:google.spanner.admin.instance.v1.ListInstanceConfigsRequest.page_token)
  
  return page_token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ListInstanceConfigsRequest::set_allocated_page_token(::std::string* page_token) {
  if (page_token != NULL) {
    
  } else {
    
  }
  page_token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), page_token);
  // @@protoc_insertion_point(field_set_allocated:google.spanner.admin.instance.v1.ListInstanceConfigsRequest.page_token)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListInstanceConfigsResponse::kInstanceConfigsFieldNumber;
const int ListInstanceConfigsResponse::kNextPageTokenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListInstanceConfigsResponse::ListInstanceConfigsResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_google_2fspanner_2fadmin_2finstance_2fv1_2fspanner_5finstance_5fadmin_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.spanner.admin.instance.v1.ListInstanceConfigsResponse)
}
ListInstanceConfigsResponse::ListInstanceConfigsResponse(const ListInstanceConfigsResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      instance_configs_(from.instance_configs_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  next_page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.next_page_token().size() > 0) {
    next_page_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.next_page_token_);
  }
  // @@protoc_insertion_point(copy_constructor:google.spanner.admin.instance.v1.ListInstanceConfigsResponse)
}

void ListInstanceConfigsResponse::SharedCtor() {
  next_page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

ListInstanceConfigsResponse::~ListInstanceConfigsResponse() {
  // @@protoc_insertion_point(destructor:google.spanner.admin.instance.v1.ListInstanceConfigsResponse)
  SharedDtor();
}

void ListInstanceConfigsResponse::SharedDtor() {
  next_page_token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ListInstanceConfigsResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ListInstanceConfigsResponse::descriptor() {
  protobuf_google_2fspanner_2fadmin_2finstance_2fv1_2fspanner_5finstance_5fadmin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fspanner_2fadmin_2finstance_2fv1_2fspanner_5finstance_5fadmin_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListInstanceConfigsResponse& ListInstanceConfigsResponse::default_instance() {
  protobuf_google_2fspanner_2fadmin_2finstance_2fv1_2fspanner_5finstance_5fadmin_2eproto::InitDefaults();
  return *internal_default_instance();
}

ListInstanceConfigsResponse* ListInstanceConfigsResponse::New(::google::protobuf::Arena* arena) const {
  ListInstanceConfigsResponse* n = new ListInstanceConfigsResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ListInstanceConfigsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:google.spanner.admin.instance.v1.ListInstanceConfigsResponse)
  instance_configs_.Clear();
  next_page_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool ListInstanceConfigsResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.spanner.admin.instance.v1.ListInstanceConfigsResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .google.spanner.admin.instance.v1.InstanceConfig instance_configs = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_instance_configs()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string next_page_token = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_next_page_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->next_page_token().data(), this->next_page_token().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.spanner.admin.instance.v1.ListInstanceConfigsResponse.next_page_token"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.spanner.admin.instance.v1.ListInstanceConfigsResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.spanner.admin.instance.v1.ListInstanceConfigsResponse)
  return false;
#undef DO_
}

void ListInstanceConfigsResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.spanner.admin.instance.v1.ListInstanceConfigsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.spanner.admin.instance.v1.InstanceConfig instance_configs = 1;
  for (unsigned int i = 0, n = this->instance_configs_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->instance_configs(i), output);
  }

  // string next_page_token = 2;
  if (this->next_page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->next_page_token().data(), this->next_page_token().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.spanner.admin.instance.v1.ListInstanceConfigsResponse.next_page_token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->next_page_token(), output);
  }

  // @@protoc_insertion_point(serialize_end:google.spanner.admin.instance.v1.ListInstanceConfigsResponse)
}

::google::protobuf::uint8* ListInstanceConfigsResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.spanner.admin.instance.v1.ListInstanceConfigsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.spanner.admin.instance.v1.InstanceConfig instance_configs = 1;
  for (unsigned int i = 0, n = this->instance_configs_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->instance_configs(i), deterministic, target);
  }

  // string next_page_token = 2;
  if (this->next_page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->next_page_token().data(), this->next_page_token().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.spanner.admin.instance.v1.ListInstanceConfigsResponse.next_page_token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->next_page_token(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.spanner.admin.instance.v1.ListInstanceConfigsResponse)
  return target;
}

size_t ListInstanceConfigsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.spanner.admin.instance.v1.ListInstanceConfigsResponse)
  size_t total_size = 0;

  // repeated .google.spanner.admin.instance.v1.InstanceConfig instance_configs = 1;
  {
    unsigned int count = this->instance_configs_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->instance_configs(i));
    }
  }

  // string next_page_token = 2;
  if (this->next_page_token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->next_page_token());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ListInstanceConfigsResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.spanner.admin.instance.v1.ListInstanceConfigsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ListInstanceConfigsResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListInstanceConfigsResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.spanner.admin.instance.v1.ListInstanceConfigsResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.spanner.admin.instance.v1.ListInstanceConfigsResponse)
    MergeFrom(*source);
  }
}

void ListInstanceConfigsResponse::MergeFrom(const ListInstanceConfigsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.spanner.admin.instance.v1.ListInstanceConfigsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  instance_configs_.MergeFrom(from.instance_configs_);
  if (from.next_page_token().size() > 0) {

    next_page_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.next_page_token_);
  }
}

void ListInstanceConfigsResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.spanner.admin.instance.v1.ListInstanceConfigsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListInstanceConfigsResponse::CopyFrom(const ListInstanceConfigsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.spanner.admin.instance.v1.ListInstanceConfigsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListInstanceConfigsResponse::IsInitialized() const {
  return true;
}

void ListInstanceConfigsResponse::Swap(ListInstanceConfigsResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListInstanceConfigsResponse::InternalSwap(ListInstanceConfigsResponse* other) {
  instance_configs_.InternalSwap(&other->instance_configs_);
  next_page_token_.Swap(&other->next_page_token_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ListInstanceConfigsResponse::GetMetadata() const {
  protobuf_google_2fspanner_2fadmin_2finstance_2fv1_2fspanner_5finstance_5fadmin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fspanner_2fadmin_2finstance_2fv1_2fspanner_5finstance_5fadmin_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ListInstanceConfigsResponse

// repeated .google.spanner.admin.instance.v1.InstanceConfig instance_configs = 1;
int ListInstanceConfigsResponse::instance_configs_size() const {
  return instance_configs_.size();
}
void ListInstanceConfigsResponse::clear_instance_configs() {
  instance_configs_.Clear();
}
const ::google::spanner::admin::instance::v1::InstanceConfig& ListInstanceConfigsResponse::instance_configs(int index) const {
  // @@protoc_insertion_point(field_get:google.spanner.admin.instance.v1.ListInstanceConfigsResponse.instance_configs)
  return instance_configs_.Get(index);
}
::google::spanner::admin::instance::v1::InstanceConfig* ListInstanceConfigsResponse::mutable_instance_configs(int index) {
  // @@protoc_insertion_point(field_mutable:google.spanner.admin.instance.v1.ListInstanceConfigsResponse.instance_configs)
  return instance_configs_.Mutable(index);
}
::google::spanner::admin::instance::v1::InstanceConfig* ListInstanceConfigsResponse::add_instance_configs() {
  // @@protoc_insertion_point(field_add:google.spanner.admin.instance.v1.ListInstanceConfigsResponse.instance_configs)
  return instance_configs_.Add();
}
::google::protobuf::RepeatedPtrField< ::google::spanner::admin::instance::v1::InstanceConfig >*
ListInstanceConfigsResponse::mutable_instance_configs() {
  // @@protoc_insertion_point(field_mutable_list:google.spanner.admin.instance.v1.ListInstanceConfigsResponse.instance_configs)
  return &instance_configs_;
}
const ::google::protobuf::RepeatedPtrField< ::google::spanner::admin::instance::v1::InstanceConfig >&
ListInstanceConfigsResponse::instance_configs() const {
  // @@protoc_insertion_point(field_list:google.spanner.admin.instance.v1.ListInstanceConfigsResponse.instance_configs)
  return instance_configs_;
}

// string next_page_token = 2;
void ListInstanceConfigsResponse::clear_next_page_token() {
  next_page_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ListInstanceConfigsResponse::next_page_token() const {
  // @@protoc_insertion_point(field_get:google.spanner.admin.instance.v1.ListInstanceConfigsResponse.next_page_token)
  return next_page_token_.GetNoArena();
}
void ListInstanceConfigsResponse::set_next_page_token(const ::std::string& value) {
  
  next_page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.spanner.admin.instance.v1.ListInstanceConfigsResponse.next_page_token)
}
#if LANG_CXX11
void ListInstanceConfigsResponse::set_next_page_token(::std::string&& value) {
  
  next_page_token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.spanner.admin.instance.v1.ListInstanceConfigsResponse.next_page_token)
}
#endif
void ListInstanceConfigsResponse::set_next_page_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  next_page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.spanner.admin.instance.v1.ListInstanceConfigsResponse.next_page_token)
}
void ListInstanceConfigsResponse::set_next_page_token(const char* value, size_t size) {
  
  next_page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.spanner.admin.instance.v1.ListInstanceConfigsResponse.next_page_token)
}
::std::string* ListInstanceConfigsResponse::mutable_next_page_token() {
  
  // @@protoc_insertion_point(field_mutable:google.spanner.admin.instance.v1.ListInstanceConfigsResponse.next_page_token)
  return next_page_token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ListInstanceConfigsResponse::release_next_page_token() {
  // @@protoc_insertion_point(field_release:google.spanner.admin.instance.v1.ListInstanceConfigsResponse.next_page_token)
  
  return next_page_token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ListInstanceConfigsResponse::set_allocated_next_page_token(::std::string* next_page_token) {
  if (next_page_token != NULL) {
    
  } else {
    
  }
  next_page_token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), next_page_token);
  // @@protoc_insertion_point(field_set_allocated:google.spanner.admin.instance.v1.ListInstanceConfigsResponse.next_page_token)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetInstanceConfigRequest::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetInstanceConfigRequest::GetInstanceConfigRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_google_2fspanner_2fadmin_2finstance_2fv1_2fspanner_5finstance_5fadmin_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.spanner.admin.instance.v1.GetInstanceConfigRequest)
}
GetInstanceConfigRequest::GetInstanceConfigRequest(const GetInstanceConfigRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  // @@protoc_insertion_point(copy_constructor:google.spanner.admin.instance.v1.GetInstanceConfigRequest)
}

void GetInstanceConfigRequest::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

GetInstanceConfigRequest::~GetInstanceConfigRequest() {
  // @@protoc_insertion_point(destructor:google.spanner.admin.instance.v1.GetInstanceConfigRequest)
  SharedDtor();
}

void GetInstanceConfigRequest::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GetInstanceConfigRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetInstanceConfigRequest::descriptor() {
  protobuf_google_2fspanner_2fadmin_2finstance_2fv1_2fspanner_5finstance_5fadmin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fspanner_2fadmin_2finstance_2fv1_2fspanner_5finstance_5fadmin_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetInstanceConfigRequest& GetInstanceConfigRequest::default_instance() {
  protobuf_google_2fspanner_2fadmin_2finstance_2fv1_2fspanner_5finstance_5fadmin_2eproto::InitDefaults();
  return *internal_default_instance();
}

GetInstanceConfigRequest* GetInstanceConfigRequest::New(::google::protobuf::Arena* arena) const {
  GetInstanceConfigRequest* n = new GetInstanceConfigRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetInstanceConfigRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.spanner.admin.instance.v1.GetInstanceConfigRequest)
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool GetInstanceConfigRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.spanner.admin.instance.v1.GetInstanceConfigRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.spanner.admin.instance.v1.GetInstanceConfigRequest.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.spanner.admin.instance.v1.GetInstanceConfigRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.spanner.admin.instance.v1.GetInstanceConfigRequest)
  return false;
#undef DO_
}

void GetInstanceConfigRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.spanner.admin.instance.v1.GetInstanceConfigRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.spanner.admin.instance.v1.GetInstanceConfigRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // @@protoc_insertion_point(serialize_end:google.spanner.admin.instance.v1.GetInstanceConfigRequest)
}

::google::protobuf::uint8* GetInstanceConfigRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.spanner.admin.instance.v1.GetInstanceConfigRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.spanner.admin.instance.v1.GetInstanceConfigRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.spanner.admin.instance.v1.GetInstanceConfigRequest)
  return target;
}

size_t GetInstanceConfigRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.spanner.admin.instance.v1.GetInstanceConfigRequest)
  size_t total_size = 0;

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetInstanceConfigRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.spanner.admin.instance.v1.GetInstanceConfigRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetInstanceConfigRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetInstanceConfigRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.spanner.admin.instance.v1.GetInstanceConfigRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.spanner.admin.instance.v1.GetInstanceConfigRequest)
    MergeFrom(*source);
  }
}

void GetInstanceConfigRequest::MergeFrom(const GetInstanceConfigRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.spanner.admin.instance.v1.GetInstanceConfigRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
}

void GetInstanceConfigRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.spanner.admin.instance.v1.GetInstanceConfigRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetInstanceConfigRequest::CopyFrom(const GetInstanceConfigRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.spanner.admin.instance.v1.GetInstanceConfigRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetInstanceConfigRequest::IsInitialized() const {
  return true;
}

void GetInstanceConfigRequest::Swap(GetInstanceConfigRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetInstanceConfigRequest::InternalSwap(GetInstanceConfigRequest* other) {
  name_.Swap(&other->name_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetInstanceConfigRequest::GetMetadata() const {
  protobuf_google_2fspanner_2fadmin_2finstance_2fv1_2fspanner_5finstance_5fadmin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fspanner_2fadmin_2finstance_2fv1_2fspanner_5finstance_5fadmin_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetInstanceConfigRequest

// string name = 1;
void GetInstanceConfigRequest::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& GetInstanceConfigRequest::name() const {
  // @@protoc_insertion_point(field_get:google.spanner.admin.instance.v1.GetInstanceConfigRequest.name)
  return name_.GetNoArena();
}
void GetInstanceConfigRequest::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.spanner.admin.instance.v1.GetInstanceConfigRequest.name)
}
#if LANG_CXX11
void GetInstanceConfigRequest::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.spanner.admin.instance.v1.GetInstanceConfigRequest.name)
}
#endif
void GetInstanceConfigRequest::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.spanner.admin.instance.v1.GetInstanceConfigRequest.name)
}
void GetInstanceConfigRequest::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.spanner.admin.instance.v1.GetInstanceConfigRequest.name)
}
::std::string* GetInstanceConfigRequest::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:google.spanner.admin.instance.v1.GetInstanceConfigRequest.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GetInstanceConfigRequest::release_name() {
  // @@protoc_insertion_point(field_release:google.spanner.admin.instance.v1.GetInstanceConfigRequest.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GetInstanceConfigRequest::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:google.spanner.admin.instance.v1.GetInstanceConfigRequest.name)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetInstanceRequest::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetInstanceRequest::GetInstanceRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_google_2fspanner_2fadmin_2finstance_2fv1_2fspanner_5finstance_5fadmin_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.spanner.admin.instance.v1.GetInstanceRequest)
}
GetInstanceRequest::GetInstanceRequest(const GetInstanceRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  // @@protoc_insertion_point(copy_constructor:google.spanner.admin.instance.v1.GetInstanceRequest)
}

void GetInstanceRequest::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

GetInstanceRequest::~GetInstanceRequest() {
  // @@protoc_insertion_point(destructor:google.spanner.admin.instance.v1.GetInstanceRequest)
  SharedDtor();
}

void GetInstanceRequest::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GetInstanceRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetInstanceRequest::descriptor() {
  protobuf_google_2fspanner_2fadmin_2finstance_2fv1_2fspanner_5finstance_5fadmin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fspanner_2fadmin_2finstance_2fv1_2fspanner_5finstance_5fadmin_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetInstanceRequest& GetInstanceRequest::default_instance() {
  protobuf_google_2fspanner_2fadmin_2finstance_2fv1_2fspanner_5finstance_5fadmin_2eproto::InitDefaults();
  return *internal_default_instance();
}

GetInstanceRequest* GetInstanceRequest::New(::google::protobuf::Arena* arena) const {
  GetInstanceRequest* n = new GetInstanceRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetInstanceRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.spanner.admin.instance.v1.GetInstanceRequest)
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool GetInstanceRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.spanner.admin.instance.v1.GetInstanceRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.spanner.admin.instance.v1.GetInstanceRequest.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.spanner.admin.instance.v1.GetInstanceRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.spanner.admin.instance.v1.GetInstanceRequest)
  return false;
#undef DO_
}

void GetInstanceRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.spanner.admin.instance.v1.GetInstanceRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.spanner.admin.instance.v1.GetInstanceRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // @@protoc_insertion_point(serialize_end:google.spanner.admin.instance.v1.GetInstanceRequest)
}

::google::protobuf::uint8* GetInstanceRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.spanner.admin.instance.v1.GetInstanceRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.spanner.admin.instance.v1.GetInstanceRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.spanner.admin.instance.v1.GetInstanceRequest)
  return target;
}

size_t GetInstanceRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.spanner.admin.instance.v1.GetInstanceRequest)
  size_t total_size = 0;

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetInstanceRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.spanner.admin.instance.v1.GetInstanceRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetInstanceRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetInstanceRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.spanner.admin.instance.v1.GetInstanceRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.spanner.admin.instance.v1.GetInstanceRequest)
    MergeFrom(*source);
  }
}

void GetInstanceRequest::MergeFrom(const GetInstanceRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.spanner.admin.instance.v1.GetInstanceRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
}

void GetInstanceRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.spanner.admin.instance.v1.GetInstanceRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetInstanceRequest::CopyFrom(const GetInstanceRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.spanner.admin.instance.v1.GetInstanceRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetInstanceRequest::IsInitialized() const {
  return true;
}

void GetInstanceRequest::Swap(GetInstanceRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetInstanceRequest::InternalSwap(GetInstanceRequest* other) {
  name_.Swap(&other->name_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetInstanceRequest::GetMetadata() const {
  protobuf_google_2fspanner_2fadmin_2finstance_2fv1_2fspanner_5finstance_5fadmin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fspanner_2fadmin_2finstance_2fv1_2fspanner_5finstance_5fadmin_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetInstanceRequest

// string name = 1;
void GetInstanceRequest::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& GetInstanceRequest::name() const {
  // @@protoc_insertion_point(field_get:google.spanner.admin.instance.v1.GetInstanceRequest.name)
  return name_.GetNoArena();
}
void GetInstanceRequest::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.spanner.admin.instance.v1.GetInstanceRequest.name)
}
#if LANG_CXX11
void GetInstanceRequest::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.spanner.admin.instance.v1.GetInstanceRequest.name)
}
#endif
void GetInstanceRequest::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.spanner.admin.instance.v1.GetInstanceRequest.name)
}
void GetInstanceRequest::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.spanner.admin.instance.v1.GetInstanceRequest.name)
}
::std::string* GetInstanceRequest::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:google.spanner.admin.instance.v1.GetInstanceRequest.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GetInstanceRequest::release_name() {
  // @@protoc_insertion_point(field_release:google.spanner.admin.instance.v1.GetInstanceRequest.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GetInstanceRequest::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:google.spanner.admin.instance.v1.GetInstanceRequest.name)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CreateInstanceRequest::kParentFieldNumber;
const int CreateInstanceRequest::kInstanceIdFieldNumber;
const int CreateInstanceRequest::kInstanceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CreateInstanceRequest::CreateInstanceRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_google_2fspanner_2fadmin_2finstance_2fv1_2fspanner_5finstance_5fadmin_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.spanner.admin.instance.v1.CreateInstanceRequest)
}
CreateInstanceRequest::CreateInstanceRequest(const CreateInstanceRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  parent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.parent().size() > 0) {
    parent_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.parent_);
  }
  instance_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.instance_id().size() > 0) {
    instance_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.instance_id_);
  }
  if (from.has_instance()) {
    instance_ = new ::google::spanner::admin::instance::v1::Instance(*from.instance_);
  } else {
    instance_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.spanner.admin.instance.v1.CreateInstanceRequest)
}

void CreateInstanceRequest::SharedCtor() {
  parent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  instance_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  instance_ = NULL;
  _cached_size_ = 0;
}

CreateInstanceRequest::~CreateInstanceRequest() {
  // @@protoc_insertion_point(destructor:google.spanner.admin.instance.v1.CreateInstanceRequest)
  SharedDtor();
}

void CreateInstanceRequest::SharedDtor() {
  parent_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  instance_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete instance_;
  }
}

void CreateInstanceRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CreateInstanceRequest::descriptor() {
  protobuf_google_2fspanner_2fadmin_2finstance_2fv1_2fspanner_5finstance_5fadmin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fspanner_2fadmin_2finstance_2fv1_2fspanner_5finstance_5fadmin_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CreateInstanceRequest& CreateInstanceRequest::default_instance() {
  protobuf_google_2fspanner_2fadmin_2finstance_2fv1_2fspanner_5finstance_5fadmin_2eproto::InitDefaults();
  return *internal_default_instance();
}

CreateInstanceRequest* CreateInstanceRequest::New(::google::protobuf::Arena* arena) const {
  CreateInstanceRequest* n = new CreateInstanceRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CreateInstanceRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.spanner.admin.instance.v1.CreateInstanceRequest)
  parent_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  instance_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && instance_ != NULL) {
    delete instance_;
  }
  instance_ = NULL;
}

bool CreateInstanceRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.spanner.admin.instance.v1.CreateInstanceRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string parent = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_parent()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->parent().data(), this->parent().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.spanner.admin.instance.v1.CreateInstanceRequest.parent"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string instance_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_instance_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->instance_id().data(), this->instance_id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.spanner.admin.instance.v1.CreateInstanceRequest.instance_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.spanner.admin.instance.v1.Instance instance = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_instance()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.spanner.admin.instance.v1.CreateInstanceRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.spanner.admin.instance.v1.CreateInstanceRequest)
  return false;
#undef DO_
}

void CreateInstanceRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.spanner.admin.instance.v1.CreateInstanceRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string parent = 1;
  if (this->parent().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->parent().data(), this->parent().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.spanner.admin.instance.v1.CreateInstanceRequest.parent");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->parent(), output);
  }

  // string instance_id = 2;
  if (this->instance_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->instance_id().data(), this->instance_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.spanner.admin.instance.v1.CreateInstanceRequest.instance_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->instance_id(), output);
  }

  // .google.spanner.admin.instance.v1.Instance instance = 3;
  if (this->has_instance()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->instance_, output);
  }

  // @@protoc_insertion_point(serialize_end:google.spanner.admin.instance.v1.CreateInstanceRequest)
}

::google::protobuf::uint8* CreateInstanceRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.spanner.admin.instance.v1.CreateInstanceRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string parent = 1;
  if (this->parent().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->parent().data(), this->parent().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.spanner.admin.instance.v1.CreateInstanceRequest.parent");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->parent(), target);
  }

  // string instance_id = 2;
  if (this->instance_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->instance_id().data(), this->instance_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.spanner.admin.instance.v1.CreateInstanceRequest.instance_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->instance_id(), target);
  }

  // .google.spanner.admin.instance.v1.Instance instance = 3;
  if (this->has_instance()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->instance_, deterministic, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.spanner.admin.instance.v1.CreateInstanceRequest)
  return target;
}

size_t CreateInstanceRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.spanner.admin.instance.v1.CreateInstanceRequest)
  size_t total_size = 0;

  // string parent = 1;
  if (this->parent().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->parent());
  }

  // string instance_id = 2;
  if (this->instance_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->instance_id());
  }

  // .google.spanner.admin.instance.v1.Instance instance = 3;
  if (this->has_instance()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->instance_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CreateInstanceRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.spanner.admin.instance.v1.CreateInstanceRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateInstanceRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CreateInstanceRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.spanner.admin.instance.v1.CreateInstanceRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.spanner.admin.instance.v1.CreateInstanceRequest)
    MergeFrom(*source);
  }
}

void CreateInstanceRequest::MergeFrom(const CreateInstanceRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.spanner.admin.instance.v1.CreateInstanceRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.parent().size() > 0) {

    parent_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.parent_);
  }
  if (from.instance_id().size() > 0) {

    instance_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.instance_id_);
  }
  if (from.has_instance()) {
    mutable_instance()->::google::spanner::admin::instance::v1::Instance::MergeFrom(from.instance());
  }
}

void CreateInstanceRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.spanner.admin.instance.v1.CreateInstanceRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateInstanceRequest::CopyFrom(const CreateInstanceRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.spanner.admin.instance.v1.CreateInstanceRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateInstanceRequest::IsInitialized() const {
  return true;
}

void CreateInstanceRequest::Swap(CreateInstanceRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CreateInstanceRequest::InternalSwap(CreateInstanceRequest* other) {
  parent_.Swap(&other->parent_);
  instance_id_.Swap(&other->instance_id_);
  std::swap(instance_, other->instance_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CreateInstanceRequest::GetMetadata() const {
  protobuf_google_2fspanner_2fadmin_2finstance_2fv1_2fspanner_5finstance_5fadmin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fspanner_2fadmin_2finstance_2fv1_2fspanner_5finstance_5fadmin_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CreateInstanceRequest

// string parent = 1;
void CreateInstanceRequest::clear_parent() {
  parent_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& CreateInstanceRequest::parent() const {
  // @@protoc_insertion_point(field_get:google.spanner.admin.instance.v1.CreateInstanceRequest.parent)
  return parent_.GetNoArena();
}
void CreateInstanceRequest::set_parent(const ::std::string& value) {
  
  parent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.spanner.admin.instance.v1.CreateInstanceRequest.parent)
}
#if LANG_CXX11
void CreateInstanceRequest::set_parent(::std::string&& value) {
  
  parent_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.spanner.admin.instance.v1.CreateInstanceRequest.parent)
}
#endif
void CreateInstanceRequest::set_parent(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  parent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.spanner.admin.instance.v1.CreateInstanceRequest.parent)
}
void CreateInstanceRequest::set_parent(const char* value, size_t size) {
  
  parent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.spanner.admin.instance.v1.CreateInstanceRequest.parent)
}
::std::string* CreateInstanceRequest::mutable_parent() {
  
  // @@protoc_insertion_point(field_mutable:google.spanner.admin.instance.v1.CreateInstanceRequest.parent)
  return parent_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CreateInstanceRequest::release_parent() {
  // @@protoc_insertion_point(field_release:google.spanner.admin.instance.v1.CreateInstanceRequest.parent)
  
  return parent_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CreateInstanceRequest::set_allocated_parent(::std::string* parent) {
  if (parent != NULL) {
    
  } else {
    
  }
  parent_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), parent);
  // @@protoc_insertion_point(field_set_allocated:google.spanner.admin.instance.v1.CreateInstanceRequest.parent)
}

// string instance_id = 2;
void CreateInstanceRequest::clear_instance_id() {
  instance_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& CreateInstanceRequest::instance_id() const {
  // @@protoc_insertion_point(field_get:google.spanner.admin.instance.v1.CreateInstanceRequest.instance_id)
  return instance_id_.GetNoArena();
}
void CreateInstanceRequest::set_instance_id(const ::std::string& value) {
  
  instance_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.spanner.admin.instance.v1.CreateInstanceRequest.instance_id)
}
#if LANG_CXX11
void CreateInstanceRequest::set_instance_id(::std::string&& value) {
  
  instance_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.spanner.admin.instance.v1.CreateInstanceRequest.instance_id)
}
#endif
void CreateInstanceRequest::set_instance_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  instance_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.spanner.admin.instance.v1.CreateInstanceRequest.instance_id)
}
void CreateInstanceRequest::set_instance_id(const char* value, size_t size) {
  
  instance_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.spanner.admin.instance.v1.CreateInstanceRequest.instance_id)
}
::std::string* CreateInstanceRequest::mutable_instance_id() {
  
  // @@protoc_insertion_point(field_mutable:google.spanner.admin.instance.v1.CreateInstanceRequest.instance_id)
  return instance_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CreateInstanceRequest::release_instance_id() {
  // @@protoc_insertion_point(field_release:google.spanner.admin.instance.v1.CreateInstanceRequest.instance_id)
  
  return instance_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CreateInstanceRequest::set_allocated_instance_id(::std::string* instance_id) {
  if (instance_id != NULL) {
    
  } else {
    
  }
  instance_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), instance_id);
  // @@protoc_insertion_point(field_set_allocated:google.spanner.admin.instance.v1.CreateInstanceRequest.instance_id)
}

// .google.spanner.admin.instance.v1.Instance instance = 3;
bool CreateInstanceRequest::has_instance() const {
  return this != internal_default_instance() && instance_ != NULL;
}
void CreateInstanceRequest::clear_instance() {
  if (GetArenaNoVirtual() == NULL && instance_ != NULL) delete instance_;
  instance_ = NULL;
}
const ::google::spanner::admin::instance::v1::Instance& CreateInstanceRequest::instance() const {
  // @@protoc_insertion_point(field_get:google.spanner.admin.instance.v1.CreateInstanceRequest.instance)
  return instance_ != NULL ? *instance_
                         : *::google::spanner::admin::instance::v1::Instance::internal_default_instance();
}
::google::spanner::admin::instance::v1::Instance* CreateInstanceRequest::mutable_instance() {
  
  if (instance_ == NULL) {
    instance_ = new ::google::spanner::admin::instance::v1::Instance;
  }
  // @@protoc_insertion_point(field_mutable:google.spanner.admin.instance.v1.CreateInstanceRequest.instance)
  return instance_;
}
::google::spanner::admin::instance::v1::Instance* CreateInstanceRequest::release_instance() {
  // @@protoc_insertion_point(field_release:google.spanner.admin.instance.v1.CreateInstanceRequest.instance)
  
  ::google::spanner::admin::instance::v1::Instance* temp = instance_;
  instance_ = NULL;
  return temp;
}
void CreateInstanceRequest::set_allocated_instance(::google::spanner::admin::instance::v1::Instance* instance) {
  delete instance_;
  instance_ = instance;
  if (instance) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.spanner.admin.instance.v1.CreateInstanceRequest.instance)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListInstancesRequest::kParentFieldNumber;
const int ListInstancesRequest::kPageSizeFieldNumber;
const int ListInstancesRequest::kPageTokenFieldNumber;
const int ListInstancesRequest::kFilterFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListInstancesRequest::ListInstancesRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_google_2fspanner_2fadmin_2finstance_2fv1_2fspanner_5finstance_5fadmin_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.spanner.admin.instance.v1.ListInstancesRequest)
}
ListInstancesRequest::ListInstancesRequest(const ListInstancesRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  parent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.parent().size() > 0) {
    parent_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.parent_);
  }
  page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.page_token().size() > 0) {
    page_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.page_token_);
  }
  filter_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.filter().size() > 0) {
    filter_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filter_);
  }
  page_size_ = from.page_size_;
  // @@protoc_insertion_point(copy_constructor:google.spanner.admin.instance.v1.ListInstancesRequest)
}

void ListInstancesRequest::SharedCtor() {
  parent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  filter_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_size_ = 0;
  _cached_size_ = 0;
}

ListInstancesRequest::~ListInstancesRequest() {
  // @@protoc_insertion_point(destructor:google.spanner.admin.instance.v1.ListInstancesRequest)
  SharedDtor();
}

void ListInstancesRequest::SharedDtor() {
  parent_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  filter_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ListInstancesRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ListInstancesRequest::descriptor() {
  protobuf_google_2fspanner_2fadmin_2finstance_2fv1_2fspanner_5finstance_5fadmin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fspanner_2fadmin_2finstance_2fv1_2fspanner_5finstance_5fadmin_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListInstancesRequest& ListInstancesRequest::default_instance() {
  protobuf_google_2fspanner_2fadmin_2finstance_2fv1_2fspanner_5finstance_5fadmin_2eproto::InitDefaults();
  return *internal_default_instance();
}

ListInstancesRequest* ListInstancesRequest::New(::google::protobuf::Arena* arena) const {
  ListInstancesRequest* n = new ListInstancesRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ListInstancesRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.spanner.admin.instance.v1.ListInstancesRequest)
  parent_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  filter_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_size_ = 0;
}

bool ListInstancesRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.spanner.admin.instance.v1.ListInstancesRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string parent = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_parent()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->parent().data(), this->parent().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.spanner.admin.instance.v1.ListInstancesRequest.parent"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 page_size = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &page_size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string page_token = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_page_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->page_token().data(), this->page_token().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.spanner.admin.instance.v1.ListInstancesRequest.page_token"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string filter = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_filter()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->filter().data(), this->filter().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.spanner.admin.instance.v1.ListInstancesRequest.filter"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.spanner.admin.instance.v1.ListInstancesRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.spanner.admin.instance.v1.ListInstancesRequest)
  return false;
#undef DO_
}

void ListInstancesRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.spanner.admin.instance.v1.ListInstancesRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string parent = 1;
  if (this->parent().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->parent().data(), this->parent().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.spanner.admin.instance.v1.ListInstancesRequest.parent");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->parent(), output);
  }

  // int32 page_size = 2;
  if (this->page_size() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->page_size(), output);
  }

  // string page_token = 3;
  if (this->page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->page_token().data(), this->page_token().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.spanner.admin.instance.v1.ListInstancesRequest.page_token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->page_token(), output);
  }

  // string filter = 4;
  if (this->filter().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->filter().data(), this->filter().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.spanner.admin.instance.v1.ListInstancesRequest.filter");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->filter(), output);
  }

  // @@protoc_insertion_point(serialize_end:google.spanner.admin.instance.v1.ListInstancesRequest)
}

::google::protobuf::uint8* ListInstancesRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.spanner.admin.instance.v1.ListInstancesRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string parent = 1;
  if (this->parent().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->parent().data(), this->parent().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.spanner.admin.instance.v1.ListInstancesRequest.parent");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->parent(), target);
  }

  // int32 page_size = 2;
  if (this->page_size() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->page_size(), target);
  }

  // string page_token = 3;
  if (this->page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->page_token().data(), this->page_token().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.spanner.admin.instance.v1.ListInstancesRequest.page_token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->page_token(), target);
  }

  // string filter = 4;
  if (this->filter().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->filter().data(), this->filter().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.spanner.admin.instance.v1.ListInstancesRequest.filter");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->filter(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.spanner.admin.instance.v1.ListInstancesRequest)
  return target;
}

size_t ListInstancesRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.spanner.admin.instance.v1.ListInstancesRequest)
  size_t total_size = 0;

  // string parent = 1;
  if (this->parent().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->parent());
  }

  // string page_token = 3;
  if (this->page_token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->page_token());
  }

  // string filter = 4;
  if (this->filter().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->filter());
  }

  // int32 page_size = 2;
  if (this->page_size() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->page_size());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ListInstancesRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.spanner.admin.instance.v1.ListInstancesRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ListInstancesRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListInstancesRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.spanner.admin.instance.v1.ListInstancesRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.spanner.admin.instance.v1.ListInstancesRequest)
    MergeFrom(*source);
  }
}

void ListInstancesRequest::MergeFrom(const ListInstancesRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.spanner.admin.instance.v1.ListInstancesRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.parent().size() > 0) {

    parent_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.parent_);
  }
  if (from.page_token().size() > 0) {

    page_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.page_token_);
  }
  if (from.filter().size() > 0) {

    filter_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filter_);
  }
  if (from.page_size() != 0) {
    set_page_size(from.page_size());
  }
}

void ListInstancesRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.spanner.admin.instance.v1.ListInstancesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListInstancesRequest::CopyFrom(const ListInstancesRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.spanner.admin.instance.v1.ListInstancesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListInstancesRequest::IsInitialized() const {
  return true;
}

void ListInstancesRequest::Swap(ListInstancesRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListInstancesRequest::InternalSwap(ListInstancesRequest* other) {
  parent_.Swap(&other->parent_);
  page_token_.Swap(&other->page_token_);
  filter_.Swap(&other->filter_);
  std::swap(page_size_, other->page_size_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ListInstancesRequest::GetMetadata() const {
  protobuf_google_2fspanner_2fadmin_2finstance_2fv1_2fspanner_5finstance_5fadmin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fspanner_2fadmin_2finstance_2fv1_2fspanner_5finstance_5fadmin_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ListInstancesRequest

// string parent = 1;
void ListInstancesRequest::clear_parent() {
  parent_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ListInstancesRequest::parent() const {
  // @@protoc_insertion_point(field_get:google.spanner.admin.instance.v1.ListInstancesRequest.parent)
  return parent_.GetNoArena();
}
void ListInstancesRequest::set_parent(const ::std::string& value) {
  
  parent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.spanner.admin.instance.v1.ListInstancesRequest.parent)
}
#if LANG_CXX11
void ListInstancesRequest::set_parent(::std::string&& value) {
  
  parent_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.spanner.admin.instance.v1.ListInstancesRequest.parent)
}
#endif
void ListInstancesRequest::set_parent(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  parent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.spanner.admin.instance.v1.ListInstancesRequest.parent)
}
void ListInstancesRequest::set_parent(const char* value, size_t size) {
  
  parent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.spanner.admin.instance.v1.ListInstancesRequest.parent)
}
::std::string* ListInstancesRequest::mutable_parent() {
  
  // @@protoc_insertion_point(field_mutable:google.spanner.admin.instance.v1.ListInstancesRequest.parent)
  return parent_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ListInstancesRequest::release_parent() {
  // @@protoc_insertion_point(field_release:google.spanner.admin.instance.v1.ListInstancesRequest.parent)
  
  return parent_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ListInstancesRequest::set_allocated_parent(::std::string* parent) {
  if (parent != NULL) {
    
  } else {
    
  }
  parent_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), parent);
  // @@protoc_insertion_point(field_set_allocated:google.spanner.admin.instance.v1.ListInstancesRequest.parent)
}

// int32 page_size = 2;
void ListInstancesRequest::clear_page_size() {
  page_size_ = 0;
}
::google::protobuf::int32 ListInstancesRequest::page_size() const {
  // @@protoc_insertion_point(field_get:google.spanner.admin.instance.v1.ListInstancesRequest.page_size)
  return page_size_;
}
void ListInstancesRequest::set_page_size(::google::protobuf::int32 value) {
  
  page_size_ = value;
  // @@protoc_insertion_point(field_set:google.spanner.admin.instance.v1.ListInstancesRequest.page_size)
}

// string page_token = 3;
void ListInstancesRequest::clear_page_token() {
  page_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ListInstancesRequest::page_token() const {
  // @@protoc_insertion_point(field_get:google.spanner.admin.instance.v1.ListInstancesRequest.page_token)
  return page_token_.GetNoArena();
}
void ListInstancesRequest::set_page_token(const ::std::string& value) {
  
  page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.spanner.admin.instance.v1.ListInstancesRequest.page_token)
}
#if LANG_CXX11
void ListInstancesRequest::set_page_token(::std::string&& value) {
  
  page_token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.spanner.admin.instance.v1.ListInstancesRequest.page_token)
}
#endif
void ListInstancesRequest::set_page_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.spanner.admin.instance.v1.ListInstancesRequest.page_token)
}
void ListInstancesRequest::set_page_token(const char* value, size_t size) {
  
  page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.spanner.admin.instance.v1.ListInstancesRequest.page_token)
}
::std::string* ListInstancesRequest::mutable_page_token() {
  
  // @@protoc_insertion_point(field_mutable:google.spanner.admin.instance.v1.ListInstancesRequest.page_token)
  return page_token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ListInstancesRequest::release_page_token() {
  // @@protoc_insertion_point(field_release:google.spanner.admin.instance.v1.ListInstancesRequest.page_token)
  
  return page_token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ListInstancesRequest::set_allocated_page_token(::std::string* page_token) {
  if (page_token != NULL) {
    
  } else {
    
  }
  page_token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), page_token);
  // @@protoc_insertion_point(field_set_allocated:google.spanner.admin.instance.v1.ListInstancesRequest.page_token)
}

// string filter = 4;
void ListInstancesRequest::clear_filter() {
  filter_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ListInstancesRequest::filter() const {
  // @@protoc_insertion_point(field_get:google.spanner.admin.instance.v1.ListInstancesRequest.filter)
  return filter_.GetNoArena();
}
void ListInstancesRequest::set_filter(const ::std::string& value) {
  
  filter_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.spanner.admin.instance.v1.ListInstancesRequest.filter)
}
#if LANG_CXX11
void ListInstancesRequest::set_filter(::std::string&& value) {
  
  filter_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.spanner.admin.instance.v1.ListInstancesRequest.filter)
}
#endif
void ListInstancesRequest::set_filter(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  filter_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.spanner.admin.instance.v1.ListInstancesRequest.filter)
}
void ListInstancesRequest::set_filter(const char* value, size_t size) {
  
  filter_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.spanner.admin.instance.v1.ListInstancesRequest.filter)
}
::std::string* ListInstancesRequest::mutable_filter() {
  
  // @@protoc_insertion_point(field_mutable:google.spanner.admin.instance.v1.ListInstancesRequest.filter)
  return filter_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ListInstancesRequest::release_filter() {
  // @@protoc_insertion_point(field_release:google.spanner.admin.instance.v1.ListInstancesRequest.filter)
  
  return filter_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ListInstancesRequest::set_allocated_filter(::std::string* filter) {
  if (filter != NULL) {
    
  } else {
    
  }
  filter_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), filter);
  // @@protoc_insertion_point(field_set_allocated:google.spanner.admin.instance.v1.ListInstancesRequest.filter)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListInstancesResponse::kInstancesFieldNumber;
const int ListInstancesResponse::kNextPageTokenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListInstancesResponse::ListInstancesResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_google_2fspanner_2fadmin_2finstance_2fv1_2fspanner_5finstance_5fadmin_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.spanner.admin.instance.v1.ListInstancesResponse)
}
ListInstancesResponse::ListInstancesResponse(const ListInstancesResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      instances_(from.instances_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  next_page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.next_page_token().size() > 0) {
    next_page_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.next_page_token_);
  }
  // @@protoc_insertion_point(copy_constructor:google.spanner.admin.instance.v1.ListInstancesResponse)
}

void ListInstancesResponse::SharedCtor() {
  next_page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

ListInstancesResponse::~ListInstancesResponse() {
  // @@protoc_insertion_point(destructor:google.spanner.admin.instance.v1.ListInstancesResponse)
  SharedDtor();
}

void ListInstancesResponse::SharedDtor() {
  next_page_token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ListInstancesResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ListInstancesResponse::descriptor() {
  protobuf_google_2fspanner_2fadmin_2finstance_2fv1_2fspanner_5finstance_5fadmin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fspanner_2fadmin_2finstance_2fv1_2fspanner_5finstance_5fadmin_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListInstancesResponse& ListInstancesResponse::default_instance() {
  protobuf_google_2fspanner_2fadmin_2finstance_2fv1_2fspanner_5finstance_5fadmin_2eproto::InitDefaults();
  return *internal_default_instance();
}

ListInstancesResponse* ListInstancesResponse::New(::google::protobuf::Arena* arena) const {
  ListInstancesResponse* n = new ListInstancesResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ListInstancesResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:google.spanner.admin.instance.v1.ListInstancesResponse)
  instances_.Clear();
  next_page_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool ListInstancesResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.spanner.admin.instance.v1.ListInstancesResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .google.spanner.admin.instance.v1.Instance instances = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_instances()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string next_page_token = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_next_page_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->next_page_token().data(), this->next_page_token().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.spanner.admin.instance.v1.ListInstancesResponse.next_page_token"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.spanner.admin.instance.v1.ListInstancesResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.spanner.admin.instance.v1.ListInstancesResponse)
  return false;
#undef DO_
}

void ListInstancesResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.spanner.admin.instance.v1.ListInstancesResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.spanner.admin.instance.v1.Instance instances = 1;
  for (unsigned int i = 0, n = this->instances_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->instances(i), output);
  }

  // string next_page_token = 2;
  if (this->next_page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->next_page_token().data(), this->next_page_token().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.spanner.admin.instance.v1.ListInstancesResponse.next_page_token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->next_page_token(), output);
  }

  // @@protoc_insertion_point(serialize_end:google.spanner.admin.instance.v1.ListInstancesResponse)
}

::google::protobuf::uint8* ListInstancesResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.spanner.admin.instance.v1.ListInstancesResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.spanner.admin.instance.v1.Instance instances = 1;
  for (unsigned int i = 0, n = this->instances_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->instances(i), deterministic, target);
  }

  // string next_page_token = 2;
  if (this->next_page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->next_page_token().data(), this->next_page_token().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.spanner.admin.instance.v1.ListInstancesResponse.next_page_token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->next_page_token(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.spanner.admin.instance.v1.ListInstancesResponse)
  return target;
}

size_t ListInstancesResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.spanner.admin.instance.v1.ListInstancesResponse)
  size_t total_size = 0;

  // repeated .google.spanner.admin.instance.v1.Instance instances = 1;
  {
    unsigned int count = this->instances_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->instances(i));
    }
  }

  // string next_page_token = 2;
  if (this->next_page_token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->next_page_token());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ListInstancesResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.spanner.admin.instance.v1.ListInstancesResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ListInstancesResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListInstancesResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.spanner.admin.instance.v1.ListInstancesResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.spanner.admin.instance.v1.ListInstancesResponse)
    MergeFrom(*source);
  }
}

void ListInstancesResponse::MergeFrom(const ListInstancesResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.spanner.admin.instance.v1.ListInstancesResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  instances_.MergeFrom(from.instances_);
  if (from.next_page_token().size() > 0) {

    next_page_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.next_page_token_);
  }
}

void ListInstancesResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.spanner.admin.instance.v1.ListInstancesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListInstancesResponse::CopyFrom(const ListInstancesResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.spanner.admin.instance.v1.ListInstancesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListInstancesResponse::IsInitialized() const {
  return true;
}

void ListInstancesResponse::Swap(ListInstancesResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListInstancesResponse::InternalSwap(ListInstancesResponse* other) {
  instances_.InternalSwap(&other->instances_);
  next_page_token_.Swap(&other->next_page_token_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ListInstancesResponse::GetMetadata() const {
  protobuf_google_2fspanner_2fadmin_2finstance_2fv1_2fspanner_5finstance_5fadmin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fspanner_2fadmin_2finstance_2fv1_2fspanner_5finstance_5fadmin_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ListInstancesResponse

// repeated .google.spanner.admin.instance.v1.Instance instances = 1;
int ListInstancesResponse::instances_size() const {
  return instances_.size();
}
void ListInstancesResponse::clear_instances() {
  instances_.Clear();
}
const ::google::spanner::admin::instance::v1::Instance& ListInstancesResponse::instances(int index) const {
  // @@protoc_insertion_point(field_get:google.spanner.admin.instance.v1.ListInstancesResponse.instances)
  return instances_.Get(index);
}
::google::spanner::admin::instance::v1::Instance* ListInstancesResponse::mutable_instances(int index) {
  // @@protoc_insertion_point(field_mutable:google.spanner.admin.instance.v1.ListInstancesResponse.instances)
  return instances_.Mutable(index);
}
::google::spanner::admin::instance::v1::Instance* ListInstancesResponse::add_instances() {
  // @@protoc_insertion_point(field_add:google.spanner.admin.instance.v1.ListInstancesResponse.instances)
  return instances_.Add();
}
::google::protobuf::RepeatedPtrField< ::google::spanner::admin::instance::v1::Instance >*
ListInstancesResponse::mutable_instances() {
  // @@protoc_insertion_point(field_mutable_list:google.spanner.admin.instance.v1.ListInstancesResponse.instances)
  return &instances_;
}
const ::google::protobuf::RepeatedPtrField< ::google::spanner::admin::instance::v1::Instance >&
ListInstancesResponse::instances() const {
  // @@protoc_insertion_point(field_list:google.spanner.admin.instance.v1.ListInstancesResponse.instances)
  return instances_;
}

// string next_page_token = 2;
void ListInstancesResponse::clear_next_page_token() {
  next_page_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ListInstancesResponse::next_page_token() const {
  // @@protoc_insertion_point(field_get:google.spanner.admin.instance.v1.ListInstancesResponse.next_page_token)
  return next_page_token_.GetNoArena();
}
void ListInstancesResponse::set_next_page_token(const ::std::string& value) {
  
  next_page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.spanner.admin.instance.v1.ListInstancesResponse.next_page_token)
}
#if LANG_CXX11
void ListInstancesResponse::set_next_page_token(::std::string&& value) {
  
  next_page_token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.spanner.admin.instance.v1.ListInstancesResponse.next_page_token)
}
#endif
void ListInstancesResponse::set_next_page_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  next_page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.spanner.admin.instance.v1.ListInstancesResponse.next_page_token)
}
void ListInstancesResponse::set_next_page_token(const char* value, size_t size) {
  
  next_page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.spanner.admin.instance.v1.ListInstancesResponse.next_page_token)
}
::std::string* ListInstancesResponse::mutable_next_page_token() {
  
  // @@protoc_insertion_point(field_mutable:google.spanner.admin.instance.v1.ListInstancesResponse.next_page_token)
  return next_page_token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ListInstancesResponse::release_next_page_token() {
  // @@protoc_insertion_point(field_release:google.spanner.admin.instance.v1.ListInstancesResponse.next_page_token)
  
  return next_page_token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ListInstancesResponse::set_allocated_next_page_token(::std::string* next_page_token) {
  if (next_page_token != NULL) {
    
  } else {
    
  }
  next_page_token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), next_page_token);
  // @@protoc_insertion_point(field_set_allocated:google.spanner.admin.instance.v1.ListInstancesResponse.next_page_token)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UpdateInstanceRequest::kInstanceFieldNumber;
const int UpdateInstanceRequest::kFieldMaskFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UpdateInstanceRequest::UpdateInstanceRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_google_2fspanner_2fadmin_2finstance_2fv1_2fspanner_5finstance_5fadmin_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.spanner.admin.instance.v1.UpdateInstanceRequest)
}
UpdateInstanceRequest::UpdateInstanceRequest(const UpdateInstanceRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_instance()) {
    instance_ = new ::google::spanner::admin::instance::v1::Instance(*from.instance_);
  } else {
    instance_ = NULL;
  }
  if (from.has_field_mask()) {
    field_mask_ = new ::google::protobuf::FieldMask(*from.field_mask_);
  } else {
    field_mask_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.spanner.admin.instance.v1.UpdateInstanceRequest)
}

void UpdateInstanceRequest::SharedCtor() {
  ::memset(&instance_, 0, reinterpret_cast<char*>(&field_mask_) -
    reinterpret_cast<char*>(&instance_) + sizeof(field_mask_));
  _cached_size_ = 0;
}

UpdateInstanceRequest::~UpdateInstanceRequest() {
  // @@protoc_insertion_point(destructor:google.spanner.admin.instance.v1.UpdateInstanceRequest)
  SharedDtor();
}

void UpdateInstanceRequest::SharedDtor() {
  if (this != internal_default_instance()) {
    delete instance_;
  }
  if (this != internal_default_instance()) {
    delete field_mask_;
  }
}

void UpdateInstanceRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UpdateInstanceRequest::descriptor() {
  protobuf_google_2fspanner_2fadmin_2finstance_2fv1_2fspanner_5finstance_5fadmin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fspanner_2fadmin_2finstance_2fv1_2fspanner_5finstance_5fadmin_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UpdateInstanceRequest& UpdateInstanceRequest::default_instance() {
  protobuf_google_2fspanner_2fadmin_2finstance_2fv1_2fspanner_5finstance_5fadmin_2eproto::InitDefaults();
  return *internal_default_instance();
}

UpdateInstanceRequest* UpdateInstanceRequest::New(::google::protobuf::Arena* arena) const {
  UpdateInstanceRequest* n = new UpdateInstanceRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UpdateInstanceRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.spanner.admin.instance.v1.UpdateInstanceRequest)
  if (GetArenaNoVirtual() == NULL && instance_ != NULL) {
    delete instance_;
  }
  instance_ = NULL;
  if (GetArenaNoVirtual() == NULL && field_mask_ != NULL) {
    delete field_mask_;
  }
  field_mask_ = NULL;
}

bool UpdateInstanceRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.spanner.admin.instance.v1.UpdateInstanceRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.spanner.admin.instance.v1.Instance instance = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_instance()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.FieldMask field_mask = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_field_mask()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.spanner.admin.instance.v1.UpdateInstanceRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.spanner.admin.instance.v1.UpdateInstanceRequest)
  return false;
#undef DO_
}

void UpdateInstanceRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.spanner.admin.instance.v1.UpdateInstanceRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.spanner.admin.instance.v1.Instance instance = 1;
  if (this->has_instance()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->instance_, output);
  }

  // .google.protobuf.FieldMask field_mask = 2;
  if (this->has_field_mask()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->field_mask_, output);
  }

  // @@protoc_insertion_point(serialize_end:google.spanner.admin.instance.v1.UpdateInstanceRequest)
}

::google::protobuf::uint8* UpdateInstanceRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.spanner.admin.instance.v1.UpdateInstanceRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.spanner.admin.instance.v1.Instance instance = 1;
  if (this->has_instance()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->instance_, deterministic, target);
  }

  // .google.protobuf.FieldMask field_mask = 2;
  if (this->has_field_mask()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->field_mask_, deterministic, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.spanner.admin.instance.v1.UpdateInstanceRequest)
  return target;
}

size_t UpdateInstanceRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.spanner.admin.instance.v1.UpdateInstanceRequest)
  size_t total_size = 0;

  // .google.spanner.admin.instance.v1.Instance instance = 1;
  if (this->has_instance()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->instance_);
  }

  // .google.protobuf.FieldMask field_mask = 2;
  if (this->has_field_mask()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->field_mask_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UpdateInstanceRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.spanner.admin.instance.v1.UpdateInstanceRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const UpdateInstanceRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UpdateInstanceRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.spanner.admin.instance.v1.UpdateInstanceRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.spanner.admin.instance.v1.UpdateInstanceRequest)
    MergeFrom(*source);
  }
}

void UpdateInstanceRequest::MergeFrom(const UpdateInstanceRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.spanner.admin.instance.v1.UpdateInstanceRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_instance()) {
    mutable_instance()->::google::spanner::admin::instance::v1::Instance::MergeFrom(from.instance());
  }
  if (from.has_field_mask()) {
    mutable_field_mask()->::google::protobuf::FieldMask::MergeFrom(from.field_mask());
  }
}

void UpdateInstanceRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.spanner.admin.instance.v1.UpdateInstanceRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateInstanceRequest::CopyFrom(const UpdateInstanceRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.spanner.admin.instance.v1.UpdateInstanceRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateInstanceRequest::IsInitialized() const {
  return true;
}

void UpdateInstanceRequest::Swap(UpdateInstanceRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UpdateInstanceRequest::InternalSwap(UpdateInstanceRequest* other) {
  std::swap(instance_, other->instance_);
  std::swap(field_mask_, other->field_mask_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UpdateInstanceRequest::GetMetadata() const {
  protobuf_google_2fspanner_2fadmin_2finstance_2fv1_2fspanner_5finstance_5fadmin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fspanner_2fadmin_2finstance_2fv1_2fspanner_5finstance_5fadmin_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// UpdateInstanceRequest

// .google.spanner.admin.instance.v1.Instance instance = 1;
bool UpdateInstanceRequest::has_instance() const {
  return this != internal_default_instance() && instance_ != NULL;
}
void UpdateInstanceRequest::clear_instance() {
  if (GetArenaNoVirtual() == NULL && instance_ != NULL) delete instance_;
  instance_ = NULL;
}
const ::google::spanner::admin::instance::v1::Instance& UpdateInstanceRequest::instance() const {
  // @@protoc_insertion_point(field_get:google.spanner.admin.instance.v1.UpdateInstanceRequest.instance)
  return instance_ != NULL ? *instance_
                         : *::google::spanner::admin::instance::v1::Instance::internal_default_instance();
}
::google::spanner::admin::instance::v1::Instance* UpdateInstanceRequest::mutable_instance() {
  
  if (instance_ == NULL) {
    instance_ = new ::google::spanner::admin::instance::v1::Instance;
  }
  // @@protoc_insertion_point(field_mutable:google.spanner.admin.instance.v1.UpdateInstanceRequest.instance)
  return instance_;
}
::google::spanner::admin::instance::v1::Instance* UpdateInstanceRequest::release_instance() {
  // @@protoc_insertion_point(field_release:google.spanner.admin.instance.v1.UpdateInstanceRequest.instance)
  
  ::google::spanner::admin::instance::v1::Instance* temp = instance_;
  instance_ = NULL;
  return temp;
}
void UpdateInstanceRequest::set_allocated_instance(::google::spanner::admin::instance::v1::Instance* instance) {
  delete instance_;
  instance_ = instance;
  if (instance) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.spanner.admin.instance.v1.UpdateInstanceRequest.instance)
}

// .google.protobuf.FieldMask field_mask = 2;
bool UpdateInstanceRequest::has_field_mask() const {
  return this != internal_default_instance() && field_mask_ != NULL;
}
void UpdateInstanceRequest::clear_field_mask() {
  if (GetArenaNoVirtual() == NULL && field_mask_ != NULL) delete field_mask_;
  field_mask_ = NULL;
}
const ::google::protobuf::FieldMask& UpdateInstanceRequest::field_mask() const {
  // @@protoc_insertion_point(field_get:google.spanner.admin.instance.v1.UpdateInstanceRequest.field_mask)
  return field_mask_ != NULL ? *field_mask_
                         : *::google::protobuf::FieldMask::internal_default_instance();
}
::google::protobuf::FieldMask* UpdateInstanceRequest::mutable_field_mask() {
  
  if (field_mask_ == NULL) {
    field_mask_ = new ::google::protobuf::FieldMask;
  }
  // @@protoc_insertion_point(field_mutable:google.spanner.admin.instance.v1.UpdateInstanceRequest.field_mask)
  return field_mask_;
}
::google::protobuf::FieldMask* UpdateInstanceRequest::release_field_mask() {
  // @@protoc_insertion_point(field_release:google.spanner.admin.instance.v1.UpdateInstanceRequest.field_mask)
  
  ::google::protobuf::FieldMask* temp = field_mask_;
  field_mask_ = NULL;
  return temp;
}
void UpdateInstanceRequest::set_allocated_field_mask(::google::protobuf::FieldMask* field_mask) {
  delete field_mask_;
  field_mask_ = field_mask;
  if (field_mask) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.spanner.admin.instance.v1.UpdateInstanceRequest.field_mask)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DeleteInstanceRequest::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DeleteInstanceRequest::DeleteInstanceRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_google_2fspanner_2fadmin_2finstance_2fv1_2fspanner_5finstance_5fadmin_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.spanner.admin.instance.v1.DeleteInstanceRequest)
}
DeleteInstanceRequest::DeleteInstanceRequest(const DeleteInstanceRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  // @@protoc_insertion_point(copy_constructor:google.spanner.admin.instance.v1.DeleteInstanceRequest)
}

void DeleteInstanceRequest::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

DeleteInstanceRequest::~DeleteInstanceRequest() {
  // @@protoc_insertion_point(destructor:google.spanner.admin.instance.v1.DeleteInstanceRequest)
  SharedDtor();
}

void DeleteInstanceRequest::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DeleteInstanceRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DeleteInstanceRequest::descriptor() {
  protobuf_google_2fspanner_2fadmin_2finstance_2fv1_2fspanner_5finstance_5fadmin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fspanner_2fadmin_2finstance_2fv1_2fspanner_5finstance_5fadmin_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DeleteInstanceRequest& DeleteInstanceRequest::default_instance() {
  protobuf_google_2fspanner_2fadmin_2finstance_2fv1_2fspanner_5finstance_5fadmin_2eproto::InitDefaults();
  return *internal_default_instance();
}

DeleteInstanceRequest* DeleteInstanceRequest::New(::google::protobuf::Arena* arena) const {
  DeleteInstanceRequest* n = new DeleteInstanceRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DeleteInstanceRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.spanner.admin.instance.v1.DeleteInstanceRequest)
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool DeleteInstanceRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.spanner.admin.instance.v1.DeleteInstanceRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.spanner.admin.instance.v1.DeleteInstanceRequest.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.spanner.admin.instance.v1.DeleteInstanceRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.spanner.admin.instance.v1.DeleteInstanceRequest)
  return false;
#undef DO_
}

void DeleteInstanceRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.spanner.admin.instance.v1.DeleteInstanceRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.spanner.admin.instance.v1.DeleteInstanceRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // @@protoc_insertion_point(serialize_end:google.spanner.admin.instance.v1.DeleteInstanceRequest)
}

::google::protobuf::uint8* DeleteInstanceRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.spanner.admin.instance.v1.DeleteInstanceRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.spanner.admin.instance.v1.DeleteInstanceRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.spanner.admin.instance.v1.DeleteInstanceRequest)
  return target;
}

size_t DeleteInstanceRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.spanner.admin.instance.v1.DeleteInstanceRequest)
  size_t total_size = 0;

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DeleteInstanceRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.spanner.admin.instance.v1.DeleteInstanceRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteInstanceRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DeleteInstanceRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.spanner.admin.instance.v1.DeleteInstanceRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.spanner.admin.instance.v1.DeleteInstanceRequest)
    MergeFrom(*source);
  }
}

void DeleteInstanceRequest::MergeFrom(const DeleteInstanceRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.spanner.admin.instance.v1.DeleteInstanceRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
}

void DeleteInstanceRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.spanner.admin.instance.v1.DeleteInstanceRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteInstanceRequest::CopyFrom(const DeleteInstanceRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.spanner.admin.instance.v1.DeleteInstanceRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteInstanceRequest::IsInitialized() const {
  return true;
}

void DeleteInstanceRequest::Swap(DeleteInstanceRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DeleteInstanceRequest::InternalSwap(DeleteInstanceRequest* other) {
  name_.Swap(&other->name_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DeleteInstanceRequest::GetMetadata() const {
  protobuf_google_2fspanner_2fadmin_2finstance_2fv1_2fspanner_5finstance_5fadmin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fspanner_2fadmin_2finstance_2fv1_2fspanner_5finstance_5fadmin_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DeleteInstanceRequest

// string name = 1;
void DeleteInstanceRequest::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& DeleteInstanceRequest::name() const {
  // @@protoc_insertion_point(field_get:google.spanner.admin.instance.v1.DeleteInstanceRequest.name)
  return name_.GetNoArena();
}
void DeleteInstanceRequest::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.spanner.admin.instance.v1.DeleteInstanceRequest.name)
}
#if LANG_CXX11
void DeleteInstanceRequest::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.spanner.admin.instance.v1.DeleteInstanceRequest.name)
}
#endif
void DeleteInstanceRequest::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.spanner.admin.instance.v1.DeleteInstanceRequest.name)
}
void DeleteInstanceRequest::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.spanner.admin.instance.v1.DeleteInstanceRequest.name)
}
::std::string* DeleteInstanceRequest::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:google.spanner.admin.instance.v1.DeleteInstanceRequest.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* DeleteInstanceRequest::release_name() {
  // @@protoc_insertion_point(field_release:google.spanner.admin.instance.v1.DeleteInstanceRequest.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void DeleteInstanceRequest::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:google.spanner.admin.instance.v1.DeleteInstanceRequest.name)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CreateInstanceMetadata::kInstanceFieldNumber;
const int CreateInstanceMetadata::kStartTimeFieldNumber;
const int CreateInstanceMetadata::kCancelTimeFieldNumber;
const int CreateInstanceMetadata::kEndTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CreateInstanceMetadata::CreateInstanceMetadata()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_google_2fspanner_2fadmin_2finstance_2fv1_2fspanner_5finstance_5fadmin_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.spanner.admin.instance.v1.CreateInstanceMetadata)
}
CreateInstanceMetadata::CreateInstanceMetadata(const CreateInstanceMetadata& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_instance()) {
    instance_ = new ::google::spanner::admin::instance::v1::Instance(*from.instance_);
  } else {
    instance_ = NULL;
  }
  if (from.has_start_time()) {
    start_time_ = new ::google::protobuf::Timestamp(*from.start_time_);
  } else {
    start_time_ = NULL;
  }
  if (from.has_cancel_time()) {
    cancel_time_ = new ::google::protobuf::Timestamp(*from.cancel_time_);
  } else {
    cancel_time_ = NULL;
  }
  if (from.has_end_time()) {
    end_time_ = new ::google::protobuf::Timestamp(*from.end_time_);
  } else {
    end_time_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.spanner.admin.instance.v1.CreateInstanceMetadata)
}

void CreateInstanceMetadata::SharedCtor() {
  ::memset(&instance_, 0, reinterpret_cast<char*>(&end_time_) -
    reinterpret_cast<char*>(&instance_) + sizeof(end_time_));
  _cached_size_ = 0;
}

CreateInstanceMetadata::~CreateInstanceMetadata() {
  // @@protoc_insertion_point(destructor:google.spanner.admin.instance.v1.CreateInstanceMetadata)
  SharedDtor();
}

void CreateInstanceMetadata::SharedDtor() {
  if (this != internal_default_instance()) {
    delete instance_;
  }
  if (this != internal_default_instance()) {
    delete start_time_;
  }
  if (this != internal_default_instance()) {
    delete cancel_time_;
  }
  if (this != internal_default_instance()) {
    delete end_time_;
  }
}

void CreateInstanceMetadata::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CreateInstanceMetadata::descriptor() {
  protobuf_google_2fspanner_2fadmin_2finstance_2fv1_2fspanner_5finstance_5fadmin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fspanner_2fadmin_2finstance_2fv1_2fspanner_5finstance_5fadmin_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CreateInstanceMetadata& CreateInstanceMetadata::default_instance() {
  protobuf_google_2fspanner_2fadmin_2finstance_2fv1_2fspanner_5finstance_5fadmin_2eproto::InitDefaults();
  return *internal_default_instance();
}

CreateInstanceMetadata* CreateInstanceMetadata::New(::google::protobuf::Arena* arena) const {
  CreateInstanceMetadata* n = new CreateInstanceMetadata;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CreateInstanceMetadata::Clear() {
// @@protoc_insertion_point(message_clear_start:google.spanner.admin.instance.v1.CreateInstanceMetadata)
  if (GetArenaNoVirtual() == NULL && instance_ != NULL) {
    delete instance_;
  }
  instance_ = NULL;
  if (GetArenaNoVirtual() == NULL && start_time_ != NULL) {
    delete start_time_;
  }
  start_time_ = NULL;
  if (GetArenaNoVirtual() == NULL && cancel_time_ != NULL) {
    delete cancel_time_;
  }
  cancel_time_ = NULL;
  if (GetArenaNoVirtual() == NULL && end_time_ != NULL) {
    delete end_time_;
  }
  end_time_ = NULL;
}

bool CreateInstanceMetadata::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.spanner.admin.instance.v1.CreateInstanceMetadata)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.spanner.admin.instance.v1.Instance instance = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_instance()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Timestamp start_time = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_start_time()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Timestamp cancel_time = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_cancel_time()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Timestamp end_time = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_end_time()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.spanner.admin.instance.v1.CreateInstanceMetadata)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.spanner.admin.instance.v1.CreateInstanceMetadata)
  return false;
#undef DO_
}

void CreateInstanceMetadata::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.spanner.admin.instance.v1.CreateInstanceMetadata)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.spanner.admin.instance.v1.Instance instance = 1;
  if (this->has_instance()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->instance_, output);
  }

  // .google.protobuf.Timestamp start_time = 2;
  if (this->has_start_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->start_time_, output);
  }

  // .google.protobuf.Timestamp cancel_time = 3;
  if (this->has_cancel_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->cancel_time_, output);
  }

  // .google.protobuf.Timestamp end_time = 4;
  if (this->has_end_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->end_time_, output);
  }

  // @@protoc_insertion_point(serialize_end:google.spanner.admin.instance.v1.CreateInstanceMetadata)
}

::google::protobuf::uint8* CreateInstanceMetadata::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.spanner.admin.instance.v1.CreateInstanceMetadata)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.spanner.admin.instance.v1.Instance instance = 1;
  if (this->has_instance()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->instance_, deterministic, target);
  }

  // .google.protobuf.Timestamp start_time = 2;
  if (this->has_start_time()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->start_time_, deterministic, target);
  }

  // .google.protobuf.Timestamp cancel_time = 3;
  if (this->has_cancel_time()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->cancel_time_, deterministic, target);
  }

  // .google.protobuf.Timestamp end_time = 4;
  if (this->has_end_time()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, *this->end_time_, deterministic, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.spanner.admin.instance.v1.CreateInstanceMetadata)
  return target;
}

size_t CreateInstanceMetadata::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.spanner.admin.instance.v1.CreateInstanceMetadata)
  size_t total_size = 0;

  // .google.spanner.admin.instance.v1.Instance instance = 1;
  if (this->has_instance()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->instance_);
  }

  // .google.protobuf.Timestamp start_time = 2;
  if (this->has_start_time()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->start_time_);
  }

  // .google.protobuf.Timestamp cancel_time = 3;
  if (this->has_cancel_time()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->cancel_time_);
  }

  // .google.protobuf.Timestamp end_time = 4;
  if (this->has_end_time()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->end_time_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CreateInstanceMetadata::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.spanner.admin.instance.v1.CreateInstanceMetadata)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateInstanceMetadata* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CreateInstanceMetadata>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.spanner.admin.instance.v1.CreateInstanceMetadata)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.spanner.admin.instance.v1.CreateInstanceMetadata)
    MergeFrom(*source);
  }
}

void CreateInstanceMetadata::MergeFrom(const CreateInstanceMetadata& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.spanner.admin.instance.v1.CreateInstanceMetadata)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_instance()) {
    mutable_instance()->::google::spanner::admin::instance::v1::Instance::MergeFrom(from.instance());
  }
  if (from.has_start_time()) {
    mutable_start_time()->::google::protobuf::Timestamp::MergeFrom(from.start_time());
  }
  if (from.has_cancel_time()) {
    mutable_cancel_time()->::google::protobuf::Timestamp::MergeFrom(from.cancel_time());
  }
  if (from.has_end_time()) {
    mutable_end_time()->::google::protobuf::Timestamp::MergeFrom(from.end_time());
  }
}

void CreateInstanceMetadata::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.spanner.admin.instance.v1.CreateInstanceMetadata)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateInstanceMetadata::CopyFrom(const CreateInstanceMetadata& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.spanner.admin.instance.v1.CreateInstanceMetadata)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateInstanceMetadata::IsInitialized() const {
  return true;
}

void CreateInstanceMetadata::Swap(CreateInstanceMetadata* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CreateInstanceMetadata::InternalSwap(CreateInstanceMetadata* other) {
  std::swap(instance_, other->instance_);
  std::swap(start_time_, other->start_time_);
  std::swap(cancel_time_, other->cancel_time_);
  std::swap(end_time_, other->end_time_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CreateInstanceMetadata::GetMetadata() const {
  protobuf_google_2fspanner_2fadmin_2finstance_2fv1_2fspanner_5finstance_5fadmin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fspanner_2fadmin_2finstance_2fv1_2fspanner_5finstance_5fadmin_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CreateInstanceMetadata

// .google.spanner.admin.instance.v1.Instance instance = 1;
bool CreateInstanceMetadata::has_instance() const {
  return this != internal_default_instance() && instance_ != NULL;
}
void CreateInstanceMetadata::clear_instance() {
  if (GetArenaNoVirtual() == NULL && instance_ != NULL) delete instance_;
  instance_ = NULL;
}
const ::google::spanner::admin::instance::v1::Instance& CreateInstanceMetadata::instance() const {
  // @@protoc_insertion_point(field_get:google.spanner.admin.instance.v1.CreateInstanceMetadata.instance)
  return instance_ != NULL ? *instance_
                         : *::google::spanner::admin::instance::v1::Instance::internal_default_instance();
}
::google::spanner::admin::instance::v1::Instance* CreateInstanceMetadata::mutable_instance() {
  
  if (instance_ == NULL) {
    instance_ = new ::google::spanner::admin::instance::v1::Instance;
  }
  // @@protoc_insertion_point(field_mutable:google.spanner.admin.instance.v1.CreateInstanceMetadata.instance)
  return instance_;
}
::google::spanner::admin::instance::v1::Instance* CreateInstanceMetadata::release_instance() {
  // @@protoc_insertion_point(field_release:google.spanner.admin.instance.v1.CreateInstanceMetadata.instance)
  
  ::google::spanner::admin::instance::v1::Instance* temp = instance_;
  instance_ = NULL;
  return temp;
}
void CreateInstanceMetadata::set_allocated_instance(::google::spanner::admin::instance::v1::Instance* instance) {
  delete instance_;
  instance_ = instance;
  if (instance) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.spanner.admin.instance.v1.CreateInstanceMetadata.instance)
}

// .google.protobuf.Timestamp start_time = 2;
bool CreateInstanceMetadata::has_start_time() const {
  return this != internal_default_instance() && start_time_ != NULL;
}
void CreateInstanceMetadata::clear_start_time() {
  if (GetArenaNoVirtual() == NULL && start_time_ != NULL) delete start_time_;
  start_time_ = NULL;
}
const ::google::protobuf::Timestamp& CreateInstanceMetadata::start_time() const {
  // @@protoc_insertion_point(field_get:google.spanner.admin.instance.v1.CreateInstanceMetadata.start_time)
  return start_time_ != NULL ? *start_time_
                         : *::google::protobuf::Timestamp::internal_default_instance();
}
::google::protobuf::Timestamp* CreateInstanceMetadata::mutable_start_time() {
  
  if (start_time_ == NULL) {
    start_time_ = new ::google::protobuf::Timestamp;
  }
  // @@protoc_insertion_point(field_mutable:google.spanner.admin.instance.v1.CreateInstanceMetadata.start_time)
  return start_time_;
}
::google::protobuf::Timestamp* CreateInstanceMetadata::release_start_time() {
  // @@protoc_insertion_point(field_release:google.spanner.admin.instance.v1.CreateInstanceMetadata.start_time)
  
  ::google::protobuf::Timestamp* temp = start_time_;
  start_time_ = NULL;
  return temp;
}
void CreateInstanceMetadata::set_allocated_start_time(::google::protobuf::Timestamp* start_time) {
  delete start_time_;
  if (start_time != NULL && start_time->GetArena() != NULL) {
    ::google::protobuf::Timestamp* new_start_time = new ::google::protobuf::Timestamp;
    new_start_time->CopyFrom(*start_time);
    start_time = new_start_time;
  }
  start_time_ = start_time;
  if (start_time) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.spanner.admin.instance.v1.CreateInstanceMetadata.start_time)
}

// .google.protobuf.Timestamp cancel_time = 3;
bool CreateInstanceMetadata::has_cancel_time() const {
  return this != internal_default_instance() && cancel_time_ != NULL;
}
void CreateInstanceMetadata::clear_cancel_time() {
  if (GetArenaNoVirtual() == NULL && cancel_time_ != NULL) delete cancel_time_;
  cancel_time_ = NULL;
}
const ::google::protobuf::Timestamp& CreateInstanceMetadata::cancel_time() const {
  // @@protoc_insertion_point(field_get:google.spanner.admin.instance.v1.CreateInstanceMetadata.cancel_time)
  return cancel_time_ != NULL ? *cancel_time_
                         : *::google::protobuf::Timestamp::internal_default_instance();
}
::google::protobuf::Timestamp* CreateInstanceMetadata::mutable_cancel_time() {
  
  if (cancel_time_ == NULL) {
    cancel_time_ = new ::google::protobuf::Timestamp;
  }
  // @@protoc_insertion_point(field_mutable:google.spanner.admin.instance.v1.CreateInstanceMetadata.cancel_time)
  return cancel_time_;
}
::google::protobuf::Timestamp* CreateInstanceMetadata::release_cancel_time() {
  // @@protoc_insertion_point(field_release:google.spanner.admin.instance.v1.CreateInstanceMetadata.cancel_time)
  
  ::google::protobuf::Timestamp* temp = cancel_time_;
  cancel_time_ = NULL;
  return temp;
}
void CreateInstanceMetadata::set_allocated_cancel_time(::google::protobuf::Timestamp* cancel_time) {
  delete cancel_time_;
  if (cancel_time != NULL && cancel_time->GetArena() != NULL) {
    ::google::protobuf::Timestamp* new_cancel_time = new ::google::protobuf::Timestamp;
    new_cancel_time->CopyFrom(*cancel_time);
    cancel_time = new_cancel_time;
  }
  cancel_time_ = cancel_time;
  if (cancel_time) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.spanner.admin.instance.v1.CreateInstanceMetadata.cancel_time)
}

// .google.protobuf.Timestamp end_time = 4;
bool CreateInstanceMetadata::has_end_time() const {
  return this != internal_default_instance() && end_time_ != NULL;
}
void CreateInstanceMetadata::clear_end_time() {
  if (GetArenaNoVirtual() == NULL && end_time_ != NULL) delete end_time_;
  end_time_ = NULL;
}
const ::google::protobuf::Timestamp& CreateInstanceMetadata::end_time() const {
  // @@protoc_insertion_point(field_get:google.spanner.admin.instance.v1.CreateInstanceMetadata.end_time)
  return end_time_ != NULL ? *end_time_
                         : *::google::protobuf::Timestamp::internal_default_instance();
}
::google::protobuf::Timestamp* CreateInstanceMetadata::mutable_end_time() {
  
  if (end_time_ == NULL) {
    end_time_ = new ::google::protobuf::Timestamp;
  }
  // @@protoc_insertion_point(field_mutable:google.spanner.admin.instance.v1.CreateInstanceMetadata.end_time)
  return end_time_;
}
::google::protobuf::Timestamp* CreateInstanceMetadata::release_end_time() {
  // @@protoc_insertion_point(field_release:google.spanner.admin.instance.v1.CreateInstanceMetadata.end_time)
  
  ::google::protobuf::Timestamp* temp = end_time_;
  end_time_ = NULL;
  return temp;
}
void CreateInstanceMetadata::set_allocated_end_time(::google::protobuf::Timestamp* end_time) {
  delete end_time_;
  if (end_time != NULL && end_time->GetArena() != NULL) {
    ::google::protobuf::Timestamp* new_end_time = new ::google::protobuf::Timestamp;
    new_end_time->CopyFrom(*end_time);
    end_time = new_end_time;
  }
  end_time_ = end_time;
  if (end_time) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.spanner.admin.instance.v1.CreateInstanceMetadata.end_time)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UpdateInstanceMetadata::kInstanceFieldNumber;
const int UpdateInstanceMetadata::kStartTimeFieldNumber;
const int UpdateInstanceMetadata::kCancelTimeFieldNumber;
const int UpdateInstanceMetadata::kEndTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UpdateInstanceMetadata::UpdateInstanceMetadata()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_google_2fspanner_2fadmin_2finstance_2fv1_2fspanner_5finstance_5fadmin_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.spanner.admin.instance.v1.UpdateInstanceMetadata)
}
UpdateInstanceMetadata::UpdateInstanceMetadata(const UpdateInstanceMetadata& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_instance()) {
    instance_ = new ::google::spanner::admin::instance::v1::Instance(*from.instance_);
  } else {
    instance_ = NULL;
  }
  if (from.has_start_time()) {
    start_time_ = new ::google::protobuf::Timestamp(*from.start_time_);
  } else {
    start_time_ = NULL;
  }
  if (from.has_cancel_time()) {
    cancel_time_ = new ::google::protobuf::Timestamp(*from.cancel_time_);
  } else {
    cancel_time_ = NULL;
  }
  if (from.has_end_time()) {
    end_time_ = new ::google::protobuf::Timestamp(*from.end_time_);
  } else {
    end_time_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.spanner.admin.instance.v1.UpdateInstanceMetadata)
}

void UpdateInstanceMetadata::SharedCtor() {
  ::memset(&instance_, 0, reinterpret_cast<char*>(&end_time_) -
    reinterpret_cast<char*>(&instance_) + sizeof(end_time_));
  _cached_size_ = 0;
}

UpdateInstanceMetadata::~UpdateInstanceMetadata() {
  // @@protoc_insertion_point(destructor:google.spanner.admin.instance.v1.UpdateInstanceMetadata)
  SharedDtor();
}

void UpdateInstanceMetadata::SharedDtor() {
  if (this != internal_default_instance()) {
    delete instance_;
  }
  if (this != internal_default_instance()) {
    delete start_time_;
  }
  if (this != internal_default_instance()) {
    delete cancel_time_;
  }
  if (this != internal_default_instance()) {
    delete end_time_;
  }
}

void UpdateInstanceMetadata::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UpdateInstanceMetadata::descriptor() {
  protobuf_google_2fspanner_2fadmin_2finstance_2fv1_2fspanner_5finstance_5fadmin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fspanner_2fadmin_2finstance_2fv1_2fspanner_5finstance_5fadmin_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UpdateInstanceMetadata& UpdateInstanceMetadata::default_instance() {
  protobuf_google_2fspanner_2fadmin_2finstance_2fv1_2fspanner_5finstance_5fadmin_2eproto::InitDefaults();
  return *internal_default_instance();
}

UpdateInstanceMetadata* UpdateInstanceMetadata::New(::google::protobuf::Arena* arena) const {
  UpdateInstanceMetadata* n = new UpdateInstanceMetadata;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UpdateInstanceMetadata::Clear() {
// @@protoc_insertion_point(message_clear_start:google.spanner.admin.instance.v1.UpdateInstanceMetadata)
  if (GetArenaNoVirtual() == NULL && instance_ != NULL) {
    delete instance_;
  }
  instance_ = NULL;
  if (GetArenaNoVirtual() == NULL && start_time_ != NULL) {
    delete start_time_;
  }
  start_time_ = NULL;
  if (GetArenaNoVirtual() == NULL && cancel_time_ != NULL) {
    delete cancel_time_;
  }
  cancel_time_ = NULL;
  if (GetArenaNoVirtual() == NULL && end_time_ != NULL) {
    delete end_time_;
  }
  end_time_ = NULL;
}

bool UpdateInstanceMetadata::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.spanner.admin.instance.v1.UpdateInstanceMetadata)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.spanner.admin.instance.v1.Instance instance = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_instance()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Timestamp start_time = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_start_time()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Timestamp cancel_time = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_cancel_time()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Timestamp end_time = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_end_time()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.spanner.admin.instance.v1.UpdateInstanceMetadata)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.spanner.admin.instance.v1.UpdateInstanceMetadata)
  return false;
#undef DO_
}

void UpdateInstanceMetadata::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.spanner.admin.instance.v1.UpdateInstanceMetadata)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.spanner.admin.instance.v1.Instance instance = 1;
  if (this->has_instance()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->instance_, output);
  }

  // .google.protobuf.Timestamp start_time = 2;
  if (this->has_start_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->start_time_, output);
  }

  // .google.protobuf.Timestamp cancel_time = 3;
  if (this->has_cancel_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->cancel_time_, output);
  }

  // .google.protobuf.Timestamp end_time = 4;
  if (this->has_end_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->end_time_, output);
  }

  // @@protoc_insertion_point(serialize_end:google.spanner.admin.instance.v1.UpdateInstanceMetadata)
}

::google::protobuf::uint8* UpdateInstanceMetadata::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.spanner.admin.instance.v1.UpdateInstanceMetadata)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.spanner.admin.instance.v1.Instance instance = 1;
  if (this->has_instance()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->instance_, deterministic, target);
  }

  // .google.protobuf.Timestamp start_time = 2;
  if (this->has_start_time()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->start_time_, deterministic, target);
  }

  // .google.protobuf.Timestamp cancel_time = 3;
  if (this->has_cancel_time()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->cancel_time_, deterministic, target);
  }

  // .google.protobuf.Timestamp end_time = 4;
  if (this->has_end_time()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, *this->end_time_, deterministic, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.spanner.admin.instance.v1.UpdateInstanceMetadata)
  return target;
}

size_t UpdateInstanceMetadata::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.spanner.admin.instance.v1.UpdateInstanceMetadata)
  size_t total_size = 0;

  // .google.spanner.admin.instance.v1.Instance instance = 1;
  if (this->has_instance()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->instance_);
  }

  // .google.protobuf.Timestamp start_time = 2;
  if (this->has_start_time()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->start_time_);
  }

  // .google.protobuf.Timestamp cancel_time = 3;
  if (this->has_cancel_time()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->cancel_time_);
  }

  // .google.protobuf.Timestamp end_time = 4;
  if (this->has_end_time()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->end_time_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UpdateInstanceMetadata::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.spanner.admin.instance.v1.UpdateInstanceMetadata)
  GOOGLE_DCHECK_NE(&from, this);
  const UpdateInstanceMetadata* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UpdateInstanceMetadata>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.spanner.admin.instance.v1.UpdateInstanceMetadata)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.spanner.admin.instance.v1.UpdateInstanceMetadata)
    MergeFrom(*source);
  }
}

void UpdateInstanceMetadata::MergeFrom(const UpdateInstanceMetadata& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.spanner.admin.instance.v1.UpdateInstanceMetadata)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_instance()) {
    mutable_instance()->::google::spanner::admin::instance::v1::Instance::MergeFrom(from.instance());
  }
  if (from.has_start_time()) {
    mutable_start_time()->::google::protobuf::Timestamp::MergeFrom(from.start_time());
  }
  if (from.has_cancel_time()) {
    mutable_cancel_time()->::google::protobuf::Timestamp::MergeFrom(from.cancel_time());
  }
  if (from.has_end_time()) {
    mutable_end_time()->::google::protobuf::Timestamp::MergeFrom(from.end_time());
  }
}

void UpdateInstanceMetadata::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.spanner.admin.instance.v1.UpdateInstanceMetadata)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateInstanceMetadata::CopyFrom(const UpdateInstanceMetadata& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.spanner.admin.instance.v1.UpdateInstanceMetadata)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateInstanceMetadata::IsInitialized() const {
  return true;
}

void UpdateInstanceMetadata::Swap(UpdateInstanceMetadata* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UpdateInstanceMetadata::InternalSwap(UpdateInstanceMetadata* other) {
  std::swap(instance_, other->instance_);
  std::swap(start_time_, other->start_time_);
  std::swap(cancel_time_, other->cancel_time_);
  std::swap(end_time_, other->end_time_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UpdateInstanceMetadata::GetMetadata() const {
  protobuf_google_2fspanner_2fadmin_2finstance_2fv1_2fspanner_5finstance_5fadmin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fspanner_2fadmin_2finstance_2fv1_2fspanner_5finstance_5fadmin_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// UpdateInstanceMetadata

// .google.spanner.admin.instance.v1.Instance instance = 1;
bool UpdateInstanceMetadata::has_instance() const {
  return this != internal_default_instance() && instance_ != NULL;
}
void UpdateInstanceMetadata::clear_instance() {
  if (GetArenaNoVirtual() == NULL && instance_ != NULL) delete instance_;
  instance_ = NULL;
}
const ::google::spanner::admin::instance::v1::Instance& UpdateInstanceMetadata::instance() const {
  // @@protoc_insertion_point(field_get:google.spanner.admin.instance.v1.UpdateInstanceMetadata.instance)
  return instance_ != NULL ? *instance_
                         : *::google::spanner::admin::instance::v1::Instance::internal_default_instance();
}
::google::spanner::admin::instance::v1::Instance* UpdateInstanceMetadata::mutable_instance() {
  
  if (instance_ == NULL) {
    instance_ = new ::google::spanner::admin::instance::v1::Instance;
  }
  // @@protoc_insertion_point(field_mutable:google.spanner.admin.instance.v1.UpdateInstanceMetadata.instance)
  return instance_;
}
::google::spanner::admin::instance::v1::Instance* UpdateInstanceMetadata::release_instance() {
  // @@protoc_insertion_point(field_release:google.spanner.admin.instance.v1.UpdateInstanceMetadata.instance)
  
  ::google::spanner::admin::instance::v1::Instance* temp = instance_;
  instance_ = NULL;
  return temp;
}
void UpdateInstanceMetadata::set_allocated_instance(::google::spanner::admin::instance::v1::Instance* instance) {
  delete instance_;
  instance_ = instance;
  if (instance) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.spanner.admin.instance.v1.UpdateInstanceMetadata.instance)
}

// .google.protobuf.Timestamp start_time = 2;
bool UpdateInstanceMetadata::has_start_time() const {
  return this != internal_default_instance() && start_time_ != NULL;
}
void UpdateInstanceMetadata::clear_start_time() {
  if (GetArenaNoVirtual() == NULL && start_time_ != NULL) delete start_time_;
  start_time_ = NULL;
}
const ::google::protobuf::Timestamp& UpdateInstanceMetadata::start_time() const {
  // @@protoc_insertion_point(field_get:google.spanner.admin.instance.v1.UpdateInstanceMetadata.start_time)
  return start_time_ != NULL ? *start_time_
                         : *::google::protobuf::Timestamp::internal_default_instance();
}
::google::protobuf::Timestamp* UpdateInstanceMetadata::mutable_start_time() {
  
  if (start_time_ == NULL) {
    start_time_ = new ::google::protobuf::Timestamp;
  }
  // @@protoc_insertion_point(field_mutable:google.spanner.admin.instance.v1.UpdateInstanceMetadata.start_time)
  return start_time_;
}
::google::protobuf::Timestamp* UpdateInstanceMetadata::release_start_time() {
  // @@protoc_insertion_point(field_release:google.spanner.admin.instance.v1.UpdateInstanceMetadata.start_time)
  
  ::google::protobuf::Timestamp* temp = start_time_;
  start_time_ = NULL;
  return temp;
}
void UpdateInstanceMetadata::set_allocated_start_time(::google::protobuf::Timestamp* start_time) {
  delete start_time_;
  if (start_time != NULL && start_time->GetArena() != NULL) {
    ::google::protobuf::Timestamp* new_start_time = new ::google::protobuf::Timestamp;
    new_start_time->CopyFrom(*start_time);
    start_time = new_start_time;
  }
  start_time_ = start_time;
  if (start_time) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.spanner.admin.instance.v1.UpdateInstanceMetadata.start_time)
}

// .google.protobuf.Timestamp cancel_time = 3;
bool UpdateInstanceMetadata::has_cancel_time() const {
  return this != internal_default_instance() && cancel_time_ != NULL;
}
void UpdateInstanceMetadata::clear_cancel_time() {
  if (GetArenaNoVirtual() == NULL && cancel_time_ != NULL) delete cancel_time_;
  cancel_time_ = NULL;
}
const ::google::protobuf::Timestamp& UpdateInstanceMetadata::cancel_time() const {
  // @@protoc_insertion_point(field_get:google.spanner.admin.instance.v1.UpdateInstanceMetadata.cancel_time)
  return cancel_time_ != NULL ? *cancel_time_
                         : *::google::protobuf::Timestamp::internal_default_instance();
}
::google::protobuf::Timestamp* UpdateInstanceMetadata::mutable_cancel_time() {
  
  if (cancel_time_ == NULL) {
    cancel_time_ = new ::google::protobuf::Timestamp;
  }
  // @@protoc_insertion_point(field_mutable:google.spanner.admin.instance.v1.UpdateInstanceMetadata.cancel_time)
  return cancel_time_;
}
::google::protobuf::Timestamp* UpdateInstanceMetadata::release_cancel_time() {
  // @@protoc_insertion_point(field_release:google.spanner.admin.instance.v1.UpdateInstanceMetadata.cancel_time)
  
  ::google::protobuf::Timestamp* temp = cancel_time_;
  cancel_time_ = NULL;
  return temp;
}
void UpdateInstanceMetadata::set_allocated_cancel_time(::google::protobuf::Timestamp* cancel_time) {
  delete cancel_time_;
  if (cancel_time != NULL && cancel_time->GetArena() != NULL) {
    ::google::protobuf::Timestamp* new_cancel_time = new ::google::protobuf::Timestamp;
    new_cancel_time->CopyFrom(*cancel_time);
    cancel_time = new_cancel_time;
  }
  cancel_time_ = cancel_time;
  if (cancel_time) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.spanner.admin.instance.v1.UpdateInstanceMetadata.cancel_time)
}

// .google.protobuf.Timestamp end_time = 4;
bool UpdateInstanceMetadata::has_end_time() const {
  return this != internal_default_instance() && end_time_ != NULL;
}
void UpdateInstanceMetadata::clear_end_time() {
  if (GetArenaNoVirtual() == NULL && end_time_ != NULL) delete end_time_;
  end_time_ = NULL;
}
const ::google::protobuf::Timestamp& UpdateInstanceMetadata::end_time() const {
  // @@protoc_insertion_point(field_get:google.spanner.admin.instance.v1.UpdateInstanceMetadata.end_time)
  return end_time_ != NULL ? *end_time_
                         : *::google::protobuf::Timestamp::internal_default_instance();
}
::google::protobuf::Timestamp* UpdateInstanceMetadata::mutable_end_time() {
  
  if (end_time_ == NULL) {
    end_time_ = new ::google::protobuf::Timestamp;
  }
  // @@protoc_insertion_point(field_mutable:google.spanner.admin.instance.v1.UpdateInstanceMetadata.end_time)
  return end_time_;
}
::google::protobuf::Timestamp* UpdateInstanceMetadata::release_end_time() {
  // @@protoc_insertion_point(field_release:google.spanner.admin.instance.v1.UpdateInstanceMetadata.end_time)
  
  ::google::protobuf::Timestamp* temp = end_time_;
  end_time_ = NULL;
  return temp;
}
void UpdateInstanceMetadata::set_allocated_end_time(::google::protobuf::Timestamp* end_time) {
  delete end_time_;
  if (end_time != NULL && end_time->GetArena() != NULL) {
    ::google::protobuf::Timestamp* new_end_time = new ::google::protobuf::Timestamp;
    new_end_time->CopyFrom(*end_time);
    end_time = new_end_time;
  }
  end_time_ = end_time;
  if (end_time) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.spanner.admin.instance.v1.UpdateInstanceMetadata.end_time)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace v1
}  // namespace instance
}  // namespace admin
}  // namespace spanner
}  // namespace google

// @@protoc_insertion_point(global_scope)
