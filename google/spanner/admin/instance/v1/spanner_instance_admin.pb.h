// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/spanner/admin/instance/v1/spanner_instance_admin.proto

#ifndef PROTOBUF_google_2fspanner_2fadmin_2finstance_2fv1_2fspanner_5finstance_5fadmin_2eproto__INCLUDED
#define PROTOBUF_google_2fspanner_2fadmin_2finstance_2fv1_2fspanner_5finstance_5fadmin_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3003000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3003002 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/map.h>  // IWYU pragma: export
#include <google/protobuf/map_field_inl.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "google/api/annotations.pb.h"
#include "google/api/auth.pb.h"
#include "google/iam/v1/iam_policy.pb.h"
#include "google/iam/v1/policy.pb.h"
#include "google/longrunning/operations.pb.h"
#include <google/protobuf/empty.pb.h>
#include <google/protobuf/field_mask.pb.h>
#include <google/protobuf/timestamp.pb.h>
// @@protoc_insertion_point(includes)
namespace google {
namespace api {
class AuthProvider;
class AuthProviderDefaultTypeInternal;
extern AuthProviderDefaultTypeInternal _AuthProvider_default_instance_;
class AuthRequirement;
class AuthRequirementDefaultTypeInternal;
extern AuthRequirementDefaultTypeInternal _AuthRequirement_default_instance_;
class Authentication;
class AuthenticationDefaultTypeInternal;
extern AuthenticationDefaultTypeInternal _Authentication_default_instance_;
class AuthenticationRule;
class AuthenticationRuleDefaultTypeInternal;
extern AuthenticationRuleDefaultTypeInternal _AuthenticationRule_default_instance_;
class OAuthRequirements;
class OAuthRequirementsDefaultTypeInternal;
extern OAuthRequirementsDefaultTypeInternal _OAuthRequirements_default_instance_;
}  // namespace api
namespace iam {
namespace v1 {
class Binding;
class BindingDefaultTypeInternal;
extern BindingDefaultTypeInternal _Binding_default_instance_;
class BindingDelta;
class BindingDeltaDefaultTypeInternal;
extern BindingDeltaDefaultTypeInternal _BindingDelta_default_instance_;
class GetIamPolicyRequest;
class GetIamPolicyRequestDefaultTypeInternal;
extern GetIamPolicyRequestDefaultTypeInternal _GetIamPolicyRequest_default_instance_;
class Policy;
class PolicyDefaultTypeInternal;
extern PolicyDefaultTypeInternal _Policy_default_instance_;
class PolicyDelta;
class PolicyDeltaDefaultTypeInternal;
extern PolicyDeltaDefaultTypeInternal _PolicyDelta_default_instance_;
class SetIamPolicyRequest;
class SetIamPolicyRequestDefaultTypeInternal;
extern SetIamPolicyRequestDefaultTypeInternal _SetIamPolicyRequest_default_instance_;
class TestIamPermissionsRequest;
class TestIamPermissionsRequestDefaultTypeInternal;
extern TestIamPermissionsRequestDefaultTypeInternal _TestIamPermissionsRequest_default_instance_;
class TestIamPermissionsResponse;
class TestIamPermissionsResponseDefaultTypeInternal;
extern TestIamPermissionsResponseDefaultTypeInternal _TestIamPermissionsResponse_default_instance_;
}  // namespace v1
}  // namespace iam
namespace longrunning {
class CancelOperationRequest;
class CancelOperationRequestDefaultTypeInternal;
extern CancelOperationRequestDefaultTypeInternal _CancelOperationRequest_default_instance_;
class DeleteOperationRequest;
class DeleteOperationRequestDefaultTypeInternal;
extern DeleteOperationRequestDefaultTypeInternal _DeleteOperationRequest_default_instance_;
class GetOperationRequest;
class GetOperationRequestDefaultTypeInternal;
extern GetOperationRequestDefaultTypeInternal _GetOperationRequest_default_instance_;
class ListOperationsRequest;
class ListOperationsRequestDefaultTypeInternal;
extern ListOperationsRequestDefaultTypeInternal _ListOperationsRequest_default_instance_;
class ListOperationsResponse;
class ListOperationsResponseDefaultTypeInternal;
extern ListOperationsResponseDefaultTypeInternal _ListOperationsResponse_default_instance_;
class Operation;
class OperationDefaultTypeInternal;
extern OperationDefaultTypeInternal _Operation_default_instance_;
}  // namespace longrunning
namespace protobuf {
class Empty;
class EmptyDefaultTypeInternal;
extern EmptyDefaultTypeInternal _Empty_default_instance_;
class FieldMask;
class FieldMaskDefaultTypeInternal;
extern FieldMaskDefaultTypeInternal _FieldMask_default_instance_;
class Timestamp;
class TimestampDefaultTypeInternal;
extern TimestampDefaultTypeInternal _Timestamp_default_instance_;
}  // namespace protobuf
namespace spanner {
namespace admin {
namespace instance {
namespace v1 {
class CreateInstanceMetadata;
class CreateInstanceMetadataDefaultTypeInternal;
extern CreateInstanceMetadataDefaultTypeInternal _CreateInstanceMetadata_default_instance_;
class CreateInstanceRequest;
class CreateInstanceRequestDefaultTypeInternal;
extern CreateInstanceRequestDefaultTypeInternal _CreateInstanceRequest_default_instance_;
class DeleteInstanceRequest;
class DeleteInstanceRequestDefaultTypeInternal;
extern DeleteInstanceRequestDefaultTypeInternal _DeleteInstanceRequest_default_instance_;
class GetInstanceConfigRequest;
class GetInstanceConfigRequestDefaultTypeInternal;
extern GetInstanceConfigRequestDefaultTypeInternal _GetInstanceConfigRequest_default_instance_;
class GetInstanceRequest;
class GetInstanceRequestDefaultTypeInternal;
extern GetInstanceRequestDefaultTypeInternal _GetInstanceRequest_default_instance_;
class Instance;
class InstanceDefaultTypeInternal;
extern InstanceDefaultTypeInternal _Instance_default_instance_;
class InstanceConfig;
class InstanceConfigDefaultTypeInternal;
extern InstanceConfigDefaultTypeInternal _InstanceConfig_default_instance_;
class Instance_LabelsEntry;
class Instance_LabelsEntryDefaultTypeInternal;
extern Instance_LabelsEntryDefaultTypeInternal _Instance_LabelsEntry_default_instance_;
class ListInstanceConfigsRequest;
class ListInstanceConfigsRequestDefaultTypeInternal;
extern ListInstanceConfigsRequestDefaultTypeInternal _ListInstanceConfigsRequest_default_instance_;
class ListInstanceConfigsResponse;
class ListInstanceConfigsResponseDefaultTypeInternal;
extern ListInstanceConfigsResponseDefaultTypeInternal _ListInstanceConfigsResponse_default_instance_;
class ListInstancesRequest;
class ListInstancesRequestDefaultTypeInternal;
extern ListInstancesRequestDefaultTypeInternal _ListInstancesRequest_default_instance_;
class ListInstancesResponse;
class ListInstancesResponseDefaultTypeInternal;
extern ListInstancesResponseDefaultTypeInternal _ListInstancesResponse_default_instance_;
class UpdateInstanceMetadata;
class UpdateInstanceMetadataDefaultTypeInternal;
extern UpdateInstanceMetadataDefaultTypeInternal _UpdateInstanceMetadata_default_instance_;
class UpdateInstanceRequest;
class UpdateInstanceRequestDefaultTypeInternal;
extern UpdateInstanceRequestDefaultTypeInternal _UpdateInstanceRequest_default_instance_;
}  // namespace v1
}  // namespace instance
}  // namespace admin
}  // namespace spanner
}  // namespace google

namespace google {
namespace spanner {
namespace admin {
namespace instance {
namespace v1 {

namespace protobuf_google_2fspanner_2fadmin_2finstance_2fv1_2fspanner_5finstance_5fadmin_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_google_2fspanner_2fadmin_2finstance_2fv1_2fspanner_5finstance_5fadmin_2eproto

enum Instance_State {
  Instance_State_STATE_UNSPECIFIED = 0,
  Instance_State_CREATING = 1,
  Instance_State_READY = 2,
  Instance_State_Instance_State_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Instance_State_Instance_State_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Instance_State_IsValid(int value);
const Instance_State Instance_State_State_MIN = Instance_State_STATE_UNSPECIFIED;
const Instance_State Instance_State_State_MAX = Instance_State_READY;
const int Instance_State_State_ARRAYSIZE = Instance_State_State_MAX + 1;

const ::google::protobuf::EnumDescriptor* Instance_State_descriptor();
inline const ::std::string& Instance_State_Name(Instance_State value) {
  return ::google::protobuf::internal::NameOfEnum(
    Instance_State_descriptor(), value);
}
inline bool Instance_State_Parse(
    const ::std::string& name, Instance_State* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Instance_State>(
    Instance_State_descriptor(), name, value);
}
// ===================================================================

class InstanceConfig : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.spanner.admin.instance.v1.InstanceConfig) */ {
 public:
  InstanceConfig();
  virtual ~InstanceConfig();

  InstanceConfig(const InstanceConfig& from);

  inline InstanceConfig& operator=(const InstanceConfig& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const InstanceConfig& default_instance();

  static inline const InstanceConfig* internal_default_instance() {
    return reinterpret_cast<const InstanceConfig*>(
               &_InstanceConfig_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(InstanceConfig* other);

  // implements Message ----------------------------------------------

  inline InstanceConfig* New() const PROTOBUF_FINAL { return New(NULL); }

  InstanceConfig* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const InstanceConfig& from);
  void MergeFrom(const InstanceConfig& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(InstanceConfig* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // string display_name = 2;
  void clear_display_name();
  static const int kDisplayNameFieldNumber = 2;
  const ::std::string& display_name() const;
  void set_display_name(const ::std::string& value);
  #if LANG_CXX11
  void set_display_name(::std::string&& value);
  #endif
  void set_display_name(const char* value);
  void set_display_name(const char* value, size_t size);
  ::std::string* mutable_display_name();
  ::std::string* release_display_name();
  void set_allocated_display_name(::std::string* display_name);

  // @@protoc_insertion_point(class_scope:google.spanner.admin.instance.v1.InstanceConfig)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr display_name_;
  mutable int _cached_size_;
  friend struct protobuf_google_2fspanner_2fadmin_2finstance_2fv1_2fspanner_5finstance_5fadmin_2eproto::TableStruct;
};
// -------------------------------------------------------------------


// -------------------------------------------------------------------

class Instance : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.spanner.admin.instance.v1.Instance) */ {
 public:
  Instance();
  virtual ~Instance();

  Instance(const Instance& from);

  inline Instance& operator=(const Instance& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Instance& default_instance();

  static inline const Instance* internal_default_instance() {
    return reinterpret_cast<const Instance*>(
               &_Instance_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(Instance* other);

  // implements Message ----------------------------------------------

  inline Instance* New() const PROTOBUF_FINAL { return New(NULL); }

  Instance* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Instance& from);
  void MergeFrom(const Instance& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Instance* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------


  typedef Instance_State State;
  static const State STATE_UNSPECIFIED =
    Instance_State_STATE_UNSPECIFIED;
  static const State CREATING =
    Instance_State_CREATING;
  static const State READY =
    Instance_State_READY;
  static inline bool State_IsValid(int value) {
    return Instance_State_IsValid(value);
  }
  static const State State_MIN =
    Instance_State_State_MIN;
  static const State State_MAX =
    Instance_State_State_MAX;
  static const int State_ARRAYSIZE =
    Instance_State_State_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  State_descriptor() {
    return Instance_State_descriptor();
  }
  static inline const ::std::string& State_Name(State value) {
    return Instance_State_Name(value);
  }
  static inline bool State_Parse(const ::std::string& name,
      State* value) {
    return Instance_State_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // map<string, string> labels = 7;
  int labels_size() const;
  void clear_labels();
  static const int kLabelsFieldNumber = 7;
  const ::google::protobuf::Map< ::std::string, ::std::string >&
      labels() const;
  ::google::protobuf::Map< ::std::string, ::std::string >*
      mutable_labels();

  // string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // string config = 2;
  void clear_config();
  static const int kConfigFieldNumber = 2;
  const ::std::string& config() const;
  void set_config(const ::std::string& value);
  #if LANG_CXX11
  void set_config(::std::string&& value);
  #endif
  void set_config(const char* value);
  void set_config(const char* value, size_t size);
  ::std::string* mutable_config();
  ::std::string* release_config();
  void set_allocated_config(::std::string* config);

  // string display_name = 3;
  void clear_display_name();
  static const int kDisplayNameFieldNumber = 3;
  const ::std::string& display_name() const;
  void set_display_name(const ::std::string& value);
  #if LANG_CXX11
  void set_display_name(::std::string&& value);
  #endif
  void set_display_name(const char* value);
  void set_display_name(const char* value, size_t size);
  ::std::string* mutable_display_name();
  ::std::string* release_display_name();
  void set_allocated_display_name(::std::string* display_name);

  // int32 node_count = 5;
  void clear_node_count();
  static const int kNodeCountFieldNumber = 5;
  ::google::protobuf::int32 node_count() const;
  void set_node_count(::google::protobuf::int32 value);

  // .google.spanner.admin.instance.v1.Instance.State state = 6;
  void clear_state();
  static const int kStateFieldNumber = 6;
  ::google::spanner::admin::instance::v1::Instance_State state() const;
  void set_state(::google::spanner::admin::instance::v1::Instance_State value);

  // @@protoc_insertion_point(class_scope:google.spanner.admin.instance.v1.Instance)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  public:
  class Instance_LabelsEntry : public ::google::protobuf::internal::MapEntry<Instance_LabelsEntry, 
      ::std::string, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 > {
  public:
    typedef ::google::protobuf::internal::MapEntry<Instance_LabelsEntry, 
      ::std::string, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 > SuperType;
    Instance_LabelsEntry();
    Instance_LabelsEntry(::google::protobuf::Arena* arena);
    void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
    void MergeFrom(const Instance_LabelsEntry& other);
    static const Message* internal_default_instance() { return reinterpret_cast<const Message*>(&_Instance_LabelsEntry_default_instance_); }
    ::google::protobuf::Metadata GetMetadata() const;
  };
  ::google::protobuf::internal::MapField<
      Instance_LabelsEntry,
      ::std::string, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 > labels_;
  private:
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr config_;
  ::google::protobuf::internal::ArenaStringPtr display_name_;
  ::google::protobuf::int32 node_count_;
  int state_;
  mutable int _cached_size_;
  friend struct protobuf_google_2fspanner_2fadmin_2finstance_2fv1_2fspanner_5finstance_5fadmin_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListInstanceConfigsRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.spanner.admin.instance.v1.ListInstanceConfigsRequest) */ {
 public:
  ListInstanceConfigsRequest();
  virtual ~ListInstanceConfigsRequest();

  ListInstanceConfigsRequest(const ListInstanceConfigsRequest& from);

  inline ListInstanceConfigsRequest& operator=(const ListInstanceConfigsRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ListInstanceConfigsRequest& default_instance();

  static inline const ListInstanceConfigsRequest* internal_default_instance() {
    return reinterpret_cast<const ListInstanceConfigsRequest*>(
               &_ListInstanceConfigsRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(ListInstanceConfigsRequest* other);

  // implements Message ----------------------------------------------

  inline ListInstanceConfigsRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  ListInstanceConfigsRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ListInstanceConfigsRequest& from);
  void MergeFrom(const ListInstanceConfigsRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ListInstanceConfigsRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string parent = 1;
  void clear_parent();
  static const int kParentFieldNumber = 1;
  const ::std::string& parent() const;
  void set_parent(const ::std::string& value);
  #if LANG_CXX11
  void set_parent(::std::string&& value);
  #endif
  void set_parent(const char* value);
  void set_parent(const char* value, size_t size);
  ::std::string* mutable_parent();
  ::std::string* release_parent();
  void set_allocated_parent(::std::string* parent);

  // string page_token = 3;
  void clear_page_token();
  static const int kPageTokenFieldNumber = 3;
  const ::std::string& page_token() const;
  void set_page_token(const ::std::string& value);
  #if LANG_CXX11
  void set_page_token(::std::string&& value);
  #endif
  void set_page_token(const char* value);
  void set_page_token(const char* value, size_t size);
  ::std::string* mutable_page_token();
  ::std::string* release_page_token();
  void set_allocated_page_token(::std::string* page_token);

  // int32 page_size = 2;
  void clear_page_size();
  static const int kPageSizeFieldNumber = 2;
  ::google::protobuf::int32 page_size() const;
  void set_page_size(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:google.spanner.admin.instance.v1.ListInstanceConfigsRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr parent_;
  ::google::protobuf::internal::ArenaStringPtr page_token_;
  ::google::protobuf::int32 page_size_;
  mutable int _cached_size_;
  friend struct protobuf_google_2fspanner_2fadmin_2finstance_2fv1_2fspanner_5finstance_5fadmin_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListInstanceConfigsResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.spanner.admin.instance.v1.ListInstanceConfigsResponse) */ {
 public:
  ListInstanceConfigsResponse();
  virtual ~ListInstanceConfigsResponse();

  ListInstanceConfigsResponse(const ListInstanceConfigsResponse& from);

  inline ListInstanceConfigsResponse& operator=(const ListInstanceConfigsResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ListInstanceConfigsResponse& default_instance();

  static inline const ListInstanceConfigsResponse* internal_default_instance() {
    return reinterpret_cast<const ListInstanceConfigsResponse*>(
               &_ListInstanceConfigsResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(ListInstanceConfigsResponse* other);

  // implements Message ----------------------------------------------

  inline ListInstanceConfigsResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  ListInstanceConfigsResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ListInstanceConfigsResponse& from);
  void MergeFrom(const ListInstanceConfigsResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ListInstanceConfigsResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .google.spanner.admin.instance.v1.InstanceConfig instance_configs = 1;
  int instance_configs_size() const;
  void clear_instance_configs();
  static const int kInstanceConfigsFieldNumber = 1;
  const ::google::spanner::admin::instance::v1::InstanceConfig& instance_configs(int index) const;
  ::google::spanner::admin::instance::v1::InstanceConfig* mutable_instance_configs(int index);
  ::google::spanner::admin::instance::v1::InstanceConfig* add_instance_configs();
  ::google::protobuf::RepeatedPtrField< ::google::spanner::admin::instance::v1::InstanceConfig >*
      mutable_instance_configs();
  const ::google::protobuf::RepeatedPtrField< ::google::spanner::admin::instance::v1::InstanceConfig >&
      instance_configs() const;

  // string next_page_token = 2;
  void clear_next_page_token();
  static const int kNextPageTokenFieldNumber = 2;
  const ::std::string& next_page_token() const;
  void set_next_page_token(const ::std::string& value);
  #if LANG_CXX11
  void set_next_page_token(::std::string&& value);
  #endif
  void set_next_page_token(const char* value);
  void set_next_page_token(const char* value, size_t size);
  ::std::string* mutable_next_page_token();
  ::std::string* release_next_page_token();
  void set_allocated_next_page_token(::std::string* next_page_token);

  // @@protoc_insertion_point(class_scope:google.spanner.admin.instance.v1.ListInstanceConfigsResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::spanner::admin::instance::v1::InstanceConfig > instance_configs_;
  ::google::protobuf::internal::ArenaStringPtr next_page_token_;
  mutable int _cached_size_;
  friend struct protobuf_google_2fspanner_2fadmin_2finstance_2fv1_2fspanner_5finstance_5fadmin_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetInstanceConfigRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.spanner.admin.instance.v1.GetInstanceConfigRequest) */ {
 public:
  GetInstanceConfigRequest();
  virtual ~GetInstanceConfigRequest();

  GetInstanceConfigRequest(const GetInstanceConfigRequest& from);

  inline GetInstanceConfigRequest& operator=(const GetInstanceConfigRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetInstanceConfigRequest& default_instance();

  static inline const GetInstanceConfigRequest* internal_default_instance() {
    return reinterpret_cast<const GetInstanceConfigRequest*>(
               &_GetInstanceConfigRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void Swap(GetInstanceConfigRequest* other);

  // implements Message ----------------------------------------------

  inline GetInstanceConfigRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  GetInstanceConfigRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetInstanceConfigRequest& from);
  void MergeFrom(const GetInstanceConfigRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetInstanceConfigRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:google.spanner.admin.instance.v1.GetInstanceConfigRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  mutable int _cached_size_;
  friend struct protobuf_google_2fspanner_2fadmin_2finstance_2fv1_2fspanner_5finstance_5fadmin_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetInstanceRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.spanner.admin.instance.v1.GetInstanceRequest) */ {
 public:
  GetInstanceRequest();
  virtual ~GetInstanceRequest();

  GetInstanceRequest(const GetInstanceRequest& from);

  inline GetInstanceRequest& operator=(const GetInstanceRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetInstanceRequest& default_instance();

  static inline const GetInstanceRequest* internal_default_instance() {
    return reinterpret_cast<const GetInstanceRequest*>(
               &_GetInstanceRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    6;

  void Swap(GetInstanceRequest* other);

  // implements Message ----------------------------------------------

  inline GetInstanceRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  GetInstanceRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetInstanceRequest& from);
  void MergeFrom(const GetInstanceRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetInstanceRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:google.spanner.admin.instance.v1.GetInstanceRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  mutable int _cached_size_;
  friend struct protobuf_google_2fspanner_2fadmin_2finstance_2fv1_2fspanner_5finstance_5fadmin_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CreateInstanceRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.spanner.admin.instance.v1.CreateInstanceRequest) */ {
 public:
  CreateInstanceRequest();
  virtual ~CreateInstanceRequest();

  CreateInstanceRequest(const CreateInstanceRequest& from);

  inline CreateInstanceRequest& operator=(const CreateInstanceRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CreateInstanceRequest& default_instance();

  static inline const CreateInstanceRequest* internal_default_instance() {
    return reinterpret_cast<const CreateInstanceRequest*>(
               &_CreateInstanceRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    7;

  void Swap(CreateInstanceRequest* other);

  // implements Message ----------------------------------------------

  inline CreateInstanceRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  CreateInstanceRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CreateInstanceRequest& from);
  void MergeFrom(const CreateInstanceRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CreateInstanceRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string parent = 1;
  void clear_parent();
  static const int kParentFieldNumber = 1;
  const ::std::string& parent() const;
  void set_parent(const ::std::string& value);
  #if LANG_CXX11
  void set_parent(::std::string&& value);
  #endif
  void set_parent(const char* value);
  void set_parent(const char* value, size_t size);
  ::std::string* mutable_parent();
  ::std::string* release_parent();
  void set_allocated_parent(::std::string* parent);

  // string instance_id = 2;
  void clear_instance_id();
  static const int kInstanceIdFieldNumber = 2;
  const ::std::string& instance_id() const;
  void set_instance_id(const ::std::string& value);
  #if LANG_CXX11
  void set_instance_id(::std::string&& value);
  #endif
  void set_instance_id(const char* value);
  void set_instance_id(const char* value, size_t size);
  ::std::string* mutable_instance_id();
  ::std::string* release_instance_id();
  void set_allocated_instance_id(::std::string* instance_id);

  // .google.spanner.admin.instance.v1.Instance instance = 3;
  bool has_instance() const;
  void clear_instance();
  static const int kInstanceFieldNumber = 3;
  const ::google::spanner::admin::instance::v1::Instance& instance() const;
  ::google::spanner::admin::instance::v1::Instance* mutable_instance();
  ::google::spanner::admin::instance::v1::Instance* release_instance();
  void set_allocated_instance(::google::spanner::admin::instance::v1::Instance* instance);

  // @@protoc_insertion_point(class_scope:google.spanner.admin.instance.v1.CreateInstanceRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr parent_;
  ::google::protobuf::internal::ArenaStringPtr instance_id_;
  ::google::spanner::admin::instance::v1::Instance* instance_;
  mutable int _cached_size_;
  friend struct protobuf_google_2fspanner_2fadmin_2finstance_2fv1_2fspanner_5finstance_5fadmin_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListInstancesRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.spanner.admin.instance.v1.ListInstancesRequest) */ {
 public:
  ListInstancesRequest();
  virtual ~ListInstancesRequest();

  ListInstancesRequest(const ListInstancesRequest& from);

  inline ListInstancesRequest& operator=(const ListInstancesRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ListInstancesRequest& default_instance();

  static inline const ListInstancesRequest* internal_default_instance() {
    return reinterpret_cast<const ListInstancesRequest*>(
               &_ListInstancesRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    8;

  void Swap(ListInstancesRequest* other);

  // implements Message ----------------------------------------------

  inline ListInstancesRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  ListInstancesRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ListInstancesRequest& from);
  void MergeFrom(const ListInstancesRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ListInstancesRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string parent = 1;
  void clear_parent();
  static const int kParentFieldNumber = 1;
  const ::std::string& parent() const;
  void set_parent(const ::std::string& value);
  #if LANG_CXX11
  void set_parent(::std::string&& value);
  #endif
  void set_parent(const char* value);
  void set_parent(const char* value, size_t size);
  ::std::string* mutable_parent();
  ::std::string* release_parent();
  void set_allocated_parent(::std::string* parent);

  // string page_token = 3;
  void clear_page_token();
  static const int kPageTokenFieldNumber = 3;
  const ::std::string& page_token() const;
  void set_page_token(const ::std::string& value);
  #if LANG_CXX11
  void set_page_token(::std::string&& value);
  #endif
  void set_page_token(const char* value);
  void set_page_token(const char* value, size_t size);
  ::std::string* mutable_page_token();
  ::std::string* release_page_token();
  void set_allocated_page_token(::std::string* page_token);

  // string filter = 4;
  void clear_filter();
  static const int kFilterFieldNumber = 4;
  const ::std::string& filter() const;
  void set_filter(const ::std::string& value);
  #if LANG_CXX11
  void set_filter(::std::string&& value);
  #endif
  void set_filter(const char* value);
  void set_filter(const char* value, size_t size);
  ::std::string* mutable_filter();
  ::std::string* release_filter();
  void set_allocated_filter(::std::string* filter);

  // int32 page_size = 2;
  void clear_page_size();
  static const int kPageSizeFieldNumber = 2;
  ::google::protobuf::int32 page_size() const;
  void set_page_size(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:google.spanner.admin.instance.v1.ListInstancesRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr parent_;
  ::google::protobuf::internal::ArenaStringPtr page_token_;
  ::google::protobuf::internal::ArenaStringPtr filter_;
  ::google::protobuf::int32 page_size_;
  mutable int _cached_size_;
  friend struct protobuf_google_2fspanner_2fadmin_2finstance_2fv1_2fspanner_5finstance_5fadmin_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListInstancesResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.spanner.admin.instance.v1.ListInstancesResponse) */ {
 public:
  ListInstancesResponse();
  virtual ~ListInstancesResponse();

  ListInstancesResponse(const ListInstancesResponse& from);

  inline ListInstancesResponse& operator=(const ListInstancesResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ListInstancesResponse& default_instance();

  static inline const ListInstancesResponse* internal_default_instance() {
    return reinterpret_cast<const ListInstancesResponse*>(
               &_ListInstancesResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    9;

  void Swap(ListInstancesResponse* other);

  // implements Message ----------------------------------------------

  inline ListInstancesResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  ListInstancesResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ListInstancesResponse& from);
  void MergeFrom(const ListInstancesResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ListInstancesResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .google.spanner.admin.instance.v1.Instance instances = 1;
  int instances_size() const;
  void clear_instances();
  static const int kInstancesFieldNumber = 1;
  const ::google::spanner::admin::instance::v1::Instance& instances(int index) const;
  ::google::spanner::admin::instance::v1::Instance* mutable_instances(int index);
  ::google::spanner::admin::instance::v1::Instance* add_instances();
  ::google::protobuf::RepeatedPtrField< ::google::spanner::admin::instance::v1::Instance >*
      mutable_instances();
  const ::google::protobuf::RepeatedPtrField< ::google::spanner::admin::instance::v1::Instance >&
      instances() const;

  // string next_page_token = 2;
  void clear_next_page_token();
  static const int kNextPageTokenFieldNumber = 2;
  const ::std::string& next_page_token() const;
  void set_next_page_token(const ::std::string& value);
  #if LANG_CXX11
  void set_next_page_token(::std::string&& value);
  #endif
  void set_next_page_token(const char* value);
  void set_next_page_token(const char* value, size_t size);
  ::std::string* mutable_next_page_token();
  ::std::string* release_next_page_token();
  void set_allocated_next_page_token(::std::string* next_page_token);

  // @@protoc_insertion_point(class_scope:google.spanner.admin.instance.v1.ListInstancesResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::spanner::admin::instance::v1::Instance > instances_;
  ::google::protobuf::internal::ArenaStringPtr next_page_token_;
  mutable int _cached_size_;
  friend struct protobuf_google_2fspanner_2fadmin_2finstance_2fv1_2fspanner_5finstance_5fadmin_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UpdateInstanceRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.spanner.admin.instance.v1.UpdateInstanceRequest) */ {
 public:
  UpdateInstanceRequest();
  virtual ~UpdateInstanceRequest();

  UpdateInstanceRequest(const UpdateInstanceRequest& from);

  inline UpdateInstanceRequest& operator=(const UpdateInstanceRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UpdateInstanceRequest& default_instance();

  static inline const UpdateInstanceRequest* internal_default_instance() {
    return reinterpret_cast<const UpdateInstanceRequest*>(
               &_UpdateInstanceRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    10;

  void Swap(UpdateInstanceRequest* other);

  // implements Message ----------------------------------------------

  inline UpdateInstanceRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  UpdateInstanceRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const UpdateInstanceRequest& from);
  void MergeFrom(const UpdateInstanceRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(UpdateInstanceRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .google.spanner.admin.instance.v1.Instance instance = 1;
  bool has_instance() const;
  void clear_instance();
  static const int kInstanceFieldNumber = 1;
  const ::google::spanner::admin::instance::v1::Instance& instance() const;
  ::google::spanner::admin::instance::v1::Instance* mutable_instance();
  ::google::spanner::admin::instance::v1::Instance* release_instance();
  void set_allocated_instance(::google::spanner::admin::instance::v1::Instance* instance);

  // .google.protobuf.FieldMask field_mask = 2;
  bool has_field_mask() const;
  void clear_field_mask();
  static const int kFieldMaskFieldNumber = 2;
  const ::google::protobuf::FieldMask& field_mask() const;
  ::google::protobuf::FieldMask* mutable_field_mask();
  ::google::protobuf::FieldMask* release_field_mask();
  void set_allocated_field_mask(::google::protobuf::FieldMask* field_mask);

  // @@protoc_insertion_point(class_scope:google.spanner.admin.instance.v1.UpdateInstanceRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::spanner::admin::instance::v1::Instance* instance_;
  ::google::protobuf::FieldMask* field_mask_;
  mutable int _cached_size_;
  friend struct protobuf_google_2fspanner_2fadmin_2finstance_2fv1_2fspanner_5finstance_5fadmin_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DeleteInstanceRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.spanner.admin.instance.v1.DeleteInstanceRequest) */ {
 public:
  DeleteInstanceRequest();
  virtual ~DeleteInstanceRequest();

  DeleteInstanceRequest(const DeleteInstanceRequest& from);

  inline DeleteInstanceRequest& operator=(const DeleteInstanceRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DeleteInstanceRequest& default_instance();

  static inline const DeleteInstanceRequest* internal_default_instance() {
    return reinterpret_cast<const DeleteInstanceRequest*>(
               &_DeleteInstanceRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    11;

  void Swap(DeleteInstanceRequest* other);

  // implements Message ----------------------------------------------

  inline DeleteInstanceRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  DeleteInstanceRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DeleteInstanceRequest& from);
  void MergeFrom(const DeleteInstanceRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DeleteInstanceRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:google.spanner.admin.instance.v1.DeleteInstanceRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  mutable int _cached_size_;
  friend struct protobuf_google_2fspanner_2fadmin_2finstance_2fv1_2fspanner_5finstance_5fadmin_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CreateInstanceMetadata : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.spanner.admin.instance.v1.CreateInstanceMetadata) */ {
 public:
  CreateInstanceMetadata();
  virtual ~CreateInstanceMetadata();

  CreateInstanceMetadata(const CreateInstanceMetadata& from);

  inline CreateInstanceMetadata& operator=(const CreateInstanceMetadata& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CreateInstanceMetadata& default_instance();

  static inline const CreateInstanceMetadata* internal_default_instance() {
    return reinterpret_cast<const CreateInstanceMetadata*>(
               &_CreateInstanceMetadata_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    12;

  void Swap(CreateInstanceMetadata* other);

  // implements Message ----------------------------------------------

  inline CreateInstanceMetadata* New() const PROTOBUF_FINAL { return New(NULL); }

  CreateInstanceMetadata* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CreateInstanceMetadata& from);
  void MergeFrom(const CreateInstanceMetadata& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CreateInstanceMetadata* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .google.spanner.admin.instance.v1.Instance instance = 1;
  bool has_instance() const;
  void clear_instance();
  static const int kInstanceFieldNumber = 1;
  const ::google::spanner::admin::instance::v1::Instance& instance() const;
  ::google::spanner::admin::instance::v1::Instance* mutable_instance();
  ::google::spanner::admin::instance::v1::Instance* release_instance();
  void set_allocated_instance(::google::spanner::admin::instance::v1::Instance* instance);

  // .google.protobuf.Timestamp start_time = 2;
  bool has_start_time() const;
  void clear_start_time();
  static const int kStartTimeFieldNumber = 2;
  const ::google::protobuf::Timestamp& start_time() const;
  ::google::protobuf::Timestamp* mutable_start_time();
  ::google::protobuf::Timestamp* release_start_time();
  void set_allocated_start_time(::google::protobuf::Timestamp* start_time);

  // .google.protobuf.Timestamp cancel_time = 3;
  bool has_cancel_time() const;
  void clear_cancel_time();
  static const int kCancelTimeFieldNumber = 3;
  const ::google::protobuf::Timestamp& cancel_time() const;
  ::google::protobuf::Timestamp* mutable_cancel_time();
  ::google::protobuf::Timestamp* release_cancel_time();
  void set_allocated_cancel_time(::google::protobuf::Timestamp* cancel_time);

  // .google.protobuf.Timestamp end_time = 4;
  bool has_end_time() const;
  void clear_end_time();
  static const int kEndTimeFieldNumber = 4;
  const ::google::protobuf::Timestamp& end_time() const;
  ::google::protobuf::Timestamp* mutable_end_time();
  ::google::protobuf::Timestamp* release_end_time();
  void set_allocated_end_time(::google::protobuf::Timestamp* end_time);

  // @@protoc_insertion_point(class_scope:google.spanner.admin.instance.v1.CreateInstanceMetadata)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::spanner::admin::instance::v1::Instance* instance_;
  ::google::protobuf::Timestamp* start_time_;
  ::google::protobuf::Timestamp* cancel_time_;
  ::google::protobuf::Timestamp* end_time_;
  mutable int _cached_size_;
  friend struct protobuf_google_2fspanner_2fadmin_2finstance_2fv1_2fspanner_5finstance_5fadmin_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UpdateInstanceMetadata : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.spanner.admin.instance.v1.UpdateInstanceMetadata) */ {
 public:
  UpdateInstanceMetadata();
  virtual ~UpdateInstanceMetadata();

  UpdateInstanceMetadata(const UpdateInstanceMetadata& from);

  inline UpdateInstanceMetadata& operator=(const UpdateInstanceMetadata& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UpdateInstanceMetadata& default_instance();

  static inline const UpdateInstanceMetadata* internal_default_instance() {
    return reinterpret_cast<const UpdateInstanceMetadata*>(
               &_UpdateInstanceMetadata_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    13;

  void Swap(UpdateInstanceMetadata* other);

  // implements Message ----------------------------------------------

  inline UpdateInstanceMetadata* New() const PROTOBUF_FINAL { return New(NULL); }

  UpdateInstanceMetadata* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const UpdateInstanceMetadata& from);
  void MergeFrom(const UpdateInstanceMetadata& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(UpdateInstanceMetadata* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .google.spanner.admin.instance.v1.Instance instance = 1;
  bool has_instance() const;
  void clear_instance();
  static const int kInstanceFieldNumber = 1;
  const ::google::spanner::admin::instance::v1::Instance& instance() const;
  ::google::spanner::admin::instance::v1::Instance* mutable_instance();
  ::google::spanner::admin::instance::v1::Instance* release_instance();
  void set_allocated_instance(::google::spanner::admin::instance::v1::Instance* instance);

  // .google.protobuf.Timestamp start_time = 2;
  bool has_start_time() const;
  void clear_start_time();
  static const int kStartTimeFieldNumber = 2;
  const ::google::protobuf::Timestamp& start_time() const;
  ::google::protobuf::Timestamp* mutable_start_time();
  ::google::protobuf::Timestamp* release_start_time();
  void set_allocated_start_time(::google::protobuf::Timestamp* start_time);

  // .google.protobuf.Timestamp cancel_time = 3;
  bool has_cancel_time() const;
  void clear_cancel_time();
  static const int kCancelTimeFieldNumber = 3;
  const ::google::protobuf::Timestamp& cancel_time() const;
  ::google::protobuf::Timestamp* mutable_cancel_time();
  ::google::protobuf::Timestamp* release_cancel_time();
  void set_allocated_cancel_time(::google::protobuf::Timestamp* cancel_time);

  // .google.protobuf.Timestamp end_time = 4;
  bool has_end_time() const;
  void clear_end_time();
  static const int kEndTimeFieldNumber = 4;
  const ::google::protobuf::Timestamp& end_time() const;
  ::google::protobuf::Timestamp* mutable_end_time();
  ::google::protobuf::Timestamp* release_end_time();
  void set_allocated_end_time(::google::protobuf::Timestamp* end_time);

  // @@protoc_insertion_point(class_scope:google.spanner.admin.instance.v1.UpdateInstanceMetadata)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::spanner::admin::instance::v1::Instance* instance_;
  ::google::protobuf::Timestamp* start_time_;
  ::google::protobuf::Timestamp* cancel_time_;
  ::google::protobuf::Timestamp* end_time_;
  mutable int _cached_size_;
  friend struct protobuf_google_2fspanner_2fadmin_2finstance_2fv1_2fspanner_5finstance_5fadmin_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// InstanceConfig

// string name = 1;
inline void InstanceConfig::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& InstanceConfig::name() const {
  // @@protoc_insertion_point(field_get:google.spanner.admin.instance.v1.InstanceConfig.name)
  return name_.GetNoArena();
}
inline void InstanceConfig::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.spanner.admin.instance.v1.InstanceConfig.name)
}
#if LANG_CXX11
inline void InstanceConfig::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.spanner.admin.instance.v1.InstanceConfig.name)
}
#endif
inline void InstanceConfig::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.spanner.admin.instance.v1.InstanceConfig.name)
}
inline void InstanceConfig::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.spanner.admin.instance.v1.InstanceConfig.name)
}
inline ::std::string* InstanceConfig::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:google.spanner.admin.instance.v1.InstanceConfig.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* InstanceConfig::release_name() {
  // @@protoc_insertion_point(field_release:google.spanner.admin.instance.v1.InstanceConfig.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void InstanceConfig::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:google.spanner.admin.instance.v1.InstanceConfig.name)
}

// string display_name = 2;
inline void InstanceConfig::clear_display_name() {
  display_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& InstanceConfig::display_name() const {
  // @@protoc_insertion_point(field_get:google.spanner.admin.instance.v1.InstanceConfig.display_name)
  return display_name_.GetNoArena();
}
inline void InstanceConfig::set_display_name(const ::std::string& value) {
  
  display_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.spanner.admin.instance.v1.InstanceConfig.display_name)
}
#if LANG_CXX11
inline void InstanceConfig::set_display_name(::std::string&& value) {
  
  display_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.spanner.admin.instance.v1.InstanceConfig.display_name)
}
#endif
inline void InstanceConfig::set_display_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  display_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.spanner.admin.instance.v1.InstanceConfig.display_name)
}
inline void InstanceConfig::set_display_name(const char* value, size_t size) {
  
  display_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.spanner.admin.instance.v1.InstanceConfig.display_name)
}
inline ::std::string* InstanceConfig::mutable_display_name() {
  
  // @@protoc_insertion_point(field_mutable:google.spanner.admin.instance.v1.InstanceConfig.display_name)
  return display_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* InstanceConfig::release_display_name() {
  // @@protoc_insertion_point(field_release:google.spanner.admin.instance.v1.InstanceConfig.display_name)
  
  return display_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void InstanceConfig::set_allocated_display_name(::std::string* display_name) {
  if (display_name != NULL) {
    
  } else {
    
  }
  display_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), display_name);
  // @@protoc_insertion_point(field_set_allocated:google.spanner.admin.instance.v1.InstanceConfig.display_name)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// Instance

// string name = 1;
inline void Instance::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Instance::name() const {
  // @@protoc_insertion_point(field_get:google.spanner.admin.instance.v1.Instance.name)
  return name_.GetNoArena();
}
inline void Instance::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.spanner.admin.instance.v1.Instance.name)
}
#if LANG_CXX11
inline void Instance::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.spanner.admin.instance.v1.Instance.name)
}
#endif
inline void Instance::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.spanner.admin.instance.v1.Instance.name)
}
inline void Instance::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.spanner.admin.instance.v1.Instance.name)
}
inline ::std::string* Instance::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:google.spanner.admin.instance.v1.Instance.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Instance::release_name() {
  // @@protoc_insertion_point(field_release:google.spanner.admin.instance.v1.Instance.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Instance::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:google.spanner.admin.instance.v1.Instance.name)
}

// string config = 2;
inline void Instance::clear_config() {
  config_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Instance::config() const {
  // @@protoc_insertion_point(field_get:google.spanner.admin.instance.v1.Instance.config)
  return config_.GetNoArena();
}
inline void Instance::set_config(const ::std::string& value) {
  
  config_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.spanner.admin.instance.v1.Instance.config)
}
#if LANG_CXX11
inline void Instance::set_config(::std::string&& value) {
  
  config_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.spanner.admin.instance.v1.Instance.config)
}
#endif
inline void Instance::set_config(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  config_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.spanner.admin.instance.v1.Instance.config)
}
inline void Instance::set_config(const char* value, size_t size) {
  
  config_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.spanner.admin.instance.v1.Instance.config)
}
inline ::std::string* Instance::mutable_config() {
  
  // @@protoc_insertion_point(field_mutable:google.spanner.admin.instance.v1.Instance.config)
  return config_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Instance::release_config() {
  // @@protoc_insertion_point(field_release:google.spanner.admin.instance.v1.Instance.config)
  
  return config_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Instance::set_allocated_config(::std::string* config) {
  if (config != NULL) {
    
  } else {
    
  }
  config_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), config);
  // @@protoc_insertion_point(field_set_allocated:google.spanner.admin.instance.v1.Instance.config)
}

// string display_name = 3;
inline void Instance::clear_display_name() {
  display_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Instance::display_name() const {
  // @@protoc_insertion_point(field_get:google.spanner.admin.instance.v1.Instance.display_name)
  return display_name_.GetNoArena();
}
inline void Instance::set_display_name(const ::std::string& value) {
  
  display_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.spanner.admin.instance.v1.Instance.display_name)
}
#if LANG_CXX11
inline void Instance::set_display_name(::std::string&& value) {
  
  display_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.spanner.admin.instance.v1.Instance.display_name)
}
#endif
inline void Instance::set_display_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  display_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.spanner.admin.instance.v1.Instance.display_name)
}
inline void Instance::set_display_name(const char* value, size_t size) {
  
  display_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.spanner.admin.instance.v1.Instance.display_name)
}
inline ::std::string* Instance::mutable_display_name() {
  
  // @@protoc_insertion_point(field_mutable:google.spanner.admin.instance.v1.Instance.display_name)
  return display_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Instance::release_display_name() {
  // @@protoc_insertion_point(field_release:google.spanner.admin.instance.v1.Instance.display_name)
  
  return display_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Instance::set_allocated_display_name(::std::string* display_name) {
  if (display_name != NULL) {
    
  } else {
    
  }
  display_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), display_name);
  // @@protoc_insertion_point(field_set_allocated:google.spanner.admin.instance.v1.Instance.display_name)
}

// int32 node_count = 5;
inline void Instance::clear_node_count() {
  node_count_ = 0;
}
inline ::google::protobuf::int32 Instance::node_count() const {
  // @@protoc_insertion_point(field_get:google.spanner.admin.instance.v1.Instance.node_count)
  return node_count_;
}
inline void Instance::set_node_count(::google::protobuf::int32 value) {
  
  node_count_ = value;
  // @@protoc_insertion_point(field_set:google.spanner.admin.instance.v1.Instance.node_count)
}

// .google.spanner.admin.instance.v1.Instance.State state = 6;
inline void Instance::clear_state() {
  state_ = 0;
}
inline ::google::spanner::admin::instance::v1::Instance_State Instance::state() const {
  // @@protoc_insertion_point(field_get:google.spanner.admin.instance.v1.Instance.state)
  return static_cast< ::google::spanner::admin::instance::v1::Instance_State >(state_);
}
inline void Instance::set_state(::google::spanner::admin::instance::v1::Instance_State value) {
  
  state_ = value;
  // @@protoc_insertion_point(field_set:google.spanner.admin.instance.v1.Instance.state)
}

// map<string, string> labels = 7;
inline int Instance::labels_size() const {
  return labels_.size();
}
inline void Instance::clear_labels() {
  labels_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::std::string >&
Instance::labels() const {
  // @@protoc_insertion_point(field_map:google.spanner.admin.instance.v1.Instance.labels)
  return labels_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::std::string >*
Instance::mutable_labels() {
  // @@protoc_insertion_point(field_mutable_map:google.spanner.admin.instance.v1.Instance.labels)
  return labels_.MutableMap();
}

// -------------------------------------------------------------------

// ListInstanceConfigsRequest

// string parent = 1;
inline void ListInstanceConfigsRequest::clear_parent() {
  parent_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ListInstanceConfigsRequest::parent() const {
  // @@protoc_insertion_point(field_get:google.spanner.admin.instance.v1.ListInstanceConfigsRequest.parent)
  return parent_.GetNoArena();
}
inline void ListInstanceConfigsRequest::set_parent(const ::std::string& value) {
  
  parent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.spanner.admin.instance.v1.ListInstanceConfigsRequest.parent)
}
#if LANG_CXX11
inline void ListInstanceConfigsRequest::set_parent(::std::string&& value) {
  
  parent_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.spanner.admin.instance.v1.ListInstanceConfigsRequest.parent)
}
#endif
inline void ListInstanceConfigsRequest::set_parent(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  parent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.spanner.admin.instance.v1.ListInstanceConfigsRequest.parent)
}
inline void ListInstanceConfigsRequest::set_parent(const char* value, size_t size) {
  
  parent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.spanner.admin.instance.v1.ListInstanceConfigsRequest.parent)
}
inline ::std::string* ListInstanceConfigsRequest::mutable_parent() {
  
  // @@protoc_insertion_point(field_mutable:google.spanner.admin.instance.v1.ListInstanceConfigsRequest.parent)
  return parent_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ListInstanceConfigsRequest::release_parent() {
  // @@protoc_insertion_point(field_release:google.spanner.admin.instance.v1.ListInstanceConfigsRequest.parent)
  
  return parent_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ListInstanceConfigsRequest::set_allocated_parent(::std::string* parent) {
  if (parent != NULL) {
    
  } else {
    
  }
  parent_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), parent);
  // @@protoc_insertion_point(field_set_allocated:google.spanner.admin.instance.v1.ListInstanceConfigsRequest.parent)
}

// int32 page_size = 2;
inline void ListInstanceConfigsRequest::clear_page_size() {
  page_size_ = 0;
}
inline ::google::protobuf::int32 ListInstanceConfigsRequest::page_size() const {
  // @@protoc_insertion_point(field_get:google.spanner.admin.instance.v1.ListInstanceConfigsRequest.page_size)
  return page_size_;
}
inline void ListInstanceConfigsRequest::set_page_size(::google::protobuf::int32 value) {
  
  page_size_ = value;
  // @@protoc_insertion_point(field_set:google.spanner.admin.instance.v1.ListInstanceConfigsRequest.page_size)
}

// string page_token = 3;
inline void ListInstanceConfigsRequest::clear_page_token() {
  page_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ListInstanceConfigsRequest::page_token() const {
  // @@protoc_insertion_point(field_get:google.spanner.admin.instance.v1.ListInstanceConfigsRequest.page_token)
  return page_token_.GetNoArena();
}
inline void ListInstanceConfigsRequest::set_page_token(const ::std::string& value) {
  
  page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.spanner.admin.instance.v1.ListInstanceConfigsRequest.page_token)
}
#if LANG_CXX11
inline void ListInstanceConfigsRequest::set_page_token(::std::string&& value) {
  
  page_token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.spanner.admin.instance.v1.ListInstanceConfigsRequest.page_token)
}
#endif
inline void ListInstanceConfigsRequest::set_page_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.spanner.admin.instance.v1.ListInstanceConfigsRequest.page_token)
}
inline void ListInstanceConfigsRequest::set_page_token(const char* value, size_t size) {
  
  page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.spanner.admin.instance.v1.ListInstanceConfigsRequest.page_token)
}
inline ::std::string* ListInstanceConfigsRequest::mutable_page_token() {
  
  // @@protoc_insertion_point(field_mutable:google.spanner.admin.instance.v1.ListInstanceConfigsRequest.page_token)
  return page_token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ListInstanceConfigsRequest::release_page_token() {
  // @@protoc_insertion_point(field_release:google.spanner.admin.instance.v1.ListInstanceConfigsRequest.page_token)
  
  return page_token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ListInstanceConfigsRequest::set_allocated_page_token(::std::string* page_token) {
  if (page_token != NULL) {
    
  } else {
    
  }
  page_token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), page_token);
  // @@protoc_insertion_point(field_set_allocated:google.spanner.admin.instance.v1.ListInstanceConfigsRequest.page_token)
}

// -------------------------------------------------------------------

// ListInstanceConfigsResponse

// repeated .google.spanner.admin.instance.v1.InstanceConfig instance_configs = 1;
inline int ListInstanceConfigsResponse::instance_configs_size() const {
  return instance_configs_.size();
}
inline void ListInstanceConfigsResponse::clear_instance_configs() {
  instance_configs_.Clear();
}
inline const ::google::spanner::admin::instance::v1::InstanceConfig& ListInstanceConfigsResponse::instance_configs(int index) const {
  // @@protoc_insertion_point(field_get:google.spanner.admin.instance.v1.ListInstanceConfigsResponse.instance_configs)
  return instance_configs_.Get(index);
}
inline ::google::spanner::admin::instance::v1::InstanceConfig* ListInstanceConfigsResponse::mutable_instance_configs(int index) {
  // @@protoc_insertion_point(field_mutable:google.spanner.admin.instance.v1.ListInstanceConfigsResponse.instance_configs)
  return instance_configs_.Mutable(index);
}
inline ::google::spanner::admin::instance::v1::InstanceConfig* ListInstanceConfigsResponse::add_instance_configs() {
  // @@protoc_insertion_point(field_add:google.spanner.admin.instance.v1.ListInstanceConfigsResponse.instance_configs)
  return instance_configs_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::google::spanner::admin::instance::v1::InstanceConfig >*
ListInstanceConfigsResponse::mutable_instance_configs() {
  // @@protoc_insertion_point(field_mutable_list:google.spanner.admin.instance.v1.ListInstanceConfigsResponse.instance_configs)
  return &instance_configs_;
}
inline const ::google::protobuf::RepeatedPtrField< ::google::spanner::admin::instance::v1::InstanceConfig >&
ListInstanceConfigsResponse::instance_configs() const {
  // @@protoc_insertion_point(field_list:google.spanner.admin.instance.v1.ListInstanceConfigsResponse.instance_configs)
  return instance_configs_;
}

// string next_page_token = 2;
inline void ListInstanceConfigsResponse::clear_next_page_token() {
  next_page_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ListInstanceConfigsResponse::next_page_token() const {
  // @@protoc_insertion_point(field_get:google.spanner.admin.instance.v1.ListInstanceConfigsResponse.next_page_token)
  return next_page_token_.GetNoArena();
}
inline void ListInstanceConfigsResponse::set_next_page_token(const ::std::string& value) {
  
  next_page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.spanner.admin.instance.v1.ListInstanceConfigsResponse.next_page_token)
}
#if LANG_CXX11
inline void ListInstanceConfigsResponse::set_next_page_token(::std::string&& value) {
  
  next_page_token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.spanner.admin.instance.v1.ListInstanceConfigsResponse.next_page_token)
}
#endif
inline void ListInstanceConfigsResponse::set_next_page_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  next_page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.spanner.admin.instance.v1.ListInstanceConfigsResponse.next_page_token)
}
inline void ListInstanceConfigsResponse::set_next_page_token(const char* value, size_t size) {
  
  next_page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.spanner.admin.instance.v1.ListInstanceConfigsResponse.next_page_token)
}
inline ::std::string* ListInstanceConfigsResponse::mutable_next_page_token() {
  
  // @@protoc_insertion_point(field_mutable:google.spanner.admin.instance.v1.ListInstanceConfigsResponse.next_page_token)
  return next_page_token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ListInstanceConfigsResponse::release_next_page_token() {
  // @@protoc_insertion_point(field_release:google.spanner.admin.instance.v1.ListInstanceConfigsResponse.next_page_token)
  
  return next_page_token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ListInstanceConfigsResponse::set_allocated_next_page_token(::std::string* next_page_token) {
  if (next_page_token != NULL) {
    
  } else {
    
  }
  next_page_token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), next_page_token);
  // @@protoc_insertion_point(field_set_allocated:google.spanner.admin.instance.v1.ListInstanceConfigsResponse.next_page_token)
}

// -------------------------------------------------------------------

// GetInstanceConfigRequest

// string name = 1;
inline void GetInstanceConfigRequest::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetInstanceConfigRequest::name() const {
  // @@protoc_insertion_point(field_get:google.spanner.admin.instance.v1.GetInstanceConfigRequest.name)
  return name_.GetNoArena();
}
inline void GetInstanceConfigRequest::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.spanner.admin.instance.v1.GetInstanceConfigRequest.name)
}
#if LANG_CXX11
inline void GetInstanceConfigRequest::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.spanner.admin.instance.v1.GetInstanceConfigRequest.name)
}
#endif
inline void GetInstanceConfigRequest::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.spanner.admin.instance.v1.GetInstanceConfigRequest.name)
}
inline void GetInstanceConfigRequest::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.spanner.admin.instance.v1.GetInstanceConfigRequest.name)
}
inline ::std::string* GetInstanceConfigRequest::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:google.spanner.admin.instance.v1.GetInstanceConfigRequest.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetInstanceConfigRequest::release_name() {
  // @@protoc_insertion_point(field_release:google.spanner.admin.instance.v1.GetInstanceConfigRequest.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetInstanceConfigRequest::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:google.spanner.admin.instance.v1.GetInstanceConfigRequest.name)
}

// -------------------------------------------------------------------

// GetInstanceRequest

// string name = 1;
inline void GetInstanceRequest::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetInstanceRequest::name() const {
  // @@protoc_insertion_point(field_get:google.spanner.admin.instance.v1.GetInstanceRequest.name)
  return name_.GetNoArena();
}
inline void GetInstanceRequest::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.spanner.admin.instance.v1.GetInstanceRequest.name)
}
#if LANG_CXX11
inline void GetInstanceRequest::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.spanner.admin.instance.v1.GetInstanceRequest.name)
}
#endif
inline void GetInstanceRequest::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.spanner.admin.instance.v1.GetInstanceRequest.name)
}
inline void GetInstanceRequest::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.spanner.admin.instance.v1.GetInstanceRequest.name)
}
inline ::std::string* GetInstanceRequest::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:google.spanner.admin.instance.v1.GetInstanceRequest.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetInstanceRequest::release_name() {
  // @@protoc_insertion_point(field_release:google.spanner.admin.instance.v1.GetInstanceRequest.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetInstanceRequest::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:google.spanner.admin.instance.v1.GetInstanceRequest.name)
}

// -------------------------------------------------------------------

// CreateInstanceRequest

// string parent = 1;
inline void CreateInstanceRequest::clear_parent() {
  parent_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CreateInstanceRequest::parent() const {
  // @@protoc_insertion_point(field_get:google.spanner.admin.instance.v1.CreateInstanceRequest.parent)
  return parent_.GetNoArena();
}
inline void CreateInstanceRequest::set_parent(const ::std::string& value) {
  
  parent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.spanner.admin.instance.v1.CreateInstanceRequest.parent)
}
#if LANG_CXX11
inline void CreateInstanceRequest::set_parent(::std::string&& value) {
  
  parent_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.spanner.admin.instance.v1.CreateInstanceRequest.parent)
}
#endif
inline void CreateInstanceRequest::set_parent(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  parent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.spanner.admin.instance.v1.CreateInstanceRequest.parent)
}
inline void CreateInstanceRequest::set_parent(const char* value, size_t size) {
  
  parent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.spanner.admin.instance.v1.CreateInstanceRequest.parent)
}
inline ::std::string* CreateInstanceRequest::mutable_parent() {
  
  // @@protoc_insertion_point(field_mutable:google.spanner.admin.instance.v1.CreateInstanceRequest.parent)
  return parent_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CreateInstanceRequest::release_parent() {
  // @@protoc_insertion_point(field_release:google.spanner.admin.instance.v1.CreateInstanceRequest.parent)
  
  return parent_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CreateInstanceRequest::set_allocated_parent(::std::string* parent) {
  if (parent != NULL) {
    
  } else {
    
  }
  parent_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), parent);
  // @@protoc_insertion_point(field_set_allocated:google.spanner.admin.instance.v1.CreateInstanceRequest.parent)
}

// string instance_id = 2;
inline void CreateInstanceRequest::clear_instance_id() {
  instance_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CreateInstanceRequest::instance_id() const {
  // @@protoc_insertion_point(field_get:google.spanner.admin.instance.v1.CreateInstanceRequest.instance_id)
  return instance_id_.GetNoArena();
}
inline void CreateInstanceRequest::set_instance_id(const ::std::string& value) {
  
  instance_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.spanner.admin.instance.v1.CreateInstanceRequest.instance_id)
}
#if LANG_CXX11
inline void CreateInstanceRequest::set_instance_id(::std::string&& value) {
  
  instance_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.spanner.admin.instance.v1.CreateInstanceRequest.instance_id)
}
#endif
inline void CreateInstanceRequest::set_instance_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  instance_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.spanner.admin.instance.v1.CreateInstanceRequest.instance_id)
}
inline void CreateInstanceRequest::set_instance_id(const char* value, size_t size) {
  
  instance_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.spanner.admin.instance.v1.CreateInstanceRequest.instance_id)
}
inline ::std::string* CreateInstanceRequest::mutable_instance_id() {
  
  // @@protoc_insertion_point(field_mutable:google.spanner.admin.instance.v1.CreateInstanceRequest.instance_id)
  return instance_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CreateInstanceRequest::release_instance_id() {
  // @@protoc_insertion_point(field_release:google.spanner.admin.instance.v1.CreateInstanceRequest.instance_id)
  
  return instance_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CreateInstanceRequest::set_allocated_instance_id(::std::string* instance_id) {
  if (instance_id != NULL) {
    
  } else {
    
  }
  instance_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), instance_id);
  // @@protoc_insertion_point(field_set_allocated:google.spanner.admin.instance.v1.CreateInstanceRequest.instance_id)
}

// .google.spanner.admin.instance.v1.Instance instance = 3;
inline bool CreateInstanceRequest::has_instance() const {
  return this != internal_default_instance() && instance_ != NULL;
}
inline void CreateInstanceRequest::clear_instance() {
  if (GetArenaNoVirtual() == NULL && instance_ != NULL) delete instance_;
  instance_ = NULL;
}
inline const ::google::spanner::admin::instance::v1::Instance& CreateInstanceRequest::instance() const {
  // @@protoc_insertion_point(field_get:google.spanner.admin.instance.v1.CreateInstanceRequest.instance)
  return instance_ != NULL ? *instance_
                         : *::google::spanner::admin::instance::v1::Instance::internal_default_instance();
}
inline ::google::spanner::admin::instance::v1::Instance* CreateInstanceRequest::mutable_instance() {
  
  if (instance_ == NULL) {
    instance_ = new ::google::spanner::admin::instance::v1::Instance;
  }
  // @@protoc_insertion_point(field_mutable:google.spanner.admin.instance.v1.CreateInstanceRequest.instance)
  return instance_;
}
inline ::google::spanner::admin::instance::v1::Instance* CreateInstanceRequest::release_instance() {
  // @@protoc_insertion_point(field_release:google.spanner.admin.instance.v1.CreateInstanceRequest.instance)
  
  ::google::spanner::admin::instance::v1::Instance* temp = instance_;
  instance_ = NULL;
  return temp;
}
inline void CreateInstanceRequest::set_allocated_instance(::google::spanner::admin::instance::v1::Instance* instance) {
  delete instance_;
  instance_ = instance;
  if (instance) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.spanner.admin.instance.v1.CreateInstanceRequest.instance)
}

// -------------------------------------------------------------------

// ListInstancesRequest

// string parent = 1;
inline void ListInstancesRequest::clear_parent() {
  parent_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ListInstancesRequest::parent() const {
  // @@protoc_insertion_point(field_get:google.spanner.admin.instance.v1.ListInstancesRequest.parent)
  return parent_.GetNoArena();
}
inline void ListInstancesRequest::set_parent(const ::std::string& value) {
  
  parent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.spanner.admin.instance.v1.ListInstancesRequest.parent)
}
#if LANG_CXX11
inline void ListInstancesRequest::set_parent(::std::string&& value) {
  
  parent_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.spanner.admin.instance.v1.ListInstancesRequest.parent)
}
#endif
inline void ListInstancesRequest::set_parent(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  parent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.spanner.admin.instance.v1.ListInstancesRequest.parent)
}
inline void ListInstancesRequest::set_parent(const char* value, size_t size) {
  
  parent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.spanner.admin.instance.v1.ListInstancesRequest.parent)
}
inline ::std::string* ListInstancesRequest::mutable_parent() {
  
  // @@protoc_insertion_point(field_mutable:google.spanner.admin.instance.v1.ListInstancesRequest.parent)
  return parent_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ListInstancesRequest::release_parent() {
  // @@protoc_insertion_point(field_release:google.spanner.admin.instance.v1.ListInstancesRequest.parent)
  
  return parent_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ListInstancesRequest::set_allocated_parent(::std::string* parent) {
  if (parent != NULL) {
    
  } else {
    
  }
  parent_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), parent);
  // @@protoc_insertion_point(field_set_allocated:google.spanner.admin.instance.v1.ListInstancesRequest.parent)
}

// int32 page_size = 2;
inline void ListInstancesRequest::clear_page_size() {
  page_size_ = 0;
}
inline ::google::protobuf::int32 ListInstancesRequest::page_size() const {
  // @@protoc_insertion_point(field_get:google.spanner.admin.instance.v1.ListInstancesRequest.page_size)
  return page_size_;
}
inline void ListInstancesRequest::set_page_size(::google::protobuf::int32 value) {
  
  page_size_ = value;
  // @@protoc_insertion_point(field_set:google.spanner.admin.instance.v1.ListInstancesRequest.page_size)
}

// string page_token = 3;
inline void ListInstancesRequest::clear_page_token() {
  page_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ListInstancesRequest::page_token() const {
  // @@protoc_insertion_point(field_get:google.spanner.admin.instance.v1.ListInstancesRequest.page_token)
  return page_token_.GetNoArena();
}
inline void ListInstancesRequest::set_page_token(const ::std::string& value) {
  
  page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.spanner.admin.instance.v1.ListInstancesRequest.page_token)
}
#if LANG_CXX11
inline void ListInstancesRequest::set_page_token(::std::string&& value) {
  
  page_token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.spanner.admin.instance.v1.ListInstancesRequest.page_token)
}
#endif
inline void ListInstancesRequest::set_page_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.spanner.admin.instance.v1.ListInstancesRequest.page_token)
}
inline void ListInstancesRequest::set_page_token(const char* value, size_t size) {
  
  page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.spanner.admin.instance.v1.ListInstancesRequest.page_token)
}
inline ::std::string* ListInstancesRequest::mutable_page_token() {
  
  // @@protoc_insertion_point(field_mutable:google.spanner.admin.instance.v1.ListInstancesRequest.page_token)
  return page_token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ListInstancesRequest::release_page_token() {
  // @@protoc_insertion_point(field_release:google.spanner.admin.instance.v1.ListInstancesRequest.page_token)
  
  return page_token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ListInstancesRequest::set_allocated_page_token(::std::string* page_token) {
  if (page_token != NULL) {
    
  } else {
    
  }
  page_token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), page_token);
  // @@protoc_insertion_point(field_set_allocated:google.spanner.admin.instance.v1.ListInstancesRequest.page_token)
}

// string filter = 4;
inline void ListInstancesRequest::clear_filter() {
  filter_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ListInstancesRequest::filter() const {
  // @@protoc_insertion_point(field_get:google.spanner.admin.instance.v1.ListInstancesRequest.filter)
  return filter_.GetNoArena();
}
inline void ListInstancesRequest::set_filter(const ::std::string& value) {
  
  filter_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.spanner.admin.instance.v1.ListInstancesRequest.filter)
}
#if LANG_CXX11
inline void ListInstancesRequest::set_filter(::std::string&& value) {
  
  filter_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.spanner.admin.instance.v1.ListInstancesRequest.filter)
}
#endif
inline void ListInstancesRequest::set_filter(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  filter_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.spanner.admin.instance.v1.ListInstancesRequest.filter)
}
inline void ListInstancesRequest::set_filter(const char* value, size_t size) {
  
  filter_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.spanner.admin.instance.v1.ListInstancesRequest.filter)
}
inline ::std::string* ListInstancesRequest::mutable_filter() {
  
  // @@protoc_insertion_point(field_mutable:google.spanner.admin.instance.v1.ListInstancesRequest.filter)
  return filter_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ListInstancesRequest::release_filter() {
  // @@protoc_insertion_point(field_release:google.spanner.admin.instance.v1.ListInstancesRequest.filter)
  
  return filter_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ListInstancesRequest::set_allocated_filter(::std::string* filter) {
  if (filter != NULL) {
    
  } else {
    
  }
  filter_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), filter);
  // @@protoc_insertion_point(field_set_allocated:google.spanner.admin.instance.v1.ListInstancesRequest.filter)
}

// -------------------------------------------------------------------

// ListInstancesResponse

// repeated .google.spanner.admin.instance.v1.Instance instances = 1;
inline int ListInstancesResponse::instances_size() const {
  return instances_.size();
}
inline void ListInstancesResponse::clear_instances() {
  instances_.Clear();
}
inline const ::google::spanner::admin::instance::v1::Instance& ListInstancesResponse::instances(int index) const {
  // @@protoc_insertion_point(field_get:google.spanner.admin.instance.v1.ListInstancesResponse.instances)
  return instances_.Get(index);
}
inline ::google::spanner::admin::instance::v1::Instance* ListInstancesResponse::mutable_instances(int index) {
  // @@protoc_insertion_point(field_mutable:google.spanner.admin.instance.v1.ListInstancesResponse.instances)
  return instances_.Mutable(index);
}
inline ::google::spanner::admin::instance::v1::Instance* ListInstancesResponse::add_instances() {
  // @@protoc_insertion_point(field_add:google.spanner.admin.instance.v1.ListInstancesResponse.instances)
  return instances_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::google::spanner::admin::instance::v1::Instance >*
ListInstancesResponse::mutable_instances() {
  // @@protoc_insertion_point(field_mutable_list:google.spanner.admin.instance.v1.ListInstancesResponse.instances)
  return &instances_;
}
inline const ::google::protobuf::RepeatedPtrField< ::google::spanner::admin::instance::v1::Instance >&
ListInstancesResponse::instances() const {
  // @@protoc_insertion_point(field_list:google.spanner.admin.instance.v1.ListInstancesResponse.instances)
  return instances_;
}

// string next_page_token = 2;
inline void ListInstancesResponse::clear_next_page_token() {
  next_page_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ListInstancesResponse::next_page_token() const {
  // @@protoc_insertion_point(field_get:google.spanner.admin.instance.v1.ListInstancesResponse.next_page_token)
  return next_page_token_.GetNoArena();
}
inline void ListInstancesResponse::set_next_page_token(const ::std::string& value) {
  
  next_page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.spanner.admin.instance.v1.ListInstancesResponse.next_page_token)
}
#if LANG_CXX11
inline void ListInstancesResponse::set_next_page_token(::std::string&& value) {
  
  next_page_token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.spanner.admin.instance.v1.ListInstancesResponse.next_page_token)
}
#endif
inline void ListInstancesResponse::set_next_page_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  next_page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.spanner.admin.instance.v1.ListInstancesResponse.next_page_token)
}
inline void ListInstancesResponse::set_next_page_token(const char* value, size_t size) {
  
  next_page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.spanner.admin.instance.v1.ListInstancesResponse.next_page_token)
}
inline ::std::string* ListInstancesResponse::mutable_next_page_token() {
  
  // @@protoc_insertion_point(field_mutable:google.spanner.admin.instance.v1.ListInstancesResponse.next_page_token)
  return next_page_token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ListInstancesResponse::release_next_page_token() {
  // @@protoc_insertion_point(field_release:google.spanner.admin.instance.v1.ListInstancesResponse.next_page_token)
  
  return next_page_token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ListInstancesResponse::set_allocated_next_page_token(::std::string* next_page_token) {
  if (next_page_token != NULL) {
    
  } else {
    
  }
  next_page_token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), next_page_token);
  // @@protoc_insertion_point(field_set_allocated:google.spanner.admin.instance.v1.ListInstancesResponse.next_page_token)
}

// -------------------------------------------------------------------

// UpdateInstanceRequest

// .google.spanner.admin.instance.v1.Instance instance = 1;
inline bool UpdateInstanceRequest::has_instance() const {
  return this != internal_default_instance() && instance_ != NULL;
}
inline void UpdateInstanceRequest::clear_instance() {
  if (GetArenaNoVirtual() == NULL && instance_ != NULL) delete instance_;
  instance_ = NULL;
}
inline const ::google::spanner::admin::instance::v1::Instance& UpdateInstanceRequest::instance() const {
  // @@protoc_insertion_point(field_get:google.spanner.admin.instance.v1.UpdateInstanceRequest.instance)
  return instance_ != NULL ? *instance_
                         : *::google::spanner::admin::instance::v1::Instance::internal_default_instance();
}
inline ::google::spanner::admin::instance::v1::Instance* UpdateInstanceRequest::mutable_instance() {
  
  if (instance_ == NULL) {
    instance_ = new ::google::spanner::admin::instance::v1::Instance;
  }
  // @@protoc_insertion_point(field_mutable:google.spanner.admin.instance.v1.UpdateInstanceRequest.instance)
  return instance_;
}
inline ::google::spanner::admin::instance::v1::Instance* UpdateInstanceRequest::release_instance() {
  // @@protoc_insertion_point(field_release:google.spanner.admin.instance.v1.UpdateInstanceRequest.instance)
  
  ::google::spanner::admin::instance::v1::Instance* temp = instance_;
  instance_ = NULL;
  return temp;
}
inline void UpdateInstanceRequest::set_allocated_instance(::google::spanner::admin::instance::v1::Instance* instance) {
  delete instance_;
  instance_ = instance;
  if (instance) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.spanner.admin.instance.v1.UpdateInstanceRequest.instance)
}

// .google.protobuf.FieldMask field_mask = 2;
inline bool UpdateInstanceRequest::has_field_mask() const {
  return this != internal_default_instance() && field_mask_ != NULL;
}
inline void UpdateInstanceRequest::clear_field_mask() {
  if (GetArenaNoVirtual() == NULL && field_mask_ != NULL) delete field_mask_;
  field_mask_ = NULL;
}
inline const ::google::protobuf::FieldMask& UpdateInstanceRequest::field_mask() const {
  // @@protoc_insertion_point(field_get:google.spanner.admin.instance.v1.UpdateInstanceRequest.field_mask)
  return field_mask_ != NULL ? *field_mask_
                         : *::google::protobuf::FieldMask::internal_default_instance();
}
inline ::google::protobuf::FieldMask* UpdateInstanceRequest::mutable_field_mask() {
  
  if (field_mask_ == NULL) {
    field_mask_ = new ::google::protobuf::FieldMask;
  }
  // @@protoc_insertion_point(field_mutable:google.spanner.admin.instance.v1.UpdateInstanceRequest.field_mask)
  return field_mask_;
}
inline ::google::protobuf::FieldMask* UpdateInstanceRequest::release_field_mask() {
  // @@protoc_insertion_point(field_release:google.spanner.admin.instance.v1.UpdateInstanceRequest.field_mask)
  
  ::google::protobuf::FieldMask* temp = field_mask_;
  field_mask_ = NULL;
  return temp;
}
inline void UpdateInstanceRequest::set_allocated_field_mask(::google::protobuf::FieldMask* field_mask) {
  delete field_mask_;
  field_mask_ = field_mask;
  if (field_mask) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.spanner.admin.instance.v1.UpdateInstanceRequest.field_mask)
}

// -------------------------------------------------------------------

// DeleteInstanceRequest

// string name = 1;
inline void DeleteInstanceRequest::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DeleteInstanceRequest::name() const {
  // @@protoc_insertion_point(field_get:google.spanner.admin.instance.v1.DeleteInstanceRequest.name)
  return name_.GetNoArena();
}
inline void DeleteInstanceRequest::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.spanner.admin.instance.v1.DeleteInstanceRequest.name)
}
#if LANG_CXX11
inline void DeleteInstanceRequest::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.spanner.admin.instance.v1.DeleteInstanceRequest.name)
}
#endif
inline void DeleteInstanceRequest::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.spanner.admin.instance.v1.DeleteInstanceRequest.name)
}
inline void DeleteInstanceRequest::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.spanner.admin.instance.v1.DeleteInstanceRequest.name)
}
inline ::std::string* DeleteInstanceRequest::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:google.spanner.admin.instance.v1.DeleteInstanceRequest.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DeleteInstanceRequest::release_name() {
  // @@protoc_insertion_point(field_release:google.spanner.admin.instance.v1.DeleteInstanceRequest.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DeleteInstanceRequest::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:google.spanner.admin.instance.v1.DeleteInstanceRequest.name)
}

// -------------------------------------------------------------------

// CreateInstanceMetadata

// .google.spanner.admin.instance.v1.Instance instance = 1;
inline bool CreateInstanceMetadata::has_instance() const {
  return this != internal_default_instance() && instance_ != NULL;
}
inline void CreateInstanceMetadata::clear_instance() {
  if (GetArenaNoVirtual() == NULL && instance_ != NULL) delete instance_;
  instance_ = NULL;
}
inline const ::google::spanner::admin::instance::v1::Instance& CreateInstanceMetadata::instance() const {
  // @@protoc_insertion_point(field_get:google.spanner.admin.instance.v1.CreateInstanceMetadata.instance)
  return instance_ != NULL ? *instance_
                         : *::google::spanner::admin::instance::v1::Instance::internal_default_instance();
}
inline ::google::spanner::admin::instance::v1::Instance* CreateInstanceMetadata::mutable_instance() {
  
  if (instance_ == NULL) {
    instance_ = new ::google::spanner::admin::instance::v1::Instance;
  }
  // @@protoc_insertion_point(field_mutable:google.spanner.admin.instance.v1.CreateInstanceMetadata.instance)
  return instance_;
}
inline ::google::spanner::admin::instance::v1::Instance* CreateInstanceMetadata::release_instance() {
  // @@protoc_insertion_point(field_release:google.spanner.admin.instance.v1.CreateInstanceMetadata.instance)
  
  ::google::spanner::admin::instance::v1::Instance* temp = instance_;
  instance_ = NULL;
  return temp;
}
inline void CreateInstanceMetadata::set_allocated_instance(::google::spanner::admin::instance::v1::Instance* instance) {
  delete instance_;
  instance_ = instance;
  if (instance) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.spanner.admin.instance.v1.CreateInstanceMetadata.instance)
}

// .google.protobuf.Timestamp start_time = 2;
inline bool CreateInstanceMetadata::has_start_time() const {
  return this != internal_default_instance() && start_time_ != NULL;
}
inline void CreateInstanceMetadata::clear_start_time() {
  if (GetArenaNoVirtual() == NULL && start_time_ != NULL) delete start_time_;
  start_time_ = NULL;
}
inline const ::google::protobuf::Timestamp& CreateInstanceMetadata::start_time() const {
  // @@protoc_insertion_point(field_get:google.spanner.admin.instance.v1.CreateInstanceMetadata.start_time)
  return start_time_ != NULL ? *start_time_
                         : *::google::protobuf::Timestamp::internal_default_instance();
}
inline ::google::protobuf::Timestamp* CreateInstanceMetadata::mutable_start_time() {
  
  if (start_time_ == NULL) {
    start_time_ = new ::google::protobuf::Timestamp;
  }
  // @@protoc_insertion_point(field_mutable:google.spanner.admin.instance.v1.CreateInstanceMetadata.start_time)
  return start_time_;
}
inline ::google::protobuf::Timestamp* CreateInstanceMetadata::release_start_time() {
  // @@protoc_insertion_point(field_release:google.spanner.admin.instance.v1.CreateInstanceMetadata.start_time)
  
  ::google::protobuf::Timestamp* temp = start_time_;
  start_time_ = NULL;
  return temp;
}
inline void CreateInstanceMetadata::set_allocated_start_time(::google::protobuf::Timestamp* start_time) {
  delete start_time_;
  if (start_time != NULL && start_time->GetArena() != NULL) {
    ::google::protobuf::Timestamp* new_start_time = new ::google::protobuf::Timestamp;
    new_start_time->CopyFrom(*start_time);
    start_time = new_start_time;
  }
  start_time_ = start_time;
  if (start_time) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.spanner.admin.instance.v1.CreateInstanceMetadata.start_time)
}

// .google.protobuf.Timestamp cancel_time = 3;
inline bool CreateInstanceMetadata::has_cancel_time() const {
  return this != internal_default_instance() && cancel_time_ != NULL;
}
inline void CreateInstanceMetadata::clear_cancel_time() {
  if (GetArenaNoVirtual() == NULL && cancel_time_ != NULL) delete cancel_time_;
  cancel_time_ = NULL;
}
inline const ::google::protobuf::Timestamp& CreateInstanceMetadata::cancel_time() const {
  // @@protoc_insertion_point(field_get:google.spanner.admin.instance.v1.CreateInstanceMetadata.cancel_time)
  return cancel_time_ != NULL ? *cancel_time_
                         : *::google::protobuf::Timestamp::internal_default_instance();
}
inline ::google::protobuf::Timestamp* CreateInstanceMetadata::mutable_cancel_time() {
  
  if (cancel_time_ == NULL) {
    cancel_time_ = new ::google::protobuf::Timestamp;
  }
  // @@protoc_insertion_point(field_mutable:google.spanner.admin.instance.v1.CreateInstanceMetadata.cancel_time)
  return cancel_time_;
}
inline ::google::protobuf::Timestamp* CreateInstanceMetadata::release_cancel_time() {
  // @@protoc_insertion_point(field_release:google.spanner.admin.instance.v1.CreateInstanceMetadata.cancel_time)
  
  ::google::protobuf::Timestamp* temp = cancel_time_;
  cancel_time_ = NULL;
  return temp;
}
inline void CreateInstanceMetadata::set_allocated_cancel_time(::google::protobuf::Timestamp* cancel_time) {
  delete cancel_time_;
  if (cancel_time != NULL && cancel_time->GetArena() != NULL) {
    ::google::protobuf::Timestamp* new_cancel_time = new ::google::protobuf::Timestamp;
    new_cancel_time->CopyFrom(*cancel_time);
    cancel_time = new_cancel_time;
  }
  cancel_time_ = cancel_time;
  if (cancel_time) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.spanner.admin.instance.v1.CreateInstanceMetadata.cancel_time)
}

// .google.protobuf.Timestamp end_time = 4;
inline bool CreateInstanceMetadata::has_end_time() const {
  return this != internal_default_instance() && end_time_ != NULL;
}
inline void CreateInstanceMetadata::clear_end_time() {
  if (GetArenaNoVirtual() == NULL && end_time_ != NULL) delete end_time_;
  end_time_ = NULL;
}
inline const ::google::protobuf::Timestamp& CreateInstanceMetadata::end_time() const {
  // @@protoc_insertion_point(field_get:google.spanner.admin.instance.v1.CreateInstanceMetadata.end_time)
  return end_time_ != NULL ? *end_time_
                         : *::google::protobuf::Timestamp::internal_default_instance();
}
inline ::google::protobuf::Timestamp* CreateInstanceMetadata::mutable_end_time() {
  
  if (end_time_ == NULL) {
    end_time_ = new ::google::protobuf::Timestamp;
  }
  // @@protoc_insertion_point(field_mutable:google.spanner.admin.instance.v1.CreateInstanceMetadata.end_time)
  return end_time_;
}
inline ::google::protobuf::Timestamp* CreateInstanceMetadata::release_end_time() {
  // @@protoc_insertion_point(field_release:google.spanner.admin.instance.v1.CreateInstanceMetadata.end_time)
  
  ::google::protobuf::Timestamp* temp = end_time_;
  end_time_ = NULL;
  return temp;
}
inline void CreateInstanceMetadata::set_allocated_end_time(::google::protobuf::Timestamp* end_time) {
  delete end_time_;
  if (end_time != NULL && end_time->GetArena() != NULL) {
    ::google::protobuf::Timestamp* new_end_time = new ::google::protobuf::Timestamp;
    new_end_time->CopyFrom(*end_time);
    end_time = new_end_time;
  }
  end_time_ = end_time;
  if (end_time) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.spanner.admin.instance.v1.CreateInstanceMetadata.end_time)
}

// -------------------------------------------------------------------

// UpdateInstanceMetadata

// .google.spanner.admin.instance.v1.Instance instance = 1;
inline bool UpdateInstanceMetadata::has_instance() const {
  return this != internal_default_instance() && instance_ != NULL;
}
inline void UpdateInstanceMetadata::clear_instance() {
  if (GetArenaNoVirtual() == NULL && instance_ != NULL) delete instance_;
  instance_ = NULL;
}
inline const ::google::spanner::admin::instance::v1::Instance& UpdateInstanceMetadata::instance() const {
  // @@protoc_insertion_point(field_get:google.spanner.admin.instance.v1.UpdateInstanceMetadata.instance)
  return instance_ != NULL ? *instance_
                         : *::google::spanner::admin::instance::v1::Instance::internal_default_instance();
}
inline ::google::spanner::admin::instance::v1::Instance* UpdateInstanceMetadata::mutable_instance() {
  
  if (instance_ == NULL) {
    instance_ = new ::google::spanner::admin::instance::v1::Instance;
  }
  // @@protoc_insertion_point(field_mutable:google.spanner.admin.instance.v1.UpdateInstanceMetadata.instance)
  return instance_;
}
inline ::google::spanner::admin::instance::v1::Instance* UpdateInstanceMetadata::release_instance() {
  // @@protoc_insertion_point(field_release:google.spanner.admin.instance.v1.UpdateInstanceMetadata.instance)
  
  ::google::spanner::admin::instance::v1::Instance* temp = instance_;
  instance_ = NULL;
  return temp;
}
inline void UpdateInstanceMetadata::set_allocated_instance(::google::spanner::admin::instance::v1::Instance* instance) {
  delete instance_;
  instance_ = instance;
  if (instance) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.spanner.admin.instance.v1.UpdateInstanceMetadata.instance)
}

// .google.protobuf.Timestamp start_time = 2;
inline bool UpdateInstanceMetadata::has_start_time() const {
  return this != internal_default_instance() && start_time_ != NULL;
}
inline void UpdateInstanceMetadata::clear_start_time() {
  if (GetArenaNoVirtual() == NULL && start_time_ != NULL) delete start_time_;
  start_time_ = NULL;
}
inline const ::google::protobuf::Timestamp& UpdateInstanceMetadata::start_time() const {
  // @@protoc_insertion_point(field_get:google.spanner.admin.instance.v1.UpdateInstanceMetadata.start_time)
  return start_time_ != NULL ? *start_time_
                         : *::google::protobuf::Timestamp::internal_default_instance();
}
inline ::google::protobuf::Timestamp* UpdateInstanceMetadata::mutable_start_time() {
  
  if (start_time_ == NULL) {
    start_time_ = new ::google::protobuf::Timestamp;
  }
  // @@protoc_insertion_point(field_mutable:google.spanner.admin.instance.v1.UpdateInstanceMetadata.start_time)
  return start_time_;
}
inline ::google::protobuf::Timestamp* UpdateInstanceMetadata::release_start_time() {
  // @@protoc_insertion_point(field_release:google.spanner.admin.instance.v1.UpdateInstanceMetadata.start_time)
  
  ::google::protobuf::Timestamp* temp = start_time_;
  start_time_ = NULL;
  return temp;
}
inline void UpdateInstanceMetadata::set_allocated_start_time(::google::protobuf::Timestamp* start_time) {
  delete start_time_;
  if (start_time != NULL && start_time->GetArena() != NULL) {
    ::google::protobuf::Timestamp* new_start_time = new ::google::protobuf::Timestamp;
    new_start_time->CopyFrom(*start_time);
    start_time = new_start_time;
  }
  start_time_ = start_time;
  if (start_time) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.spanner.admin.instance.v1.UpdateInstanceMetadata.start_time)
}

// .google.protobuf.Timestamp cancel_time = 3;
inline bool UpdateInstanceMetadata::has_cancel_time() const {
  return this != internal_default_instance() && cancel_time_ != NULL;
}
inline void UpdateInstanceMetadata::clear_cancel_time() {
  if (GetArenaNoVirtual() == NULL && cancel_time_ != NULL) delete cancel_time_;
  cancel_time_ = NULL;
}
inline const ::google::protobuf::Timestamp& UpdateInstanceMetadata::cancel_time() const {
  // @@protoc_insertion_point(field_get:google.spanner.admin.instance.v1.UpdateInstanceMetadata.cancel_time)
  return cancel_time_ != NULL ? *cancel_time_
                         : *::google::protobuf::Timestamp::internal_default_instance();
}
inline ::google::protobuf::Timestamp* UpdateInstanceMetadata::mutable_cancel_time() {
  
  if (cancel_time_ == NULL) {
    cancel_time_ = new ::google::protobuf::Timestamp;
  }
  // @@protoc_insertion_point(field_mutable:google.spanner.admin.instance.v1.UpdateInstanceMetadata.cancel_time)
  return cancel_time_;
}
inline ::google::protobuf::Timestamp* UpdateInstanceMetadata::release_cancel_time() {
  // @@protoc_insertion_point(field_release:google.spanner.admin.instance.v1.UpdateInstanceMetadata.cancel_time)
  
  ::google::protobuf::Timestamp* temp = cancel_time_;
  cancel_time_ = NULL;
  return temp;
}
inline void UpdateInstanceMetadata::set_allocated_cancel_time(::google::protobuf::Timestamp* cancel_time) {
  delete cancel_time_;
  if (cancel_time != NULL && cancel_time->GetArena() != NULL) {
    ::google::protobuf::Timestamp* new_cancel_time = new ::google::protobuf::Timestamp;
    new_cancel_time->CopyFrom(*cancel_time);
    cancel_time = new_cancel_time;
  }
  cancel_time_ = cancel_time;
  if (cancel_time) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.spanner.admin.instance.v1.UpdateInstanceMetadata.cancel_time)
}

// .google.protobuf.Timestamp end_time = 4;
inline bool UpdateInstanceMetadata::has_end_time() const {
  return this != internal_default_instance() && end_time_ != NULL;
}
inline void UpdateInstanceMetadata::clear_end_time() {
  if (GetArenaNoVirtual() == NULL && end_time_ != NULL) delete end_time_;
  end_time_ = NULL;
}
inline const ::google::protobuf::Timestamp& UpdateInstanceMetadata::end_time() const {
  // @@protoc_insertion_point(field_get:google.spanner.admin.instance.v1.UpdateInstanceMetadata.end_time)
  return end_time_ != NULL ? *end_time_
                         : *::google::protobuf::Timestamp::internal_default_instance();
}
inline ::google::protobuf::Timestamp* UpdateInstanceMetadata::mutable_end_time() {
  
  if (end_time_ == NULL) {
    end_time_ = new ::google::protobuf::Timestamp;
  }
  // @@protoc_insertion_point(field_mutable:google.spanner.admin.instance.v1.UpdateInstanceMetadata.end_time)
  return end_time_;
}
inline ::google::protobuf::Timestamp* UpdateInstanceMetadata::release_end_time() {
  // @@protoc_insertion_point(field_release:google.spanner.admin.instance.v1.UpdateInstanceMetadata.end_time)
  
  ::google::protobuf::Timestamp* temp = end_time_;
  end_time_ = NULL;
  return temp;
}
inline void UpdateInstanceMetadata::set_allocated_end_time(::google::protobuf::Timestamp* end_time) {
  delete end_time_;
  if (end_time != NULL && end_time->GetArena() != NULL) {
    ::google::protobuf::Timestamp* new_end_time = new ::google::protobuf::Timestamp;
    new_end_time->CopyFrom(*end_time);
    end_time = new_end_time;
  }
  end_time_ = end_time;
  if (end_time) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.spanner.admin.instance.v1.UpdateInstanceMetadata.end_time)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace v1
}  // namespace instance
}  // namespace admin
}  // namespace spanner
}  // namespace google

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::google::spanner::admin::instance::v1::Instance_State> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::spanner::admin::instance::v1::Instance_State>() {
  return ::google::spanner::admin::instance::v1::Instance_State_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_google_2fspanner_2fadmin_2finstance_2fv1_2fspanner_5finstance_5fadmin_2eproto__INCLUDED
