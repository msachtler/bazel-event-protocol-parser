// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/spanner/v1/type.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "google/spanner/v1/type.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace google {
namespace spanner {
namespace v1 {
class TypeDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Type> {
} _Type_default_instance_;
class StructType_FieldDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<StructType_Field> {
} _StructType_Field_default_instance_;
class StructTypeDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<StructType> {
} _StructType_default_instance_;

namespace protobuf_google_2fspanner_2fv1_2ftype_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[3];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] = {
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type, code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type, array_element_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type, struct_type_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StructType_Field, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StructType_Field, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StructType_Field, type_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StructType, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StructType, fields_),
};

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, -1, sizeof(Type)},
  { 8, -1, sizeof(StructType_Field)},
  { 15, -1, sizeof(StructType)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_Type_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_StructType_Field_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_StructType_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "google/spanner/v1/type.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 3);
}

}  // namespace

void TableStruct::Shutdown() {
  _Type_default_instance_.Shutdown();
  delete file_level_metadata[0].reflection;
  _StructType_Field_default_instance_.Shutdown();
  delete file_level_metadata[1].reflection;
  _StructType_default_instance_.Shutdown();
  delete file_level_metadata[2].reflection;
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  ::google::api::protobuf_google_2fapi_2fannotations_2eproto::InitDefaults();
  _Type_default_instance_.DefaultConstruct();
  _StructType_Field_default_instance_.DefaultConstruct();
  _StructType_default_instance_.DefaultConstruct();
  _Type_default_instance_.get_mutable()->array_element_type_ = const_cast< ::google::spanner::v1::Type*>(
      ::google::spanner::v1::Type::internal_default_instance());
  _Type_default_instance_.get_mutable()->struct_type_ = const_cast< ::google::spanner::v1::StructType*>(
      ::google::spanner::v1::StructType::internal_default_instance());
  _StructType_Field_default_instance_.get_mutable()->type_ = const_cast< ::google::spanner::v1::Type*>(
      ::google::spanner::v1::Type::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n\034google/spanner/v1/type.proto\022\021google.s"
      "panner.v1\032\034google/api/annotations.proto\""
      "\232\001\n\004Type\022)\n\004code\030\001 \001(\0162\033.google.spanner."
      "v1.TypeCode\0223\n\022array_element_type\030\002 \001(\0132"
      "\027.google.spanner.v1.Type\0222\n\013struct_type\030"
      "\003 \001(\0132\035.google.spanner.v1.StructType\"\177\n\n"
      "StructType\0223\n\006fields\030\001 \003(\0132#.google.span"
      "ner.v1.StructType.Field\032<\n\005Field\022\014\n\004name"
      "\030\001 \001(\t\022%\n\004type\030\002 \001(\0132\027.google.spanner.v1"
      ".Type*\216\001\n\010TypeCode\022\031\n\025TYPE_CODE_UNSPECIF"
      "IED\020\000\022\010\n\004BOOL\020\001\022\t\n\005INT64\020\002\022\013\n\007FLOAT64\020\003\022"
      "\r\n\tTIMESTAMP\020\004\022\010\n\004DATE\020\005\022\n\n\006STRING\020\006\022\t\n\005"
      "BYTES\020\007\022\t\n\005ARRAY\020\010\022\n\n\006STRUCT\020\tBx\n\025com.go"
      "ogle.spanner.v1B\tTypeProtoP\001Z8google.gol"
      "ang.org/genproto/googleapis/spanner/v1;s"
      "panner\252\002\027Google.Cloud.Spanner.V1b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 640);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "google/spanner/v1/type.proto", &protobuf_RegisterTypes);
  ::google::api::protobuf_google_2fapi_2fannotations_2eproto::AddDescriptors();
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_google_2fspanner_2fv1_2ftype_2eproto

const ::google::protobuf::EnumDescriptor* TypeCode_descriptor() {
  protobuf_google_2fspanner_2fv1_2ftype_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fspanner_2fv1_2ftype_2eproto::file_level_enum_descriptors[0];
}
bool TypeCode_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
      return true;
    default:
      return false;
  }
}


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type::kCodeFieldNumber;
const int Type::kArrayElementTypeFieldNumber;
const int Type::kStructTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type::Type()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_google_2fspanner_2fv1_2ftype_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.spanner.v1.Type)
}
Type::Type(const Type& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_array_element_type()) {
    array_element_type_ = new ::google::spanner::v1::Type(*from.array_element_type_);
  } else {
    array_element_type_ = NULL;
  }
  if (from.has_struct_type()) {
    struct_type_ = new ::google::spanner::v1::StructType(*from.struct_type_);
  } else {
    struct_type_ = NULL;
  }
  code_ = from.code_;
  // @@protoc_insertion_point(copy_constructor:google.spanner.v1.Type)
}

void Type::SharedCtor() {
  ::memset(&array_element_type_, 0, reinterpret_cast<char*>(&code_) -
    reinterpret_cast<char*>(&array_element_type_) + sizeof(code_));
  _cached_size_ = 0;
}

Type::~Type() {
  // @@protoc_insertion_point(destructor:google.spanner.v1.Type)
  SharedDtor();
}

void Type::SharedDtor() {
  if (this != internal_default_instance()) {
    delete array_element_type_;
  }
  if (this != internal_default_instance()) {
    delete struct_type_;
  }
}

void Type::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Type::descriptor() {
  protobuf_google_2fspanner_2fv1_2ftype_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fspanner_2fv1_2ftype_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Type& Type::default_instance() {
  protobuf_google_2fspanner_2fv1_2ftype_2eproto::InitDefaults();
  return *internal_default_instance();
}

Type* Type::New(::google::protobuf::Arena* arena) const {
  Type* n = new Type;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Type::Clear() {
// @@protoc_insertion_point(message_clear_start:google.spanner.v1.Type)
  if (GetArenaNoVirtual() == NULL && array_element_type_ != NULL) {
    delete array_element_type_;
  }
  array_element_type_ = NULL;
  if (GetArenaNoVirtual() == NULL && struct_type_ != NULL) {
    delete struct_type_;
  }
  struct_type_ = NULL;
  code_ = 0;
}

bool Type::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.spanner.v1.Type)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.spanner.v1.TypeCode code = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_code(static_cast< ::google::spanner::v1::TypeCode >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.spanner.v1.Type array_element_type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_array_element_type()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.spanner.v1.StructType struct_type = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_struct_type()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.spanner.v1.Type)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.spanner.v1.Type)
  return false;
#undef DO_
}

void Type::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.spanner.v1.Type)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.spanner.v1.TypeCode code = 1;
  if (this->code() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->code(), output);
  }

  // .google.spanner.v1.Type array_element_type = 2;
  if (this->has_array_element_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->array_element_type_, output);
  }

  // .google.spanner.v1.StructType struct_type = 3;
  if (this->has_struct_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->struct_type_, output);
  }

  // @@protoc_insertion_point(serialize_end:google.spanner.v1.Type)
}

::google::protobuf::uint8* Type::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.spanner.v1.Type)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.spanner.v1.TypeCode code = 1;
  if (this->code() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->code(), target);
  }

  // .google.spanner.v1.Type array_element_type = 2;
  if (this->has_array_element_type()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->array_element_type_, deterministic, target);
  }

  // .google.spanner.v1.StructType struct_type = 3;
  if (this->has_struct_type()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->struct_type_, deterministic, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.spanner.v1.Type)
  return target;
}

size_t Type::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.spanner.v1.Type)
  size_t total_size = 0;

  // .google.spanner.v1.Type array_element_type = 2;
  if (this->has_array_element_type()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->array_element_type_);
  }

  // .google.spanner.v1.StructType struct_type = 3;
  if (this->has_struct_type()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->struct_type_);
  }

  // .google.spanner.v1.TypeCode code = 1;
  if (this->code() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->code());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Type::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.spanner.v1.Type)
  GOOGLE_DCHECK_NE(&from, this);
  const Type* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Type>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.spanner.v1.Type)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.spanner.v1.Type)
    MergeFrom(*source);
  }
}

void Type::MergeFrom(const Type& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.spanner.v1.Type)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_array_element_type()) {
    mutable_array_element_type()->::google::spanner::v1::Type::MergeFrom(from.array_element_type());
  }
  if (from.has_struct_type()) {
    mutable_struct_type()->::google::spanner::v1::StructType::MergeFrom(from.struct_type());
  }
  if (from.code() != 0) {
    set_code(from.code());
  }
}

void Type::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.spanner.v1.Type)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type::CopyFrom(const Type& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.spanner.v1.Type)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type::IsInitialized() const {
  return true;
}

void Type::Swap(Type* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Type::InternalSwap(Type* other) {
  std::swap(array_element_type_, other->array_element_type_);
  std::swap(struct_type_, other->struct_type_);
  std::swap(code_, other->code_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Type::GetMetadata() const {
  protobuf_google_2fspanner_2fv1_2ftype_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fspanner_2fv1_2ftype_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Type

// .google.spanner.v1.TypeCode code = 1;
void Type::clear_code() {
  code_ = 0;
}
::google::spanner::v1::TypeCode Type::code() const {
  // @@protoc_insertion_point(field_get:google.spanner.v1.Type.code)
  return static_cast< ::google::spanner::v1::TypeCode >(code_);
}
void Type::set_code(::google::spanner::v1::TypeCode value) {
  
  code_ = value;
  // @@protoc_insertion_point(field_set:google.spanner.v1.Type.code)
}

// .google.spanner.v1.Type array_element_type = 2;
bool Type::has_array_element_type() const {
  return this != internal_default_instance() && array_element_type_ != NULL;
}
void Type::clear_array_element_type() {
  if (GetArenaNoVirtual() == NULL && array_element_type_ != NULL) delete array_element_type_;
  array_element_type_ = NULL;
}
const ::google::spanner::v1::Type& Type::array_element_type() const {
  // @@protoc_insertion_point(field_get:google.spanner.v1.Type.array_element_type)
  return array_element_type_ != NULL ? *array_element_type_
                         : *::google::spanner::v1::Type::internal_default_instance();
}
::google::spanner::v1::Type* Type::mutable_array_element_type() {
  
  if (array_element_type_ == NULL) {
    array_element_type_ = new ::google::spanner::v1::Type;
  }
  // @@protoc_insertion_point(field_mutable:google.spanner.v1.Type.array_element_type)
  return array_element_type_;
}
::google::spanner::v1::Type* Type::release_array_element_type() {
  // @@protoc_insertion_point(field_release:google.spanner.v1.Type.array_element_type)
  
  ::google::spanner::v1::Type* temp = array_element_type_;
  array_element_type_ = NULL;
  return temp;
}
void Type::set_allocated_array_element_type(::google::spanner::v1::Type* array_element_type) {
  delete array_element_type_;
  array_element_type_ = array_element_type;
  if (array_element_type) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.spanner.v1.Type.array_element_type)
}

// .google.spanner.v1.StructType struct_type = 3;
bool Type::has_struct_type() const {
  return this != internal_default_instance() && struct_type_ != NULL;
}
void Type::clear_struct_type() {
  if (GetArenaNoVirtual() == NULL && struct_type_ != NULL) delete struct_type_;
  struct_type_ = NULL;
}
const ::google::spanner::v1::StructType& Type::struct_type() const {
  // @@protoc_insertion_point(field_get:google.spanner.v1.Type.struct_type)
  return struct_type_ != NULL ? *struct_type_
                         : *::google::spanner::v1::StructType::internal_default_instance();
}
::google::spanner::v1::StructType* Type::mutable_struct_type() {
  
  if (struct_type_ == NULL) {
    struct_type_ = new ::google::spanner::v1::StructType;
  }
  // @@protoc_insertion_point(field_mutable:google.spanner.v1.Type.struct_type)
  return struct_type_;
}
::google::spanner::v1::StructType* Type::release_struct_type() {
  // @@protoc_insertion_point(field_release:google.spanner.v1.Type.struct_type)
  
  ::google::spanner::v1::StructType* temp = struct_type_;
  struct_type_ = NULL;
  return temp;
}
void Type::set_allocated_struct_type(::google::spanner::v1::StructType* struct_type) {
  delete struct_type_;
  struct_type_ = struct_type;
  if (struct_type) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.spanner.v1.Type.struct_type)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StructType_Field::kNameFieldNumber;
const int StructType_Field::kTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StructType_Field::StructType_Field()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_google_2fspanner_2fv1_2ftype_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.spanner.v1.StructType.Field)
}
StructType_Field::StructType_Field(const StructType_Field& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.has_type()) {
    type_ = new ::google::spanner::v1::Type(*from.type_);
  } else {
    type_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.spanner.v1.StructType.Field)
}

void StructType_Field::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_ = NULL;
  _cached_size_ = 0;
}

StructType_Field::~StructType_Field() {
  // @@protoc_insertion_point(destructor:google.spanner.v1.StructType.Field)
  SharedDtor();
}

void StructType_Field::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete type_;
  }
}

void StructType_Field::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* StructType_Field::descriptor() {
  protobuf_google_2fspanner_2fv1_2ftype_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fspanner_2fv1_2ftype_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const StructType_Field& StructType_Field::default_instance() {
  protobuf_google_2fspanner_2fv1_2ftype_2eproto::InitDefaults();
  return *internal_default_instance();
}

StructType_Field* StructType_Field::New(::google::protobuf::Arena* arena) const {
  StructType_Field* n = new StructType_Field;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void StructType_Field::Clear() {
// @@protoc_insertion_point(message_clear_start:google.spanner.v1.StructType.Field)
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && type_ != NULL) {
    delete type_;
  }
  type_ = NULL;
}

bool StructType_Field::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.spanner.v1.StructType.Field)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.spanner.v1.StructType.Field.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.spanner.v1.Type type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_type()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.spanner.v1.StructType.Field)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.spanner.v1.StructType.Field)
  return false;
#undef DO_
}

void StructType_Field::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.spanner.v1.StructType.Field)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.spanner.v1.StructType.Field.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // .google.spanner.v1.Type type = 2;
  if (this->has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->type_, output);
  }

  // @@protoc_insertion_point(serialize_end:google.spanner.v1.StructType.Field)
}

::google::protobuf::uint8* StructType_Field::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.spanner.v1.StructType.Field)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.spanner.v1.StructType.Field.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // .google.spanner.v1.Type type = 2;
  if (this->has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->type_, deterministic, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.spanner.v1.StructType.Field)
  return target;
}

size_t StructType_Field::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.spanner.v1.StructType.Field)
  size_t total_size = 0;

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // .google.spanner.v1.Type type = 2;
  if (this->has_type()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->type_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void StructType_Field::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.spanner.v1.StructType.Field)
  GOOGLE_DCHECK_NE(&from, this);
  const StructType_Field* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const StructType_Field>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.spanner.v1.StructType.Field)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.spanner.v1.StructType.Field)
    MergeFrom(*source);
  }
}

void StructType_Field::MergeFrom(const StructType_Field& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.spanner.v1.StructType.Field)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.has_type()) {
    mutable_type()->::google::spanner::v1::Type::MergeFrom(from.type());
  }
}

void StructType_Field::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.spanner.v1.StructType.Field)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StructType_Field::CopyFrom(const StructType_Field& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.spanner.v1.StructType.Field)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StructType_Field::IsInitialized() const {
  return true;
}

void StructType_Field::Swap(StructType_Field* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StructType_Field::InternalSwap(StructType_Field* other) {
  name_.Swap(&other->name_);
  std::swap(type_, other->type_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata StructType_Field::GetMetadata() const {
  protobuf_google_2fspanner_2fv1_2ftype_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fspanner_2fv1_2ftype_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// StructType_Field

// string name = 1;
void StructType_Field::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& StructType_Field::name() const {
  // @@protoc_insertion_point(field_get:google.spanner.v1.StructType.Field.name)
  return name_.GetNoArena();
}
void StructType_Field::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.spanner.v1.StructType.Field.name)
}
#if LANG_CXX11
void StructType_Field::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.spanner.v1.StructType.Field.name)
}
#endif
void StructType_Field::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.spanner.v1.StructType.Field.name)
}
void StructType_Field::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.spanner.v1.StructType.Field.name)
}
::std::string* StructType_Field::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:google.spanner.v1.StructType.Field.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* StructType_Field::release_name() {
  // @@protoc_insertion_point(field_release:google.spanner.v1.StructType.Field.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void StructType_Field::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:google.spanner.v1.StructType.Field.name)
}

// .google.spanner.v1.Type type = 2;
bool StructType_Field::has_type() const {
  return this != internal_default_instance() && type_ != NULL;
}
void StructType_Field::clear_type() {
  if (GetArenaNoVirtual() == NULL && type_ != NULL) delete type_;
  type_ = NULL;
}
const ::google::spanner::v1::Type& StructType_Field::type() const {
  // @@protoc_insertion_point(field_get:google.spanner.v1.StructType.Field.type)
  return type_ != NULL ? *type_
                         : *::google::spanner::v1::Type::internal_default_instance();
}
::google::spanner::v1::Type* StructType_Field::mutable_type() {
  
  if (type_ == NULL) {
    type_ = new ::google::spanner::v1::Type;
  }
  // @@protoc_insertion_point(field_mutable:google.spanner.v1.StructType.Field.type)
  return type_;
}
::google::spanner::v1::Type* StructType_Field::release_type() {
  // @@protoc_insertion_point(field_release:google.spanner.v1.StructType.Field.type)
  
  ::google::spanner::v1::Type* temp = type_;
  type_ = NULL;
  return temp;
}
void StructType_Field::set_allocated_type(::google::spanner::v1::Type* type) {
  delete type_;
  type_ = type;
  if (type) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.spanner.v1.StructType.Field.type)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StructType::kFieldsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StructType::StructType()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_google_2fspanner_2fv1_2ftype_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.spanner.v1.StructType)
}
StructType::StructType(const StructType& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      fields_(from.fields_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:google.spanner.v1.StructType)
}

void StructType::SharedCtor() {
  _cached_size_ = 0;
}

StructType::~StructType() {
  // @@protoc_insertion_point(destructor:google.spanner.v1.StructType)
  SharedDtor();
}

void StructType::SharedDtor() {
}

void StructType::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* StructType::descriptor() {
  protobuf_google_2fspanner_2fv1_2ftype_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fspanner_2fv1_2ftype_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const StructType& StructType::default_instance() {
  protobuf_google_2fspanner_2fv1_2ftype_2eproto::InitDefaults();
  return *internal_default_instance();
}

StructType* StructType::New(::google::protobuf::Arena* arena) const {
  StructType* n = new StructType;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void StructType::Clear() {
// @@protoc_insertion_point(message_clear_start:google.spanner.v1.StructType)
  fields_.Clear();
}

bool StructType::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.spanner.v1.StructType)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .google.spanner.v1.StructType.Field fields = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_fields()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.spanner.v1.StructType)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.spanner.v1.StructType)
  return false;
#undef DO_
}

void StructType::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.spanner.v1.StructType)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.spanner.v1.StructType.Field fields = 1;
  for (unsigned int i = 0, n = this->fields_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->fields(i), output);
  }

  // @@protoc_insertion_point(serialize_end:google.spanner.v1.StructType)
}

::google::protobuf::uint8* StructType::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.spanner.v1.StructType)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.spanner.v1.StructType.Field fields = 1;
  for (unsigned int i = 0, n = this->fields_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->fields(i), deterministic, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.spanner.v1.StructType)
  return target;
}

size_t StructType::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.spanner.v1.StructType)
  size_t total_size = 0;

  // repeated .google.spanner.v1.StructType.Field fields = 1;
  {
    unsigned int count = this->fields_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->fields(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void StructType::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.spanner.v1.StructType)
  GOOGLE_DCHECK_NE(&from, this);
  const StructType* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const StructType>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.spanner.v1.StructType)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.spanner.v1.StructType)
    MergeFrom(*source);
  }
}

void StructType::MergeFrom(const StructType& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.spanner.v1.StructType)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  fields_.MergeFrom(from.fields_);
}

void StructType::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.spanner.v1.StructType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StructType::CopyFrom(const StructType& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.spanner.v1.StructType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StructType::IsInitialized() const {
  return true;
}

void StructType::Swap(StructType* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StructType::InternalSwap(StructType* other) {
  fields_.InternalSwap(&other->fields_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata StructType::GetMetadata() const {
  protobuf_google_2fspanner_2fv1_2ftype_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fspanner_2fv1_2ftype_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// StructType

// repeated .google.spanner.v1.StructType.Field fields = 1;
int StructType::fields_size() const {
  return fields_.size();
}
void StructType::clear_fields() {
  fields_.Clear();
}
const ::google::spanner::v1::StructType_Field& StructType::fields(int index) const {
  // @@protoc_insertion_point(field_get:google.spanner.v1.StructType.fields)
  return fields_.Get(index);
}
::google::spanner::v1::StructType_Field* StructType::mutable_fields(int index) {
  // @@protoc_insertion_point(field_mutable:google.spanner.v1.StructType.fields)
  return fields_.Mutable(index);
}
::google::spanner::v1::StructType_Field* StructType::add_fields() {
  // @@protoc_insertion_point(field_add:google.spanner.v1.StructType.fields)
  return fields_.Add();
}
::google::protobuf::RepeatedPtrField< ::google::spanner::v1::StructType_Field >*
StructType::mutable_fields() {
  // @@protoc_insertion_point(field_mutable_list:google.spanner.v1.StructType.fields)
  return &fields_;
}
const ::google::protobuf::RepeatedPtrField< ::google::spanner::v1::StructType_Field >&
StructType::fields() const {
  // @@protoc_insertion_point(field_list:google.spanner.v1.StructType.fields)
  return fields_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace v1
}  // namespace spanner
}  // namespace google

// @@protoc_insertion_point(global_scope)
